[P3_Replace_Literal]^static final List<String> OPTIMAL_ORDER = ImmutableList.of ( "removeUnreachableCode", "removeUnusedVarsremoveUnu", "foldConstants",^40^41^42^43^^40^48^static final List<String> OPTIMAL_ORDER = ImmutableList.of ( "removeUnreachableCode", "removeUnusedVars", "foldConstants",^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal   [VARIABLES] 
[P3_Replace_Literal]^static final List<String> OPTIMAL_ORDER = ImmutableList.of ( "removeUnreachableCode", "removeUnusedVars", "aoldConstants",^40^41^42^43^^40^48^static final List<String> OPTIMAL_ORDER = ImmutableList.of ( "removeUnreachableCode", "removeUnusedVars", "foldConstants",^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal   [VARIABLES] 
[P8_Replace_Mix]^static final List<String> OPTIMAL_ORDER ;^40^41^42^43^^40^48^static final List<String> OPTIMAL_ORDER = ImmutableList.of ( "removeUnreachableCode", "removeUnusedVars", "foldConstants",^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal   [VARIABLES] 
[P1_Replace_Type]^static final  short  MAX_LOOPS = 100;^50^^^^^45^55^static final int MAX_LOOPS = 100;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal   [VARIABLES] 
[P3_Replace_Literal]^static final int MAX_LOOPS = 93;^50^^^^^45^55^static final int MAX_LOOPS = 100;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal   [VARIABLES] 
[P8_Replace_Mix]^static final int MAX_LOOPS = 1;^50^^^^^45^55^static final int MAX_LOOPS = 100;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal   [VARIABLES] 
[P1_Replace_Type]^static final char OPTIMIZE_LOOP_ERROR = "Fixed point loop exceeded the maximum number of iterations.";^51^52^^^^51^52^static final String OPTIMIZE_LOOP_ERROR = "Fixed point loop exceeded the maximum number of iterations.";^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal   [VARIABLES] 
[P3_Replace_Literal]^static final String OPTIMIZE_LOOP_ERROR = "Fixed point loop exceeded the maximum number of iterations.d point loop exceeded the maximu";^51^52^^^^51^52^static final String OPTIMIZE_LOOP_ERROR = "Fixed point loop exceeded the maximum number of iterations.";^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal   [VARIABLES] 
[P8_Replace_Mix]^static final String OPTIMIZE_LOOP_ERROR  = null ;^51^52^^^^51^52^static final String OPTIMIZE_LOOP_ERROR = "Fixed point loop exceeded the maximum number of iterations.";^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal   [VARIABLES] 
[P8_Replace_Mix]^private static final Logger logger ;^54^55^^^^54^55^private static final Logger logger = Logger.getLogger ( PhaseOptimizer.class.getName (  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal   [VARIABLES] 
[P8_Replace_Mix]^private List<CompilerPass> passes ;^57^^^^^52^62^private List<CompilerPass> passes = Lists.newArrayList (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal   [VARIABLES] 
[P8_Replace_Mix]^private  PerformanceTracker tracker;^60^^^^^55^65^private final PerformanceTracker tracker;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal   [VARIABLES] 
[P8_Replace_Mix]^private  CodeChangeHandler.RecentChange recentChange = new CodeChangeHandler.RecentChange (  ) ;^61^62^^^^61^62^private final CodeChangeHandler.RecentChange recentChange = new CodeChangeHandler.RecentChange (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal   [VARIABLES] 
[P3_Replace_Literal]^private boolean loopMutex = true;^63^^^^^58^68^private boolean loopMutex = false;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal   [VARIABLES] 
[P8_Replace_Mix]^private boolean loopMutex ;^63^^^^^58^68^private boolean loopMutex = false;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal   [VARIABLES] 
[P8_Replace_Mix]^private Tracer currentTracer = true;^64^^^^^59^69^private Tracer currentTracer = null;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal   [VARIABLES] 
[P1_Replace_Type]^private char currentPassName = null;^65^^^^^60^70^private String currentPassName = null;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal   [VARIABLES] 
[P8_Replace_Mix]^private char currentPassName = false;^65^^^^^60^70^private String currentPassName = null;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal   [VARIABLES] 
[P8_Replace_Mix]^private PassFactory sanityCheck  = null ;^66^^^^^61^71^private PassFactory sanityCheck = null;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal   [VARIABLES] 
[P3_Replace_Literal]^private static boolean randomizeLoops = true;^70^^^^^65^75^private static boolean randomizeLoops = false;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal   [VARIABLES] 
[P8_Replace_Mix]^private static List<List<String>> loopsRun  = null ;^71^^^^^66^76^private static List<List<String>> loopsRun = Lists.newArrayList (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal   [VARIABLES] 
[P1_Replace_Type]^private final char name;^239^^^^^234^244^private final String name;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal   [VARIABLES] 
[P8_Replace_Mix]^private  PassFactory factory;^260^^^^^255^265^private final PassFactory factory;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal   [VARIABLES] 
[P8_Replace_Mix]^private final List<NamedPass> myPasses  = null ;^289^^^^^284^294^private final List<NamedPass> myPasses = Lists.newArrayList (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal   [VARIABLES] 
[P8_Replace_Mix]^private  Set<String> myNames = Sets.newHashSet (  ) ;^290^^^^^285^295^private final Set<String> myNames = Sets.newHashSet (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal   [VARIABLES] 
[P5_Replace_Variable]^this.compiler = myCompiler;^74^^^^^73^77^this.compiler = compiler;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] <init> [RETURN_TYPE] PerformanceTracker)   AbstractCompiler compiler PerformanceTracker tracker [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^this.tracker = tracker;this.compiler = compiler;^74^^^^^73^77^this.compiler = compiler;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] <init> [RETURN_TYPE] PerformanceTracker)   AbstractCompiler compiler PerformanceTracker tracker [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^this.name = name;this.compiler = compiler;^74^^^^^73^77^this.compiler = compiler;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] <init> [RETURN_TYPE] PerformanceTracker)   AbstractCompiler compiler PerformanceTracker tracker [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^this.myCompiler = myCompiler;this.compiler = compiler;^74^^^^^73^77^this.compiler = compiler;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] <init> [RETURN_TYPE] PerformanceTracker)   AbstractCompiler compiler PerformanceTracker tracker [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P8_Replace_Mix]^this.tracker =  null;^75^^^^^73^77^this.tracker = tracker;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] <init> [RETURN_TYPE] PerformanceTracker)   AbstractCompiler compiler PerformanceTracker tracker [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^this.compiler = compiler;this.tracker = tracker;^75^^^^^73^77^this.tracker = tracker;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] <init> [RETURN_TYPE] PerformanceTracker)   AbstractCompiler compiler PerformanceTracker tracker [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^this.name = name;this.tracker = tracker;^75^^^^^73^77^this.tracker = tracker;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] <init> [RETURN_TYPE] PerformanceTracker)   AbstractCompiler compiler PerformanceTracker tracker [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^this.factory = factory;this.tracker = tracker;^75^^^^^73^77^this.tracker = tracker;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] <init> [RETURN_TYPE] PerformanceTracker)   AbstractCompiler compiler PerformanceTracker tracker [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^76^^^^^73^77^compiler.addChangeHandler ( recentChange ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] <init> [RETURN_TYPE] PerformanceTracker)   AbstractCompiler compiler PerformanceTracker tracker [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^this.name = currentPassName;^242^^^^^241^243^this.name = name;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] <init> [RETURN_TYPE] String)   String name [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^this.compiler = compiler;this.name = name;^242^^^^^241^243^this.name = name;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] <init> [RETURN_TYPE] String)   String name [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^this.tracker = tracker;this.name = name;^242^^^^^241^243^this.name = name;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] <init> [RETURN_TYPE] String)   String name [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^currentPassName = passName;this.name = name;^242^^^^^241^243^this.name = name;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] <init> [RETURN_TYPE] String)   String name [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P7_Replace_Invocation]^super ( factory.create (  )  ) ;^264^^^^^262^267^super ( factory.getName (  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] <init> [RETURN_TYPE] PassFactory)   AbstractCompiler myCompiler PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P8_Replace_Mix]^super ( sanityCheck.getName (  )  ) ;^264^^^^^262^267^super ( factory.getName (  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] <init> [RETURN_TYPE] PassFactory)   AbstractCompiler myCompiler PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^264^265^^^^262^267^super ( factory.getName (  )  ) ; this.myCompiler = myCompiler;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] <init> [RETURN_TYPE] PassFactory)   AbstractCompiler myCompiler PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^myNames.add ( factory.getName (  )  ) ;super ( factory.getName (  )  ) ;^264^^^^^262^267^super ( factory.getName (  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] <init> [RETURN_TYPE] PassFactory)   AbstractCompiler myCompiler PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^String name = factory.getName (  ) ;super ( factory.getName (  )  ) ;^264^^^^^262^267^super ( factory.getName (  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] <init> [RETURN_TYPE] PassFactory)   AbstractCompiler myCompiler PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^264^^^^^262^267^super ( factory.getName (  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] <init> [RETURN_TYPE] PassFactory)   AbstractCompiler myCompiler PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P12_Insert_Condition]^if  ( factory.isOneTimePass (  )  )  { super ( factory.getName (  )  ) ; }^264^^^^^262^267^super ( factory.getName (  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] <init> [RETURN_TYPE] PassFactory)   AbstractCompiler myCompiler PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^this.myCompiler = compiler;^265^^^^^262^267^this.myCompiler = myCompiler;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] <init> [RETURN_TYPE] PassFactory)   AbstractCompiler myCompiler PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^this.compiler = compiler;this.myCompiler = myCompiler;^265^^^^^262^267^this.myCompiler = myCompiler;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] <init> [RETURN_TYPE] PassFactory)   AbstractCompiler myCompiler PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^this.factory = sanityCheck;^266^^^^^262^267^this.factory = factory;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] <init> [RETURN_TYPE] PassFactory)   AbstractCompiler myCompiler PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^this.tracker = tracker;this.factory = factory;^266^^^^^262^267^this.factory = factory;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] <init> [RETURN_TYPE] PassFactory)   AbstractCompiler myCompiler PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P3_Replace_Literal]^randomizeLoops = false;^84^^^^^83^85^randomizeLoops = true;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizeLoops [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P12_Insert_Condition]^if  ( randomizeLoops )  { randomizeLoops = true; }^84^^^^^83^85^randomizeLoops = true;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizeLoops [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P7_Replace_Invocation]^loopsRun.size (  ) ;^99^^^^^98^100^loopsRun.clear (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] clearLoopsRun [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^99^^^^^98^100^loopsRun.clear (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] clearLoopsRun [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^loopsRun.add ( getPassOrder (  )  ) ;loopsRun.clear (  ) ;^99^^^^^98^100^loopsRun.clear (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] clearLoopsRun [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^Loop loop = new LoopInternal (  ) ;Loop currentLoop = new LoopInternal (  ) ;^115^^^^^114^135^Loop currentLoop = new LoopInternal (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P3_Replace_Literal]^boolean isCurrentLoopPopulated = true;^116^^^^^114^135^boolean isCurrentLoopPopulated = false;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P12_Insert_Condition]^if  ( isCurrentLoopPopulated )  { boolean isCurrentLoopPopulated = false; }^116^^^^^114^135^boolean isCurrentLoopPopulated = false;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^if  ( sanityCheck.isOneTimePass (  )  )  {^118^^^^^114^135^if  ( factory.isOneTimePass (  )  )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P7_Replace_Invocation]^if  ( factory.create (  )  )  {^118^^^^^114^135^if  ( factory.isOneTimePass (  )  )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P13_Insert_Block]^if  ( isCurrentLoopPopulated )  {     passes.add ( currentLoop ) ;     currentLoop = new LoopInternal (  ) ;     isCurrentLoopPopulated = false; }^118^^^^^114^135^[Delete]^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P3_Replace_Literal]^isCurrentLoopPopulated = false;^128^^^^^114^135^isCurrentLoopPopulated = true;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^isCurrentLoopPopulated = false;isCurrentLoopPopulated = true;^128^^^^^114^135^isCurrentLoopPopulated = true;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P12_Insert_Condition]^if  ( isCurrentLoopPopulated )  { isCurrentLoopPopulated = true; }^128^^^^^114^135^isCurrentLoopPopulated = true;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^currentLoop.addLoopedPass ( sanityCheck ) ;^127^^^^^114^135^currentLoop.addLoopedPass ( factory ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P7_Replace_Invocation]^currentLoop .Loop (  )  ;^127^^^^^114^135^currentLoop.addLoopedPass ( factory ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^127^^^^^114^135^currentLoop.addLoopedPass ( factory ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^addOneTimePass ( factory ) ;currentLoop.addLoopedPass ( factory ) ;^127^^^^^114^135^currentLoop.addLoopedPass ( factory ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^if  ( randomizeLoops )  {^119^^^^^114^135^if  ( isCurrentLoopPopulated )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P15_Unwrap_Block]^passes.add(currentLoop); currentLoop = new com.google.javascript.jscomp.PhaseOptimizer.LoopInternal(); isCurrentLoopPopulated = false;^119^120^^122^123^114^135^if  ( isCurrentLoopPopulated )  { passes.add ( currentLoop ) ; currentLoop = new LoopInternal (  ) ; isCurrentLoopPopulated = false; }^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P16_Remove_Block]^^119^120^^122^123^114^135^if  ( isCurrentLoopPopulated )  { passes.add ( currentLoop ) ; currentLoop = new LoopInternal (  ) ; isCurrentLoopPopulated = false; }^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P13_Insert_Block]^if  ( factory.isOneTimePass (  )  )  {     if  ( isCurrentLoopPopulated )  {         passes.add ( currentLoop ) ;         currentLoop = new LoopInternal (  ) ;         isCurrentLoopPopulated = false;     }     addOneTimePass ( factory ) ; }else {     currentLoop.addLoopedPass ( factory ) ;     isCurrentLoopPopulated = true; }^119^^^^^114^135^[Delete]^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P8_Replace_Mix]^currentLoop  = null ;^122^^^^^114^135^currentLoop = new LoopInternal (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P3_Replace_Literal]^isCurrentLoopPopulated = true;^123^^^^^114^135^isCurrentLoopPopulated = false;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^isCurrentLoopPopulated = true;isCurrentLoopPopulated = false;^123^^^^^114^135^isCurrentLoopPopulated = false;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^loopMutex = false;isCurrentLoopPopulated = false;^123^^^^^114^135^isCurrentLoopPopulated = false;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P12_Insert_Condition]^if  ( isCurrentLoopPopulated )  { isCurrentLoopPopulated = false; }^123^^^^^114^135^isCurrentLoopPopulated = false;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^120^^^^^114^135^passes.add ( currentLoop ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^passes.add ( loop ) ;passes.add ( currentLoop ) ;^120^^^^^114^135^passes.add ( currentLoop ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^addOneTimePass ( sanityCheck ) ;^125^^^^^114^135^addOneTimePass ( factory ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P7_Replace_Invocation]^setSanityCheck ( factory ) ;^125^^^^^114^135^addOneTimePass ( factory ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^125^^^^^114^135^addOneTimePass ( factory ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^currentLoop.addLoopedPass ( factory ) ;addOneTimePass ( factory ) ;^125^^^^^114^135^addOneTimePass ( factory ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P8_Replace_Mix]^currentLoop  =  currentLoop ;^122^^^^^114^135^currentLoop = new LoopInternal (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P7_Replace_Invocation]^if  ( factory .getName (  )   )  {^118^^^^^114^135^if  ( factory.isOneTimePass (  )  )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P8_Replace_Mix]^if  ( sanityCheck.create (  )  )  {^118^^^^^114^135^if  ( factory.isOneTimePass (  )  )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P8_Replace_Mix]^setSanityCheck ( sanityCheck ) ;^125^^^^^114^135^addOneTimePass ( factory ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^if  ( randomizeLoops )  {^132^^^^^114^135^if  ( isCurrentLoopPopulated )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P15_Unwrap_Block]^passes.add(currentLoop);^132^133^134^^^114^135^if  ( isCurrentLoopPopulated )  { passes.add ( currentLoop ) ; }^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P16_Remove_Block]^^132^133^134^^^114^135^if  ( isCurrentLoopPopulated )  { passes.add ( currentLoop ) ; }^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^133^^^^^114^135^passes.add ( currentLoop ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^passes.add ( loop ) ;passes.add ( currentLoop ) ;^133^^^^^114^135^passes.add ( currentLoop ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] consume [RETURN_TYPE] void   PassFactory> factories [VARIABLES] Loop  currentLoop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^passes.add ( new PassFactoryDelegate ( compiler, sanityCheck )  ) ;^142^^^^^141^143^passes.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addOneTimePass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^passes.add ( new PassFactoryDelegate ( myCompiler, factory )  ) ;^142^^^^^141^143^passes.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addOneTimePass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^passes.add ( new PassFactoryDelegate ( compiler )  ) ;^142^^^^^141^143^passes.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addOneTimePass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^passes.add ( new PassFactoryDelegate (  factory )  ) ;^142^^^^^141^143^passes.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addOneTimePass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^passes.add ( new PassFactoryDelegate ( factory, compiler )  ) ;^142^^^^^141^143^passes.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addOneTimePass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^142^^^^^141^143^passes.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addOneTimePass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^Loop currentLoop = new LoopInternal (  ) ;Loop loop = new LoopInternal (  ) ;^151^^^^^150^154^Loop loop = new LoopInternal (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addFixedPointLoop [RETURN_TYPE] PhaseOptimizer$Loop   [VARIABLES] Loop  loop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^152^^^^^150^154^passes.add ( loop ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addFixedPointLoop [RETURN_TYPE] PhaseOptimizer$Loop   [VARIABLES] Loop  loop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^myPasses.addAll ( mixedupPasses ) ;passes.add ( loop ) ;^152^^^^^150^154^passes.add ( loop ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addFixedPointLoop [RETURN_TYPE] PhaseOptimizer$Loop   [VARIABLES] Loop  loop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^passes.add ( currentLoop ) ;passes.add ( loop ) ;^152^^^^^150^154^passes.add ( loop ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addFixedPointLoop [RETURN_TYPE] PhaseOptimizer$Loop   [VARIABLES] Loop  loop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^myPasses.addAll ( optimalPasses ) ;passes.add ( loop ) ;^152^^^^^150^154^passes.add ( loop ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addFixedPointLoop [RETURN_TYPE] PhaseOptimizer$Loop   [VARIABLES] Loop  loop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^optimalPasses.add ( pass ) ;passes.add ( loop ) ;^152^^^^^150^154^passes.add ( loop ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addFixedPointLoop [RETURN_TYPE] PhaseOptimizer$Loop   [VARIABLES] Loop  loop  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^this.sanityCheck = factory;^160^^^^^159^161^this.sanityCheck = sanityCheck;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] setSanityCheck [RETURN_TYPE] void   PassFactory sanityCheck [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P8_Replace_Mix]^this.sanityCheck =  null;^160^^^^^159^161^this.sanityCheck = sanityCheck;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] setSanityCheck [RETURN_TYPE] void   PassFactory sanityCheck [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P15_Unwrap_Block]^return ;^169^170^171^^^166^173^if  ( hasHaltingErrors (  )  )  { return; }^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P16_Remove_Block]^^169^170^171^^^166^173^if  ( hasHaltingErrors (  )  )  { return; }^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P13_Insert_Block]^if  ( hasHaltingErrors (  )  )  {     break out; }^169^^^^^166^173^[Delete]^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P5_Replace_Variable]^pass.process ( root, root ) ;^168^^^^^166^173^pass.process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P5_Replace_Variable]^pass.process (  root ) ;^168^^^^^166^173^pass.process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P5_Replace_Variable]^pass.process ( externs ) ;^168^^^^^166^173^pass.process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P5_Replace_Variable]^pass.process ( root, externs ) ;^168^^^^^166^173^pass.process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P14_Delete_Statement]^^168^^^^^166^173^pass.process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P11_Insert_Donor_Statement]^endPass ( externs, root ) ;pass.process ( externs, root ) ;^168^^^^^166^173^pass.process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P11_Insert_Donor_Statement]^processInternal ( externs, root ) ;pass.process ( externs, root ) ;^168^^^^^166^173^pass.process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P11_Insert_Donor_Statement]^maybeSanityCheck ( externs, root ) ;pass.process ( externs, root ) ;^168^^^^^166^173^pass.process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P2_Replace_Operator]^Preconditions.checkState ( currentTracer == null || currentPassName == null ) ;^179^^^^^178^182^Preconditions.checkState ( currentTracer == null && currentPassName == null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] startPass [RETURN_TYPE] void   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P2_Replace_Operator]^Preconditions.checkState ( currentTracer != null && currentPassName == null ) ;^179^^^^^178^182^Preconditions.checkState ( currentTracer == null && currentPassName == null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] startPass [RETURN_TYPE] void   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P2_Replace_Operator]^Preconditions.checkState ( currentTracer == null && currentPassName != null ) ;^179^^^^^178^182^Preconditions.checkState ( currentTracer == null && currentPassName == null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] startPass [RETURN_TYPE] void   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^Preconditions.checkState ( currentTracer == null && passName == null ) ;^179^^^^^178^182^Preconditions.checkState ( currentTracer == null && currentPassName == null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] startPass [RETURN_TYPE] void   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^Preconditions.checkState ( currentPassName == null && currentTracer == null ) ;^179^^^^^178^182^Preconditions.checkState ( currentTracer == null && currentPassName == null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] startPass [RETURN_TYPE] void   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^179^^^^^178^182^Preconditions.checkState ( currentTracer == null && currentPassName == null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] startPass [RETURN_TYPE] void   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^stopTracer ( currentTracer, currentPassName ) ;Preconditions.checkState ( currentTracer == null && currentPassName == null ) ;^179^^^^^178^182^Preconditions.checkState ( currentTracer == null && currentPassName == null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] startPass [RETURN_TYPE] void   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( currentTracer != null && currentPassName != null ) ;Preconditions.checkState ( currentTracer == null && currentPassName == null ) ;^179^^^^^178^182^Preconditions.checkState ( currentTracer == null && currentPassName == null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] startPass [RETURN_TYPE] void   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^currentPassName = name;^180^^^^^178^182^currentPassName = passName;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] startPass [RETURN_TYPE] void   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^currentPassName = null;currentPassName = passName;^180^^^^^178^182^currentPassName = passName;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] startPass [RETURN_TYPE] void   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^this.name = name;currentPassName = passName;^180^^^^^178^182^currentPassName = passName;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] startPass [RETURN_TYPE] void   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^currentTracer = newTracer ( passName ) ;currentPassName = passName;^180^^^^^178^182^currentPassName = passName;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] startPass [RETURN_TYPE] void   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P7_Replace_Invocation]^currentTracer = startPass ( passName ) ;^181^^^^^178^182^currentTracer = newTracer ( passName ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] startPass [RETURN_TYPE] void   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P8_Replace_Mix]^currentTracer =  newTracer ( name ) ;^181^^^^^178^182^currentTracer = newTracer ( passName ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] startPass [RETURN_TYPE] void   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^currentPassName = passName;currentTracer = newTracer ( passName ) ;^181^^^^^178^182^currentTracer = newTracer ( passName ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] startPass [RETURN_TYPE] void   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^181^^^^^178^182^currentTracer = newTracer ( passName ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] startPass [RETURN_TYPE] void   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^stopTracer ( currentTracer, currentPassName ) ;currentTracer = newTracer ( passName ) ;^181^^^^^178^182^currentTracer = newTracer ( passName ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] startPass [RETURN_TYPE] void   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P2_Replace_Operator]^Preconditions.checkState ( currentTracer != null || currentPassName != null ) ;^188^^^^^187^201^Preconditions.checkState ( currentTracer != null && currentPassName != null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P2_Replace_Operator]^Preconditions.checkState ( currentTracer == null && currentPassName != null ) ;^188^^^^^187^201^Preconditions.checkState ( currentTracer != null && currentPassName != null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P2_Replace_Operator]^Preconditions.checkState ( currentTracer != null && currentPassName == null ) ;^188^^^^^187^201^Preconditions.checkState ( currentTracer != null && currentPassName != null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P5_Replace_Variable]^Preconditions.checkState ( currentTracer != null && passName != null ) ;^188^^^^^187^201^Preconditions.checkState ( currentTracer != null && currentPassName != null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P5_Replace_Variable]^Preconditions.checkState ( currentPassName != null && currentTracer != null ) ;^188^^^^^187^201^Preconditions.checkState ( currentTracer != null && currentPassName != null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P8_Replace_Mix]^Preconditions.checkState ( currentTracer != null && passToCheck != null ) ;^188^^^^^187^201^Preconditions.checkState ( currentTracer != null && currentPassName != null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P14_Delete_Statement]^^188^189^^^^187^201^Preconditions.checkState ( currentTracer != null && currentPassName != null ) ; stopTracer ( currentTracer, currentPassName ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P11_Insert_Donor_Statement]^stopTracer ( currentTracer, currentPassName ) ;Preconditions.checkState ( currentTracer != null && currentPassName != null ) ;^188^^^^^187^201^Preconditions.checkState ( currentTracer != null && currentPassName != null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( currentTracer == null && currentPassName == null ) ;Preconditions.checkState ( currentTracer != null && currentPassName != null ) ;^188^^^^^187^201^Preconditions.checkState ( currentTracer != null && currentPassName != null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P5_Replace_Variable]^stopTracer ( currentTracer, passToCheck ) ;^189^^^^^187^201^stopTracer ( currentTracer, currentPassName ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P5_Replace_Variable]^stopTracer (  currentPassName ) ;^189^^^^^187^201^stopTracer ( currentTracer, currentPassName ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P5_Replace_Variable]^stopTracer ( currentTracer ) ;^189^^^^^187^201^stopTracer ( currentTracer, currentPassName ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P5_Replace_Variable]^stopTracer ( currentPassName, currentTracer ) ;^189^^^^^187^201^stopTracer ( currentTracer, currentPassName ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P7_Replace_Invocation]^hasHaltingErrors ( currentTracer, currentPassName ) ;^189^^^^^187^201^stopTracer ( currentTracer, currentPassName ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P14_Delete_Statement]^^189^190^^^^187^201^stopTracer ( currentTracer, currentPassName ) ; String passToCheck = currentPassName;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( currentTracer != null && currentPassName != null ) ;stopTracer ( currentTracer, currentPassName ) ;^189^^^^^187^201^stopTracer ( currentTracer, currentPassName ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( currentTracer == null && currentPassName == null ) ;stopTracer ( currentTracer, currentPassName ) ;^189^^^^^187^201^stopTracer ( currentTracer, currentPassName ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P11_Insert_Donor_Statement]^currentTracer = newTracer ( passName ) ;stopTracer ( currentTracer, currentPassName ) ;^189^^^^^187^201^stopTracer ( currentTracer, currentPassName ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P1_Replace_Type]^char passToCheck = currentPassName;^190^^^^^187^201^String passToCheck = currentPassName;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P5_Replace_Variable]^String passToCheck = passName;^190^^^^^187^201^String passToCheck = currentPassName;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P8_Replace_Mix]^currentPassName = true;^191^^^^^187^201^currentPassName = null;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P11_Insert_Donor_Statement]^currentTracer = null;currentPassName = null;^191^^^^^187^201^currentPassName = null;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P11_Insert_Donor_Statement]^currentPassName = passName;currentPassName = null;^191^^^^^187^201^currentPassName = null;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P8_Replace_Mix]^currentTracer = false;^192^^^^^187^201^currentTracer = null;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P11_Insert_Donor_Statement]^currentPassName = null;currentTracer = null;^192^^^^^187^201^currentTracer = null;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P5_Replace_Variable]^maybeSanityCheck (  root ) ;^195^^^^^187^201^maybeSanityCheck ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P5_Replace_Variable]^maybeSanityCheck ( externs ) ;^195^^^^^187^201^maybeSanityCheck ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P5_Replace_Variable]^maybeSanityCheck ( root, externs ) ;^195^^^^^187^201^maybeSanityCheck ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P7_Replace_Invocation]^process ( externs, root ) ;^195^^^^^187^201^maybeSanityCheck ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P14_Delete_Statement]^^195^^^^^187^201^maybeSanityCheck ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P11_Insert_Donor_Statement]^endPass ( externs, root ) ;maybeSanityCheck ( externs, root ) ;^195^^^^^187^201^maybeSanityCheck ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P11_Insert_Donor_Statement]^processInternal ( externs, root ) ;maybeSanityCheck ( externs, root ) ;^195^^^^^187^201^maybeSanityCheck ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P11_Insert_Donor_Statement]^pass.process ( externs, root ) ;maybeSanityCheck ( externs, root ) ;^195^^^^^187^201^maybeSanityCheck ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[P2_Replace_Operator]^if  ( sanityCheck == null )  {^207^^^^^206^210^if  ( sanityCheck != null )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] maybeSanityCheck [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^if  ( factory != null )  {^207^^^^^206^210^if  ( sanityCheck != null )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] maybeSanityCheck [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P8_Replace_Mix]^if  ( sanityCheck != false )  {^207^^^^^206^210^if  ( sanityCheck != null )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] maybeSanityCheck [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P9_Replace_Statement]^if  ( tracker != null )  {^207^^^^^206^210^if  ( sanityCheck != null )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] maybeSanityCheck [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P15_Unwrap_Block]^sanityCheck.create(compiler).process(externs, root);^207^208^209^^^206^210^if  ( sanityCheck != null )  { sanityCheck.create ( compiler ) .process ( externs, root ) ; }^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] maybeSanityCheck [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P16_Remove_Block]^^207^208^209^^^206^210^if  ( sanityCheck != null )  { sanityCheck.create ( compiler ) .process ( externs, root ) ; }^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] maybeSanityCheck [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^sanityCheck.create ( compiler ) .process ( root, root ) ;^208^^^^^206^210^sanityCheck.create ( compiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] maybeSanityCheck [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^sanityCheck.create ( myCompiler ) .process ( externs, root ) ;^208^^^^^206^210^sanityCheck.create ( compiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] maybeSanityCheck [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^sanityCheck.create ( compiler ) .process (  root ) ;^208^^^^^206^210^sanityCheck.create ( compiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] maybeSanityCheck [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^sanityCheck.create ( compiler ) .process ( externs ) ;^208^^^^^206^210^sanityCheck.create ( compiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] maybeSanityCheck [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^sanityCheck.create ( compiler ) .process ( root, externs ) ;^208^^^^^206^210^sanityCheck.create ( compiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] maybeSanityCheck [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^sanityCheck.create ( externs ) .process ( compiler, root ) ;^208^^^^^206^210^sanityCheck.create ( compiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] maybeSanityCheck [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P7_Replace_Invocation]^sanityCheck.isOneTimePass ( compiler ) .process ( externs, root ) ;^208^^^^^206^210^sanityCheck.create ( compiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] maybeSanityCheck [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P8_Replace_Mix]^sanityCheck.isOneTimePass ( myCompiler ) .process ( externs, root ) ;^208^^^^^206^210^sanityCheck.create ( compiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] maybeSanityCheck [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^208^^^^^206^210^sanityCheck.create ( compiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] maybeSanityCheck [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^factory.create ( myCompiler ) .process ( externs, root ) ;sanityCheck.create ( compiler ) .process ( externs, root ) ;^208^^^^^206^210^sanityCheck.create ( compiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] maybeSanityCheck [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P13_Insert_Block]^if  (  ( sanityCheck )  != null )  {     sanityCheck.create ( compiler ) .process ( externs, root ) ; }^208^^^^^206^210^[Delete]^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] maybeSanityCheck [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^sanityCheck.create ( compiler ) .process ( externs, externs ) ;^208^^^^^206^210^sanityCheck.create ( compiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] maybeSanityCheck [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^sanityCheck.create ( root ) .process ( externs, compiler ) ;^208^^^^^206^210^sanityCheck.create ( compiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] maybeSanityCheck [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P7_Replace_Invocation]^sanityCheck .getName (  )  .process ( externs, root ) ;^208^^^^^206^210^sanityCheck.create ( compiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] maybeSanityCheck [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P8_Replace_Mix]^return compiler .PhaseOptimizer ( compiler , tracker )  ;^213^^^^^212^214^return compiler.hasHaltingErrors (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] hasHaltingErrors [RETURN_TYPE] boolean   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^return myCompiler.hasHaltingErrors (  ) ;^213^^^^^212^214^return compiler.hasHaltingErrors (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] hasHaltingErrors [RETURN_TYPE] boolean   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P7_Replace_Invocation]^return compiler .PhaseOptimizer ( myCompiler , tracker )  ;^213^^^^^212^214^return compiler.hasHaltingErrors (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] hasHaltingErrors [RETURN_TYPE] boolean   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^213^^^^^212^214^return compiler.hasHaltingErrors (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] hasHaltingErrors [RETURN_TYPE] boolean   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P1_Replace_Type]^char comment = passName + ( recentChange.hasCodeChanged (  )  ? " on recently changed AST" : "" ) ;^220^221^^^^219^226^String comment = passName + ( recentChange.hasCodeChanged (  )  ? " on recently changed AST" : "" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P2_Replace_Operator]^String comment = passName + ( recentChange.hasCodeChanged (  <  )  ? " on recently changed AST" : "" ) ;^220^221^^^^219^226^String comment = passName + ( recentChange.hasCodeChanged (  )  ? " on recently changed AST" : "" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P3_Replace_Literal]^String comment = passName + ( recentChange.hasCodeChanged (  )  ? "y " : "" ) ;^220^221^^^^219^226^String comment = passName + ( recentChange.hasCodeChanged (  )  ? " on recently changed AST" : "" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^String comment = passToCheck + ( recentChange.hasCodeChanged (  )  ? " on recently changed AST" : "" ) ;^220^221^^^^219^226^String comment = passName + ( recentChange.hasCodeChanged (  )  ? " on recently changed AST" : "" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^String comment = recentChange + ( passName.hasCodeChanged (  )  ? " on recently changed AST" : "" ) ;^220^221^^^^219^226^String comment = passName + ( recentChange.hasCodeChanged (  )  ? " on recently changed AST" : "" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P6_Replace_Expression]^String comment  =  "" ) ;^220^221^^^^219^226^String comment = passName + ( recentChange.hasCodeChanged (  )  ? " on recently changed AST" : "" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P6_Replace_Expression]^String comment  =  " on recently changed AST" ;^220^221^^^^219^226^String comment = passName + ( recentChange.hasCodeChanged (  )  ? " on recently changed AST" : "" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P7_Replace_Invocation]^String comment = passName + ( recentChange.reset (  )  ? " on recently changed AST" : "" ) ;^220^221^^^^219^226^String comment = passName + ( recentChange.hasCodeChanged (  )  ? " on recently changed AST" : "" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P8_Replace_Mix]^String comment = passToCheck + ( recentChange.reset (  )  ? " on recently changed AST" : "" ) ;^220^221^^^^219^226^String comment = passName + ( recentChange.hasCodeChanged (  )  ? " on recently changed AST" : "" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P7_Replace_Invocation]^( recentChange.reset (  )  ? " on recently changed AST" : "" ) ;^221^^^^^219^226^( recentChange.hasCodeChanged (  )  ? " on recently changed AST" : "" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^221^^^^^219^226^( recentChange.hasCodeChanged (  )  ? " on recently changed AST" : "" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P2_Replace_Operator]^if  ( tracker == null )  {^222^^^^^219^226^if  ( tracker != null )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P8_Replace_Mix]^if  ( tracker != false )  {^222^^^^^219^226^if  ( tracker != null )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P9_Replace_Statement]^if  ( sanityCheck != null )  {^222^^^^^219^226^if  ( tracker != null )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P15_Unwrap_Block]^tracker.recordPassStart(passName);^222^223^224^^^219^226^if  ( tracker != null )  { tracker.recordPassStart ( passName ) ; }^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P16_Remove_Block]^^222^223^224^^^219^226^if  ( tracker != null )  { tracker.recordPassStart ( passName ) ; }^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P13_Insert_Block]^if  (  ( tracker )  != null )  {     tracker.recordPassStop ( passName, result ) ; }^222^^^^^219^226^[Delete]^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^tracker.recordPassStart ( passToCheck ) ;^223^^^^^219^226^tracker.recordPassStart ( passName ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^223^^^^^219^226^tracker.recordPassStart ( passName ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^tracker.recordPassStop ( passName, result ) ;tracker.recordPassStart ( passName ) ;^223^^^^^219^226^tracker.recordPassStart ( passName ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P13_Insert_Block]^if  (  ( tracker )  != null )  {     tracker.recordPassStart ( passName ) ; }^223^^^^^219^226^[Delete]^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^tracker.recordPassStart ( name ) ;^223^^^^^219^226^tracker.recordPassStart ( passName ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P3_Replace_Literal]^return new Tracer ( "JS", comment ) ;^225^^^^^219^226^return new Tracer ( "JSCompiler", comment ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^return new Tracer ( "JSCompiler", passToCheck ) ;^225^^^^^219^226^return new Tracer ( "JSCompiler", comment ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P3_Replace_Literal]^return new Tracer ( "JSCompilSCompiler", comment ) ;^225^^^^^219^226^return new Tracer ( "JSCompiler", comment ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P1_Replace_Type]^int  result = t.stop (  ) ;^229^^^^^228^233^long result = t.stop (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] stopTracer [RETURN_TYPE] void   Tracer t String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  long  result  
[P5_Replace_Variable]^long result = currentTracer.stop (  ) ;^229^^^^^228^233^long result = t.stop (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] stopTracer [RETURN_TYPE] void   Tracer t String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  long  result  
[P14_Delete_Statement]^^229^^^^^228^233^long result = t.stop (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] stopTracer [RETURN_TYPE] void   Tracer t String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  long  result  
[P2_Replace_Operator]^if  ( tracker == null )  {^230^^^^^228^233^if  ( tracker != null )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] stopTracer [RETURN_TYPE] void   Tracer t String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  long  result  
[P8_Replace_Mix]^if  ( tracker != this )  {^230^^^^^228^233^if  ( tracker != null )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] stopTracer [RETURN_TYPE] void   Tracer t String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  long  result  
[P9_Replace_Statement]^if  ( sanityCheck != null )  {^230^^^^^228^233^if  ( tracker != null )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] stopTracer [RETURN_TYPE] void   Tracer t String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  long  result  
[P15_Unwrap_Block]^tracker.recordPassStop(passName, result);^230^231^232^^^228^233^if  ( tracker != null )  { tracker.recordPassStop ( passName, result ) ; }^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] stopTracer [RETURN_TYPE] void   Tracer t String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  long  result  
[P16_Remove_Block]^^230^231^232^^^228^233^if  ( tracker != null )  { tracker.recordPassStop ( passName, result ) ; }^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] stopTracer [RETURN_TYPE] void   Tracer t String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  long  result  
[P13_Insert_Block]^if  (  ( tracker )  != null )  {     tracker.recordPassStart ( passName ) ; }^230^^^^^228^233^[Delete]^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] stopTracer [RETURN_TYPE] void   Tracer t String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  long  result  
[P5_Replace_Variable]^tracker.recordPassStop (  result ) ;^231^^^^^228^233^tracker.recordPassStop ( passName, result ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] stopTracer [RETURN_TYPE] void   Tracer t String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  long  result  
[P5_Replace_Variable]^tracker.recordPassStop ( passName ) ;^231^^^^^228^233^tracker.recordPassStop ( passName, result ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] stopTracer [RETURN_TYPE] void   Tracer t String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  long  result  
[P8_Replace_Mix]^tracker.recordPassStop ( passToCheck, result ) ;^231^^^^^228^233^tracker.recordPassStop ( passName, result ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] stopTracer [RETURN_TYPE] void   Tracer t String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  long  result  
[P14_Delete_Statement]^^231^^^^^228^233^tracker.recordPassStop ( passName, result ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] stopTracer [RETURN_TYPE] void   Tracer t String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  long  result  
[P11_Insert_Donor_Statement]^tracker.recordPassStart ( passName ) ;tracker.recordPassStop ( passName, result ) ;^231^^^^^228^233^tracker.recordPassStop ( passName, result ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] stopTracer [RETURN_TYPE] void   Tracer t String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  long  result  
[P13_Insert_Block]^if  (  ( tracker )  != null )  {     tracker.recordPassStop ( passName, result ) ; }^231^^^^^228^233^[Delete]^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] stopTracer [RETURN_TYPE] void   Tracer t String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  long  result  
[P5_Replace_Variable]^tracker.recordPassStop ( name, result ) ;^231^^^^^228^233^tracker.recordPassStop ( passName, result ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] stopTracer [RETURN_TYPE] void   Tracer t String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  long  result  
[P5_Replace_Variable]^logger.info ( passName ) ;^246^^^^^245^250^logger.info ( name ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P8_Replace_Mix]^logger .getLogger ( comment )  ;^246^^^^^245^250^logger.info ( name ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^246^247^^^^245^250^logger.info ( name ) ; startPass ( name ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^order.add ( pass.name ) ;logger.info ( name ) ;^246^^^^^245^250^logger.info ( name ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^startPass ( name ) ;logger.info ( name ) ;^246^^^^^245^250^logger.info ( name ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^startPass ( passToCheck ) ;^247^^^^^245^250^startPass ( name ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P7_Replace_Invocation]^hasHaltingErrors ( name ) ;^247^^^^^245^250^startPass ( name ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^247^248^^^^245^250^startPass ( name ) ; processInternal ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^logger.info ( name ) ;startPass ( name ) ;^247^^^^^245^250^startPass ( name ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^processInternal (  root ) ;^248^^^^^245^250^processInternal ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^processInternal ( externs ) ;^248^^^^^245^250^processInternal ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^processInternal ( root, externs ) ;^248^^^^^245^250^processInternal ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P7_Replace_Invocation]^process ( externs, root ) ;^248^^^^^245^250^processInternal ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^248^249^^^^245^250^processInternal ( externs, root ) ; endPass ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^endPass ( externs, root ) ;processInternal ( externs, root ) ;^248^^^^^245^250^processInternal ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^pass.process ( externs, root ) ;processInternal ( externs, root ) ;^248^^^^^245^250^processInternal ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^maybeSanityCheck ( externs, root ) ;processInternal ( externs, root ) ;^248^^^^^245^250^processInternal ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^endPass (  root ) ;^249^^^^^245^250^endPass ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^endPass ( externs ) ;^249^^^^^245^250^endPass ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^endPass ( root, externs ) ;^249^^^^^245^250^endPass ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P7_Replace_Invocation]^process ( externs, root ) ;^249^^^^^245^250^endPass ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^249^^^^^245^250^endPass ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^processInternal ( externs, root ) ;endPass ( externs, root ) ;^249^^^^^245^250^endPass ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^pass.process ( externs, root ) ;endPass ( externs, root ) ;^249^^^^^245^250^endPass ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^maybeSanityCheck ( externs, root ) ;endPass ( externs, root ) ;^249^^^^^245^250^endPass ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^factory.create ( compiler ) .process ( externs, root ) ;^271^^^^^270^272^factory.create ( myCompiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^factory.create ( myCompiler ) .process (  root ) ;^271^^^^^270^272^factory.create ( myCompiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^factory.create ( myCompiler ) .process ( externs ) ;^271^^^^^270^272^factory.create ( myCompiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^factory.create ( myCompiler ) .process ( root, externs ) ;^271^^^^^270^272^factory.create ( myCompiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P7_Replace_Invocation]^factory.isOneTimePass ( myCompiler ) .process ( externs, root ) ;^271^^^^^270^272^factory.create ( myCompiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P8_Replace_Mix]^factory.create ( myCompiler )  .process ( externs , externs )  ;^271^^^^^270^272^factory.create ( myCompiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^271^^^^^270^272^factory.create ( myCompiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^sanityCheck.create ( compiler ) .process ( externs, root ) ;factory.create ( myCompiler ) .process ( externs, root ) ;^271^^^^^270^272^factory.create ( myCompiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P8_Replace_Mix]^factory.isOneTimePass ( compiler ) .process ( externs, root ) ;^271^^^^^270^272^factory.create ( myCompiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P1_Replace_Type]^char name = factory.getName (  ) ;^294^^^^^293^300^String name = factory.getName (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^String name = sanityCheck.getName (  ) ;^294^^^^^293^300^String name = factory.getName (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P7_Replace_Invocation]^String name = factory.create (  ) ;^294^^^^^293^300^String name = factory.getName (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^294^^^^^293^300^String name = factory.getName (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^myNames.add ( factory.getName (  )  ) ;String name = factory.getName (  ) ;^294^^^^^293^300^String name = factory.getName (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^super ( factory.getName (  )  ) ;String name = factory.getName (  ) ;^294^^^^^293^300^String name = factory.getName (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P2_Replace_Operator]^Preconditions.checkArgument ( !myNames.contains ( name ) , "Already a pass with name '"  >=  name  >=  "' in this loop" ) ;^295^296^297^^^293^300^Preconditions.checkArgument ( !myNames.contains ( name ) , "Already a pass with name '" + name + "' in this loop" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P2_Replace_Operator]^Preconditions.checkArgument ( !myNames.contains ( name ) , "Already a pass with name '"  >  name + "' in this loop" ) ;^295^296^297^^^293^300^Preconditions.checkArgument ( !myNames.contains ( name ) , "Already a pass with name '" + name + "' in this loop" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P3_Replace_Literal]^Preconditions.checkArgument ( !myNames.contains ( name ) , "lready a pass with name '" + name + "' in this loop" ) ;^295^296^297^^^293^300^Preconditions.checkArgument ( !myNames.contains ( name ) , "Already a pass with name '" + name + "' in this loop" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P3_Replace_Literal]^Preconditions.checkArgument ( !myNames.contains ( name ) , "Already a pass with name '" + name + "'  in this loop" ) ;^295^296^297^^^293^300^Preconditions.checkArgument ( !myNames.contains ( name ) , "Already a pass with name '" + name + "' in this loop" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^Preconditions.checkArgument ( !myNames.contains ( passToCheck ) , "Already a pass with name '" + name + "' in this loop" ) ;^295^296^297^^^293^300^Preconditions.checkArgument ( !myNames.contains ( name ) , "Already a pass with name '" + name + "' in this loop" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P7_Replace_Invocation]^Preconditions .checkState (  )  ;^295^296^297^^^293^300^Preconditions.checkArgument ( !myNames.contains ( name ) , "Already a pass with name '" + name + "' in this loop" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P7_Replace_Invocation]^Preconditions.checkArgument ( !myNames.add ( name ) , "Already a pass with name '" + name + "' in this loop" ) ;^295^296^297^^^293^300^Preconditions.checkArgument ( !myNames.contains ( name ) , "Already a pass with name '" + name + "' in this loop" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P8_Replace_Mix]^Preconditions.checkArgument ( !myNames.add ( passToCheck ) , "Already a pass with name '" + name + "' in this loop" ) ;^295^296^297^^^293^300^Preconditions.checkArgument ( !myNames.contains ( name ) , "Already a pass with name '" + name + "' in this loop" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^295^296^297^^^293^300^Preconditions.checkArgument ( !myNames.contains ( name ) , "Already a pass with name '" + name + "' in this loop" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^!myNames.contains ( passName ) , "Already a pass with name '" + name + "' in this loop" ) ;^296^297^^^^293^300^!myNames.contains ( name ) , "Already a pass with name '" + name + "' in this loop" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P7_Replace_Invocation]^!myNames.add ( name ) , "Already a pass with name '" + name + "' in this loop" ) ;^296^297^^^^293^300^!myNames.contains ( name ) , "Already a pass with name '" + name + "' in this loop" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P8_Replace_Mix]^!myNames.contains ( passToCheck ) , "Already a pass with name '" + name + "' in this loop" ) ;^296^297^^^^293^300^!myNames.contains ( name ) , "Already a pass with name '" + name + "' in this loop" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^296^297^^^^293^300^!myNames.contains ( name ) , "Already a pass with name '" + name + "' in this loop" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^myNames.add ( sanityCheck.getName (  )  ) ;^298^^^^^293^300^myNames.add ( factory.getName (  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P7_Replace_Invocation]^myNames.contains ( factory.getName (  )  ) ;^298^^^^^293^300^myNames.add ( factory.getName (  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P7_Replace_Invocation]^myNames.add ( factory.create (  )  ) ;^298^^^^^293^300^myNames.add ( factory.getName (  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^298^^^^^293^300^myNames.add ( factory.getName (  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^super ( factory.getName (  )  ) ;myNames.add ( factory.getName (  )  ) ;^298^^^^^293^300^myNames.add ( factory.getName (  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^String name = factory.getName (  ) ;myNames.add ( factory.getName (  )  ) ;^298^^^^^293^300^myNames.add ( factory.getName (  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^298^299^^^^293^300^myNames.add ( factory.getName (  )  ) ; myPasses.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^myPasses.add ( new PassFactoryDelegate ( compiler, sanityCheck )  ) ;^299^^^^^293^300^myPasses.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^myPasses.add ( new PassFactoryDelegate ( myCompiler, factory )  ) ;^299^^^^^293^300^myPasses.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^myPasses.add ( new PassFactoryDelegate ( compiler )  ) ;^299^^^^^293^300^myPasses.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^myPasses.add ( new PassFactoryDelegate (  factory )  ) ;^299^^^^^293^300^myPasses.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^myPasses.add ( new PassFactoryDelegate ( factory, compiler )  ) ;^299^^^^^293^300^myPasses.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P7_Replace_Invocation]^myPasses.remove ( new PassFactoryDelegate ( compiler, factory )  ) ;^299^^^^^293^300^myPasses.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^299^^^^^293^300^myPasses.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^List<NamedPass> mixedupPasses = Lists.newArrayList (  ) ;List<String> order = Lists.newArrayList (  ) ;^306^^^^^305^311^List<String> order = Lists.newArrayList (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] getPassOrder [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^List<NamedPass> optimalPasses = Lists.newArrayList (  ) ;List<String> order = Lists.newArrayList (  ) ;^306^^^^^305^311^List<String> order = Lists.newArrayList (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] getPassOrder [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^306^^^^^305^311^List<String> order = Lists.newArrayList (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] getPassOrder [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^order.add ( name ) ;^308^^^^^305^311^order.add ( pass.name ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] getPassOrder [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P5_Replace_Variable]^order.add ( pass.name.name ) ;^308^^^^^305^311^order.add ( pass.name ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] getPassOrder [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P8_Replace_Mix]^order.add ( passToCheck ) ;^308^^^^^305^311^order.add ( pass.name ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] getPassOrder [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P14_Delete_Statement]^^308^^^^^305^311^order.add ( pass.name ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] getPassOrder [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P11_Insert_Donor_Statement]^logger.info ( name ) ;order.add ( pass.name ) ;^308^^^^^305^311^order.add ( pass.name ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] getPassOrder [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[P3_Replace_Literal]^Preconditions.checkState ( !loopMutex, "Nested loops are forb" ) ;^314^^^^^299^329^Preconditions.checkState ( !loopMutex, "Nested loops are forbidden" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P7_Replace_Invocation]^Preconditions .checkState ( isCurrentLoopPopulated , OPTIMIZE_LOOP_ERROR )  ;^314^^^^^299^329^Preconditions.checkState ( !loopMutex, "Nested loops are forbidden" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P8_Replace_Mix]^Preconditions .checkState ( isCurrentLoopPopulated , currentPassName )  ;^314^^^^^299^329^Preconditions.checkState ( !loopMutex, "Nested loops are forbidden" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P3_Replace_Literal]^loopMutex = false;^315^^^^^300^330^loopMutex = true;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P11_Insert_Donor_Statement]^loopMutex = false;loopMutex = true;^315^^^^^300^330^loopMutex = true;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P5_Replace_Variable]^if  ( loopMutex )  {^316^^^^^301^331^if  ( randomizeLoops )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P15_Unwrap_Block]^randomizePasses();^316^317^318^319^320^301^331^if  ( randomizeLoops )  { randomizePasses (  ) ; } else { optimizePasses (  ) ; }^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P16_Remove_Block]^^316^317^318^319^320^301^331^if  ( randomizeLoops )  { randomizePasses (  ) ; } else { optimizePasses (  ) ; }^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P13_Insert_Block]^if  ( randomizeLoops )  {     add ( getPassOrder (  )  ) ; }^316^^^^^301^331^[Delete]^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P7_Replace_Invocation]^randomizePasses (  ) ;^319^^^^^316^320^optimizePasses (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P14_Delete_Statement]^^319^^^^^316^320^optimizePasses (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P11_Insert_Donor_Statement]^optimalPasses.add ( pass ) ;optimizePasses (  ) ;^319^^^^^316^320^optimizePasses (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P11_Insert_Donor_Statement]^randomizePasses (  ) ;optimizePasses (  ) ;^319^^^^^316^320^optimizePasses (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P7_Replace_Invocation]^optimizePasses (  ) ;^317^^^^^302^332^randomizePasses (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P14_Delete_Statement]^^317^^^^^302^332^randomizePasses (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P11_Insert_Donor_Statement]^optimizePasses (  ) ;randomizePasses (  ) ;^317^^^^^302^332^randomizePasses (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P7_Replace_Invocation]^randomizePasses (  ) ;^319^^^^^304^334^optimizePasses (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P14_Delete_Statement]^^319^^^^^304^334^optimizePasses (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P11_Insert_Donor_Statement]^optimalPasses.add ( pass ) ;optimizePasses (  ) ;^319^^^^^304^334^optimizePasses (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P11_Insert_Donor_Statement]^randomizePasses (  ) ;optimizePasses (  ) ;^319^^^^^304^334^optimizePasses (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P2_Replace_Operator]^if  ( count++ >= MAX_LOOPS )  {^327^^^^^312^342^if  ( count++ > MAX_LOOPS )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P5_Replace_Variable]^if  ( count++ > count )  {^327^^^^^312^342^if  ( count++ > MAX_LOOPS )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P15_Unwrap_Block]^compiler.throwInternalError(com.google.javascript.jscomp.PhaseOptimizer.OPTIMIZE_LOOP_ERROR, null);^327^328^329^^^312^342^if  ( count++ > MAX_LOOPS )  { compiler.throwInternalError ( OPTIMIZE_LOOP_ERROR, null ) ; }^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P16_Remove_Block]^^327^328^329^^^312^342^if  ( count++ > MAX_LOOPS )  { compiler.throwInternalError ( OPTIMIZE_LOOP_ERROR, null ) ; }^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P13_Insert_Block]^if  ( randomizeLoops )  {     add ( getPassOrder (  )  ) ; }^327^^^^^312^342^[Delete]^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P5_Replace_Variable]^compiler.throwInternalError ( passToCheck, null ) ;^328^^^^^313^343^compiler.throwInternalError ( OPTIMIZE_LOOP_ERROR, null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P5_Replace_Variable]^compiler.throwInternalError (  null ) ;^328^^^^^313^343^compiler.throwInternalError ( OPTIMIZE_LOOP_ERROR, null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P7_Replace_Invocation]^compiler.addChangeHandler ( OPTIMIZE_LOOP_ERROR, null ) ;^328^^^^^313^343^compiler.throwInternalError ( OPTIMIZE_LOOP_ERROR, null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P14_Delete_Statement]^^328^^^^^313^343^compiler.throwInternalError ( OPTIMIZE_LOOP_ERROR, null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P13_Insert_Block]^if  (  ( count++ )  >  ( MAX_LOOPS )  )  {     compiler.throwInternalError ( OPTIMIZE_LOOP_ERROR, null ) ; }^328^^^^^313^343^[Delete]^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P15_Unwrap_Block]^break out;^335^336^337^^^320^350^if  ( hasHaltingErrors (  )  )  { break out; }^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P16_Remove_Block]^^335^336^337^^^320^350^if  ( hasHaltingErrors (  )  )  { break out; }^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P13_Insert_Block]^if  ( hasHaltingErrors (  )  )  {     return ; }^335^^^^^320^350^[Delete]^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P5_Replace_Variable]^if  ( loopMutex )  {^342^^^^^327^357^if  ( randomizeLoops )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P15_Unwrap_Block]^com.google.javascript.jscomp.PhaseOptimizer.loopsRun.add(getPassOrder());^342^343^344^^^327^357^if  ( randomizeLoops )  { loopsRun.add ( getPassOrder (  )  ) ; }^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P16_Remove_Block]^^342^343^344^^^327^357^if  ( randomizeLoops )  { loopsRun.add ( getPassOrder (  )  ) ; }^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P13_Insert_Block]^if  (  ( count++ )  >  ( MAX_LOOPS )  )  {     compiler.throwInternalError ( OPTIMIZE_LOOP_ERROR, null ) ; }^342^^^^^327^357^[Delete]^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P13_Insert_Block]^if  ( randomizeLoops )  {     randomizePasses (  ) ; }else {     optimizePasses (  ) ; }^342^^^^^327^357^[Delete]^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P7_Replace_Invocation]^loopsRun.size ( getPassOrder (  )  ) ;^343^^^^^328^358^loopsRun.add ( getPassOrder (  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P7_Replace_Invocation]^loopsRun.add ( LoopInternal (  )  ) ;^343^^^^^328^358^loopsRun.add ( getPassOrder (  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P14_Delete_Statement]^^343^^^^^328^358^loopsRun.add ( getPassOrder (  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P11_Insert_Donor_Statement]^loopsRun.clear (  ) ;loopsRun.add ( getPassOrder (  )  ) ;^343^^^^^328^358^loopsRun.add ( getPassOrder (  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P7_Replace_Invocation]^compiler .hasHaltingErrors (  )  ;^328^^^^^313^343^compiler.throwInternalError ( OPTIMIZE_LOOP_ERROR, null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P1_Replace_Type]^short  count = 0;^325^^^^^310^340^int count = 0;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P3_Replace_Literal]^int count = -5;^325^^^^^310^340^int count = 0;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P7_Replace_Invocation]^} while  ( recentChange.reset (  )  && !hasHaltingErrors (  )  ) ;^340^^^^^325^355^} while  ( recentChange.hasCodeChanged (  )  && !hasHaltingErrors (  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P14_Delete_Statement]^^340^^^^^325^355^} while  ( recentChange.hasCodeChanged (  )  && !hasHaltingErrors (  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P11_Insert_Donor_Statement]^( recentChange.hasCodeChanged (  )  ? " on recently changed AST" : "" ) ;} while  ( recentChange.hasCodeChanged (  )  && !hasHaltingErrors (  )  ) ;^340^^^^^325^355^} while  ( recentChange.hasCodeChanged (  )  && !hasHaltingErrors (  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P5_Replace_Variable]^compiler.throwInternalError ( passName, null ) ;^328^^^^^313^343^compiler.throwInternalError ( OPTIMIZE_LOOP_ERROR, null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P7_Replace_Invocation]^recentChange.hasCodeChanged (  ) ;^331^^^^^316^346^recentChange.reset (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P14_Delete_Statement]^^331^^^^^316^346^recentChange.reset (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P5_Replace_Variable]^pass.process (  root ) ;^334^^^^^319^349^pass.process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P5_Replace_Variable]^pass.process ( externs ) ;^334^^^^^319^349^pass.process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P5_Replace_Variable]^pass.process ( root, externs ) ;^334^^^^^319^349^pass.process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P7_Replace_Invocation]^pass .process ( root , root )  ;^334^^^^^319^349^pass.process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P14_Delete_Statement]^^334^^^^^319^349^pass.process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P11_Insert_Donor_Statement]^endPass ( externs, root ) ;pass.process ( externs, root ) ;^334^^^^^319^349^pass.process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P11_Insert_Donor_Statement]^processInternal ( externs, root ) ;pass.process ( externs, root ) ;^334^^^^^319^349^pass.process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P11_Insert_Donor_Statement]^maybeSanityCheck ( externs, root ) ;pass.process ( externs, root ) ;^334^^^^^319^349^pass.process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P3_Replace_Literal]^loopMutex = true;^346^^^^^331^361^loopMutex = false;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P11_Insert_Donor_Statement]^loopMutex = true;loopMutex = false;^346^^^^^331^361^loopMutex = false;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P11_Insert_Donor_Statement]^isCurrentLoopPopulated = false;loopMutex = false;^346^^^^^331^361^loopMutex = false;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P3_Replace_Literal]^int count = 5;^325^^^^^310^340^int count = 0;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P5_Replace_Variable]^} while  ( 1.hasCodeChanged (  )  && !hasHaltingErrors (  )  ) ;^340^^^^^325^355^} while  ( recentChange.hasCodeChanged (  )  && !hasHaltingErrors (  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P8_Replace_Mix]^compiler.addChangeHandler ( passToCheck, null ) ;^328^^^^^313^343^compiler.throwInternalError ( OPTIMIZE_LOOP_ERROR, null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P7_Replace_Invocation]^pass .process ( externs , root )  ;^334^^^^^319^349^pass.process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P8_Replace_Mix]^pass .process ( externs , externs )  ;^334^^^^^319^349^pass.process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[P11_Insert_Donor_Statement]^List<String> order = Lists.newArrayList (  ) ;List<NamedPass> mixedupPasses = Lists.newArrayList (  ) ;^352^^^^^351^359^List<NamedPass> mixedupPasses = Lists.newArrayList (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P11_Insert_Donor_Statement]^List<NamedPass> optimalPasses = Lists.newArrayList (  ) ;List<NamedPass> mixedupPasses = Lists.newArrayList (  ) ;^352^^^^^351^359^List<NamedPass> mixedupPasses = Lists.newArrayList (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P14_Delete_Statement]^^352^^^^^351^359^List<NamedPass> mixedupPasses = Lists.newArrayList (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P2_Replace_Operator]^while  ( myPasses.size (  )  >= 0 )  {^354^^^^^351^359^while  ( myPasses.size (  )  > 0 )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P3_Replace_Literal]^while  ( myPasses.size (  )  > MAX_LOOPS )  {^354^^^^^351^359^while  ( myPasses.size (  )  > 0 )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P3_Replace_Literal]^while  ( myPasses.size() - 8  > 0 )  {^354^^^^^351^359^while  ( myPasses.size (  )  > 0 )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P7_Replace_Invocation]^while  ( myPasses.clear (  )  > 0 )  {^354^^^^^351^359^while  ( myPasses.size (  )  > 0 )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P7_Replace_Invocation]^while  ( myPasses .remove ( count )   > 0 )  {^354^^^^^351^359^while  ( myPasses.size (  )  > 0 )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P3_Replace_Literal]^mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size() - 0  )  )  ) ;^355^356^^^^351^359^mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P5_Replace_Variable]^mixedupPasses.add ( random.remove ( myPasses.nextInt ( myPasses.size (  )  )  )  ) ;^355^356^^^^351^359^mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P7_Replace_Invocation]^mixedupPasses.add ( myPasses.add ( random.nextInt ( myPasses.size (  )  )  )  ) ;^355^356^^^^351^359^mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P7_Replace_Invocation]^mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.clear (  )  )  )  ) ;^355^356^^^^351^359^mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P8_Replace_Mix]^mixedupPasses.add ( null.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^355^356^^^^351^359^mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P14_Delete_Statement]^^355^356^^^^351^359^mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P11_Insert_Donor_Statement]^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^355^356^^^^351^359^mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P3_Replace_Literal]^myPasses.remove ( random.nextInt ( myPasses.size() + 4  )  )  ) ;^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P5_Replace_Variable]^myPasses.remove ( myPasses.nextInt ( random.size (  )  )  )  ) ;^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P7_Replace_Invocation]^myPasses.add ( random.nextInt ( myPasses.size (  )  )  )  ) ;^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P7_Replace_Invocation]^myPasses.remove ( random.nextInt ( myPasses.clear (  )  )  )  ) ;^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P14_Delete_Statement]^^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P11_Insert_Donor_Statement]^mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P3_Replace_Literal]^myPasses.remove ( random.nextInt ( myPasses.size() - 5  )  )  ) ;^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P3_Replace_Literal]^myPasses.remove ( random.nextInt ( myPasses.size() + 7  )  )  ) ;^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P3_Replace_Literal]^while  ( myPasses.size() - 2  > 0 )  {^354^^^^^351^359^while  ( myPasses.size (  )  > 0 )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P7_Replace_Invocation]^while  ( myPasses .remove ( MAX_LOOPS )   > 0 )  {^354^^^^^351^359^while  ( myPasses.size (  )  > 0 )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P14_Delete_Statement]^^354^355^356^^^351^359^while  ( myPasses.size (  )  > 0 )  { mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P3_Replace_Literal]^mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size() + 9  )  )  ) ;^355^356^^^^351^359^mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P3_Replace_Literal]^myPasses.remove ( random.nextInt ( myPasses.size() - 8  )  )  ) ;^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P7_Replace_Invocation]^myPasses.remove ( random.nextInt ( myPasses .remove ( MAX_LOOPS )   )  )  ) ;^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P3_Replace_Literal]^myPasses.remove ( random.nextInt ( myPasses.size() - 4  )  )  ) ;^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P7_Replace_Invocation]^myPasses.remove ( random.nextInt ( myPasses .remove ( count )   )  )  ) ;^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P7_Replace_Invocation]^myPasses.removeAll ( mixedupPasses ) ;^358^^^^^351^359^myPasses.addAll ( mixedupPasses ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P14_Delete_Statement]^^358^^^^^351^359^myPasses.addAll ( mixedupPasses ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P11_Insert_Donor_Statement]^myPasses.removeAll ( optimalPasses ) ;myPasses.addAll ( mixedupPasses ) ;^358^^^^^351^359^myPasses.addAll ( mixedupPasses ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P11_Insert_Donor_Statement]^myPasses.addAll ( optimalPasses ) ;myPasses.addAll ( mixedupPasses ) ;^358^^^^^351^359^myPasses.addAll ( mixedupPasses ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P11_Insert_Donor_Statement]^passes.add ( loop ) ;myPasses.addAll ( mixedupPasses ) ;^358^^^^^351^359^myPasses.addAll ( mixedupPasses ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P11_Insert_Donor_Statement]^List<NamedPass> mixedupPasses = Lists.newArrayList (  ) ;List<NamedPass> optimalPasses = Lists.newArrayList (  ) ;^369^^^^^362^381^List<NamedPass> optimalPasses = Lists.newArrayList (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P11_Insert_Donor_Statement]^List<String> order = Lists.newArrayList (  ) ;List<NamedPass> optimalPasses = Lists.newArrayList (  ) ;^369^^^^^362^381^List<NamedPass> optimalPasses = Lists.newArrayList (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P14_Delete_Statement]^^369^^^^^362^381^List<NamedPass> optimalPasses = Lists.newArrayList (  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P5_Replace_Variable]^if  ( pass.name.equals ( passToCheck )  )  {^372^^^^^362^381^if  ( pass.name.equals ( passName )  )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P5_Replace_Variable]^if  ( passToCheck.equals ( passName )  )  {^372^^^^^362^381^if  ( pass.name.equals ( passName )  )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P5_Replace_Variable]^if  ( passName.name.equals ( pass )  )  {^372^^^^^362^381^if  ( pass.name.equals ( passName )  )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P5_Replace_Variable]^if  ( passName.equals ( pass.name )  )  {^372^^^^^362^381^if  ( pass.name.equals ( passName )  )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P15_Unwrap_Block]^optimalPasses.add(pass); break;^372^373^374^375^^362^381^if  ( pass.name.equals ( passName )  )  { optimalPasses.add ( pass ) ; break; }^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P16_Remove_Block]^^372^373^374^375^^362^381^if  ( pass.name.equals ( passName )  )  { optimalPasses.add ( pass ) ; break; }^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P14_Delete_Statement]^^373^374^^^^362^381^optimalPasses.add ( pass ) ; break;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P11_Insert_Donor_Statement]^optimizePasses (  ) ;optimalPasses.add ( pass ) ;^373^^^^^362^381^optimalPasses.add ( pass ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P11_Insert_Donor_Statement]^passes.add ( loop ) ;optimalPasses.add ( pass ) ;^373^^^^^362^381^optimalPasses.add ( pass ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P1_Replace_Type]^for  ( char passName : OPTIMAL_ORDER )  {^370^^^^^362^381^for  ( String passName : OPTIMAL_ORDER )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P8_Replace_Mix]^if  ( pass.name.equals ( name )  )  {^372^^^^^362^381^if  ( pass.name.equals ( passName )  )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P7_Replace_Invocation]^myPasses.addAll ( optimalPasses ) ;^379^^^^^362^381^myPasses.removeAll ( optimalPasses ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P8_Replace_Mix]^myPasses .remove ( count )  ;^379^^^^^362^381^myPasses.removeAll ( optimalPasses ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P14_Delete_Statement]^^379^^^^^362^381^myPasses.removeAll ( optimalPasses ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P11_Insert_Donor_Statement]^myPasses.addAll ( mixedupPasses ) ;myPasses.removeAll ( optimalPasses ) ;^379^^^^^362^381^myPasses.removeAll ( optimalPasses ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P11_Insert_Donor_Statement]^myPasses.addAll ( optimalPasses ) ;myPasses.removeAll ( optimalPasses ) ;^379^^^^^362^381^myPasses.removeAll ( optimalPasses ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P7_Replace_Invocation]^myPasses.removeAll ( optimalPasses ) ;^380^^^^^362^381^myPasses.addAll ( optimalPasses ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P14_Delete_Statement]^^380^^^^^362^381^myPasses.addAll ( optimalPasses ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P11_Insert_Donor_Statement]^myPasses.addAll ( mixedupPasses ) ;myPasses.addAll ( optimalPasses ) ;^380^^^^^362^381^myPasses.addAll ( optimalPasses ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P11_Insert_Donor_Statement]^myPasses.removeAll ( optimalPasses ) ;myPasses.addAll ( optimalPasses ) ;^380^^^^^362^381^myPasses.addAll ( optimalPasses ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P11_Insert_Donor_Statement]^passes.add ( loop ) ;myPasses.addAll ( optimalPasses ) ;^380^^^^^362^381^myPasses.addAll ( optimalPasses ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P1_Replace_Type]^private final char name;^239^^^^^234^244^private final String name;^[CLASS] NamedPass  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[P8_Replace_Mix]^this.name =  null;^242^^^^^241^243^this.name = name;^[CLASS] NamedPass  [METHOD] <init> [RETURN_TYPE] String)   String name [VARIABLES] String  name  boolean  
[P14_Delete_Statement]^^246^247^^^^245^250^logger.info ( name ) ; startPass ( name ) ;^[CLASS] NamedPass  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] String  name  Node  externs  root  boolean  
[P11_Insert_Donor_Statement]^startPass ( name ) ;logger.info ( name ) ;^246^^^^^245^250^logger.info ( name ) ;^[CLASS] NamedPass  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] String  name  Node  externs  root  boolean  
[P14_Delete_Statement]^^247^^^^^245^250^startPass ( name ) ;^[CLASS] NamedPass  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] String  name  Node  externs  root  boolean  
[P11_Insert_Donor_Statement]^logger.info ( name ) ;startPass ( name ) ;^247^^^^^245^250^startPass ( name ) ;^[CLASS] NamedPass  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] String  name  Node  externs  root  boolean  
[P5_Replace_Variable]^processInternal (  root ) ;^248^^^^^245^250^processInternal ( externs, root ) ;^[CLASS] NamedPass  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] String  name  Node  externs  root  boolean  
[P5_Replace_Variable]^processInternal ( externs ) ;^248^^^^^245^250^processInternal ( externs, root ) ;^[CLASS] NamedPass  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] String  name  Node  externs  root  boolean  
[P5_Replace_Variable]^processInternal ( root, externs ) ;^248^^^^^245^250^processInternal ( externs, root ) ;^[CLASS] NamedPass  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] String  name  Node  externs  root  boolean  
[P7_Replace_Invocation]^process ( externs, root ) ;^248^^^^^245^250^processInternal ( externs, root ) ;^[CLASS] NamedPass  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] String  name  Node  externs  root  boolean  
[P14_Delete_Statement]^^248^249^^^^245^250^processInternal ( externs, root ) ; endPass ( externs, root ) ;^[CLASS] NamedPass  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] String  name  Node  externs  root  boolean  
[P11_Insert_Donor_Statement]^endPass ( externs, root ) ;processInternal ( externs, root ) ;^248^^^^^245^250^processInternal ( externs, root ) ;^[CLASS] NamedPass  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] String  name  Node  externs  root  boolean  
[P5_Replace_Variable]^endPass (  root ) ;^249^^^^^245^250^endPass ( externs, root ) ;^[CLASS] NamedPass  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] String  name  Node  externs  root  boolean  
[P5_Replace_Variable]^endPass ( externs ) ;^249^^^^^245^250^endPass ( externs, root ) ;^[CLASS] NamedPass  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] String  name  Node  externs  root  boolean  
[P5_Replace_Variable]^endPass ( root, externs ) ;^249^^^^^245^250^endPass ( externs, root ) ;^[CLASS] NamedPass  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] String  name  Node  externs  root  boolean  
[P14_Delete_Statement]^^249^^^^^245^250^endPass ( externs, root ) ;^[CLASS] NamedPass  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] String  name  Node  externs  root  boolean  
[P11_Insert_Donor_Statement]^processInternal ( externs, root ) ;endPass ( externs, root ) ;^249^^^^^245^250^endPass ( externs, root ) ;^[CLASS] NamedPass  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] String  name  Node  externs  root  boolean  
[P8_Replace_Mix]^private  AbstractCompiler myCompiler;^259^^^^^254^264^private final AbstractCompiler myCompiler;^[CLASS] PassFactoryDelegate  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] String  name  Node  externs  root  boolean  
[P7_Replace_Invocation]^super ( factory.create (  )  ) ;^264^^^^^262^267^super ( factory.getName (  )  ) ;^[CLASS] PassFactoryDelegate  [METHOD] <init> [RETURN_TYPE] PassFactory)   AbstractCompiler myCompiler PassFactory factory [VARIABLES] PassFactory  factory  AbstractCompiler  myCompiler  boolean  
[P7_Replace_Invocation]^super ( factory .create ( myCompiler )   ) ;^264^^^^^262^267^super ( factory.getName (  )  ) ;^[CLASS] PassFactoryDelegate  [METHOD] <init> [RETURN_TYPE] PassFactory)   AbstractCompiler myCompiler PassFactory factory [VARIABLES] PassFactory  factory  AbstractCompiler  myCompiler  boolean  
[P14_Delete_Statement]^^264^^^^^262^267^super ( factory.getName (  )  ) ;^[CLASS] PassFactoryDelegate  [METHOD] <init> [RETURN_TYPE] PassFactory)   AbstractCompiler myCompiler PassFactory factory [VARIABLES] PassFactory  factory  AbstractCompiler  myCompiler  boolean  
[P14_Delete_Statement]^^264^265^^^^262^267^super ( factory.getName (  )  ) ; this.myCompiler = myCompiler;^[CLASS] PassFactoryDelegate  [METHOD] <init> [RETURN_TYPE] PassFactory)   AbstractCompiler myCompiler PassFactory factory [VARIABLES] PassFactory  factory  AbstractCompiler  myCompiler  boolean  
[P8_Replace_Mix]^this.myCompiler =  null;^265^^^^^262^267^this.myCompiler = myCompiler;^[CLASS] PassFactoryDelegate  [METHOD] <init> [RETURN_TYPE] PassFactory)   AbstractCompiler myCompiler PassFactory factory [VARIABLES] PassFactory  factory  AbstractCompiler  myCompiler  boolean  
[P8_Replace_Mix]^this.factory =  null;^266^^^^^262^267^this.factory = factory;^[CLASS] PassFactoryDelegate  [METHOD] <init> [RETURN_TYPE] PassFactory)   AbstractCompiler myCompiler PassFactory factory [VARIABLES] PassFactory  factory  AbstractCompiler  myCompiler  boolean  
[P5_Replace_Variable]^factory.create ( myCompiler ) .process ( root, root ) ;^271^^^^^270^272^factory.create ( myCompiler ) .process ( externs, root ) ;^[CLASS] PassFactoryDelegate  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  myCompiler  boolean  PassFactory  factory  Node  externs  root  
[P5_Replace_Variable]^factory.create ( myCompiler ) .process (  root ) ;^271^^^^^270^272^factory.create ( myCompiler ) .process ( externs, root ) ;^[CLASS] PassFactoryDelegate  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  myCompiler  boolean  PassFactory  factory  Node  externs  root  
[P5_Replace_Variable]^factory.create ( myCompiler ) .process ( externs ) ;^271^^^^^270^272^factory.create ( myCompiler ) .process ( externs, root ) ;^[CLASS] PassFactoryDelegate  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  myCompiler  boolean  PassFactory  factory  Node  externs  root  
[P5_Replace_Variable]^factory.create ( myCompiler ) .process ( root, externs ) ;^271^^^^^270^272^factory.create ( myCompiler ) .process ( externs, root ) ;^[CLASS] PassFactoryDelegate  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  myCompiler  boolean  PassFactory  factory  Node  externs  root  
[P5_Replace_Variable]^factory.create ( root ) .process ( externs, myCompiler ) ;^271^^^^^270^272^factory.create ( myCompiler ) .process ( externs, root ) ;^[CLASS] PassFactoryDelegate  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  myCompiler  boolean  PassFactory  factory  Node  externs  root  
[P5_Replace_Variable]^factory.create ( externs ) .process ( myCompiler, root ) ;^271^^^^^270^272^factory.create ( myCompiler ) .process ( externs, root ) ;^[CLASS] PassFactoryDelegate  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  myCompiler  boolean  PassFactory  factory  Node  externs  root  
[P7_Replace_Invocation]^factory .getName (  )  .process ( externs, root ) ;^271^^^^^270^272^factory.create ( myCompiler ) .process ( externs, root ) ;^[CLASS] PassFactoryDelegate  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  myCompiler  boolean  PassFactory  factory  Node  externs  root  
[P8_Replace_Mix]^factory.create ( myCompiler ) .process ( externs, externs ) ;^271^^^^^270^272^factory.create ( myCompiler ) .process ( externs, root ) ;^[CLASS] PassFactoryDelegate  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  myCompiler  boolean  PassFactory  factory  Node  externs  root  
[P14_Delete_Statement]^^271^^^^^270^272^factory.create ( myCompiler ) .process ( externs, root ) ;^[CLASS] PassFactoryDelegate  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  myCompiler  boolean  PassFactory  factory  Node  externs  root  
[P8_Replace_Mix]^private final List<NamedPass> myPasses  = null ;^289^^^^^284^294^private final List<NamedPass> myPasses = Lists.newArrayList (  ) ;^[CLASS] LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] boolean  PassFactory  factory  
[P8_Replace_Mix]^private  Set<String> myNames = Sets.newHashSet (  ) ;^290^^^^^285^295^private final Set<String> myNames = Sets.newHashSet (  ) ;^[CLASS] LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] boolean  PassFactory  factory  
[P1_Replace_Type]^char name = factory.getName (  ) ;^294^^^^^293^300^String name = factory.getName (  ) ;^[CLASS] LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] List  myPasses  Set  myNames  String  name  boolean  PassFactory  factory  
[P14_Delete_Statement]^^294^^^^^293^300^String name = factory.getName (  ) ;^[CLASS] LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] List  myPasses  Set  myNames  String  name  boolean  PassFactory  factory  
[P11_Insert_Donor_Statement]^myNames.add ( factory.getName (  )  ) ;String name = factory.getName (  ) ;^294^^^^^293^300^String name = factory.getName (  ) ;^[CLASS] LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] List  myPasses  Set  myNames  String  name  boolean  PassFactory  factory  
[P2_Replace_Operator]^Preconditions.checkArgument ( !myNames.contains ( name ) , "Already a pass with name '"  >  name  >  "' in this loop" ) ;^295^296^297^^^293^300^Preconditions.checkArgument ( !myNames.contains ( name ) , "Already a pass with name '" + name + "' in this loop" ) ;^[CLASS] LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] List  myPasses  Set  myNames  String  name  boolean  PassFactory  factory  
[P2_Replace_Operator]^Preconditions.checkArgument ( !myNames.contains ( name ) , "Already a pass with name '"   instanceof   name + "' in this loop" ) ;^295^296^297^^^293^300^Preconditions.checkArgument ( !myNames.contains ( name ) , "Already a pass with name '" + name + "' in this loop" ) ;^[CLASS] LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] List  myPasses  Set  myNames  String  name  boolean  PassFactory  factory  
[P3_Replace_Literal]^Preconditions.checkArgument ( !myNames.contains ( name ) , "eady already a pass with name '" + name + "' in this loop" ) ;^295^296^297^^^293^300^Preconditions.checkArgument ( !myNames.contains ( name ) , "Already a pass with name '" + name + "' in this loop" ) ;^[CLASS] LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] List  myPasses  Set  myNames  String  name  boolean  PassFactory  factory  
[P3_Replace_Literal]^Preconditions.checkArgument ( !myNames.contains ( name ) , "Already a pass with name '" + name + "l in this loop" ) ;^295^296^297^^^293^300^Preconditions.checkArgument ( !myNames.contains ( name ) , "Already a pass with name '" + name + "' in this loop" ) ;^[CLASS] LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] List  myPasses  Set  myNames  String  name  boolean  PassFactory  factory  
[P7_Replace_Invocation]^Preconditions.checkArgument ( !myNames.add ( name ) , "Already a pass with name '" + name + "' in this loop" ) ;^295^296^297^^^293^300^Preconditions.checkArgument ( !myNames.contains ( name ) , "Already a pass with name '" + name + "' in this loop" ) ;^[CLASS] LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] List  myPasses  Set  myNames  String  name  boolean  PassFactory  factory  
[P14_Delete_Statement]^^295^296^297^^^293^300^Preconditions.checkArgument ( !myNames.contains ( name ) , "Already a pass with name '" + name + "' in this loop" ) ;^[CLASS] LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] List  myPasses  Set  myNames  String  name  boolean  PassFactory  factory  
[P7_Replace_Invocation]^!myNames.add ( name ) , "Already a pass with name '" + name + "' in this loop" ) ;^296^297^^^^293^300^!myNames.contains ( name ) , "Already a pass with name '" + name + "' in this loop" ) ;^[CLASS] LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] List  myPasses  Set  myNames  String  name  boolean  PassFactory  factory  
[P14_Delete_Statement]^^296^297^^^^293^300^!myNames.contains ( name ) , "Already a pass with name '" + name + "' in this loop" ) ;^[CLASS] LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] List  myPasses  Set  myNames  String  name  boolean  PassFactory  factory  
[P7_Replace_Invocation]^myNames.contains ( factory.getName (  )  ) ;^298^^^^^293^300^myNames.add ( factory.getName (  )  ) ;^[CLASS] LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] List  myPasses  Set  myNames  String  name  boolean  PassFactory  factory  
[P14_Delete_Statement]^^298^^^^^293^300^myNames.add ( factory.getName (  )  ) ;^[CLASS] LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] List  myPasses  Set  myNames  String  name  boolean  PassFactory  factory  
[P11_Insert_Donor_Statement]^String name = factory.getName (  ) ;myNames.add ( factory.getName (  )  ) ;^298^^^^^293^300^myNames.add ( factory.getName (  )  ) ;^[CLASS] LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] List  myPasses  Set  myNames  String  name  boolean  PassFactory  factory  
[P5_Replace_Variable]^myPasses.add ( new PassFactoryDelegate ( compiler )  ) ;^299^^^^^293^300^myPasses.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] List  myPasses  Set  myNames  String  name  boolean  PassFactory  factory  
[P5_Replace_Variable]^myPasses.add ( new PassFactoryDelegate (  factory )  ) ;^299^^^^^293^300^myPasses.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] List  myPasses  Set  myNames  String  name  boolean  PassFactory  factory  
[P5_Replace_Variable]^myPasses.add ( new PassFactoryDelegate ( factory, compiler )  ) ;^299^^^^^293^300^myPasses.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] List  myPasses  Set  myNames  String  name  boolean  PassFactory  factory  
[P7_Replace_Invocation]^myPasses.remove ( new PassFactoryDelegate ( compiler, factory )  ) ;^299^^^^^293^300^myPasses.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] List  myPasses  Set  myNames  String  name  boolean  PassFactory  factory  
[P14_Delete_Statement]^^299^^^^^293^300^myPasses.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] List  myPasses  Set  myNames  String  name  boolean  PassFactory  factory  
[P11_Insert_Donor_Statement]^List<NamedPass> mixedupPasses = Lists.newArrayList (  ) ;List<String> order = Lists.newArrayList (  ) ;^306^^^^^305^311^List<String> order = Lists.newArrayList (  ) ;^[CLASS] LoopInternal  [METHOD] getPassOrder [RETURN_TYPE] List   [VARIABLES] NamedPass  pass  List  myPasses  order  Set  myNames  boolean  
[P11_Insert_Donor_Statement]^List<NamedPass> optimalPasses = Lists.newArrayList (  ) ;List<String> order = Lists.newArrayList (  ) ;^306^^^^^305^311^List<String> order = Lists.newArrayList (  ) ;^[CLASS] LoopInternal  [METHOD] getPassOrder [RETURN_TYPE] List   [VARIABLES] NamedPass  pass  List  myPasses  order  Set  myNames  boolean  
[P14_Delete_Statement]^^306^^^^^305^311^List<String> order = Lists.newArrayList (  ) ;^[CLASS] LoopInternal  [METHOD] getPassOrder [RETURN_TYPE] List   [VARIABLES] NamedPass  pass  List  myPasses  order  Set  myNames  boolean  
[P14_Delete_Statement]^^308^^^^^305^311^order.add ( pass.name ) ;^[CLASS] LoopInternal  [METHOD] getPassOrder [RETURN_TYPE] List   [VARIABLES] NamedPass  pass  List  myPasses  order  Set  myNames  boolean  
[P3_Replace_Literal]^Preconditions.checkState ( !loopMutex, "e ested loops are forbidden" ) ;^314^^^^^299^329^Preconditions.checkState ( !loopMutex, "Nested loops are forbidden" ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P3_Replace_Literal]^loopMutex = false;^315^^^^^300^330^loopMutex = true;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P11_Insert_Donor_Statement]^loopMutex = false;loopMutex = true;^315^^^^^300^330^loopMutex = true;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P15_Unwrap_Block]^randomizePasses();^316^317^318^319^320^301^331^if  ( randomizeLoops )  { randomizePasses (  ) ; } else { optimizePasses (  ) ; }^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P16_Remove_Block]^^316^317^318^319^320^301^331^if  ( randomizeLoops )  { randomizePasses (  ) ; } else { optimizePasses (  ) ; }^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P13_Insert_Block]^if  ( randomizeLoops )  {     add ( getPassOrder (  )  ) ; }^316^^^^^301^331^[Delete]^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P7_Replace_Invocation]^randomizePasses (  ) ;^319^^^^^316^320^optimizePasses (  ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P14_Delete_Statement]^^319^^^^^316^320^optimizePasses (  ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P11_Insert_Donor_Statement]^randomizePasses (  ) ;optimizePasses (  ) ;^319^^^^^316^320^optimizePasses (  ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P11_Insert_Donor_Statement]^optimalPasses.add ( pass ) ;optimizePasses (  ) ;^319^^^^^316^320^optimizePasses (  ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P7_Replace_Invocation]^optimizePasses (  ) ;^317^^^^^302^332^randomizePasses (  ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P14_Delete_Statement]^^317^^^^^302^332^randomizePasses (  ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P11_Insert_Donor_Statement]^optimizePasses (  ) ;randomizePasses (  ) ;^317^^^^^302^332^randomizePasses (  ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P7_Replace_Invocation]^randomizePasses (  ) ;^319^^^^^304^334^optimizePasses (  ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P14_Delete_Statement]^^319^^^^^304^334^optimizePasses (  ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P11_Insert_Donor_Statement]^randomizePasses (  ) ;optimizePasses (  ) ;^319^^^^^304^334^optimizePasses (  ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P11_Insert_Donor_Statement]^optimalPasses.add ( pass ) ;optimizePasses (  ) ;^319^^^^^304^334^optimizePasses (  ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P2_Replace_Operator]^if  ( count++ >= MAX_LOOPS )  {^327^^^^^312^342^if  ( count++ > MAX_LOOPS )  {^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P8_Replace_Mix]^if  ( count++ > count )  {^327^^^^^312^342^if  ( count++ > MAX_LOOPS )  {^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P15_Unwrap_Block]^compiler.throwInternalError(com.google.javascript.jscomp.PhaseOptimizer.OPTIMIZE_LOOP_ERROR, null);^327^328^329^^^312^342^if  ( count++ > MAX_LOOPS )  { compiler.throwInternalError ( OPTIMIZE_LOOP_ERROR, null ) ; }^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P16_Remove_Block]^^327^328^329^^^312^342^if  ( count++ > MAX_LOOPS )  { compiler.throwInternalError ( OPTIMIZE_LOOP_ERROR, null ) ; }^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P13_Insert_Block]^if  ( randomizeLoops )  {     add ( getPassOrder (  )  ) ; }^327^^^^^312^342^[Delete]^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P5_Replace_Variable]^compiler.throwInternalError (  null ) ;^328^^^^^313^343^compiler.throwInternalError ( OPTIMIZE_LOOP_ERROR, null ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P14_Delete_Statement]^^328^^^^^313^343^compiler.throwInternalError ( OPTIMIZE_LOOP_ERROR, null ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P13_Insert_Block]^if  (  ( count++ )  >  ( MAX_LOOPS )  )  {     compiler.throwInternalError ( OPTIMIZE_LOOP_ERROR, null ) ; }^328^^^^^313^343^[Delete]^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P15_Unwrap_Block]^break out;^335^336^337^^^320^350^if  ( hasHaltingErrors (  )  )  { break out; }^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P16_Remove_Block]^^335^336^337^^^320^350^if  ( hasHaltingErrors (  )  )  { break out; }^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P15_Unwrap_Block]^com.google.javascript.jscomp.PhaseOptimizer.loopsRun.add(getPassOrder());^342^343^344^^^327^357^if  ( randomizeLoops )  { loopsRun.add ( getPassOrder (  )  ) ; }^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P16_Remove_Block]^^342^343^344^^^327^357^if  ( randomizeLoops )  { loopsRun.add ( getPassOrder (  )  ) ; }^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P13_Insert_Block]^if  (  ( count++ )  >  ( MAX_LOOPS )  )  {     compiler.throwInternalError ( OPTIMIZE_LOOP_ERROR, null ) ; }^342^^^^^327^357^[Delete]^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P13_Insert_Block]^if  ( randomizeLoops )  {     randomizePasses (  ) ; }else {     optimizePasses (  ) ; }^342^^^^^327^357^[Delete]^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P7_Replace_Invocation]^loopsRun.size ( getPassOrder (  )  ) ;^343^^^^^328^358^loopsRun.add ( getPassOrder (  )  ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P7_Replace_Invocation]^loopsRun.add ( optimizePasses (  )  ) ;^343^^^^^328^358^loopsRun.add ( getPassOrder (  )  ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P14_Delete_Statement]^^343^^^^^328^358^loopsRun.add ( getPassOrder (  )  ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P2_Replace_Operator]^if  ( count++ < MAX_LOOPS )  {^327^^^^^312^342^if  ( count++ > MAX_LOOPS )  {^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P1_Replace_Type]^long  count = 0;^325^^^^^310^340^int count = 0;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P3_Replace_Literal]^int count = ;^325^^^^^310^340^int count = 0;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P7_Replace_Invocation]^} while  ( recentChange.reset (  )  && !hasHaltingErrors (  )  ) ;^340^^^^^325^355^} while  ( recentChange.hasCodeChanged (  )  && !hasHaltingErrors (  )  ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P14_Delete_Statement]^^340^^^^^325^355^} while  ( recentChange.hasCodeChanged (  )  && !hasHaltingErrors (  )  ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P7_Replace_Invocation]^recentChange.hasCodeChanged (  ) ;^331^^^^^316^346^recentChange.reset (  ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P14_Delete_Statement]^^331^^^^^316^346^recentChange.reset (  ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P5_Replace_Variable]^pass.process ( root, root ) ;^334^^^^^319^349^pass.process ( externs, root ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P5_Replace_Variable]^pass.process (  root ) ;^334^^^^^319^349^pass.process ( externs, root ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P5_Replace_Variable]^pass.process ( externs ) ;^334^^^^^319^349^pass.process ( externs, root ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P5_Replace_Variable]^pass.process ( root, externs ) ;^334^^^^^319^349^pass.process ( externs, root ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P14_Delete_Statement]^^334^^^^^319^349^pass.process ( externs, root ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P3_Replace_Literal]^loopMutex = true;^346^^^^^331^361^loopMutex = false;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P11_Insert_Donor_Statement]^loopMutex = true;loopMutex = false;^346^^^^^331^361^loopMutex = false;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P1_Replace_Type]^short  count = 0;^325^^^^^310^340^int count = 0;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P3_Replace_Literal]^int count = count;^325^^^^^310^340^int count = 0;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P8_Replace_Mix]^pass.process ( externs, externs ) ;^334^^^^^319^349^pass.process ( externs, root ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[P11_Insert_Donor_Statement]^List<String> order = Lists.newArrayList (  ) ;List<NamedPass> mixedupPasses = Lists.newArrayList (  ) ;^352^^^^^351^359^List<NamedPass> mixedupPasses = Lists.newArrayList (  ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P11_Insert_Donor_Statement]^List<NamedPass> optimalPasses = Lists.newArrayList (  ) ;List<NamedPass> mixedupPasses = Lists.newArrayList (  ) ;^352^^^^^351^359^List<NamedPass> mixedupPasses = Lists.newArrayList (  ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P14_Delete_Statement]^^352^^^^^351^359^List<NamedPass> mixedupPasses = Lists.newArrayList (  ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P2_Replace_Operator]^while  ( myPasses.size (  )  >= 0 )  {^354^^^^^351^359^while  ( myPasses.size (  )  > 0 )  {^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P3_Replace_Literal]^while  ( myPasses.size (  )  > 6 )  {^354^^^^^351^359^while  ( myPasses.size (  )  > 0 )  {^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P3_Replace_Literal]^while  ( myPasses.size() - 2  > 0 )  {^354^^^^^351^359^while  ( myPasses.size (  )  > 0 )  {^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P3_Replace_Literal]^mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size() - 6  )  )  ) ;^355^356^^^^351^359^mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P7_Replace_Invocation]^mixedupPasses.add ( myPasses.add ( random.nextInt ( myPasses.size (  )  )  )  ) ;^355^356^^^^351^359^mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P14_Delete_Statement]^^355^356^^^^351^359^mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P11_Insert_Donor_Statement]^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^355^356^^^^351^359^mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P3_Replace_Literal]^myPasses.remove ( random.nextInt ( myPasses.size() + 9  )  )  ) ;^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P5_Replace_Variable]^myPasses.remove ( random.nextInt ( this.size (  )  )  )  ) ;^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P5_Replace_Variable]^myPasses.remove ( myPasses.nextInt ( random.size (  )  )  )  ) ;^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P7_Replace_Invocation]^myPasses.add ( random.nextInt ( myPasses.size (  )  )  )  ) ;^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P14_Delete_Statement]^^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P11_Insert_Donor_Statement]^mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P3_Replace_Literal]^myPasses.remove ( random.nextInt ( myPasses.size() + 3  )  )  ) ;^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P3_Replace_Literal]^myPasses.remove ( random.nextInt ( myPasses.size() + 7  )  )  ) ;^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P14_Delete_Statement]^^354^355^356^^^351^359^while  ( myPasses.size (  )  > 0 )  { mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P5_Replace_Variable]^mixedupPasses.add ( random.remove ( myPasses.nextInt ( myPasses.size (  )  )  )  ) ;^355^356^^^^351^359^mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P7_Replace_Invocation]^mixedupPasses .contains ( this )   )  ) ;^355^356^^^^351^359^mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P7_Replace_Invocation]^mixedupPasses.add ( myPasses .removeAll ( 4 )   )  ) ;^355^356^^^^351^359^mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P3_Replace_Literal]^myPasses.remove ( random.nextInt ( myPasses.size() - 8  )  )  ) ;^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P3_Replace_Literal]^myPasses.remove ( random.nextInt ( myPasses.size() + 5  )  )  ) ;^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P3_Replace_Literal]^myPasses.remove ( random.nextInt ( myPasses.size() - 1  )  )  ) ;^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P5_Replace_Variable]^myPasses.remove ( random.nextInt ( null.size (  )  )  )  ) ;^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P7_Replace_Invocation]^myPasses.removeAll ( mixedupPasses ) ;^358^^^^^351^359^myPasses.addAll ( mixedupPasses ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P14_Delete_Statement]^^358^^^^^351^359^myPasses.addAll ( mixedupPasses ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P11_Insert_Donor_Statement]^myPasses.removeAll ( optimalPasses ) ;myPasses.addAll ( mixedupPasses ) ;^358^^^^^351^359^myPasses.addAll ( mixedupPasses ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P11_Insert_Donor_Statement]^myPasses.addAll ( optimalPasses ) ;myPasses.addAll ( mixedupPasses ) ;^358^^^^^351^359^myPasses.addAll ( mixedupPasses ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[P11_Insert_Donor_Statement]^List<NamedPass> mixedupPasses = Lists.newArrayList (  ) ;List<NamedPass> optimalPasses = Lists.newArrayList (  ) ;^369^^^^^362^381^List<NamedPass> optimalPasses = Lists.newArrayList (  ) ;^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
[P11_Insert_Donor_Statement]^List<String> order = Lists.newArrayList (  ) ;List<NamedPass> optimalPasses = Lists.newArrayList (  ) ;^369^^^^^362^381^List<NamedPass> optimalPasses = Lists.newArrayList (  ) ;^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
[P14_Delete_Statement]^^369^^^^^362^381^List<NamedPass> optimalPasses = Lists.newArrayList (  ) ;^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
[P5_Replace_Variable]^if  ( pass.name.name.equals ( passName )  )  {^372^^^^^362^381^if  ( pass.name.equals ( passName )  )  {^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
[P5_Replace_Variable]^if  ( passName.equals ( pass.name )  )  {^372^^^^^362^381^if  ( pass.name.equals ( passName )  )  {^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
[P15_Unwrap_Block]^optimalPasses.add(pass); break;^372^373^374^375^^362^381^if  ( pass.name.equals ( passName )  )  { optimalPasses.add ( pass ) ; break; }^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
[P16_Remove_Block]^^372^373^374^375^^362^381^if  ( pass.name.equals ( passName )  )  { optimalPasses.add ( pass ) ; break; }^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
[P14_Delete_Statement]^^373^374^^^^362^381^optimalPasses.add ( pass ) ; break;^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
[P11_Insert_Donor_Statement]^optimizePasses (  ) ;optimalPasses.add ( pass ) ;^373^^^^^362^381^optimalPasses.add ( pass ) ;^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
[P1_Replace_Type]^for  ( char passName : OPTIMAL_ORDER )  {^370^^^^^362^381^for  ( String passName : OPTIMAL_ORDER )  {^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
[P5_Replace_Variable]^if  ( passName.name.equals ( pass )  )  {^372^^^^^362^381^if  ( pass.name.equals ( passName )  )  {^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
[P5_Replace_Variable]^if  ( pass.equals ( pass.nameName )  )  {^372^^^^^362^381^if  ( pass.name.equals ( passName )  )  {^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
[P7_Replace_Invocation]^myPasses.addAll ( optimalPasses ) ;^379^^^^^362^381^myPasses.removeAll ( optimalPasses ) ;^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
[P7_Replace_Invocation]^myPasses .remove ( 0 )  ;^379^^^^^362^381^myPasses.removeAll ( optimalPasses ) ;^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
[P8_Replace_Mix]^myPasses.removeAll ( null ) ;^379^^^^^362^381^myPasses.removeAll ( optimalPasses ) ;^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
[P14_Delete_Statement]^^379^^^^^362^381^myPasses.removeAll ( optimalPasses ) ;^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
[P11_Insert_Donor_Statement]^myPasses.addAll ( mixedupPasses ) ;myPasses.removeAll ( optimalPasses ) ;^379^^^^^362^381^myPasses.removeAll ( optimalPasses ) ;^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
[P11_Insert_Donor_Statement]^myPasses.addAll ( optimalPasses ) ;myPasses.removeAll ( optimalPasses ) ;^379^^^^^362^381^myPasses.removeAll ( optimalPasses ) ;^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
[P5_Replace_Variable]^myPasses.addAll ( null ) ;^380^^^^^362^381^myPasses.addAll ( optimalPasses ) ;^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
[P7_Replace_Invocation]^myPasses.removeAll ( optimalPasses ) ;^380^^^^^362^381^myPasses.addAll ( optimalPasses ) ;^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
[P14_Delete_Statement]^^380^^^^^362^381^myPasses.addAll ( optimalPasses ) ;^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
[P11_Insert_Donor_Statement]^myPasses.addAll ( mixedupPasses ) ;myPasses.addAll ( optimalPasses ) ;^380^^^^^362^381^myPasses.addAll ( optimalPasses ) ;^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
[P11_Insert_Donor_Statement]^myPasses.removeAll ( optimalPasses ) ;myPasses.addAll ( optimalPasses ) ;^380^^^^^362^381^myPasses.addAll ( optimalPasses ) ;^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
