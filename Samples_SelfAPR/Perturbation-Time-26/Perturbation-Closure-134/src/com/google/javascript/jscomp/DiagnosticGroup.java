[P8_Replace_Mix]^private static final Map<DiagnosticType, DiagnosticGroup> singletons ;^53^54^^^^53^54^private static final Map<DiagnosticType, DiagnosticGroup> singletons = Maps.newHashMap (  ) ;^[CLASS] DiagnosticGroup   [VARIABLES] 
[P8_Replace_Mix]^this.types =  ImmutableSet.copyOf ( Arrays.asList ( null )  ) ;^42^^^^^41^43^this.types = ImmutableSet.copyOf ( Arrays.asList ( types )  ) ;^[CLASS] DiagnosticGroup  [METHOD] <init> [RETURN_TYPE] DiagnosticType[])    types [VARIABLES] Set  types  boolean  Map  singletons  DiagnosticType[]  types  
[P11_Insert_Donor_Statement]^this.types = ImmutableSet.of ( type ) ;this.types = ImmutableSet.copyOf ( Arrays.asList ( types )  ) ;^42^^^^^41^43^this.types = ImmutableSet.copyOf ( Arrays.asList ( types )  ) ;^[CLASS] DiagnosticGroup  [METHOD] <init> [RETURN_TYPE] DiagnosticType[])    types [VARIABLES] Set  types  boolean  Map  singletons  DiagnosticType[]  types  
[P11_Insert_Donor_Statement]^this.types = ImmutableSet.copyOf ( set ) ;this.types = ImmutableSet.copyOf ( Arrays.asList ( types )  ) ;^42^^^^^41^43^this.types = ImmutableSet.copyOf ( Arrays.asList ( types )  ) ;^[CLASS] DiagnosticGroup  [METHOD] <init> [RETURN_TYPE] DiagnosticType[])    types [VARIABLES] Set  types  boolean  Map  singletons  DiagnosticType[]  types  
[P14_Delete_Statement]^^42^^^^^41^43^this.types = ImmutableSet.copyOf ( Arrays.asList ( types )  ) ;^[CLASS] DiagnosticGroup  [METHOD] <init> [RETURN_TYPE] DiagnosticType[])    types [VARIABLES] Set  types  boolean  Map  singletons  DiagnosticType[]  types  
[P7_Replace_Invocation]^this.types = ImmutableSet.copyOf ( type ) ;^49^^^^^48^50^this.types = ImmutableSet.of ( type ) ;^[CLASS] DiagnosticGroup  [METHOD] <init> [RETURN_TYPE] DiagnosticType)   DiagnosticType type [VARIABLES] Set  types  boolean  Map  singletons  DiagnosticType  type  
[P8_Replace_Mix]^this.types =  ImmutableSet.of ( null ) ;^49^^^^^48^50^this.types = ImmutableSet.of ( type ) ;^[CLASS] DiagnosticGroup  [METHOD] <init> [RETURN_TYPE] DiagnosticType)   DiagnosticType type [VARIABLES] Set  types  boolean  Map  singletons  DiagnosticType  type  
[P11_Insert_Donor_Statement]^this.types = ImmutableSet.copyOf ( Arrays.asList ( types )  ) ;this.types = ImmutableSet.of ( type ) ;^49^^^^^48^50^this.types = ImmutableSet.of ( type ) ;^[CLASS] DiagnosticGroup  [METHOD] <init> [RETURN_TYPE] DiagnosticType)   DiagnosticType type [VARIABLES] Set  types  boolean  Map  singletons  DiagnosticType  type  
[P11_Insert_Donor_Statement]^this.types = ImmutableSet.copyOf ( set ) ;this.types = ImmutableSet.of ( type ) ;^49^^^^^48^50^this.types = ImmutableSet.of ( type ) ;^[CLASS] DiagnosticGroup  [METHOD] <init> [RETURN_TYPE] DiagnosticType)   DiagnosticType type [VARIABLES] Set  types  boolean  Map  singletons  DiagnosticType  type  
[P14_Delete_Statement]^^49^^^^^48^50^this.types = ImmutableSet.of ( type ) ;^[CLASS] DiagnosticGroup  [METHOD] <init> [RETURN_TYPE] DiagnosticType)   DiagnosticType type [VARIABLES] Set  types  boolean  Map  singletons  DiagnosticType  type  
[P14_Delete_Statement]^^68^^^^^67^75^Set<DiagnosticType> set = Sets.newHashSet (  ) ;^[CLASS] DiagnosticGroup  [METHOD] <init> [RETURN_TYPE] DiagnosticGroup[])    groups [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticGroup  group  DiagnosticGroup[]  groups  
[P5_Replace_Variable]^set.addAll ( group.types.types ) ;^71^^^^^67^75^set.addAll ( group.types ) ;^[CLASS] DiagnosticGroup  [METHOD] <init> [RETURN_TYPE] DiagnosticGroup[])    groups [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticGroup  group  DiagnosticGroup[]  groups  
[P14_Delete_Statement]^^71^^^^^67^75^set.addAll ( group.types ) ;^[CLASS] DiagnosticGroup  [METHOD] <init> [RETURN_TYPE] DiagnosticGroup[])    groups [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticGroup  group  DiagnosticGroup[]  groups  
[P7_Replace_Invocation]^this.types = ImmutableSet.of ( set ) ;^74^^^^^67^75^this.types = ImmutableSet.copyOf ( set ) ;^[CLASS] DiagnosticGroup  [METHOD] <init> [RETURN_TYPE] DiagnosticGroup[])    groups [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticGroup  group  DiagnosticGroup[]  groups  
[P8_Replace_Mix]^this.types =  ImmutableSet.copyOf ( null ) ;^74^^^^^67^75^this.types = ImmutableSet.copyOf ( set ) ;^[CLASS] DiagnosticGroup  [METHOD] <init> [RETURN_TYPE] DiagnosticGroup[])    groups [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticGroup  group  DiagnosticGroup[]  groups  
[P11_Insert_Donor_Statement]^this.types = ImmutableSet.copyOf ( Arrays.asList ( types )  ) ;this.types = ImmutableSet.copyOf ( set ) ;^74^^^^^67^75^this.types = ImmutableSet.copyOf ( set ) ;^[CLASS] DiagnosticGroup  [METHOD] <init> [RETURN_TYPE] DiagnosticGroup[])    groups [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticGroup  group  DiagnosticGroup[]  groups  
[P11_Insert_Donor_Statement]^this.types = ImmutableSet.of ( type ) ;this.types = ImmutableSet.copyOf ( set ) ;^74^^^^^67^75^this.types = ImmutableSet.copyOf ( set ) ;^[CLASS] DiagnosticGroup  [METHOD] <init> [RETURN_TYPE] DiagnosticGroup[])    groups [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticGroup  group  DiagnosticGroup[]  groups  
[P14_Delete_Statement]^^74^^^^^67^75^this.types = ImmutableSet.copyOf ( set ) ;^[CLASS] DiagnosticGroup  [METHOD] <init> [RETURN_TYPE] DiagnosticGroup[])    groups [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticGroup  group  DiagnosticGroup[]  groups  
[P7_Replace_Invocation]^if  ( !singletons.get ( type )  )  {^58^^^^^57^62^if  ( !singletons.containsKey ( type )  )  {^[CLASS] DiagnosticGroup  [METHOD] forType [RETURN_TYPE] DiagnosticGroup   DiagnosticType type [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticType  type  
[P15_Unwrap_Block]^com.google.javascript.jscomp.DiagnosticGroup.singletons.put(type, new com.google.javascript.jscomp.DiagnosticGroup(type));^58^59^60^^^57^62^if  ( !singletons.containsKey ( type )  )  { singletons.put ( type, new DiagnosticGroup ( type )  ) ; }^[CLASS] DiagnosticGroup  [METHOD] forType [RETURN_TYPE] DiagnosticGroup   DiagnosticType type [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticType  type  
[P16_Remove_Block]^^58^59^60^^^57^62^if  ( !singletons.containsKey ( type )  )  { singletons.put ( type, new DiagnosticGroup ( type )  ) ; }^[CLASS] DiagnosticGroup  [METHOD] forType [RETURN_TYPE] DiagnosticGroup   DiagnosticType type [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticType  type  
[P5_Replace_Variable]^singletons.put (  new DiagnosticGroup ( type )  ) ;^59^^^^^57^62^singletons.put ( type, new DiagnosticGroup ( type )  ) ;^[CLASS] DiagnosticGroup  [METHOD] forType [RETURN_TYPE] DiagnosticGroup   DiagnosticType type [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticType  type  
[P14_Delete_Statement]^^59^^^^^57^62^singletons.put ( type, new DiagnosticGroup ( type )  ) ;^[CLASS] DiagnosticGroup  [METHOD] forType [RETURN_TYPE] DiagnosticGroup   DiagnosticType type [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticType  type  
[P13_Insert_Block]^if  ( ! ( containsKey ( type )  )  )  {     put ( type, new DiagnosticGroup ( type )  ) ; }^59^^^^^57^62^[Delete]^[CLASS] DiagnosticGroup  [METHOD] forType [RETURN_TYPE] DiagnosticGroup   DiagnosticType type [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticType  type  
[P5_Replace_Variable]^return type.get ( singletons ) ;^61^^^^^57^62^return singletons.get ( type ) ;^[CLASS] DiagnosticGroup  [METHOD] forType [RETURN_TYPE] DiagnosticGroup   DiagnosticType type [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticType  type  
[P7_Replace_Invocation]^return singletons.containsKey ( type ) ;^61^^^^^57^62^return singletons.get ( type ) ;^[CLASS] DiagnosticGroup  [METHOD] forType [RETURN_TYPE] DiagnosticGroup   DiagnosticType type [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticType  type  
[P8_Replace_Mix]^return 1.get ( type ) ;^61^^^^^57^62^return singletons.get ( type ) ;^[CLASS] DiagnosticGroup  [METHOD] forType [RETURN_TYPE] DiagnosticGroup   DiagnosticType type [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticType  type  
[P14_Delete_Statement]^^61^^^^^57^62^return singletons.get ( type ) ;^[CLASS] DiagnosticGroup  [METHOD] forType [RETURN_TYPE] DiagnosticGroup   DiagnosticType type [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticType  type  
[P14_Delete_Statement]^^82^^^^^81^83^return matches ( error.getType (  )  ) ;^[CLASS] DiagnosticGroup  [METHOD] matches [RETURN_TYPE] boolean   JSError error [VARIABLES] Set  set  types  boolean  Map  singletons  JSError  error  
[P5_Replace_Variable]^return null.contains ( type ) ;^89^^^^^88^90^return types.contains ( type ) ;^[CLASS] DiagnosticGroup  [METHOD] matches [RETURN_TYPE] boolean   DiagnosticType type [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticType  type  
[P5_Replace_Variable]^return typess.contains ( type ) ;^89^^^^^88^90^return types.contains ( type ) ;^[CLASS] DiagnosticGroup  [METHOD] matches [RETURN_TYPE] boolean   DiagnosticType type [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticType  type  
[P5_Replace_Variable]^return type.contains ( types ) ;^89^^^^^88^90^return types.contains ( type ) ;^[CLASS] DiagnosticGroup  [METHOD] matches [RETURN_TYPE] boolean   DiagnosticType type [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticType  type  
[P7_Replace_Invocation]^return types.addAll ( type ) ;^89^^^^^88^90^return types.contains ( type ) ;^[CLASS] DiagnosticGroup  [METHOD] matches [RETURN_TYPE] boolean   DiagnosticType type [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticType  type  
[P14_Delete_Statement]^^89^^^^^88^90^return types.contains ( type ) ;^[CLASS] DiagnosticGroup  [METHOD] matches [RETURN_TYPE] boolean   DiagnosticType type [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticType  type  
[P8_Replace_Mix]^if  ( matches ( type )  )  {^97^^^^^95^102^if  ( !matches ( type )  )  {^[CLASS] DiagnosticGroup  [METHOD] isSubGroup [RETURN_TYPE] boolean   DiagnosticGroup group [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticGroup  group  DiagnosticType  type  
[P15_Unwrap_Block]^return false;^97^98^99^^^95^102^if  ( !matches ( type )  )  { return false; }^[CLASS] DiagnosticGroup  [METHOD] isSubGroup [RETURN_TYPE] boolean   DiagnosticGroup group [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticGroup  group  DiagnosticType  type  
[P16_Remove_Block]^^97^98^99^^^95^102^if  ( !matches ( type )  )  { return false; }^[CLASS] DiagnosticGroup  [METHOD] isSubGroup [RETURN_TYPE] boolean   DiagnosticGroup group [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticGroup  group  DiagnosticType  type  
[P3_Replace_Literal]^return true;^98^^^^^95^102^return false;^[CLASS] DiagnosticGroup  [METHOD] isSubGroup [RETURN_TYPE] boolean   DiagnosticGroup group [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticGroup  group  DiagnosticType  type  
[P3_Replace_Literal]^return false;^101^^^^^95^102^return true;^[CLASS] DiagnosticGroup  [METHOD] isSubGroup [RETURN_TYPE] boolean   DiagnosticGroup group [VARIABLES] Set  set  types  boolean  Map  singletons  DiagnosticGroup  group  DiagnosticType  type  
