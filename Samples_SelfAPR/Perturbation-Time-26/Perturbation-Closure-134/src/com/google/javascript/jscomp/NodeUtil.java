[P3_Replace_Literal]^private static final Set<String> CONSTRUCTORS_WITHOUT_SIDE_EFFECTS = new HashSet<String> ( Arrays.asList ( "Ar", "Date",^49^50^51^52^^49^56^private static final Set<String> CONSTRUCTORS_WITHOUT_SIDE_EFFECTS = new HashSet<String> ( Arrays.asList ( "Array", "Date",^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [VARIABLES] 
[P3_Replace_Literal]^private static final Set<String> CONSTRUCTORS_WITHOUT_SIDE_EFFECTS = new HashSet<String> ( Arrays.asList ( "Array", "Datea",^49^50^51^52^^49^56^private static final Set<String> CONSTRUCTORS_WITHOUT_SIDE_EFFECTS = new HashSet<String> ( Arrays.asList ( "Array", "Date",^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [VARIABLES] 
[P8_Replace_Mix]^private static final Set<String> CONSTRUCTORS_WITHOUT_SIDE_EFFECTS ;^49^50^51^52^^49^56^private static final Set<String> CONSTRUCTORS_WITHOUT_SIDE_EFFECTS = new HashSet<String> ( Arrays.asList ( "Array", "Date",^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [VARIABLES] 
[P1_Replace_Type]^public static final char CONSTANT_MARKER = "$$constant";^58^^^^^53^63^public static final String CONSTANT_MARKER = "$$constant";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [VARIABLES] 
[P3_Replace_Literal]^public static final String CONSTANT_MARKER = "on";^58^^^^^53^63^public static final String CONSTANT_MARKER = "$$constant";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [VARIABLES] 
[P8_Replace_Mix]^public static final String CONSTANT_MARKER ;^58^^^^^53^63^public static final String CONSTANT_MARKER = "$$constant";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [VARIABLES] 
[P8_Replace_Mix]^final Map<String, Node> vars ;^1633^^^^^1628^1638^final Map<String, Node> vars = Maps.newLinkedHashMap (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [VARIABLES] 
[P1_Replace_Type]^final char name;^1731^^^^^1726^1736^final String name;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [VARIABLES] 
[P1_Replace_Type]^final  short  type;^1747^^^^^1742^1752^final int type;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [VARIABLES] 
[P8_Replace_Mix]^final  long  type;^1747^^^^^1742^1752^final int type;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType   [VARIABLES] 
[P5_Replace_Variable]^this.name = CONSTANT_MARKER;^1734^^^^^1733^1735^this.name = name;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] <init> [RETURN_TYPE] String)   String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  
[P11_Insert_Donor_Statement]^this.type = type;this.name = name;^1734^^^^^1733^1735^this.name = name;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] <init> [RETURN_TYPE] String)   String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  
[P8_Replace_Mix]^this.type =  null;^1750^^^^^1749^1751^this.type = type;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] <init> [RETURN_TYPE] NodeUtil$MatchNodeType(int)   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  
[P11_Insert_Donor_Statement]^this.name = name;this.type = type;^1750^^^^^1749^1751^this.type = type;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] <init> [RETURN_TYPE] NodeUtil$MatchNodeType(int)   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  
[P2_Replace_Operator]^if  ( "undefined".equals ( name ) && "NaN".equals ( name )  )  {^84^85^^^^69^99^if  ( "undefined".equals ( name ) || "NaN".equals ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^if  ( "undefined".equals ( name ) || "aN".equals ( name )  )  {^84^85^^^^69^99^if  ( "undefined".equals ( name ) || "NaN".equals ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P5_Replace_Variable]^if  ( "undefined".equals ( CONSTANT_MARKER ) || "NaN".equals ( name )  )  {^84^85^^^^69^99^if  ( "undefined".equals ( name ) || "NaN".equals ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P6_Replace_Expression]^if  ( "undefined".equals ( name ) ) {^84^85^^^^69^99^if  ( "undefined".equals ( name ) || "NaN".equals ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P6_Replace_Expression]^if  (  "NaN".equals ( name )  )  {^84^85^^^^69^99^if  ( "undefined".equals ( name ) || "NaN".equals ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^if  ( "undefined".substring ( name ) || "NaN".equals ( name )  )  {^84^85^^^^69^99^if  ( "undefined".equals ( name ) || "NaN".equals ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^} else if  ( "InfinityI".equals ( name )  )  {^89^^^^^74^104^} else if  ( "Infinity".equals ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P5_Replace_Variable]^} else if  ( "Infinity".equals ( CONSTANT_MARKER )  )  {^89^^^^^74^104^} else if  ( "Infinity".equals ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P6_Replace_Expression]^} else {^89^^^^^74^104^} else if  ( "Infinity".equals ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^} else if  ( "Infinity".substring ( name )  )  {^89^^^^^74^104^} else if  ( "Infinity".equals ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P15_Unwrap_Block]^return true;^89^90^91^^^74^104^} else if  ( "Infinity".equals ( name )  )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P16_Remove_Block]^^89^90^91^^^74^104^} else if  ( "Infinity".equals ( name )  )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P13_Insert_Block]^if  ( namespaceName.equals ( "Math" )  )  {     return false; }^89^^^^^74^104^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P13_Insert_Block]^if  ( pred.apply ( node )  )  {     return true; }^89^^^^^74^104^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P13_Insert_Block]^if  ( name.equals ( "String" )  )  {     return false; }^89^^^^^74^104^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P13_Insert_Block]^if  ( vars.isEmpty (  )  )  {     return ; }^89^^^^^74^104^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P13_Insert_Block]^if  ( callNode.isNoSideEffectsCall (  )  )  {     return false; }^89^^^^^74^104^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P13_Insert_Block]^if  ( n ==  ( parent.getFirstChild (  )  )  )  {     return true; }^89^^^^^74^104^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P13_Insert_Block]^if  ( checkForNewObjects )  {     return true; }^89^^^^^74^104^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^return false;^90^^^^^75^105^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^} else if  ( "".equals ( name )  )  {^89^^^^^74^104^} else if  ( "Infinity".equals ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^return true;^88^^^^^84^91^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^} else if  ( "Infinitynf".equals ( name )  )  {^89^^^^^74^104^} else if  ( "Infinity".equals ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getString (  ) .length (  )  >= 0;^72^^^^^57^87^return n.getString (  ) .length (  )  > 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^return n.getString (  ) .length (  )  > 4;^72^^^^^57^87^return n.getString (  ) .length (  )  > 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^return n.getString (  ) .length() - 6  > 0;^72^^^^^57^87^return n.getString (  ) .length (  )  > 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.getString (  ) .equals (  )  > 0;^72^^^^^57^87^return n.getString (  ) .length (  )  > 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  ) .length (  )  > 0;^72^^^^^57^87^return n.getString (  ) .length (  )  > 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getDouble (  )  > 0;^75^^^^^60^90^return n.getDouble (  )  != 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^return n.getDouble (  )  != -4;^75^^^^^60^90^return n.getDouble (  )  != 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  )  != 0;^75^^^^^60^90^return n.getDouble (  )  != 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^return true;^80^^^^^65^95^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^return true;^88^^^^^73^103^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^return false;^98^^^^^83^113^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P1_Replace_Type]^char name = n.getchar (  ) ;^83^^^^^68^98^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^String name = n.newNumber (  ) ;^83^^^^^68^98^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^String name = n .newString (  )  ;^83^^^^^68^98^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^double value = n.getDouble (  ) ;String name = n.getString (  ) ;^83^^^^^68^98^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^Node parent = n.getParent (  ) ;String name = n.getString (  ) ;^83^^^^^68^98^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^String name = n.getFirstChild (  ) .getString (  ) ;String name = n.getString (  ) ;^83^^^^^68^98^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^String qNameStr = qName.getQualifiedName (  ) ;String name = n.getString (  ) ;^83^^^^^68^98^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^String propName = last.getString (  ) ;String name = n.getString (  ) ;^83^^^^^68^98^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^String name = nameNode.getString (  ) ;String name = n.getString (  ) ;^83^^^^^68^98^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^String className = constructor.getString (  ) ;String name = n.getString (  ) ;^83^^^^^68^98^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^String lhsString = n.getQualifiedName (  ) ;String name = n.getString (  ) ;^83^^^^^68^98^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^switch  ( n.newNumber (  )  )  {^70^^^^^55^85^switch  ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^70^71^72^^^55^85^switch  ( n.getType (  )  )  { case Token.STRING: return n.getString (  ) .length (  )  > 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^return n.getString (  ) .length() + 1  > 0;^72^^^^^57^87^return n.getString (  ) .length (  )  > 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^72^^^^^57^87^return n.getString (  ) .length (  )  > 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^return n.getString (  ) .length() + 7  > 0;^72^^^^^57^87^return n.getString (  ) .length (  )  > 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P8_Replace_Mix]^return n .newString (  )  .length (  )  > 0;^72^^^^^57^87^return n.getString (  ) .length (  )  > 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^75^^^^^60^90^return n.getDouble (  )  != 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^83^^^^^68^98^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^return parent.getString (  ) ;String name = n.getString (  ) ;^83^^^^^68^98^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^return n.getString (  ) ;String name = n.getString (  ) ;^83^^^^^68^98^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^info = nameNode.getJSDocInfo (  ) ;String name = n.getString (  ) ;^83^^^^^68^98^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^n = n.getParent (  ) ;String name = n.getString (  ) ;^83^^^^^68^98^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^parent = nameNode.getParent (  ) ;String name = n.getString (  ) ;^83^^^^^68^98^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^if  ( "efine".equals ( name ) || "NaN".equals ( name )  )  {^84^85^^^^69^99^if  ( "undefined".equals ( name ) || "NaN".equals ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P8_Replace_Mix]^if  ( "undefined".substring ( CONSTANT_MARKER ) || "NaN".equals ( name )  )  {^84^85^^^^69^99^if  ( "undefined".equals ( name ) || "NaN".equals ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^|| "aaN".equals ( name )  )  {^85^^^^^70^100^|| "NaN".equals ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P5_Replace_Variable]^|| "NaN".equals ( CONSTANT_MARKER )  )  {^85^^^^^70^100^|| "NaN".equals ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^|| "NaN".substring ( name )  )  {^85^^^^^70^100^|| "NaN".equals ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^} else if  ( "I".equals ( name )  )  {^89^^^^^74^104^} else if  ( "Infinity".equals ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^} else if  ( "Infinity" .equals ( null )   )  {^89^^^^^74^104^} else if  ( "Infinity".equals ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( "malformed 'for' statement " + n )  )   ;^100^^^^^85^115^throw new IllegalArgumentException  (" ")  ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getBooleanValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^if  ( longValue != value )  {^121^^^^^109^136^if  ( longValue == value )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P5_Replace_Variable]^if  ( value == longValue )  {^121^^^^^109^136^if  ( longValue == value )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P9_Replace_Statement]^if  ( value != null )  {^121^^^^^109^136^if  ( longValue == value )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P15_Unwrap_Block]^return java.lang.Long.toString(longValue);^121^122^123^124^125^109^136^if  ( longValue == value )  { return Long.toString ( longValue ) ; } else { return Double.toString ( n.getDouble (  )  ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P16_Remove_Block]^^121^122^123^124^125^109^136^if  ( longValue == value )  { return Long.toString ( longValue ) ; } else { return Double.toString ( n.getDouble (  )  ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P7_Replace_Invocation]^return Double.toString ( n.newNumber (  )  ) ;^124^^^^^121^125^return Double.toString ( n.getDouble (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P8_Replace_Mix]^return Double.toString ( n .getType (  )   ) ;^124^^^^^121^125^return Double.toString ( n.getDouble (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P14_Delete_Statement]^^124^^^^^121^125^return Double.toString ( n.getDouble (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P14_Delete_Statement]^^122^^^^^109^136^return Long.toString ( longValue ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P7_Replace_Invocation]^return n.newNumber (  ) ;^114^^^^^109^136^return n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P7_Replace_Invocation]^return Double.toString ( n.newNumber (  )  ) ;^124^^^^^109^136^return Double.toString ( n.getDouble (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P8_Replace_Mix]^return Double.toString ( n .getType (  )   ) ;^124^^^^^109^136^return Double.toString ( n.getDouble (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P7_Replace_Invocation]^return Node.tokenToName ( n.newNumber (  )  ) ;^130^^^^^109^136^return Node.tokenToName ( n.getType (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P8_Replace_Mix]^return Node.tokenToName ( n .getString (  )   ) ;^130^^^^^109^136^return Node.tokenToName ( n.getType (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P3_Replace_Literal]^return "undefineddefi";^133^^^^^109^136^return "undefined";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P1_Replace_Type]^int value = n.getDouble (  ) ;^117^^^^^109^136^double value = n.getDouble (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P7_Replace_Invocation]^double value = n.newNumber (  ) ;^117^^^^^109^136^double value = n.getDouble (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P11_Insert_Donor_Statement]^Node parent = n.getParent (  ) ;double value = n.getDouble (  ) ;^117^^^^^109^136^double value = n.getDouble (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P11_Insert_Donor_Statement]^String name = n.getString (  ) ;double value = n.getDouble (  ) ;^117^^^^^109^136^double value = n.getDouble (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P1_Replace_Type]^short  longValue =  (  short  )  value;^118^^^^^109^136^long longValue =  ( long )  value;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P7_Replace_Invocation]^switch  ( n.newNumber (  )  )  {^111^^^^^109^136^switch  ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P7_Replace_Invocation]^switch  ( n .getString (  )   )  {^111^^^^^109^136^switch  ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P7_Replace_Invocation]^return n .newString (  )  ;^114^^^^^109^136^return n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P14_Delete_Statement]^^114^^^^^109^136^return n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P14_Delete_Statement]^^117^118^^^^109^136^double value = n.getDouble (  ) ; long longValue =  ( long )  value;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P11_Insert_Donor_Statement]^return Double.toString ( n.getDouble (  )  ) ;double value = n.getDouble (  ) ;^117^^^^^109^136^double value = n.getDouble (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P14_Delete_Statement]^^124^^^^^109^136^return Double.toString ( n.getDouble (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P7_Replace_Invocation]^return Node .getQualifiedName (  )  ;^130^^^^^109^136^return Node.tokenToName ( n.getType (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P14_Delete_Statement]^^130^^^^^109^136^return Node.tokenToName ( n.getType (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P8_Replace_Mix]^return this;^135^^^^^109^136^return null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getStringValue [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  boolean  double  value  Node  n  String  CONSTANT_MARKER  name  Map  vars  int  type  long  longValue  
[P1_Replace_Type]^char name = n.getFirstChild (  ) .getchar (  ) ;^155^^^^^154^171^String name = n.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^String name = n.getFirstChild (  ) .equals (  ) ;^155^^^^^154^171^String name = n.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^String name = n.getFirstChild (  )  .newString (  )  ;^155^^^^^154^171^String name = n.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^String name = n.newNumber (  ) .getString (  ) ;^155^^^^^154^171^String name = n.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^String name = n .getLastChild (  )  .getString (  ) ;^155^^^^^154^171^String name = n.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P8_Replace_Mix]^String parentame = n.getFirstChild (  ) .getString (  ) ;^155^^^^^154^171^String name = n.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P8_Replace_Mix]^String parentame = n.newNumber (  ) .getString (  ) ;^155^^^^^154^171^String name = n.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P14_Delete_Statement]^^155^^^^^154^171^String name = n.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^return parent.newNumber (  ) ;^160^^^^^154^171^return parent.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^return parent .newString (  )  ;^160^^^^^154^171^return parent.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^return parent.getFirstChild (  ) .equals (  ) ;^165^^^^^154^171^return parent.getFirstChild (  ) .getQualifiedName (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^return parent.newNumber (  ) .getQualifiedName (  ) ;^165^^^^^154^171^return parent.getFirstChild (  ) .getQualifiedName (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P2_Replace_Operator]^return name != null || name.length (  )  != 0 ? name : null;^169^^^^^154^171^return name != null && name.length (  )  != 0 ? name : null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P2_Replace_Operator]^return name == null && name.length (  )  != 0 ? name : null;^169^^^^^154^171^return name != null && name.length (  )  != 0 ? name : null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P2_Replace_Operator]^return name != null && name.length (  )  == 0 ? name : null;^169^^^^^154^171^return name != null && name.length (  )  != 0 ? name : null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P3_Replace_Literal]^return name != null && name.length (  )  != type ? name : null;^169^^^^^154^171^return name != null && name.length (  )  != 0 ? name : null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P3_Replace_Literal]^return name != null && name.length() + 0  != 0 ? name : null;^169^^^^^154^171^return name != null && name.length (  )  != 0 ? name : null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^return CONSTANT_MARKER != null && name.length (  )  != 0 ? name : null;^169^^^^^154^171^return name != null && name.length (  )  != 0 ? name : null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P6_Replace_Expression]^return name ! =  null;^169^^^^^154^171^return name != null && name.length (  )  != 0 ? name : null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P6_Replace_Expression]^return name ! =  name ;^169^^^^^154^171^return name != null && name.length (  )  != 0 ? name : null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^return name != null && name.charAt (  )  != 0 ? name : null;^169^^^^^154^171^return name != null && name.length (  )  != 0 ? name : null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^switch  ( n.getType (  )  )  {^156^^^^^154^171^switch  ( parent.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^switch  ( parent.newNumber (  )  )  {^156^^^^^154^171^switch  ( parent.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P8_Replace_Mix]^switch  ( n.newNumber (  )  )  {^156^^^^^154^171^switch  ( parent.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^return n.getString (  ) ;^160^^^^^154^171^return parent.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P14_Delete_Statement]^^160^^^^^154^171^return parent.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^return n.getFirstChild (  ) .getQualifiedName (  ) ;^165^^^^^154^171^return parent.getFirstChild (  ) .getQualifiedName (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^return parent .getLastChild (  )  .getQualifiedName (  ) ;^165^^^^^154^171^return parent.getFirstChild (  ) .getQualifiedName (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P8_Replace_Mix]^return parent.getFirstChild (  )  .getParent (  )  ;^165^^^^^154^171^return parent.getFirstChild (  ) .getQualifiedName (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P14_Delete_Statement]^^165^166^167^^169^154^171^return parent.getFirstChild (  ) .getQualifiedName (  ) ;  default: return name != null && name.length (  )  != 0 ? name : null; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P3_Replace_Literal]^return name != null && name.length() + 5  != 0 ? name : null;^169^^^^^154^171^return name != null && name.length (  )  != 0 ? name : null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^return name != null && name .getNext (  )   != 0 ? name : null;^169^^^^^154^171^return name != null && name.length (  )  != 0 ? name : null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P8_Replace_Mix]^return CONSTANT_MARKER != null && name.charAt (  )  != 0 ? name : null;^169^^^^^154^171^return name != null && name.length (  )  != 0 ? name : null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P14_Delete_Statement]^^169^^^^^154^171^return name != null && name.length (  )  != 0 ? name : null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionName [RETURN_TYPE] String   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  parent  
[P3_Replace_Literal]^return false;^184^^^^^176^197^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return isLiteralValue ( n.getFirstChild (  )  ) ;^186^^^^^176^197^return isImmutableValue ( n.getFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return isImmutableValue ( n.newNumber (  )  ) ;^186^^^^^176^197^return isImmutableValue ( n.getFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return "undefined".equals ( name ) && "Infinity".equals ( name ) || "NaN".equals ( name ) ;^191^192^193^^^176^197^return "undefined".equals ( name ) || "Infinity".equals ( name ) || "NaN".equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^return "undefinedd".equals ( name ) || "Infinity".equals ( name ) || "NaN".equals ( name ) ;^191^192^193^^^176^197^return "undefined".equals ( name ) || "Infinity".equals ( name ) || "NaN".equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^return "undefined".equals ( name ) || "In".equals ( name ) || "NaN".equals ( name ) ;^191^192^193^^^176^197^return "undefined".equals ( name ) || "Infinity".equals ( name ) || "NaN".equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P5_Replace_Variable]^return "undefined".equals ( CONSTANT_MARKER ) || "Infinity".equals ( name ) || "NaN".equals ( name ) ;^191^192^193^^^176^197^return "undefined".equals ( name ) || "Infinity".equals ( name ) || "NaN".equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return "undefined".substring ( name ) || "Infinity".equals ( name ) || "NaN".equals ( name ) ;^191^192^193^^^176^197^return "undefined".equals ( name ) || "Infinity".equals ( name ) || "NaN".equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P1_Replace_Type]^char name = n.getchar (  ) ;^188^^^^^176^197^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^String name = n.newNumber (  ) ;^188^^^^^176^197^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^String name = n .newString (  )  ;^188^^^^^176^197^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^double value = n.getDouble (  ) ;String name = n.getString (  ) ;^188^^^^^176^197^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^Node parent = n.getParent (  ) ;String name = n.getString (  ) ;^188^^^^^176^197^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^String name = n.getFirstChild (  ) .getString (  ) ;String name = n.getString (  ) ;^188^^^^^176^197^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^String qNameStr = qName.getQualifiedName (  ) ;String name = n.getString (  ) ;^188^^^^^176^197^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^String propName = last.getString (  ) ;String name = n.getString (  ) ;^188^^^^^176^197^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^String name = nameNode.getString (  ) ;String name = n.getString (  ) ;^188^^^^^176^197^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^String className = constructor.getString (  ) ;String name = n.getString (  ) ;^188^^^^^176^197^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^String lhsString = n.getQualifiedName (  ) ;String name = n.getString (  ) ;^188^^^^^176^197^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^switch  ( n.newNumber (  )  )  {^177^^^^^176^197^switch  ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^186^^^^^176^197^return isImmutableValue ( n.getFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^188^^^^^176^197^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^return parent.getString (  ) ;String name = n.getString (  ) ;^188^^^^^176^197^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^return n.getString (  ) ;String name = n.getString (  ) ;^188^^^^^176^197^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^info = nameNode.getJSDocInfo (  ) ;String name = n.getString (  ) ;^188^^^^^176^197^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^n = n.getParent (  ) ;String name = n.getString (  ) ;^188^^^^^176^197^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P11_Insert_Donor_Statement]^parent = nameNode.getParent (  ) ;String name = n.getString (  ) ;^188^^^^^176^197^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^return "ndefined".equals ( name ) || "Infinity".equals ( name ) || "NaN".equals ( name ) ;^191^192^193^^^176^197^return "undefined".equals ( name ) || "Infinity".equals ( name ) || "NaN".equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P8_Replace_Mix]^return "undefined".substring ( CONSTANT_MARKER ) || "Infinity".equals ( name ) || "NaN".equals ( name ) ;^191^192^193^^^176^197^return "undefined".equals ( name ) || "Infinity".equals ( name ) || "NaN".equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^191^192^193^^^176^197^return "undefined".equals ( name ) || "Infinity".equals ( name ) || "NaN".equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^|| "Infinfinity".equals ( name ) || "NaN".equals ( name ) ;^192^193^^^^176^197^|| "Infinity".equals ( name ) || "NaN".equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P5_Replace_Variable]^|| "Infinity".equals ( CONSTANT_MARKER ) || "NaN".equals ( name ) ;^192^193^^^^176^197^|| "Infinity".equals ( name ) || "NaN".equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^|| "Infinity".substring ( name ) || "NaN".equals ( name ) ;^192^193^^^^176^197^|| "Infinity".equals ( name ) || "NaN".equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^192^193^^^^176^197^|| "Infinity".equals ( name ) || "NaN".equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^|| "aN".equals ( name ) ;^193^^^^^176^197^|| "NaN".equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P5_Replace_Variable]^|| "NaN".equals ( CONSTANT_MARKER ) ;^193^^^^^176^197^|| "NaN".equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^|| "NaN".substring ( name ) ;^193^^^^^176^197^|| "NaN".equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P8_Replace_Mix]^|| "NaN".substring ( CONSTANT_MARKER ) ;^193^^^^^176^197^|| "NaN".equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^193^^^^^176^197^|| "NaN".equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^return true;^196^^^^^176^197^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isImmutableValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P5_Replace_Variable]^if  ( !isLiteralValue ( n )  )  {^214^^^^^205^223^if  ( !isLiteralValue ( child )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[P7_Replace_Invocation]^if  ( !isImmutableValue ( child )  )  {^214^^^^^205^223^if  ( !isLiteralValue ( child )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[P15_Unwrap_Block]^return false;^214^215^216^^^205^223^if  ( !isLiteralValue ( child )  )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[P16_Remove_Block]^^214^215^216^^^205^223^if  ( !isLiteralValue ( child )  )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[P3_Replace_Literal]^return true;^215^^^^^205^223^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[P2_Replace_Operator]^for  ( Node child = n.getFirstChild (  ) ; child == null;^212^^^^^205^223^for  ( Node child = n.getFirstChild (  ) ; child != null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[P5_Replace_Variable]^for  ( Node n = n.getFirstChild (  ) ; child != null;^212^^^^^205^223^for  ( Node child = n.getFirstChild (  ) ; child != null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[P5_Replace_Variable]^for  ( Node n = child.getFirstChild (  ) ; child != null;^212^^^^^205^223^for  ( Node child = n.getFirstChild (  ) ; child != null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[P7_Replace_Invocation]^for  ( Node child = n.newNumber (  ) ; child != null;^212^^^^^205^223^for  ( Node child = n.getFirstChild (  ) ; child != null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[P7_Replace_Invocation]^for  ( Node child = n .getLastChild (  )  ; child != null;^212^^^^^205^223^for  ( Node child = n.getFirstChild (  ) ; child != null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[P8_Replace_Mix]^if  ( !isImmutableValue ( n )  )  {^214^^^^^205^223^if  ( !isLiteralValue ( child )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[P5_Replace_Variable]^child = n.getNext (  )  )  {^213^^^^^205^223^child = child.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[P7_Replace_Invocation]^child = child.newNumber (  )  )  {^213^^^^^205^223^child = child.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[P3_Replace_Literal]^return false;^218^^^^^205^223^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[P5_Replace_Variable]^return isImmutableValue ( child ) ;^221^^^^^205^223^return isImmutableValue ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[P7_Replace_Invocation]^return isLiteralValue ( n ) ;^221^^^^^205^223^return isImmutableValue ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[P8_Replace_Mix]^return isLiteralValue ( child ) ;^221^^^^^205^223^return isImmutableValue ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[P12_Insert_Condition]^if  ( n == parent.getFirstChild (  )  )  { for  ( Node child = n.getFirstChild (  ) ; child != null; }^212^^^^^205^223^for  ( Node child = n.getFirstChild (  ) ; child != null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[P7_Replace_Invocation]^switch  ( n.newNumber (  )  )  {^207^^^^^205^223^switch  ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[P7_Replace_Invocation]^switch  ( n .getString (  )   )  {^207^^^^^205^223^switch  ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[P8_Replace_Mix]^switch  ( child.getType (  )  )  {^207^^^^^205^223^switch  ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[P5_Replace_Variable]^for  ( Node child = child.getFirstChild (  ) ; child != null;^212^^^^^205^223^for  ( Node child = n.getFirstChild (  ) ; child != null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[P14_Delete_Statement]^^212^213^214^215^216^205^223^for  ( Node child = n.getFirstChild (  ) ; child != null; child = child.getNext (  )  )  { if  ( !isLiteralValue ( child )  )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[P14_Delete_Statement]^^213^214^215^^^205^223^child = child.getNext (  )  )  { if  ( !isLiteralValue ( child )  )  { return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[P14_Delete_Statement]^^221^^^^^205^223^return isImmutableValue ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLiteralValue [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  n  
[P7_Replace_Invocation]^if  ( val.tokenToName (  )  )  {^251^^^^^231^256^if  ( val.isQualifiedName (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[P7_Replace_Invocation]^if  ( val .getQualifiedName (  )   )  {^251^^^^^231^256^if  ( val.isQualifiedName (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[P15_Unwrap_Block]^return defines.contains(val.getQualifiedName());^251^252^253^^^231^256^if  ( val.isQualifiedName (  )  )  { return defines.contains ( val.getQualifiedName (  )  ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[P16_Remove_Block]^^251^252^253^^^231^256^if  ( val.isQualifiedName (  )  )  { return defines.contains ( val.getQualifiedName (  )  ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[P5_Replace_Variable]^return val.contains ( defines.getQualifiedName (  )  ) ;^252^^^^^231^256^return defines.contains ( val.getQualifiedName (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[P7_Replace_Invocation]^return defines.contains ( val.tokenToName (  )  ) ;^252^^^^^231^256^return defines.contains ( val.getQualifiedName (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[P8_Replace_Mix]^return 3.contains ( val .getParent (  )   ) ;^252^^^^^231^256^return defines.contains ( val.getQualifiedName (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[P12_Insert_Condition]^if  ( val.isQualifiedName (  )  )  { return defines.contains ( val.getQualifiedName (  )  ) ; }^252^^^^^231^256^return defines.contains ( val.getQualifiedName (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[P13_Insert_Block]^if  ( val.isQualifiedName (  )  )  {     return defines.contains ( val.getQualifiedName (  )  ) ; }^252^^^^^231^256^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[P14_Delete_Statement]^^252^253^^^^231^256^return defines.contains ( val.getQualifiedName (  )  ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[P7_Replace_Invocation]^return defines.contains ( val .getParent (  )   ) ;^252^^^^^231^256^return defines.contains ( val.getQualifiedName (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[P3_Replace_Literal]^return false;^237^^^^^231^256^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[P5_Replace_Variable]^return isValidDefineValue ( val.getFirstChild (  )  ) ;^246^^^^^231^256^return isValidDefineValue ( val.getFirstChild (  ) , defines ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[P5_Replace_Variable]^return isValidDefineValue ( defines.getFirstChild (  ) , val ) ;^246^^^^^231^256^return isValidDefineValue ( val.getFirstChild (  ) , defines ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[P7_Replace_Invocation]^return canBeSideEffected ( val.getFirstChild (  ) , defines ) ;^246^^^^^231^256^return isValidDefineValue ( val.getFirstChild (  ) , defines ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[P7_Replace_Invocation]^return isValidDefineValue ( val.newNumber (  ) , defines ) ;^246^^^^^231^256^return isValidDefineValue ( val.getFirstChild (  ) , defines ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[P7_Replace_Invocation]^switch  ( val.newNumber (  )  )  {^232^^^^^231^256^switch  ( val.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[P7_Replace_Invocation]^switch  ( val .getString (  )   )  {^232^^^^^231^256^switch  ( val.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[P7_Replace_Invocation]^return isValidDefineValue ( val .getLastChild (  )  , defines ) ;^246^^^^^231^256^return isValidDefineValue ( val.getFirstChild (  ) , defines ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[P14_Delete_Statement]^^246^^^^^231^256^return isValidDefineValue ( val.getFirstChild (  ) , defines ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[P3_Replace_Literal]^return true;^255^^^^^231^256^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidDefineValue [RETURN_TYPE] boolean   Node val String> defines [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  val  
[P2_Replace_Operator]^if  ( block.getType (  )  == Token.BLOCK )  {^264^^^^^263^274^if  ( block.getType (  )  != Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P5_Replace_Variable]^if  ( n.getType (  )  != Token.BLOCK )  {^264^^^^^263^274^if  ( block.getType (  )  != Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P7_Replace_Invocation]^if  ( block.newNumber (  )  != Token.BLOCK )  {^264^^^^^263^274^if  ( block.getType (  )  != Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P9_Replace_Statement]^if  ( n.getType (  )  == Token.NAME )  {^264^^^^^263^274^if  ( block.getType (  )  != Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P9_Replace_Statement]^if  ( nameNode.getType (  )  == Token.NAME )  {^264^^^^^263^274^if  ( block.getType (  )  != Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P9_Replace_Statement]^if  ( n.getType (  )  != Token.EMPTY )  {^264^^^^^263^274^if  ( block.getType (  )  != Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P15_Unwrap_Block]^return false;^264^265^266^^^263^274^if  ( block.getType (  )  != Token.BLOCK )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P16_Remove_Block]^^264^265^266^^^263^274^if  ( block.getType (  )  != Token.BLOCK )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P13_Insert_Block]^if  (  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  )  ==  ( NAME )  )  {     return true; }^264^^^^^263^274^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P13_Insert_Block]^if  (  ( n.getType (  )  )  !=  ( EMPTY )  )  {     return false; }^264^^^^^263^274^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P3_Replace_Literal]^return true;^265^^^^^263^274^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P8_Replace_Mix]^if  ( n.newNumber (  )  != Token.BLOCK )  {^264^^^^^263^274^if  ( block.getType (  )  != Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P2_Replace_Operator]^if  ( n.getType (  )  == Token.EMPTY )  {^269^^^^^263^274^if  ( n.getType (  )  != Token.EMPTY )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P7_Replace_Invocation]^if  ( n.newNumber (  )  != Token.EMPTY )  {^269^^^^^263^274^if  ( n.getType (  )  != Token.EMPTY )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P8_Replace_Mix]^if  ( block.getType (  )  != Token.EMPTY )  {^269^^^^^263^274^if  ( n.getType (  )  != Token.EMPTY )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P9_Replace_Statement]^if  ( n.getType (  )  == Token.NAME )  {^269^^^^^263^274^if  ( n.getType (  )  != Token.EMPTY )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P9_Replace_Statement]^if  ( nameNode.getType (  )  == Token.NAME )  {^269^^^^^263^274^if  ( n.getType (  )  != Token.EMPTY )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P15_Unwrap_Block]^return false;^269^270^271^^^263^274^if  ( n.getType (  )  != Token.EMPTY )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P16_Remove_Block]^^269^270^271^^^263^274^if  ( n.getType (  )  != Token.EMPTY )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P13_Insert_Block]^if  ( ! ( isExprAssign ( n )  )  )  {     return false; }^269^^^^^263^274^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P13_Insert_Block]^if  (  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  )  ==  ( NAME )  )  {     return true; }^269^^^^^263^274^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P13_Insert_Block]^if  (  ( block.getType (  )  )  !=  ( BLOCK )  )  {     return false; }^269^^^^^263^274^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P3_Replace_Literal]^return true;^270^^^^^263^274^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P2_Replace_Operator]^for  ( Node n = block.getFirstChild (  ) ; n == null; n = n.getNext (  )  )  {^268^^^^^263^274^for  ( Node n = block.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P5_Replace_Variable]^for  ( Node block = block.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  {^268^^^^^263^274^for  ( Node n = block.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P5_Replace_Variable]^for  ( Node block = n.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  {^268^^^^^263^274^for  ( Node n = block.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P7_Replace_Invocation]^for  ( Node n = block.newNumber (  ) ; n != null; n = n.getNext (  )  )  {^268^^^^^263^274^for  ( Node n = block.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P7_Replace_Invocation]^for  ( Node n = block.getFirstChild (  ) ; n != null; n = n.newNumber (  )  )  {^268^^^^^263^274^for  ( Node n = block.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P8_Replace_Mix]^for  ( Node block = block.getFirstChild (  ) ; n != null; n = n.newNumber (  )  )  {^268^^^^^263^274^for  ( Node n = block.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P2_Replace_Operator]^if  ( n.getType (  )  > Token.EMPTY )  {^269^^^^^263^274^if  ( n.getType (  )  != Token.EMPTY )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P7_Replace_Invocation]^if  ( n .getString (  )   != Token.EMPTY )  {^269^^^^^263^274^if  ( n.getType (  )  != Token.EMPTY )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P8_Replace_Mix]^for  ( Node n =  block.getFirstChild (  ) ; block !^268^^^^^263^274^for  ( Node n = block.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P7_Replace_Invocation]^for  ( Node n = block .getLastChild (  )  ; n != null; n = n.getNext (  )  )  {^268^^^^^263^274^for  ( Node n = block.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P5_Replace_Variable]^for  ( Node n = n.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  {^268^^^^^263^274^for  ( Node n = block.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P8_Replace_Mix]^for  ( Node n = n.newNumber (  ) ; n != null; n = n.getNext (  )  )  {^268^^^^^263^274^for  ( Node n = block.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P14_Delete_Statement]^^268^269^270^271^^263^274^for  ( Node n = block.getFirstChild (  ) ; n != null; n = n.getNext (  )  )  { if  ( n.getType (  )  != Token.EMPTY )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P8_Replace_Mix]^if  ( block .getString (  )   != Token.EMPTY )  {^269^^^^^263^274^if  ( n.getType (  )  != Token.EMPTY )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P3_Replace_Literal]^return false;^273^^^^^263^274^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isEmptyBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  block  n  
[P3_Replace_Literal]^return false;^312^^^^^297^327^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleOperatorType [RETURN_TYPE] boolean   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  
[P3_Replace_Literal]^return true;^315^^^^^300^330^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleOperatorType [RETURN_TYPE] boolean   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  
[P5_Replace_Variable]^return new Node ( Token.EXPR_RESULT ) ;^326^^^^^325^327^return new Node ( Token.EXPR_RESULT, child ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newExpr [RETURN_TYPE] Node   Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  
[P5_Replace_Variable]^return new Node ( Token. child ) ;^326^^^^^325^327^return new Node ( Token.EXPR_RESULT, child ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newExpr [RETURN_TYPE] Node   Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  child  
[P3_Replace_Literal]^return checkForStateChangeHelper ( n, false ) ;^336^^^^^335^337^return checkForStateChangeHelper ( n, true ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] mayEffectMutableState [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return containsType ( n, true ) ;^336^^^^^335^337^return checkForStateChangeHelper ( n, true ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] mayEffectMutableState [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P12_Insert_Condition]^if  ( checkForStateChangeHelper ( c, checkForNewObjects )  )  { return checkForStateChangeHelper ( n, true ) ; }^336^^^^^335^337^return checkForStateChangeHelper ( n, true ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] mayEffectMutableState [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^336^^^^^335^337^return checkForStateChangeHelper ( n, true ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] mayEffectMutableState [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^return checkForStateChangeHelper ( n, true ) ;^343^^^^^342^344^return checkForStateChangeHelper ( n, false ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] mayHaveSideEffects [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return containsType ( n, false ) ;^343^^^^^342^344^return checkForStateChangeHelper ( n, false ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] mayHaveSideEffects [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P12_Insert_Condition]^if  ( checkForStateChangeHelper ( c, checkForNewObjects )  )  { return checkForStateChangeHelper ( n, false ) ; }^343^^^^^342^344^return checkForStateChangeHelper ( n, false ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] mayHaveSideEffects [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^343^^^^^342^344^return checkForStateChangeHelper ( n, false ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] mayHaveSideEffects [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  name  boolean  Map  vars  int  type  Node  n  
[P15_Unwrap_Block]^return true;^384^385^386^^^369^399^if  ( checkForNewObjects )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P16_Remove_Block]^^384^385^386^^^369^399^if  ( checkForNewObjects )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( c > LARGEST_BASIC_LATIN )  {     return false; }^384^^^^^369^399^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( pred.apply ( node )  )  {     return true; }^384^^^^^369^399^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( vars.isEmpty (  )  )  {     return ; }^384^^^^^369^399^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( callNode.isNoSideEffectsCall (  )  )  {     return false; }^384^^^^^369^399^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( n ==  ( parent.getFirstChild (  )  )  )  {     return true; }^384^^^^^369^399^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( "Infinity".equals ( name )  )  {     return true; }^384^^^^^369^399^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( lhsString == null )  {     return false; }^384^^^^^369^399^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P3_Replace_Literal]^return false;^385^^^^^370^400^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P2_Replace_Operator]^if  ( n.getFirstChild (  )  == null ) return true;^391^392^^^^376^406^if  ( n.getFirstChild (  )  != null ) return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P3_Replace_Literal]^if  ( n.getFirstChild (  )  != null ) return false;^391^392^^^^376^406^if  ( n.getFirstChild (  )  != null ) return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^if  ( current.getFirstChild (  )  != null ) return true;^391^392^^^^376^406^if  ( n.getFirstChild (  )  != null ) return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^if  ( n.newNumber (  )  != null ) return true;^391^392^^^^376^406^if  ( n.getFirstChild (  )  != null ) return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^if  ( n .getLastChild (  )   != null ) return true;^391^392^^^^376^406^if  ( n.getFirstChild (  )  != null ) return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P8_Replace_Mix]^if  ( current.getFirstChild (  )  != true ) return true;^391^392^^^^376^406^if  ( n.getFirstChild (  )  != null ) return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( pred.apply ( node )  )  {     return true; }^391^^^^^376^406^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( n ==  ( parent.getFirstChild (  )  )  )  {     return true; }^391^^^^^376^406^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( lhsString == null )  {     return false; }^391^^^^^376^406^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P3_Replace_Literal]^return false;^392^^^^^377^407^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P15_Unwrap_Block]^return true;^406^407^408^^^391^421^if  ( checkForNewObjects )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P16_Remove_Block]^^406^407^408^^^391^421^if  ( checkForNewObjects )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( c > LARGEST_BASIC_LATIN )  {     return false; }^406^^^^^391^421^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( pred.apply ( node )  )  {     return true; }^406^^^^^391^421^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( vars.isEmpty (  )  )  {     return ; }^406^^^^^391^421^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( callNode.isNoSideEffectsCall (  )  )  {     return false; }^406^^^^^391^421^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( n ==  ( parent.getFirstChild (  )  )  )  {     return true; }^406^^^^^391^421^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( "Infinity".equals ( name )  )  {     return true; }^406^^^^^391^421^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( lhsString == null )  {     return false; }^406^^^^^391^421^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P3_Replace_Literal]^return false;^407^^^^^392^422^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^if  ( current.isNoSideEffectsCall (  )  )  {^412^^^^^397^427^if  ( n.isNoSideEffectsCall (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^if  ( n.tokenToName (  )  )  {^412^^^^^397^427^if  ( n.isNoSideEffectsCall (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^if  ( n .isQualifiedName (  )   )  {^412^^^^^397^427^if  ( n.isNoSideEffectsCall (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P9_Replace_Statement]^if  ( callNode.isNoSideEffectsCall (  )  )  {^412^^^^^397^427^if  ( n.isNoSideEffectsCall (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P15_Unwrap_Block]^break;^412^413^414^^^397^427^if  ( n.isNoSideEffectsCall (  )  )  { break; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P16_Remove_Block]^^412^413^414^^^397^427^if  ( n.isNoSideEffectsCall (  )  )  { break; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( callNode.isNoSideEffectsCall (  )  )  {     return false; }^412^^^^^397^427^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P2_Replace_Operator]^if  ( Token.NAME >= constructor.getType (  )  )  {^418^^^^^403^433^if  ( Token.NAME == constructor.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^if  ( Token.NAME == n.getType (  )  )  {^418^^^^^403^433^if  ( Token.NAME == constructor.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^if  ( Token.NAME == constructor.newNumber (  )  )  {^418^^^^^403^433^if  ( Token.NAME == constructor.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^if  ( CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( name )  )  {^420^^^^^405^435^if  ( CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( className )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^if  ( className.contains ( CONSTRUCTORS_WITHOUT_SIDE_EFFECTS )  )  {^420^^^^^405^435^if  ( CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( className )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P15_Unwrap_Block]^break;^420^421^^423^424^405^435^if  ( CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( className )  )  {  break; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P16_Remove_Block]^^420^421^^423^424^405^435^if  ( CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( className )  )  {  break; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P1_Replace_Type]^char className = constructor.getchar (  ) ;^419^^^^^404^434^String className = constructor.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^String className = n.getString (  ) ;^419^^^^^404^434^String className = constructor.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^String className = constructor.newNumber (  ) ;^419^^^^^404^434^String className = constructor.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^String className = constructor .newString (  )  ;^419^^^^^404^434^String className = constructor.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P11_Insert_Donor_Statement]^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;String className = constructor.getString (  ) ;^419^^^^^404^434^String className = constructor.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P11_Insert_Donor_Statement]^String name = n.getString (  ) ;String className = constructor.getString (  ) ;^419^^^^^404^434^String className = constructor.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P11_Insert_Donor_Statement]^String name = n.getFirstChild (  ) .getString (  ) ;String className = constructor.getString (  ) ;^419^^^^^404^434^String className = constructor.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P11_Insert_Donor_Statement]^String propName = last.getString (  ) ;String className = constructor.getString (  ) ;^419^^^^^404^434^String className = constructor.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P11_Insert_Donor_Statement]^String name = nameNode.getString (  ) ;String className = constructor.getString (  ) ;^419^^^^^404^434^String className = constructor.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P12_Insert_Condition]^if  ( Token.NAME == constructor.getType (  )  )  { String className = constructor.getString (  ) ; }^419^^^^^404^434^String className = constructor.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P8_Replace_Mix]^String className = n.newNumber (  ) ;^419^^^^^404^434^String className = constructor.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P14_Delete_Statement]^^419^^^^^404^434^String className = constructor.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( contains ( className )  )  {     break; }^420^^^^^405^435^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^if  ( current.isNoSideEffectsCall (  )  )  {^435^^^^^420^450^if  ( n.isNoSideEffectsCall (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^if  ( n.tokenToName (  )  )  {^435^^^^^420^450^if  ( n.isNoSideEffectsCall (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P9_Replace_Statement]^if  ( callNode.isNoSideEffectsCall (  )  )  {^435^^^^^420^450^if  ( n.isNoSideEffectsCall (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P15_Unwrap_Block]^break;^435^436^^438^439^420^450^if  ( n.isNoSideEffectsCall (  )  )  {  break; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P16_Remove_Block]^^435^436^^438^439^420^450^if  ( n.isNoSideEffectsCall (  )  )  {  break; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( callNode.isNoSideEffectsCall (  )  )  {     return false; }^435^^^^^420^450^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^if  ( isSimpleOperatorType ( current.getType (  )  )  ) break;^443^444^^^^428^458^if  ( isSimpleOperatorType ( n.getType (  )  )  ) break;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^if  ( isAssociative ( n.getType (  )  )  ) break;^443^444^^^^428^458^if  ( isSimpleOperatorType ( n.getType (  )  )  ) break;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^if  ( isSimpleOperatorType ( n.newNumber (  )  )  ) break;^443^444^^^^428^458^if  ( isSimpleOperatorType ( n.getType (  )  )  ) break;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( checkForStateChangeHelper ( c, checkForNewObjects )  )  {     return true; }^443^^^^^428^458^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( canBeSideEffected ( c, knownConstants )  )  {     return true; }^443^^^^^428^458^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( ! ( isLiteralValue ( child )  )  )  {     return false; }^443^^^^^428^458^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( ! ( isExprAssign ( n )  )  )  {     return false; }^443^^^^^428^458^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( isAssignmentOp ( n )  )  {     return true; }^443^^^^^428^458^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( has ( c, pred, traverseChildrenPred )  )  {     return true; }^443^^^^^428^458^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( contains ( className )  )  {     break; }^443^^^^^428^458^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^if  ( isAssignmentOp ( constructor )  )  {^446^^^^^431^461^if  ( isAssignmentOp ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P6_Replace_Expression]^if  ( current.getType() == GETPROP || current.getType() == GETELEM )  {^446^^^^^431^461^if  ( isAssignmentOp ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P6_Replace_Expression]^if  ( current.getType (  )  == GETPROP )  {^446^^^^^431^461^if  ( isAssignmentOp ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P6_Replace_Expression]^if  ( current.getType (  )  == GETELEM )  {^446^^^^^431^461^if  ( isAssignmentOp ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P6_Replace_Expression]^if  ( isLiteralValue(current || current.getType() == FUNCTION) )  {^446^^^^^431^461^if  ( isAssignmentOp ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P6_Replace_Expression]^if  ( current.getType (  )  == FUNCTION )  {^446^^^^^431^461^if  ( isAssignmentOp ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^if  ( isAssign ( n )  )  {^446^^^^^431^461^if  ( isAssignmentOp ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P9_Replace_Statement]^if  ( NodeUtil.isAssignmentOp ( n )  )  {^446^^^^^431^461^if  ( isAssignmentOp ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P9_Replace_Statement]^if  ( vars.isEmpty (  )  )  {^446^^^^^431^461^if  ( isAssignmentOp ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P2_Replace_Operator]^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  && checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^451^452^453^454^^436^466^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^if  ( checkForStateChangeHelper ( current.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^451^452^453^454^^436^466^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^if  ( checkForStateChangeHelper ( n.getFirstChild (  )  )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^451^452^453^454^^436^466^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^if  ( checkForStateChangeHelper ( checkForNewObjects.getFirstChild (  ) , n )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^451^452^453^454^^436^466^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P6_Replace_Expression]^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  ) {^451^452^453^454^^436^466^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P6_Replace_Expression]^if  (  checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^451^452^453^454^^436^466^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^if  ( containsType ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^451^452^453^454^^436^466^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^if  ( checkForStateChangeHelper ( n.newNumber (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^451^452^453^454^^436^466^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.newNumber (  ) , checkForNewObjects )  )  {^451^452^453^454^^436^466^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n .getFirstChild (  )  , checkForNewObjects )  )  {^451^452^453^454^^436^466^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P8_Replace_Mix]^if  ( checkForStateChangeHelper ( current.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.newNumber (  ) , checkForNewObjects )  )  {^451^452^453^454^^436^466^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P15_Unwrap_Block]^return true;^451^452^453^454^455^436^466^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P16_Remove_Block]^^451^452^453^454^455^436^466^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P3_Replace_Literal]^return false;^455^^^^^451^456^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^current = n.getFirstChild (  )  )  { }^462^^^^^447^477^current = current.getFirstChild (  )  )  { }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^current = current.newNumber (  )  )  { }^462^^^^^447^477^current = current.getFirstChild (  )  )  { }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P3_Replace_Literal]^return false;^455^^^^^440^470^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P2_Replace_Operator]^return ! ( isLiteralValue ( current )  && current.getType (  )  == Token.FUNCTION ) ;^464^465^^^^449^479^return ! ( isLiteralValue ( current )  || current.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P2_Replace_Operator]^return ! ( isLiteralValue ( current )  || current.getType (  )  <= Token.FUNCTION ) ;^464^465^^^^449^479^return ! ( isLiteralValue ( current )  || current.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^return ! ( isLiteralValue ( n )  || current.getType (  )  == Token.FUNCTION ) ;^464^465^^^^449^479^return ! ( isLiteralValue ( current )  || current.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^return ! ( isImmutableValue ( current )  || current.getType (  )  == Token.FUNCTION ) ;^464^465^^^^449^479^return ! ( isLiteralValue ( current )  || current.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^return ! ( isLiteralValue ( current )  || current.newNumber (  )  == Token.FUNCTION ) ;^464^465^^^^449^479^return ! ( isLiteralValue ( current )  || current.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P8_Replace_Mix]^return ! ( isLiteralValue ( current )  || current .getString (  )   == Token.FUNCTION ) ;^464^465^^^^449^479^return ! ( isLiteralValue ( current )  || current.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^Node current = constructor.getFirstChild (  ) ;^458^^^^^443^473^Node current = n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^Node current = n.newNumber (  ) ;^458^^^^^443^473^Node current = n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^Node current = n .getLastChild (  )  ;^458^^^^^443^473^Node current = n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^if  ( checkForStateChangeHelper ( n .getLastChild (  )  , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^451^452^453^454^^436^466^if  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( checkForStateChangeHelper ( c, checkForNewObjects )  )  {     return true; }^451^^^^^436^466^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( current.getLastChild (  ) , checkForNewObjects )  )  {^452^453^454^^^437^467^n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^n.newNumber (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^452^453^454^^^437^467^n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^n .getLastChild (  )  , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^452^453^454^^^437^467^n.getFirstChild (  ) , checkForNewObjects )  || checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^checkForStateChangeHelper ( current.getLastChild (  ) , checkForNewObjects )  )  {^453^454^^^^438^468^checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^checkForStateChangeHelper ( n.getLastChild (  )  )  )  {^453^454^^^^438^468^checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^checkForStateChangeHelper ( checkForNewObjects.getLastChild (  ) , n )  )  {^453^454^^^^438^468^checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^containsType ( n.getLastChild (  ) , checkForNewObjects )  )  {^453^454^^^^438^468^checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^checkForStateChangeHelper ( n.newNumber (  ) , checkForNewObjects )  )  {^453^454^^^^438^468^checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P14_Delete_Statement]^^453^454^455^^^438^468^checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  { return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^n.newNumber (  ) , checkForNewObjects )  )  {^454^^^^^439^469^n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^n .getFirstChild (  )  , checkForNewObjects )  )  {^454^^^^^439^469^n.getLastChild (  ) , checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P14_Delete_Statement]^^454^455^^^^439^469^n.getLastChild (  ) , checkForNewObjects )  )  { return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^Node current = current.getFirstChild (  ) ;^458^^^^^443^473^Node current = n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P14_Delete_Statement]^^458^^^^^443^473^Node current = n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^current.getType (  )  == Token.GETPROP || n.getType (  )  == Token.GETELEM;^460^461^^^^445^475^current.getType (  )  == Token.GETPROP || current.getType (  )  == Token.GETELEM;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^current.newNumber (  )  == Token.GETPROP || current.getType (  )  == Token.GETELEM;^460^461^^^^445^475^current.getType (  )  == Token.GETPROP || current.getType (  )  == Token.GETELEM;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P8_Replace_Mix]^current .getString (  )   == Token.GETPROP || n^460^461^^^^445^475^current.getType (  )  == Token.GETPROP || current.getType (  )  == Token.GETELEM;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P14_Delete_Statement]^^460^461^^^^445^475^current.getType (  )  == Token.GETPROP || current.getType (  )  == Token.GETELEM;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^current.newNumber (  )  == Token.GETELEM;^461^^^^^446^476^current.getType (  )  == Token.GETELEM;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P8_Replace_Mix]^current .getString (  )   == Token.GETELEM;^461^^^^^446^476^current.getType (  )  == Token.GETELEM;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P14_Delete_Statement]^^461^^^^^446^476^current.getType (  )  == Token.GETELEM;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^current = current .getLastChild (  )   )  { }^462^^^^^447^477^current = current.getFirstChild (  )  )  { }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P8_Replace_Mix]^current = n.newNumber (  )  )  { }^462^^^^^447^477^current = current.getFirstChild (  )  )  { }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P14_Delete_Statement]^^464^465^^^^449^479^return ! ( isLiteralValue ( current )  || current.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^current.newNumber (  )  == Token.FUNCTION ) ;^465^^^^^450^480^current.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^current .getString (  )   == Token.FUNCTION ) ;^465^^^^^450^480^current.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P14_Delete_Statement]^^465^^^^^450^480^current.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P3_Replace_Literal]^return false;^379^^^^^364^394^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^return !isFunctionAnonymous ( current ) ;^402^^^^^387^417^return !isFunctionAnonymous ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^return !isFunction ( n ) ;^402^^^^^387^417^return !isFunctionAnonymous ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P3_Replace_Literal]^return false;^430^^^^^415^445^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P3_Replace_Literal]^return false;^440^^^^^425^455^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P2_Replace_Operator]^return ! ( isLiteralValue ( current )  || current.getType (  )  != Token.FUNCTION ) ;^464^465^^^^449^479^return ! ( isLiteralValue ( current )  || current.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^return ! ( isLiteralValue ( current )  || current.getType (  )  == Token.0 ) ;^464^465^^^^449^479^return ! ( isLiteralValue ( current )  || current.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P8_Replace_Mix]^return ! ( isImmutableValue ( current )  ;^464^465^^^^449^479^return ! ( isLiteralValue ( current )  || current.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P3_Replace_Literal]^return false;^468^^^^^453^483^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^Node constructor = current.getFirstChild (  ) ;^417^^^^^402^432^Node constructor = n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^Node constructor = n.newNumber (  ) ;^417^^^^^402^432^Node constructor = n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^switch  ( current.getType (  )  )  {^356^^^^^341^371^switch  ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^switch  ( n.newNumber (  )  )  {^356^^^^^341^371^switch  ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P8_Replace_Mix]^switch  ( current.newNumber (  )  )  {^356^^^^^341^371^switch  ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P8_Replace_Mix]^if  ( current.newNumber (  )  != null ) return true;^391^392^^^^376^406^if  ( n.getFirstChild (  )  != null ) return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P14_Delete_Statement]^^402^^^^^387^417^return !isFunctionAnonymous ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P8_Replace_Mix]^if  ( current.tokenToName (  )  )  {^412^^^^^397^427^if  ( n.isNoSideEffectsCall (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( n.isNoSideEffectsCall (  )  )  {     break; }^412^^^^^397^427^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P14_Delete_Statement]^^417^^^^^402^432^Node constructor = n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P8_Replace_Mix]^if  ( Token.NAME == n .getString (  )   )  {^418^^^^^403^433^if  ( Token.NAME == constructor.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P8_Replace_Mix]^if  ( 3.contains ( className )  )  {^420^^^^^405^435^if  ( CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( className )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P8_Replace_Mix]^if  ( current.tokenToName (  )  )  {^435^^^^^420^450^if  ( n.isNoSideEffectsCall (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( n.isNoSideEffectsCall (  )  )  {     break; }^435^^^^^420^450^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^if  ( isSimpleOperatorType ( n .getString (  )   )  ) break;^443^444^^^^428^458^if  ( isSimpleOperatorType ( n.getType (  )  )  ) break;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^if  ( isAssignmentOp ( current )  )  {^446^^^^^431^461^if  ( isAssignmentOp ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P14_Delete_Statement]^^458^459^^^^443^473^Node current = n.getFirstChild (  ) ; for  ( ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^if  ( nheckForStateChangeHelper ( c, checkForNewObjects )  )  {^472^^^^^457^487^if  ( checkForStateChangeHelper ( c, checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^if  ( checkForStateChangeHelper (  checkForNewObjects )  )  {^472^^^^^457^487^if  ( checkForStateChangeHelper ( c, checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^if  ( checkForStateChangeHelper ( c )  )  {^472^^^^^457^487^if  ( checkForStateChangeHelper ( c, checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^if  ( checkForNewObjectsheckForStateChangeHelper ( c, c )  )  {^472^^^^^457^487^if  ( checkForStateChangeHelper ( c, checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^if  ( containsType ( c, checkForNewObjects )  )  {^472^^^^^457^487^if  ( checkForStateChangeHelper ( c, checkForNewObjects )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P15_Unwrap_Block]^return true;^472^473^474^^^457^487^if  ( checkForStateChangeHelper ( c, checkForNewObjects )  )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P16_Remove_Block]^^472^473^474^^^457^487^if  ( checkForStateChangeHelper ( c, checkForNewObjects )  )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P3_Replace_Literal]^return false;^473^^^^^458^488^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P2_Replace_Operator]^for  ( Node c = n.getFirstChild (  ) ; c == null; c = c.getNext (  )  )  {^471^^^^^456^486^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^for  ( Node c = current.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^471^^^^^456^486^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^for  ( Node n = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^471^^^^^456^486^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P5_Replace_Variable]^for  ( Node n = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^471^^^^^456^486^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^for  ( Node c = n.newNumber (  ) ; c != null; c = c.getNext (  )  )  {^471^^^^^456^486^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.newNumber (  )  )  {^471^^^^^456^486^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c .getParent (  )   )  {^471^^^^^456^486^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P13_Insert_Block]^if  ( checkForStateChangeHelper ( c, checkForNewObjects )  )  {     return true; }^472^^^^^457^487^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P8_Replace_Mix]^for  ( Node c =  n.getFirstChild (  ) ; n !^471^^^^^456^486^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P8_Replace_Mix]^for  ( Node c = current.newNumber (  ) ; c != null; c = c.getNext (  )  )  {^471^^^^^456^486^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P7_Replace_Invocation]^for  ( Node c = n .getLastChild (  )  ; c != null; c = c.getNext (  )  )  {^471^^^^^456^486^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P14_Delete_Statement]^^471^472^473^474^^456^486^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  { if  ( checkForStateChangeHelper ( c, checkForNewObjects )  )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P3_Replace_Literal]^return true;^477^^^^^462^492^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] checkForStateChangeHelper [RETURN_TYPE] boolean   Node n boolean checkForNewObjects [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  checkForNewObjects  Map  vars  int  type  Node  c  constructor  current  n  
[P2_Replace_Operator]^Preconditions.checkArgument ( callNode.getType (  )  > Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^486^487^488^^^485^501^Preconditions.checkArgument ( callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P2_Replace_Operator]^Preconditions.checkArgument ( callNode.getType (  ||  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^486^487^488^^^485^501^Preconditions.checkArgument ( callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P3_Replace_Literal]^Preconditions.checkArgument ( callNode.getType (  )  == Token.NEW, "ected NEW node" + Token.name ( callNode.getType (  )  )  ) ;^486^487^488^^^485^501^Preconditions.checkArgument ( callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^Preconditions.checkArgument ( nameNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^486^487^488^^^485^501^Preconditions.checkArgument ( callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^Preconditions.checkArgument ( callNode.getType (  )  == Token. "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^486^487^488^^^485^501^Preconditions.checkArgument ( callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^Preconditions.checkArgument ( NEW.getType (  )  == Token.NEW, "Expected callNode node, got " + Token.name ( callNode.getType (  )  )  ) ;^486^487^488^^^485^501^Preconditions.checkArgument ( callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^Preconditions.checkArgument ( callNode.newNumber (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^486^487^488^^^485^501^Preconditions.checkArgument ( callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^Preconditions.checkArgument ( callNode .getString (  )   == Token.NEW, "Expected NEW node, got " + Token.name ( callNode^486^487^488^^^485^501^Preconditions.checkArgument ( callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P8_Replace_Mix]^Preconditions.checkArgument ( nameNode .getString (  )   == Token.NEW, "Expected NEW node, got " + Token.name ( callNode^486^487^488^^^485^501^Preconditions.checkArgument ( callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P14_Delete_Statement]^^486^487^488^^^485^501^Preconditions.checkArgument ( callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( nameNode.getType (  )  )  ) ;^487^488^^^^485^501^callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^callNode.newNumber (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^487^488^^^^485^501^callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^callNode .getString (  )   == Token.NEW, "Expected NEW node, got " + Token.name ( callNode^487^488^^^^485^501^callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P14_Delete_Statement]^^487^488^^^^485^501^callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^"Expected NEW node, got " + Token.name ( nameNode.getType (  )  )  ) ;^488^^^^^485^501^"Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^"Expected NEW node, got " + Token.name ( callNode.newNumber (  )  )  ) ;^488^^^^^485^501^"Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^"Expected NEW node, got " + Token.name ( callNode .getString (  )   )  ) ;^488^^^^^485^501^"Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P8_Replace_Mix]^"Expected NEW node, got " + Token.name ( nameNode .getString (  )   )  ) ;^488^^^^^485^501^"Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P14_Delete_Statement]^^488^^^^^485^501^"Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^return Node.tokenToName ( n.getType (  )  ) ;"Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^488^^^^^485^501^"Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;"Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^488^^^^^485^501^"Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;"Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^488^^^^^485^501^"Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;"Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^488^^^^^485^501^"Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^"Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;"Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^488^^^^^485^501^"Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^if  ( nameNode.isNoSideEffectsCall (  )  )  {^490^^^^^485^501^if  ( callNode.isNoSideEffectsCall (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^if  ( callNode.tokenToName (  )  )  {^490^^^^^485^501^if  ( callNode.isNoSideEffectsCall (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^if  ( callNode .isQualifiedName (  )   )  {^490^^^^^485^501^if  ( callNode.isNoSideEffectsCall (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P9_Replace_Statement]^if  ( n.isNoSideEffectsCall (  )  )  {^490^^^^^485^501^if  ( callNode.isNoSideEffectsCall (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P15_Unwrap_Block]^return false;^490^491^492^^^485^501^if  ( callNode.isNoSideEffectsCall (  )  )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P16_Remove_Block]^^490^491^492^^^485^501^if  ( callNode.isNoSideEffectsCall (  )  )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( namespaceName.equals ( "Math" )  )  {     return false; }^490^^^^^485^501^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( c > LARGEST_BASIC_LATIN )  {     return false; }^490^^^^^485^501^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( name.equals ( "String" )  )  {     return false; }^490^^^^^485^501^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( vars.isEmpty (  )  )  {     return ; }^490^^^^^485^501^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( n.isNoSideEffectsCall (  )  )  {     break; }^490^^^^^485^501^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( n ==  ( parent.getFirstChild (  )  )  )  {     return true; }^490^^^^^485^501^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( ! ( traverseChildrenPred.apply ( node )  )  )  {     return false; }^490^^^^^485^501^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( "Infinity".equals ( name )  )  {     return true; }^490^^^^^485^501^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( lhsString == null )  {     return false; }^490^^^^^485^501^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( checkForNewObjects )  {     return true; }^490^^^^^485^501^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P3_Replace_Literal]^return true;^491^^^^^485^501^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( callNode.isNoSideEffectsCall (  )  )  {     return false; }^490^^^^^485^501^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^Node nameNode = callNode.newNumber (  ) ;^494^^^^^485^501^Node nameNode = callNode.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^Node nameNode = nameNode.getFirstChild (  ) ;^494^^^^^485^501^Node nameNode = callNode.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P14_Delete_Statement]^^494^^^^^485^501^Node nameNode = callNode.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P2_Replace_Operator]^if  ( nameNode.getType (  )  == Token.NAME || CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^495^496^^^^485^501^if  ( nameNode.getType (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P2_Replace_Operator]^if  ( nameNode.getType (  )  != Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^495^496^^^^485^501^if  ( nameNode.getType (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^if  ( callNode.getType (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^495^496^^^^485^501^if  ( nameNode.getType (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^if  ( CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.getType (  )  == Token.NAME && nameNode.contains ( nameNode.getString (  )  )  )  {^495^496^^^^485^501^if  ( nameNode.getType (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P6_Replace_Expression]^if  ( nameNode.getType (  )  == Token.NAME ) {^495^496^^^^485^501^if  ( nameNode.getType (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P6_Replace_Expression]^if  (  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^495^496^^^^485^501^if  ( nameNode.getType (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P6_Replace_Expression]^if  ( nameNode.getType (  )  == NAME )  {^495^496^^^^485^501^if  ( nameNode.getType (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^if  ( nameNode.newNumber (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^495^496^^^^485^501^if  ( nameNode.getType (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^if  ( nameNode .getString (  )   == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^495^496^^^^485^501^if  ( nameNode.getType (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^if  ( nameNode.getType (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.newNumber (  )  )  )  {^495^496^^^^485^501^if  ( nameNode.getType (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P8_Replace_Mix]^if  ( callNode.newNumber (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^495^496^^^^485^501^if  ( nameNode.getType (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P15_Unwrap_Block]^return false;^495^496^497^498^^485^501^if  ( nameNode.getType (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P16_Remove_Block]^^495^496^497^498^^485^501^if  ( nameNode.getType (  )  == Token.NAME && CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  (  ( nameNode.getType (  )  )  ==  ( NAME )  )  {     String name = nameNode.getString (  ) ;     if  ( name.equals ( "String" )  )  {         return false;     } }^495^^^^^485^501^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( contains ( className )  )  {     break; }^495^^^^^485^501^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P3_Replace_Literal]^return true;^497^^^^^485^501^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( callNode.getString (  )  )  )  {^496^^^^^485^501^CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.newNumber (  )  )  )  {^496^^^^^485^501^CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P14_Delete_Statement]^^496^497^^^^485^501^CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  { return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  (  (  ( nameNode.getType (  )  )  ==  ( NAME )  )  &&  ( contains ( nameNode.getString (  )  )  )  )  {     return false; }^496^^^^^485^501^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( contains ( className )  )  {     break; }^496^^^^^485^501^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P8_Replace_Mix]^CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( callNode.newNumber (  )  )  )  {^496^^^^^485^501^CONSTRUCTORS_WITHOUT_SIDE_EFFECTS.contains ( nameNode.getString (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P3_Replace_Literal]^return false;^500^^^^^485^501^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] constructorCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P2_Replace_Operator]^Preconditions.checkArgument ( callNode.getType (  )  < Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^509^510^511^^^508^537^Preconditions.checkArgument ( callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P2_Replace_Operator]^Preconditions.checkArgument ( callNode.getType (   instanceof   )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^509^510^511^^^508^537^Preconditions.checkArgument ( callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P3_Replace_Literal]^Preconditions.checkArgument ( callNode.getType (  )  == Token.CALL, "pectedxpected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^509^510^511^^^508^537^Preconditions.checkArgument ( callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^Preconditions.checkArgument ( nameNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^509^510^511^^^508^537^Preconditions.checkArgument ( callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^Preconditions.checkArgument ( callNode.getType (  )  == Token. "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^509^510^511^^^508^537^Preconditions.checkArgument ( callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^Preconditions.checkArgument ( CALL.getType (  )  == Token.CALL, "Expected callNode node, got " + Token.name ( callNode.getType (  )  )  ) ;^509^510^511^^^508^537^Preconditions.checkArgument ( callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^Preconditions .checkState (  )   )  ) ;^509^510^511^^^508^537^Preconditions.checkArgument ( callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^Preconditions.checkArgument ( callNode.newNumber (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^509^510^511^^^508^537^Preconditions.checkArgument ( callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^Preconditions.checkArgument ( callNode .getString (  )   == Token.CALL, "Expected CALL node, got " + Token.name ( callNode^509^510^511^^^508^537^Preconditions.checkArgument ( callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P8_Replace_Mix]^Preconditions.checkArgument ( nameNode.newNumber (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^509^510^511^^^508^537^Preconditions.checkArgument ( callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P14_Delete_Statement]^^509^510^511^^^508^537^Preconditions.checkArgument ( callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( nameNode.getType (  )  )  ) ;^510^511^^^^508^537^callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^callNode.newNumber (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^510^511^^^^508^537^callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P14_Delete_Statement]^^510^511^^^^508^537^callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^"Expected CALL node, got " + Token.name ( nameNode.getType (  )  )  ) ;^511^^^^^508^537^"Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^"Expected CALL node, got " + Token.name ( callNode.newNumber (  )  )  ) ;^511^^^^^508^537^"Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^"Expected CALL node, got " + Token.name ( callNode .getString (  )   )  ) ;^511^^^^^508^537^"Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P14_Delete_Statement]^^511^^^^^508^537^"Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^return Node.tokenToName ( n.getType (  )  ) ;"Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^511^^^^^508^537^"Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;"Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^511^^^^^508^537^"Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^callNode.getType (  )  == Token.CALL, "Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;"Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^511^^^^^508^537^"Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^callNode.getType (  )  == Token.NEW, "Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;"Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^511^^^^^508^537^"Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^"Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;"Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^511^^^^^508^537^"Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^if  ( nameNode.isNoSideEffectsCall (  )  )  {^513^^^^^508^537^if  ( callNode.isNoSideEffectsCall (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^if  ( callNode.tokenToName (  )  )  {^513^^^^^508^537^if  ( callNode.isNoSideEffectsCall (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P8_Replace_Mix]^if  ( nameNode .isQualifiedName (  )   )  {^513^^^^^508^537^if  ( callNode.isNoSideEffectsCall (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P9_Replace_Statement]^if  ( n.isNoSideEffectsCall (  )  )  {^513^^^^^508^537^if  ( callNode.isNoSideEffectsCall (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P15_Unwrap_Block]^return false;^513^514^515^^^508^537^if  ( callNode.isNoSideEffectsCall (  )  )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P16_Remove_Block]^^513^514^515^^^508^537^if  ( callNode.isNoSideEffectsCall (  )  )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( namespaceName.equals ( "Math" )  )  {     return false; }^513^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( c > LARGEST_BASIC_LATIN )  {     return false; }^513^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( name.equals ( "String" )  )  {     return false; }^513^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( vars.isEmpty (  )  )  {     return ; }^513^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( n.isNoSideEffectsCall (  )  )  {     break; }^513^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( n ==  ( parent.getFirstChild (  )  )  )  {     return true; }^513^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( ! ( traverseChildrenPred.apply ( node )  )  )  {     return false; }^513^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( "Infinity".equals ( name )  )  {     return true; }^513^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( lhsString == null )  {     return false; }^513^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( checkForNewObjects )  {     return true; }^513^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P3_Replace_Literal]^return true;^514^^^^^508^537^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( callNode.isNoSideEffectsCall (  )  )  {     return false; }^513^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^Node nameNode = callNode.newNumber (  ) ;^517^^^^^508^537^Node nameNode = callNode.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^Node nameNode = nameNode.getFirstChild (  ) ;^517^^^^^508^537^Node nameNode = callNode.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P14_Delete_Statement]^^517^^^^^508^537^Node nameNode = callNode.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P2_Replace_Operator]^if  ( nameNode.getType (  )  < Token.NAME )  {^520^^^^^508^537^if  ( nameNode.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^if  ( callNode.getType (  )  == Token.NAME )  {^520^^^^^508^537^if  ( nameNode.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^if  ( nameNodeNode.getType (  )  == Token.NAME )  {^520^^^^^508^537^if  ( nameNode.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^if  ( nameNode.newNumber (  )  == Token.NAME )  {^520^^^^^508^537^if  ( nameNode.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P8_Replace_Mix]^if  ( namespaceNameNode.newNumber (  )  == Token.NAME )  {^520^^^^^508^537^if  ( nameNode.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P9_Replace_Statement]^if  ( n.getType (  )  == Token.NAME )  {^520^^^^^508^537^if  ( nameNode.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P9_Replace_Statement]^if  ( n.getType (  )  != Token.EMPTY )  {^520^^^^^508^537^if  ( nameNode.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P9_Replace_Statement]^if  ( n != null && n.getType (  )  == Token.NAME )  {^520^^^^^508^537^if  ( nameNode.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P15_Unwrap_Block]^java.lang.String name = nameNode.getString(); if (name.equals("String")) {    return false;};^520^521^522^523^524^508^537^if  ( nameNode.getType (  )  == Token.NAME )  { String name = nameNode.getString (  ) ; if  ( name.equals ( "String" )  )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P16_Remove_Block]^^520^521^522^523^524^508^537^if  ( nameNode.getType (  )  == Token.NAME )  { String name = nameNode.getString (  ) ; if  ( name.equals ( "String" )  )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^if  ( namespaceName.equals ( "String" )  )  {^522^^^^^508^537^if  ( name.equals ( "String" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^if  ( name.substring ( "String" )  )  {^522^^^^^508^537^if  ( name.equals ( "String" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P9_Replace_Statement]^if  ( namespaceName.equals ( "Math" )  )  {^522^^^^^508^537^if  ( name.equals ( "String" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P15_Unwrap_Block]^return false;^522^523^524^^^508^537^if  ( name.equals ( "String" )  )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P16_Remove_Block]^^522^523^524^^^508^537^if  ( name.equals ( "String" )  )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( namespaceName.equals ( "Math" )  )  {     return false; }^522^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( c > LARGEST_BASIC_LATIN )  {     return false; }^522^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( pred.apply ( node )  )  {     return true; }^522^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( vars.isEmpty (  )  )  {     return ; }^522^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( callNode.isNoSideEffectsCall (  )  )  {     return false; }^522^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( n ==  ( parent.getFirstChild (  )  )  )  {     return true; }^522^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( ! ( traverseChildrenPred.apply ( node )  )  )  {     return false; }^522^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( "Infinity".equals ( name )  )  {     return true; }^522^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( lhsString == null )  {     return false; }^522^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P3_Replace_Literal]^return true;^523^^^^^508^537^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P1_Replace_Type]^char name = nameNode.getchar (  ) ;^521^^^^^508^537^String name = nameNode.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^String name = callNode.getString (  ) ;^521^^^^^508^537^String name = nameNode.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^String name = nameNode.newNumber (  ) ;^521^^^^^508^537^String name = nameNode.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^int type = ancestor.getType (  ) ;String name = nameNode.getString (  ) ;^521^^^^^508^537^String name = nameNode.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;String name = nameNode.getString (  ) ;^521^^^^^508^537^String name = nameNode.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^String name = n.getString (  ) ;String name = nameNode.getString (  ) ;^521^^^^^508^537^String name = nameNode.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^String name = n.getFirstChild (  ) .getString (  ) ;String name = nameNode.getString (  ) ;^521^^^^^508^537^String name = nameNode.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^Node nameNode = callNode.getFirstChild (  ) ;String name = nameNode.getString (  ) ;^521^^^^^508^537^String name = nameNode.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^String qNameStr = qName.getQualifiedName (  ) ;String name = nameNode.getString (  ) ;^521^^^^^508^537^String name = nameNode.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^String propName = last.getString (  ) ;String name = nameNode.getString (  ) ;^521^^^^^508^537^String name = nameNode.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^String className = constructor.getString (  ) ;String name = nameNode.getString (  ) ;^521^^^^^508^537^String name = nameNode.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P14_Delete_Statement]^^521^^^^^508^537^String name = nameNode.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^return parent.getString (  ) ;String name = nameNode.getString (  ) ;^521^^^^^508^537^String name = nameNode.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^return n.getString (  ) ;String name = nameNode.getString (  ) ;^521^^^^^508^537^String name = nameNode.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^info = nameNode.getJSDocInfo (  ) ;String name = nameNode.getString (  ) ;^521^^^^^508^537^String name = nameNode.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;String name = nameNode.getString (  ) ;^521^^^^^508^537^String name = nameNode.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^parent = nameNode.getParent (  ) ;String name = nameNode.getString (  ) ;^521^^^^^508^537^String name = nameNode.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P3_Replace_Literal]^if  ( name.equals ( "StringStrin" )  )  {^522^^^^^508^537^if  ( name.equals ( "String" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P8_Replace_Mix]^if  ( namespaceName.substring ( "String" )  )  {^522^^^^^508^537^if  ( name.equals ( "String" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P3_Replace_Literal]^if  ( name.equals ( "S" )  )  {^522^^^^^508^537^if  ( name.equals ( "String" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^if  ( nameNode .getString (  )   == Token.NAME )  {^520^^^^^508^537^if  ( nameNode.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^String name = nameNode .newString (  )  ;^521^^^^^508^537^String name = nameNode.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P2_Replace_Operator]^if  ( nameNode.getType (  )  == Token.GETPROP || nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^528^529^^^^508^537^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P2_Replace_Operator]^if  ( nameNode.getType (  )  != Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^528^529^^^^508^537^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^if  ( callNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^528^529^^^^508^537^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P6_Replace_Expression]^if  ( nameNode.getType (  )  == Token.GETPROP ) {^528^529^^^^508^537^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P6_Replace_Expression]^if  (  nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^528^529^^^^508^537^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P6_Replace_Expression]^if  ( nameNode.getType (  )  == GETPROP )  {^528^529^^^^508^537^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P6_Replace_Expression]^if  ( nameNode.getFirstChild (  ) .getType (  )  == NAME )  {^528^529^^^^508^537^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^if  ( nameNode.newNumber (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^528^529^^^^508^537^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^if  ( nameNode .getString (  )   == Token.GETPROP && nameNode.getFirstChild (  )^528^529^^^^508^537^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^if  ( nameNode.equals (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^528^529^^^^508^537^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.newNumber (  ) .getType (  )  == Token.NAME )  {^528^529^^^^508^537^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode .getLastChild (  )  .getType (  )  == Token.NAME )  {^528^529^^^^508^537^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P8_Replace_Mix]^if  ( callNode.getType (  )  == Token.GETPROP ) {^528^529^^^^508^537^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P9_Replace_Statement]^if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  == Token.NAME )  {^528^529^^^^508^537^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P15_Unwrap_Block]^java.lang.String namespaceName = nameNode.getFirstChild().getString(); if (namespaceName.equals("Math")) {    return false;};^528^529^530^531^532^508^537^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  { String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ; if  ( namespaceName.equals ( "Math" )  )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P16_Remove_Block]^^528^529^530^531^532^508^537^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  { String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ; if  ( namespaceName.equals ( "Math" )  )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  (  ( nameNode.getType (  )  )  ==  ( NAME )  )  {     String name = nameNode.getString (  ) ;     if  ( name.equals ( "String" )  )  {         return false;     } }^528^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  (  ( parent != null )  &&  (  ( parent.getType (  )  )  ==  ( VAR )  )  )  {     String name = n.getString (  ) ;     if  ( ! ( vars.containsKey ( name )  )  )  {         vars.put ( name, n ) ;     } }^528^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P3_Replace_Literal]^if  ( namespaceName.equals ( "" )  )  {^531^^^^^528^534^if  ( namespaceName.equals ( "Math" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^if  ( name.equals ( "Math" )  )  {^531^^^^^528^534^if  ( namespaceName.equals ( "Math" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^if  ( namespaceName.substring ( "Math" )  )  {^531^^^^^528^534^if  ( namespaceName.equals ( "Math" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P9_Replace_Statement]^if  ( name.equals ( "String" )  )  {^531^^^^^528^534^if  ( namespaceName.equals ( "Math" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P15_Unwrap_Block]^return false;^531^532^533^^^528^534^if  ( namespaceName.equals ( "Math" )  )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P16_Remove_Block]^^531^532^533^^^528^534^if  ( namespaceName.equals ( "Math" )  )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( c > LARGEST_BASIC_LATIN )  {     return false; }^531^^^^^528^534^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( pred.apply ( node )  )  {     return true; }^531^^^^^528^534^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( name.equals ( "String" )  )  {     return false; }^531^^^^^528^534^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( vars.isEmpty (  )  )  {     return ; }^531^^^^^528^534^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( callNode.isNoSideEffectsCall (  )  )  {     return false; }^531^^^^^528^534^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( n ==  ( parent.getFirstChild (  )  )  )  {     return true; }^531^^^^^528^534^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( ! ( traverseChildrenPred.apply ( node )  )  )  {     return false; }^531^^^^^528^534^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( "Infinity".equals ( name )  )  {     return true; }^531^^^^^528^534^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( lhsString == null )  {     return false; }^531^^^^^528^534^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P3_Replace_Literal]^return true;^532^^^^^528^534^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P1_Replace_Type]^char namespaceName = nameNode.getFirstChild (  ) .getchar (  ) ;^530^^^^^528^534^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^String namespaceName = callNode.getFirstChild (  ) .getString (  ) ;^530^^^^^528^534^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^String namespaceName = nameNode.getFirstChild (  ) .equals (  ) ;^530^^^^^528^534^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^String namespaceName = nameNode.newNumber (  ) .getString (  ) ;^530^^^^^528^534^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^String name = n.getFirstChild (  ) .getString (  ) ;String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^530^^^^^528^534^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^Node nameNode = callNode.getFirstChild (  ) ;String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^530^^^^^528^534^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^String propName = last.getString (  ) ;String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^530^^^^^528^534^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^String name = nameNode.getString (  ) ;String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^530^^^^^528^534^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^String className = constructor.getString (  ) ;String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^530^^^^^528^534^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P8_Replace_Mix]^String namespaceName = nameNode.getFirstChild (  )  .newString (  )  ;^530^^^^^528^534^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P14_Delete_Statement]^^530^^^^^528^534^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^return fnNode.getFirstChild (  ) .getNext (  ) ;String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^530^^^^^528^534^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^return n.getFirstChild (  ) .getNext (  ) ;String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^530^^^^^528^534^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  { String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^530^^^^^528^534^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^String namespaceName = nameNode .getLastChild (  )  .getString (  ) ;^530^^^^^528^534^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( namespaceName.equals ( "Math" )  )  {     return false; }^531^^^^^528^534^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P3_Replace_Literal]^if  ( namespaceName.equals ( "Maath" )  )  {^531^^^^^508^537^if  ( namespaceName.equals ( "Math" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^if  ( name.equals ( "Math" )  )  {^531^^^^^508^537^if  ( namespaceName.equals ( "Math" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^if  ( namespaceName.substring ( "Math" )  )  {^531^^^^^508^537^if  ( namespaceName.equals ( "Math" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P9_Replace_Statement]^if  ( name.equals ( "String" )  )  {^531^^^^^508^537^if  ( namespaceName.equals ( "Math" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P15_Unwrap_Block]^return false;^531^532^533^^^508^537^if  ( namespaceName.equals ( "Math" )  )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P16_Remove_Block]^^531^532^533^^^508^537^if  ( namespaceName.equals ( "Math" )  )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( c > LARGEST_BASIC_LATIN )  {     return false; }^531^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( pred.apply ( node )  )  {     return true; }^531^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( name.equals ( "String" )  )  {     return false; }^531^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( vars.isEmpty (  )  )  {     return ; }^531^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( callNode.isNoSideEffectsCall (  )  )  {     return false; }^531^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( n ==  ( parent.getFirstChild (  )  )  )  {     return true; }^531^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( ! ( traverseChildrenPred.apply ( node )  )  )  {     return false; }^531^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( "Infinity".equals ( name )  )  {     return true; }^531^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( lhsString == null )  {     return false; }^531^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P3_Replace_Literal]^return true;^532^^^^^508^537^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P1_Replace_Type]^char namespaceName = nameNode.getFirstChild (  ) .getchar (  ) ;^530^^^^^508^537^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P5_Replace_Variable]^String namespaceName = callNode.getFirstChild (  ) .getString (  ) ;^530^^^^^508^537^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^String namespaceName = nameNode.getFirstChild (  ) .equals (  ) ;^530^^^^^508^537^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^String namespaceName = nameNode.getFirstChild (  )  .newString (  )  ;^530^^^^^508^537^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^String namespaceName = nameNode.newNumber (  ) .getString (  ) ;^530^^^^^508^537^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^String namespaceName = nameNode .getLastChild (  )  .getString (  ) ;^530^^^^^508^537^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^String name = n.getFirstChild (  ) .getString (  ) ;String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^530^^^^^508^537^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^Node nameNode = callNode.getFirstChild (  ) ;String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^530^^^^^508^537^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^String propName = last.getString (  ) ;String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^530^^^^^508^537^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^String name = nameNode.getString (  ) ;String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^530^^^^^508^537^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^String className = constructor.getString (  ) ;String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^530^^^^^508^537^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^nameNode.getFirstChild (  ) .equals (  )  == Token.NAME )  {^529^^^^^508^537^nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^nameNode.newNumber (  ) .getType (  )  == Token.NAME )  {^529^^^^^508^537^nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^nameNode .getLastChild (  )  .getType (  )  == Token.NAME )  {^529^^^^^508^537^nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P14_Delete_Statement]^^529^530^^^^508^537^nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  { String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P8_Replace_Mix]^String namespaceName = callNode.getFirstChild (  ) .equals (  ) ;^530^^^^^508^537^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P14_Delete_Statement]^^530^^^^^508^537^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^return fnNode.getFirstChild (  ) .getNext (  ) ;String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^530^^^^^508^537^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^return n.getFirstChild (  ) .getNext (  ) ;String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^530^^^^^508^537^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P11_Insert_Donor_Statement]^nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  { String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^530^^^^^508^537^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P13_Insert_Block]^if  ( namespaceName.equals ( "Math" )  )  {     return false; }^531^^^^^508^537^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P3_Replace_Literal]^return false;^536^^^^^508^537^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] functionCallHasSideEffects [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  callNode  nameNode  
[P7_Replace_Invocation]^if  ( NodeUtil.isAssign ( n )  )  {^547^^^^^546^565^if  ( NodeUtil.isAssignmentOp ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] nodeTypeMayHaveSideEffects [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P9_Replace_Statement]^if  ( isAssignmentOp ( n )  )  {^547^^^^^546^565^if  ( NodeUtil.isAssignmentOp ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] nodeTypeMayHaveSideEffects [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P9_Replace_Statement]^if  ( NodeUtil.isStatementBlock ( parent )  )  {^547^^^^^546^565^if  ( NodeUtil.isAssignmentOp ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] nodeTypeMayHaveSideEffects [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P9_Replace_Statement]^if  ( !NodeUtil.isExprAssign ( n )  )  {^547^^^^^546^565^if  ( NodeUtil.isAssignmentOp ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] nodeTypeMayHaveSideEffects [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P15_Unwrap_Block]^return true;^547^548^549^^^546^565^if  ( NodeUtil.isAssignmentOp ( n )  )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] nodeTypeMayHaveSideEffects [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P16_Remove_Block]^^547^548^549^^^546^565^if  ( NodeUtil.isAssignmentOp ( n )  )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] nodeTypeMayHaveSideEffects [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^return false;^548^^^^^546^565^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] nodeTypeMayHaveSideEffects [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^if  ( NodeUtil .getOpFromAssignmentOp ( n )   )  {^547^^^^^546^565^if  ( NodeUtil.isAssignmentOp ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] nodeTypeMayHaveSideEffects [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^return false;^558^^^^^546^565^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] nodeTypeMayHaveSideEffects [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  ) ;^561^^^^^546^565^return n.hasChildren (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] nodeTypeMayHaveSideEffects [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^return true;^563^^^^^546^565^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] nodeTypeMayHaveSideEffects [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^switch ( n.newNumber (  )  )  {^551^^^^^546^565^switch ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] nodeTypeMayHaveSideEffects [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^switch ( n .getString (  )   )  {^551^^^^^546^565^switch ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] nodeTypeMayHaveSideEffects [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P8_Replace_Mix]^return n .detachChildren (  )  ;^561^^^^^546^565^return n.hasChildren (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] nodeTypeMayHaveSideEffects [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^561^^^^^546^565^return n.hasChildren (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] nodeTypeMayHaveSideEffects [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^572^^^^^571^574^Set<String> emptySet = Collections.emptySet (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P5_Replace_Variable]^return canBeSideEffected (  emptySet ) ;^573^^^^^571^574^return canBeSideEffected ( n, emptySet ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P5_Replace_Variable]^return canBeSideEffected ( n ) ;^573^^^^^571^574^return canBeSideEffected ( n, emptySet ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P5_Replace_Variable]^return canBeSideEffected ( emptySet, n ) ;^573^^^^^571^574^return canBeSideEffected ( n, emptySet ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return isValidDefineValue ( n, emptySet ) ;^573^^^^^571^574^return canBeSideEffected ( n, emptySet ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P12_Insert_Condition]^if  ( canBeSideEffected ( c, knownConstants )  )  { return canBeSideEffected ( n, emptySet ) ; }^573^^^^^571^574^return canBeSideEffected ( n, emptySet ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^573^^^^^571^574^return canBeSideEffected ( n, emptySet ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^return false;^589^^^^^582^608^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P2_Replace_Operator]^return !NodeUtil.isConstantName ( n ) || !knownConstants.contains ( n.getString (  )  ) ;^592^593^^^^582^608^return !NodeUtil.isConstantName ( n ) && !knownConstants.contains ( n.getString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P5_Replace_Variable]^return !NodeUtil.isConstantName ( c ) && !knownConstants.contains ( n.getString (  )  ) ;^592^593^^^^582^608^return !NodeUtil.isConstantName ( n ) && !knownConstants.contains ( n.getString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P7_Replace_Invocation]^return !NodeUtil.isName ( n ) && !knownConstants.contains ( n.getString (  )  ) ;^592^593^^^^582^608^return !NodeUtil.isConstantName ( n ) && !knownConstants.contains ( n.getString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P7_Replace_Invocation]^return !NodeUtil.isConstantName ( n ) && !knownConstants.contains ( n.newNumber (  )  ) ;^592^593^^^^582^608^return !NodeUtil.isConstantName ( n ) && !knownConstants.contains ( n.getString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P8_Replace_Mix]^return   !knownConstants.contains ( c.newNumber (  )  ) ;^592^593^^^^582^608^return !NodeUtil.isConstantName ( n ) && !knownConstants.contains ( n.getString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P3_Replace_Literal]^return false;^598^^^^^582^608^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P5_Replace_Variable]^switch  ( c.getType (  )  )  {^583^^^^^582^608^switch  ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P7_Replace_Invocation]^switch  ( n.newNumber (  )  )  {^583^^^^^582^608^switch  ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P7_Replace_Invocation]^switch  ( n .getString (  )   )  {^583^^^^^582^608^switch  ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P8_Replace_Mix]^return !NodeUtil .isControlStructure ( c )  && !knownConstants.contains ( n.getString (  )  ) ;^592^593^^^^582^608^return !NodeUtil.isConstantName ( n ) && !knownConstants.contains ( n.getString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P14_Delete_Statement]^^592^593^^^^582^608^return !NodeUtil.isConstantName ( n ) && !knownConstants.contains ( n.getString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P5_Replace_Variable]^&& !knownConstants.contains ( c.getString (  )  ) ;^593^^^^^582^608^&& !knownConstants.contains ( n.getString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P7_Replace_Invocation]^&& !knownConstants.contains ( n.newNumber (  )  ) ;^593^^^^^582^608^&& !knownConstants.contains ( n.getString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P14_Delete_Statement]^^593^^^^^582^608^&& !knownConstants.contains ( n.getString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P11_Insert_Donor_Statement]^return !NodeUtil.isConstantName ( n ) && !knownConstants.contains ( n.getString (  )  ) ;&& !knownConstants.contains ( n.getString (  )  ) ;^593^^^^^582^608^&& !knownConstants.contains ( n.getString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P5_Replace_Variable]^if  ( nanBeSideEffected ( c, knownConstants )  )  {^602^^^^^582^608^if  ( canBeSideEffected ( c, knownConstants )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P5_Replace_Variable]^if  ( canBeSideEffected (  knownConstants )  )  {^602^^^^^582^608^if  ( canBeSideEffected ( c, knownConstants )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P5_Replace_Variable]^if  ( canBeSideEffected ( c )  )  {^602^^^^^582^608^if  ( canBeSideEffected ( c, knownConstants )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P5_Replace_Variable]^if  ( knownConstantsanBeSideEffected ( c, c )  )  {^602^^^^^582^608^if  ( canBeSideEffected ( c, knownConstants )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P7_Replace_Invocation]^if  ( isValidDefineValue ( c, knownConstants )  )  {^602^^^^^582^608^if  ( canBeSideEffected ( c, knownConstants )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P15_Unwrap_Block]^return true;^602^603^604^^^582^608^if  ( canBeSideEffected ( c, knownConstants )  )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P16_Remove_Block]^^602^603^604^^^582^608^if  ( canBeSideEffected ( c, knownConstants )  )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P3_Replace_Literal]^return false;^603^^^^^582^608^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P2_Replace_Operator]^for  ( Node c = n.getFirstChild (  ) ; c == null; c = c.getNext (  )  )  {^601^^^^^582^608^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P5_Replace_Variable]^for  ( Node n = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^601^^^^^582^608^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P5_Replace_Variable]^for  ( Node n = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^601^^^^^582^608^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P7_Replace_Invocation]^for  ( Node c = n.newNumber (  ) ; c != null; c = c.getNext (  )  )  {^601^^^^^582^608^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P7_Replace_Invocation]^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.newNumber (  )  )  {^601^^^^^582^608^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P13_Insert_Block]^if  ( canBeSideEffected ( c, knownConstants )  )  {     return true; }^602^^^^^582^608^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P13_Insert_Block]^if  ( ! ( isLiteralValue ( child )  )  )  {     return false; }^602^^^^^582^608^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P13_Insert_Block]^if  ( isAssignmentOp ( n )  )  {     return true; }^602^^^^^582^608^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P7_Replace_Invocation]^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c .getParent (  )   )  {^601^^^^^582^608^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P8_Replace_Mix]^for  ( Node c =  n.getFirstChild (  ) ; n !^601^^^^^582^608^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P5_Replace_Variable]^for  ( Node c = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^601^^^^^582^608^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P7_Replace_Invocation]^for  ( Node c = n .getLastChild (  )  ; c != null; c = c.getNext (  )  )  {^601^^^^^582^608^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P14_Delete_Statement]^^601^602^603^604^^582^608^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  { if  ( canBeSideEffected ( c, knownConstants )  )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P3_Replace_Literal]^return true;^607^^^^^582^608^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] canBeSideEffected [RETURN_TYPE] boolean   Node n String> knownConstants [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  c  n  
[P3_Replace_Literal]^case Token.COMMA:  return 1;^629^^^^^614^644^case Token.COMMA:  return 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P8_Replace_Mix]^case Token.COMMA:  return 0L;^629^^^^^614^644^case Token.COMMA:  return 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P3_Replace_Literal]^case Token.ASSIGN: return -8;^641^^^^^626^656^case Token.ASSIGN: return 1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P8_Replace_Mix]^case Token.ASSIGN: return 2;^641^^^^^626^656^case Token.ASSIGN: return 1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P3_Replace_Literal]^case Token.HOOK:   return type;^642^^^^^627^657^case Token.HOOK:   return 2;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P8_Replace_Mix]^case Token.HOOK:   return 4;^642^^^^^627^657^case Token.HOOK:   return 2;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P3_Replace_Literal]^case Token.OR:     return 0;^643^^^^^628^658^case Token.OR:     return 3;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P3_Replace_Literal]^case Token.AND:    return 2;^644^^^^^629^659^case Token.AND:    return 4;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P8_Replace_Mix]^case Token.AND:    return 5;^644^^^^^629^659^case Token.AND:    return 4;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P3_Replace_Literal]^case Token.BITOR:  return -4;^645^^^^^630^660^case Token.BITOR:  return 5;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P8_Replace_Mix]^case Token.BITOR:  return 5 % 3;^645^^^^^630^660^case Token.BITOR:  return 5;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P3_Replace_Literal]^case Token.BITXOR: return type;^646^^^^^631^661^case Token.BITXOR: return 6;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P8_Replace_Mix]^case Token.BITXOR: return 6 >> 4;^646^^^^^631^661^case Token.BITXOR: return 6;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P3_Replace_Literal]^case Token.BITAND: return type;^647^^^^^632^662^case Token.BITAND: return 7;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P8_Replace_Mix]^case Token.BITAND: return 5;^647^^^^^632^662^case Token.BITAND: return 7;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P3_Replace_Literal]^case Token.SHNE:   return type;^651^^^^^636^666^case Token.SHNE:   return 8;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P8_Replace_Mix]^case Token.SHNE:   return 0;^651^^^^^636^666^case Token.SHNE:   return 8;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P3_Replace_Literal]^case Token.IN:     return 7;^657^^^^^642^672^case Token.IN:     return 9;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P8_Replace_Mix]^case Token.IN:     return 9 / 2;^657^^^^^642^672^case Token.IN:     return 9;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P3_Replace_Literal]^case Token.URSH:   return type;^660^^^^^645^675^case Token.URSH:   return 10;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P8_Replace_Mix]^case Token.URSH:   return 10L;^660^^^^^645^675^case Token.URSH:   return 10;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P3_Replace_Literal]^case Token.ADD:    return type;^662^^^^^647^677^case Token.ADD:    return 11;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P8_Replace_Mix]^case Token.ADD:    return 11 - 1;^662^^^^^647^677^case Token.ADD:    return 11;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P3_Replace_Literal]^case Token.DIV:    return 5;^665^^^^^650^680^case Token.DIV:    return 12;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P8_Replace_Mix]^case Token.DIV:    return 13;^665^^^^^650^680^case Token.DIV:    return 12;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P3_Replace_Literal]^case Token.NEG:    return type;^675^^^^^660^690^case Token.NEG:    return 13;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P8_Replace_Mix]^case Token.NEG:    return 9;^675^^^^^660^690^case Token.NEG:    return 13;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P3_Replace_Literal]^return 24;^696^^^^^681^711^return 15;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P8_Replace_Mix]^return 15 - 0;^696^^^^^681^711^return 15;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P2_Replace_Operator]^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  <  + "  ( type " + type + " ) " ) ;^698^699^700^^^683^713^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  + "  ( type " + type + " ) " ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P2_Replace_Operator]^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  |  + "  ( type " + type + " ) " ) ;^698^699^700^^^683^713^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  + "  ( type " + type + " ) " ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P2_Replace_Operator]^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  &&  + "  ( type " + type + " ) " ) ;^698^699^700^^^683^713^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  + "  ( type " + type + " ) " ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P2_Replace_Operator]^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  >  + "  ( type " + type + " ) " ) ;^698^699^700^^^683^713^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  + "  ( type " + type + " ) " ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P3_Replace_Literal]^default: throw new Error ( "pnknown precedence for " + Node.tokenToName ( type )  + "  ( type " + type + " ) " ) ;^698^699^700^^^683^713^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  + "  ( type " + type + " ) " ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P7_Replace_Invocation]^default: throw new Error ( "Unknown precedence for " + Node.newNumber ( type )  + "  ( type " + type + " ) " ) ;^698^699^700^^^683^713^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  + "  ( type " + type + " ) " ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P7_Replace_Invocation]^default: throw new Error ( "Unknown precedence for " + Node .getQualifiedName (  )   + "  ( type " + type + " ) " ) ;^698^699^700^^^683^713^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  + "  ( type " + type + " ) " ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P2_Replace_Operator]^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  ==  + "  ( type " + type + " ) " ) ;^698^699^700^^^683^713^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  + "  ( type " + type + " ) " ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P2_Replace_Operator]^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  >=  + "  ( type " + type + " ) " ) ;^698^699^700^^^683^713^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  + "  ( type " + type + " ) " ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P3_Replace_Literal]^default: throw new Error ( "Unknown precedence for nkn" + Node.tokenToName ( type )  + "  ( type " + type + " ) " ) ;^698^699^700^^^683^713^default: throw new Error ( "Unknown precedence for " + Node.tokenToName ( type )  + "  ( type " + type + " ) " ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P7_Replace_Invocation]^Node.newNumber ( type )  + "  ( type " + type + " ) " ) ;^699^700^^^^684^714^Node.tokenToName ( type )  + "  ( type " + type + " ) " ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P14_Delete_Statement]^^699^700^^^^684^714^Node.tokenToName ( type )  + "  ( type " + type + " ) " ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] precedence [RETURN_TYPE] int   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P3_Replace_Literal]^return false;^717^^^^^710^721^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isAssociative [RETURN_TYPE] boolean   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P3_Replace_Literal]^return true;^719^^^^^710^721^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isAssociative [RETURN_TYPE] boolean   int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  
[P3_Replace_Literal]^return false;^737^^^^^723^740^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isAssignmentOp [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^switch  ( n.newNumber (  )  ) {^724^^^^^723^740^switch  ( n.getType (  )  ) {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isAssignmentOp [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^switch  ( n .getString (  )   ) {^724^^^^^723^740^switch  ( n.getType (  )  ) {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isAssignmentOp [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^return true;^739^^^^^723^740^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isAssignmentOp [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^switch  ( n.newNumber (  )  ) {^743^^^^^742^768^switch  ( n.getType (  )  ) {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getOpFromAssignmentOp [RETURN_TYPE] int   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^switch  ( n .getString (  )   ) {^743^^^^^742^768^switch  ( n.getType (  )  ) {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getOpFromAssignmentOp [RETURN_TYPE] int   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^743^744^745^^^742^768^switch  ( n.getType (  )  ) { case Token.ASSIGN_BITOR: return Token.BITOR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getOpFromAssignmentOp [RETURN_TYPE] int   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( "Non-literal value: " + n )  )   ;^767^^^^^742^768^throw new IllegalArgumentException  (" ")  ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getOpFromAssignmentOp [RETURN_TYPE] int   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  <= Token.EXPR_RESULT;^771^^^^^770^772^return n.getType (  )  == Token.EXPR_RESULT;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExpressionNode [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  )  == Token.EXPR_RESULT;^771^^^^^770^772^return n.getType (  )  == Token.EXPR_RESULT;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExpressionNode [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n .getString (  )   == Token.EXPR_RESULT;^771^^^^^770^772^return n.getType (  )  == Token.EXPR_RESULT;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExpressionNode [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P12_Insert_Condition]^if  ( n.getType (  )  == Token.NAME )  { return n.getType (  )  == Token.EXPR_RESULT; }^771^^^^^770^772^return n.getType (  )  == Token.EXPR_RESULT;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExpressionNode [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P12_Insert_Condition]^if  ( nameNode.getType (  )  == Token.NAME )  { return n.getType (  )  == Token.EXPR_RESULT; }^771^^^^^770^772^return n.getType (  )  == Token.EXPR_RESULT;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExpressionNode [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P12_Insert_Condition]^if  ( n.getType (  )  != Token.EMPTY )  { return n.getType (  )  == Token.EXPR_RESULT; }^771^^^^^770^772^return n.getType (  )  == Token.EXPR_RESULT;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExpressionNode [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^771^^^^^770^772^return n.getType (  )  == Token.EXPR_RESULT;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExpressionNode [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return containsCall ( n, Token.FUNCTION ) ;^778^^^^^777^779^return containsType ( n, Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^778^^^^^777^779^return containsType ( n, Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return containsCall ( n, Token.THIS ) ;^785^^^^^784^786^return containsType ( n, Token.THIS ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] referencesThis [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^785^^^^^784^786^return containsType ( n, Token.THIS ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] referencesThis [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  == Token.GETPROP && n.getType (  )  == Token.GETELEM;^792^793^^^^791^794^return n.getType (  )  == Token.GETPROP || n.getType (  )  == Token.GETELEM;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isGet [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  <= Token.GETPROP || n.getType (  )  == Token.GETELEM;^792^793^^^^791^794^return n.getType (  )  == Token.GETPROP || n.getType (  )  == Token.GETELEM;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isGet [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  != Token.GETPROP || n.getType (  )  == Token.GETELEM;^792^793^^^^791^794^return n.getType (  )  == Token.GETPROP || n.getType (  )  == Token.GETELEM;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isGet [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  )  == Token.GETPROP || n.getType (  )  == Token.GETELEM;^792^793^^^^791^794^return n.getType (  )  == Token.GETPROP || n.getType (  )  == Token.GETELEM;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isGet [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^792^793^^^^791^794^return n.getType (  )  == Token.GETPROP || n.getType (  )  == Token.GETELEM;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isGet [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^|| n.newNumber (  )  == Token.GETELEM;^793^^^^^791^794^|| n.getType (  )  == Token.GETELEM;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isGet [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^|| n .getString (  )   == Token.GETELEM;^793^^^^^791^794^|| n.getType (  )  == Token.GETELEM;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isGet [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^793^^^^^791^794^|| n.getType (  )  == Token.GETELEM;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isGet [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  <= Token.GETPROP;^800^^^^^799^801^return n.getType (  )  == Token.GETPROP;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isGetProp [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  )  == Token.GETPROP;^800^^^^^799^801^return n.getType (  )  == Token.GETPROP;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isGetProp [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P8_Replace_Mix]^return n.newNumber (  )   ||  Token.GETPROP;^800^^^^^799^801^return n.getType (  )  == Token.GETPROP;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isGetProp [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P8_Replace_Mix]^return n .getString (  )   == Token.GETPROP;^800^^^^^799^801^return n.getType (  )  == Token.GETPROP;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isGetProp [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^800^^^^^799^801^return n.getType (  )  == Token.GETPROP;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isGetProp [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  != Token.NAME;^807^^^^^806^808^return n.getType (  )  == Token.NAME;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  )  == Token.NAME;^807^^^^^806^808^return n.getType (  )  == Token.NAME;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n .getString (  )   == Token.NAME;^807^^^^^806^808^return n.getType (  )  == Token.NAME;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^807^^^^^806^808^return n.getType (  )  == Token.NAME;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  != Token.NEW;^814^^^^^813^815^return n.getType (  )  == Token.NEW;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNew [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  )  == Token.NEW;^814^^^^^813^815^return n.getType (  )  == Token.NEW;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNew [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^814^^^^^813^815^return n.getType (  )  == Token.NEW;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNew [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  <= Token.VAR;^821^^^^^820^822^return n.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVar [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  )  == Token.VAR;^821^^^^^820^822^return n.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVar [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n .getString (  )   == Token.VAR;^821^^^^^820^822^return n.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVar [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^821^^^^^820^822^return n.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVar [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  == Token.NAME || n.getParent (  ) .getType (  )  == Token.VAR;^833^^^^^830^834^return n.getType (  )  == Token.NAME && n.getParent (  ) .getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  <= Token.NAME && n.getParent (  ) .getType (  )  == Token.VAR;^833^^^^^830^834^return n.getType (  )  == Token.NAME && n.getParent (  ) .getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  != Token.NAME && n.getParent (  ) .getType (  )  == Token.VAR;^833^^^^^830^834^return n.getType (  )  == Token.NAME && n.getParent (  ) .getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P5_Replace_Variable]^return n.getType (  )  == Token.2 && n.getParent (  ) .getType (  )  == Token.VAR;^833^^^^^830^834^return n.getType (  )  == Token.NAME && n.getParent (  ) .getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  )  == Token.NAME && n.getParent (  ) .getType (  )  == Token.VAR;^833^^^^^830^834^return n.getType (  )  == Token.NAME && n.getParent (  ) .getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.equals (  )  == Token.NAME && n.getParent (  ) .getType (  )  == Token.VAR;^833^^^^^830^834^return n.getType (  )  == Token.NAME && n.getParent (  ) .getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.getType (  )  == Token.NAME && n.tokenToName (  ) .getType (  )  == Token.VAR;^833^^^^^830^834^return n.getType (  )  == Token.NAME && n.getParent (  ) .getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P12_Insert_Condition]^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  { return n.getType (  )  == Token.NAME && n.getParent (  ) .getType (  )  == Token.VAR; }^833^^^^^830^834^return n.getType (  )  == Token.NAME && n.getParent (  ) .getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P12_Insert_Condition]^if  ( node.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  { return n.getType (  )  == Token.NAME && n.getParent (  ) .getType (  )  == Token.VAR; }^833^^^^^830^834^return n.getType (  )  == Token.NAME && n.getParent (  ) .getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n .getString (  )   == Token.NAME && n.getParent (  )^833^^^^^830^834^return n.getType (  )  == Token.NAME && n.getParent (  ) .getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^833^^^^^830^834^return n.getType (  )  == Token.NAME && n.getParent (  ) .getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.getType (  )  == Token.NAME && n .getString (  )  .getType (  )  == Token.VAR;^833^^^^^830^834^return n.getType (  )  == Token.NAME && n.getParent (  ) .getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P5_Replace_Variable]^Preconditions.checkState ( isName ( parent )  ) ;^841^^^^^840^850^Preconditions.checkState ( isName ( n )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^Preconditions.checkState ( isNew ( n )  ) ;^841^^^^^840^850^Preconditions.checkState ( isName ( n )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P14_Delete_Statement]^^841^^^^^840^850^Preconditions.checkState ( isName ( n )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( isFunction ( fn )  ) ;Preconditions.checkState ( isName ( n )  ) ;^841^^^^^840^850^Preconditions.checkState ( isName ( n )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( n.getType (  )  == Token.BLOCK ) ;Preconditions.checkState ( isName ( n )  ) ;^841^^^^^840^850^Preconditions.checkState ( isName ( n )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( block.getType (  )  == Token.BLOCK ) ;Preconditions.checkState ( isName ( n )  ) ;^841^^^^^840^850^Preconditions.checkState ( isName ( n )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( isFunction ( function )  ) ;Preconditions.checkState ( isName ( n )  ) ;^841^^^^^840^850^Preconditions.checkState ( isName ( n )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( isControlStructure ( parent )  ) ;Preconditions.checkState ( isName ( n )  ) ;^841^^^^^840^850^Preconditions.checkState ( isName ( n )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( parent != null ) ;Preconditions.checkState ( isName ( n )  ) ;^841^^^^^840^850^Preconditions.checkState ( isName ( n )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( n.getType (  )  == Token.TRY ) ;Preconditions.checkState ( isName ( n )  ) ;^841^^^^^840^850^Preconditions.checkState ( isName ( n )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P8_Replace_Mix]^Preconditions.checkState ( isNew ( parent )  ) ;^841^^^^^840^850^Preconditions.checkState ( isName ( n )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P14_Delete_Statement]^^841^842^^^^840^850^Preconditions.checkState ( isName ( n )  ) ; Node parent = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^Node parent = n.tokenToName (  ) ;^842^^^^^840^850^Node parent = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^Node parent = n .getString (  )  ;^842^^^^^840^850^Node parent = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^Node parent = parent.getParent (  ) ;^842^^^^^840^850^Node parent = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P14_Delete_Statement]^^842^^^^^840^850^Node parent = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P6_Replace_Expression]^if  ( parent.getFirstChild (  )  == n )  {^843^^^^^840^850^if  ( isVar ( parent )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^if  ( isName ( parent )  )  {^843^^^^^840^850^if  ( isVar ( parent )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P13_Insert_Block]^if  (  ( checkForStateChangeHelper ( n.getFirstChild (  ) , checkForNewObjects )  )  ||  ( checkForStateChangeHelper ( n.getLastChild (  ) , checkForNewObjects )  )  )  {     return true; }^843^^^^^840^850^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P13_Insert_Block]^if  (  ( isAssign ( parent )  )  &&  (  ( parent.getFirstChild (  )  )  == n )  )  {     return n.getNext (  ) ; }else {     return null; }^843^^^^^840^850^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P2_Replace_Operator]^} else if  ( isAssign ( parent )  || parent.getFirstChild (  )  == n )  {^845^^^^^840^850^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P2_Replace_Operator]^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  <= n )  {^845^^^^^840^850^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^} else if  ( isAssign ( n )  && parent.getFirstChild (  )  == parent )  {^845^^^^^840^850^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P6_Replace_Expression]^} else if  ( isAssign ( parent )  ) {^845^^^^^840^850^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P6_Replace_Expression]^} else if  (  parent.getFirstChild (  )  == n )  {^845^^^^^840^850^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P6_Replace_Expression]^} else {^845^^^^^840^850^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^} else if  ( isExprAssign ( parent )  && parent.getFirstChild (  )  == n )  {^845^^^^^840^850^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^} else if  ( isAssign ( parent )  && parent.newNumber (  )  == n )  {^845^^^^^840^850^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P15_Unwrap_Block]^return n.getNext();^845^846^847^848^849^840^850^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  == n )  { return n.getNext (  ) ; } else { return null; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P16_Remove_Block]^^845^846^847^848^849^840^850^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  == n )  { return n.getNext (  ) ; } else { return null; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P13_Insert_Block]^if  ( ! ( isLiteralValue ( child )  )  )  {     return false; }^845^^^^^840^850^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P13_Insert_Block]^if  ( isVar ( parent )  )  {     return n.getFirstChild (  ) ; }else     if  (  ( isAssign ( parent )  )  &&  (  ( parent.getFirstChild (  )  )  == n )  )  {         return n.getNext (  ) ;     }else {         return null;     }^845^^^^^840^850^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P13_Insert_Block]^if  ( isAssignmentOp ( n )  )  {     return true; }^845^^^^^840^850^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P13_Insert_Block]^if  ( has ( c, pred, traverseChildrenPred )  )  {     return true; }^845^^^^^840^850^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P8_Replace_Mix]^return this;^848^^^^^840^850^return null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^return parent.getNext (  ) ;^846^^^^^840^850^return n.getNext (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^return n.newNumber (  ) ;^846^^^^^840^850^return n.getNext (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^return n .getParent (  )  ;^846^^^^^840^850^return n.getNext (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P14_Delete_Statement]^^846^^^^^840^850^return n.getNext (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^} else if  ( isAssign ( n )  && parent.getFirstChild (  )  == n )  {^845^^^^^840^850^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P8_Replace_Mix]^} else if  ( isExprAssign ( n )  && parent.getFirstChild (  )  == n )  {^845^^^^^840^850^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^} else if  ( isAssign ( parent )  && parent .getLastChild (  )   == n )  {^845^^^^^840^850^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P8_Replace_Mix]^return parent.newNumber (  ) ;^846^^^^^840^850^return n.getNext (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^return parent.getFirstChild (  ) ;^844^^^^^840^850^return n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^return n.newNumber (  ) ;^844^^^^^840^850^return n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P12_Insert_Condition]^if  ( n == parent.getFirstChild (  )  )  { return n.getFirstChild (  ) ; }^844^^^^^840^850^return n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^return n .getLastChild (  )  ;^844^^^^^840^850^return n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P14_Delete_Statement]^^844^^^^^840^850^return n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P2_Replace_Operator]^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  != n )  {^845^^^^^840^850^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P8_Replace_Mix]^} else if  (  parent.newNumber (  )  == n )  {^845^^^^^840^850^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P8_Replace_Mix]^return true;^848^^^^^840^850^return null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P8_Replace_Mix]^return parent.newNumber (  ) ;^844^^^^^840^850^return n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^if  ( isVar ( n )  )  {^843^^^^^840^850^if  ( isVar ( parent )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P8_Replace_Mix]^} else if  ( isAssign ( n )  && parent.newNumber (  )  == n )  {^845^^^^^840^850^} else if  ( isAssign ( parent )  && parent.getFirstChild (  )  == n )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAssignedValue [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P2_Replace_Operator]^return n.getType (  )  != Token.STRING;^856^^^^^855^857^return n.getType (  )  == Token.STRING;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isString [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  )  == Token.STRING;^856^^^^^855^857^return n.getType (  )  == Token.STRING;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isString [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n .getString (  )   == Token.STRING;^856^^^^^855^857^return n.getType (  )  == Token.STRING;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isString [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^856^^^^^855^857^return n.getType (  )  == Token.STRING;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isString [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  == Token.EXPR_RESULT || n.getFirstChild (  ) .getType (  )  == Token.ASSIGN;^867^868^^^^866^869^return n.getType (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.ASSIGN;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprAssign [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  != Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.ASSIGN;^867^868^^^^866^869^return n.getType (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.ASSIGN;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprAssign [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.ASSIGN;^867^868^^^^866^869^return n.getType (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.ASSIGN;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprAssign [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.equals (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.ASSIGN;^867^868^^^^866^869^return n.getType (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.ASSIGN;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprAssign [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.getType (  )  == Token.EXPR_RESULT && n.newNumber (  ) .getType (  )  == Token.ASSIGN;^867^868^^^^866^869^return n.getType (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.ASSIGN;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprAssign [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P8_Replace_Mix]^return n.getType (  )  == Token.EXPR_RESULT && n .getLastChild (  )  .getType (  )  == Token.ASSIGN;^867^868^^^^866^869^return n.getType (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.ASSIGN;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprAssign [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^867^868^^^^866^869^return n.getType (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.ASSIGN;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprAssign [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^&& n.getFirstChild (  ) .equals (  )  == Token.ASSIGN;^868^^^^^866^869^&& n.getFirstChild (  ) .getType (  )  == Token.ASSIGN;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprAssign [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^&& n.newNumber (  ) .getType (  )  == Token.ASSIGN;^868^^^^^866^869^&& n.getFirstChild (  ) .getType (  )  == Token.ASSIGN;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprAssign [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^868^^^^^866^869^&& n.getFirstChild (  ) .getType (  )  == Token.ASSIGN;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprAssign [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^&& n .getLastChild (  )  .getType (  )  == Token.ASSIGN;^868^^^^^866^869^&& n.getFirstChild (  ) .getType (  )  == Token.ASSIGN;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprAssign [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  != Token.ASSIGN;^875^^^^^874^876^return n.getType (  )  == Token.ASSIGN;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isAssign [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  )  == Token.ASSIGN;^875^^^^^874^876^return n.getType (  )  == Token.ASSIGN;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isAssign [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n .getString (  )   == Token.ASSIGN;^875^^^^^874^876^return n.getType (  )  == Token.ASSIGN;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isAssign [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^875^^^^^874^876^return n.getType (  )  == Token.ASSIGN;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isAssign [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  == Token.EXPR_RESULT || n.getFirstChild (  ) .getType (  )  == Token.CALL;^886^887^^^^885^888^return n.getType (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.CALL;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprCall [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  >= Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.CALL;^886^887^^^^885^888^return n.getType (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.CALL;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprCall [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  <= Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.CALL;^886^887^^^^885^888^return n.getType (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.CALL;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprCall [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.CALL;^886^887^^^^885^888^return n.getType (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.CALL;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprCall [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.equals (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.CALL;^886^887^^^^885^888^return n.getType (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.CALL;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprCall [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.getType (  )  == Token.EXPR_RESULT && n.newNumber (  ) .getType (  )  == Token.CALL;^886^887^^^^885^888^return n.getType (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.CALL;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprCall [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.getType (  )  == Token.EXPR_RESULT && n .getLastChild (  )  .getType (  )  == Token.CALL;^886^887^^^^885^888^return n.getType (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.CALL;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprCall [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P8_Replace_Mix]^return n .getString (  )   == Token.EXPR_RESULT && n.getFirstChild (  )^886^887^^^^885^888^return n.getType (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.CALL;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprCall [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^886^887^^^^885^888^return n.getType (  )  == Token.EXPR_RESULT && n.getFirstChild (  ) .getType (  )  == Token.CALL;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprCall [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^&& n.getFirstChild (  ) .equals (  )  == Token.CALL;^887^^^^^885^888^&& n.getFirstChild (  ) .getType (  )  == Token.CALL;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprCall [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^&& n.getFirstChild (  )  .getString (  )   == Token.CALL;^887^^^^^885^888^&& n.getFirstChild (  ) .getType (  )  == Token.CALL;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprCall [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^&& n.newNumber (  ) .getType (  )  == Token.CALL;^887^^^^^885^888^&& n.getFirstChild (  ) .getType (  )  == Token.CALL;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprCall [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^&& n .getLastChild (  )  .getType (  )  == Token.CALL;^887^^^^^885^888^&& n.getFirstChild (  ) .getType (  )  == Token.CALL;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprCall [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^887^^^^^885^888^&& n.getFirstChild (  ) .getType (  )  == Token.CALL;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isExprCall [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  == Token.FOR || n.getChildCount (  )  == 3;^894^895^^^^893^896^return n.getType (  )  == Token.FOR && n.getChildCount (  )  == 3;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isForIn [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  < Token.FOR && n.getChildCount (  )  == 3;^894^895^^^^893^896^return n.getType (  )  == Token.FOR && n.getChildCount (  )  == 3;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isForIn [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  != Token.FOR && n.getChildCount (  )  == 3;^894^895^^^^893^896^return n.getType (  )  == Token.FOR && n.getChildCount (  )  == 3;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isForIn [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  )  == Token.FOR && n.getChildCount (  )  == 3;^894^895^^^^893^896^return n.getType (  )  == Token.FOR && n.getChildCount (  )  == 3;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isForIn [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.getType (  )  == Token.FOR && n.newNumber (  )  == 3;^894^895^^^^893^896^return n.getType (  )  == Token.FOR && n.getChildCount (  )  == 3;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isForIn [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P8_Replace_Mix]^return n .getString (  )   == Token.FOR && n.getChildCount (  )  == 3;^894^895^^^^893^896^return n.getType (  )  == Token.FOR && n.getChildCount (  )  == 3;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isForIn [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^894^895^^^^893^896^return n.getType (  )  == Token.FOR && n.getChildCount (  )  == 3;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isForIn [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^&& n.newNumber (  )  == 3;^895^^^^^893^896^&& n.getChildCount (  )  == 3;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isForIn [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^&& n .addChildToFront ( n )   == 3;^895^^^^^893^896^&& n.getChildCount (  )  == 3;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isForIn [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^895^^^^^893^896^&& n.getChildCount (  )  == 3;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isForIn [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^return false;^906^^^^^901^910^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLoopStructure [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^return true;^908^^^^^901^910^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLoopStructure [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^switch  ( n.newNumber (  )  )  {^902^^^^^901^910^switch  ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLoopStructure [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^switch  ( n .getString (  )   )  {^902^^^^^901^910^switch  ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLoopStructure [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  ) ;^921^^^^^917^927^return n.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getLoopCodeBlock [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  ) ;^923^^^^^917^927^return n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getLoopCodeBlock [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P12_Insert_Condition]^if  ( n == parent.getFirstChild (  )  )  { return n.getFirstChild (  ) ; }^923^^^^^917^927^return n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getLoopCodeBlock [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P8_Replace_Mix]^return false;^925^^^^^917^927^return null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getLoopCodeBlock [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^switch  ( n.newNumber (  )  )  {^918^^^^^917^927^switch  ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getLoopCodeBlock [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^switch  ( n .getString (  )   )  {^918^^^^^917^927^switch  ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getLoopCodeBlock [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n .getFirstChild (  )  ;^921^^^^^917^927^return n.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getLoopCodeBlock [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^921^^^^^917^927^return n.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getLoopCodeBlock [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n .getLastChild (  )  ;^923^^^^^917^927^return n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getLoopCodeBlock [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^923^^^^^917^927^return n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getLoopCodeBlock [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^return false;^945^^^^^932^949^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructure [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P3_Replace_Literal]^return true;^947^^^^^932^949^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructure [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^switch  ( n.newNumber (  )  )  {^933^^^^^932^949^switch  ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructure [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^switch  ( n .getString (  )   )  {^933^^^^^932^949^switch  ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructure [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return parent.getLastChild (  )  != n;^961^^^^^955^979^return parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^return n.getLastChild (  )  == parent;^961^^^^^955^979^return parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^return parent.newNumber (  )  == n;^961^^^^^955^979^return parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^return parent .getFirstChild (  )   == n;^961^^^^^955^979^return parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P12_Insert_Condition]^if  ( n == parent.getFirstChild (  )  )  { return parent.getLastChild (  )  == n; }^961^^^^^955^979^return parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P12_Insert_Condition]^if  ( parent.hasMoreThanOneChild (  )  )  { return parent.getLastChild (  )  == n; }^961^^^^^955^979^return parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P2_Replace_Operator]^return parent.getFirstChild (  )  != n;^963^^^^^955^979^return parent.getFirstChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^return n.getFirstChild (  )  == parent;^963^^^^^955^979^return parent.getFirstChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^return parent.newNumber (  )  == n;^963^^^^^955^979^return parent.getFirstChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^return parent .getLastChild (  )   == n;^963^^^^^955^979^return parent.getFirstChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P12_Insert_Condition]^if  ( n == parent.getFirstChild (  )  )  { return parent.getFirstChild (  )  == n; }^963^^^^^955^979^return parent.getFirstChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P2_Replace_Operator]^return parent.getFirstChild (  )  == n;^965^^^^^955^979^return parent.getFirstChild (  )  != n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^return n.getFirstChild (  )  != parent;^965^^^^^955^979^return parent.getFirstChild (  )  != n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^return parent.newNumber (  )  != n;^965^^^^^955^979^return parent.getFirstChild (  )  != n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P12_Insert_Condition]^if  ( n == parent.getFirstChild (  )  )  { return parent.getFirstChild (  )  != n; }^965^^^^^955^979^return parent.getFirstChild (  )  != n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P2_Replace_Operator]^return parent.getFirstChild (  )  == n && parent.getLastChild (  )  == n;^967^^^^^955^979^return parent.getFirstChild (  )  == n || parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P2_Replace_Operator]^return parent.getFirstChild (  )  >= n || parent.getLastChild (  )  == n;^967^^^^^955^979^return parent.getFirstChild (  )  == n || parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P2_Replace_Operator]^return parent.getFirstChild (  )  <= n || parent.getLastChild (  )  == n;^967^^^^^955^979^return parent.getFirstChild (  )  == n || parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^return n.getFirstChild (  )  == parent || parent.getLastChild (  )  == n;^967^^^^^955^979^return parent.getFirstChild (  )  == n || parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^return parent.newNumber (  )  == n || parent.getLastChild (  )  == n;^967^^^^^955^979^return parent.getFirstChild (  )  == n || parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^return parent.getFirstChild (  )  == n || parent.newNumber (  )  == n;^967^^^^^955^979^return parent.getFirstChild (  )  == n || parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P2_Replace_Operator]^return parent.getLastChild (  )  <= n;^969^^^^^955^979^return parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^return n.getLastChild (  )  == parent;^969^^^^^955^979^return parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^return parent.newNumber (  )  == n;^969^^^^^955^979^return parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P12_Insert_Condition]^if  ( n == parent.getFirstChild (  )  )  { return parent.getLastChild (  )  == n; }^969^^^^^955^979^return parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P12_Insert_Condition]^if  ( parent.hasMoreThanOneChild (  )  )  { return parent.getLastChild (  )  == n; }^969^^^^^955^979^return parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P2_Replace_Operator]^return parent.getFirstChild (  )  <= n;^972^^^^^955^979^return parent.getFirstChild (  )  != n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^return n.getFirstChild (  )  != parent;^972^^^^^955^979^return parent.getFirstChild (  )  != n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^return parent.newNumber (  )  != n;^972^^^^^955^979^return parent.getFirstChild (  )  != n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P12_Insert_Condition]^if  ( n == parent.getFirstChild (  )  )  { return parent.getFirstChild (  )  != n; }^972^^^^^955^979^return parent.getFirstChild (  )  != n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P3_Replace_Literal]^return false;^974^^^^^955^979^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P3_Replace_Literal]^return true;^977^^^^^955^979^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^switch  ( n.getType (  )  )  {^956^^^^^955^979^switch  ( parent.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^switch  ( parent.newNumber (  )  )  {^956^^^^^955^979^switch  ( parent.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P8_Replace_Mix]^switch  ( n.newNumber (  )  )  {^956^^^^^955^979^switch  ( parent.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^return n.getLastChild (  )  == n;^961^^^^^955^979^return parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P8_Replace_Mix]^return n.newNumber (  )  == n;^961^^^^^955^979^return parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P14_Delete_Statement]^^961^^^^^955^979^return parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^return n.getFirstChild (  )  == n;^963^^^^^955^979^return parent.getFirstChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P14_Delete_Statement]^^963^^^^^955^979^return parent.getFirstChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^return n.getFirstChild (  )  != n;^965^^^^^955^979^return parent.getFirstChild (  )  != n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P14_Delete_Statement]^^965^^^^^955^979^return parent.getFirstChild (  )  != n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^return n.getFirstChild (  )  == n || parent.getLastChild (  )  == n;^967^^^^^955^979^return parent.getFirstChild (  )  == n || parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P14_Delete_Statement]^^967^^^^^955^979^return parent.getFirstChild (  )  == n || parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^return n.getLastChild (  )  == n;^969^^^^^955^979^return parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P14_Delete_Statement]^^969^^^^^955^979^return parent.getLastChild (  )  == n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^return n.getFirstChild (  )  != n;^972^^^^^955^979^return parent.getFirstChild (  )  != n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^return parent .getLastChild (  )   != n;^972^^^^^955^979^return parent.getFirstChild (  )  != n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P14_Delete_Statement]^^972^^^^^955^979^return parent.getFirstChild (  )  != n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^Preconditions.checkState ( isControlStructure ( n )  ) ;^976^^^^^955^979^Preconditions.checkState ( isControlStructure ( parent )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^Preconditions.checkState ( isLoopStructure ( parent )  ) ;^976^^^^^955^979^Preconditions.checkState ( isControlStructure ( parent )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P14_Delete_Statement]^^976^^^^^955^979^Preconditions.checkState ( isControlStructure ( parent )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( isFunction ( fn )  ) ;Preconditions.checkState ( isControlStructure ( parent )  ) ;^976^^^^^955^979^Preconditions.checkState ( isControlStructure ( parent )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( isName ( n )  ) ;Preconditions.checkState ( isControlStructure ( parent )  ) ;^976^^^^^955^979^Preconditions.checkState ( isControlStructure ( parent )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( block.getType (  )  == Token.BLOCK ) ;Preconditions.checkState ( isControlStructure ( parent )  ) ;^976^^^^^955^979^Preconditions.checkState ( isControlStructure ( parent )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( isFunction ( function )  ) ;Preconditions.checkState ( isControlStructure ( parent )  ) ;^976^^^^^955^979^Preconditions.checkState ( isControlStructure ( parent )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( parent != null ) ;Preconditions.checkState ( isControlStructure ( parent )  ) ;^976^^^^^955^979^Preconditions.checkState ( isControlStructure ( parent )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isControlStructureCodeBlock [RETURN_TYPE] boolean   Node parent Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^return n.newNumber (  ) ;^990^^^^^986^1005^return n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getConditionExpression [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n .getLastChild (  )  ;^990^^^^^986^1005^return n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getConditionExpression [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P12_Insert_Condition]^if  ( n == parent.getFirstChild (  )  )  { return n.getFirstChild (  ) ; }^990^^^^^986^1005^return n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getConditionExpression [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  ) ;^992^^^^^986^1005^return n.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getConditionExpression [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n .getFirstChild (  )  ;^992^^^^^986^1005^return n.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getConditionExpression [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P8_Replace_Mix]^return true;^996^^^^^986^1005^return null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getConditionExpression [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.getFirstChild (  ) .equals (  ) ;^998^^^^^986^1005^return n.getFirstChild (  ) .getNext (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getConditionExpression [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  ) .getNext (  ) ;^998^^^^^986^1005^return n.getFirstChild (  ) .getNext (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getConditionExpression [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n .getLastChild (  )  .getNext (  ) ;^998^^^^^986^1005^return n.getFirstChild (  ) .getNext (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getConditionExpression [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P8_Replace_Mix]^return false;^1002^^^^^986^1005^return null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getConditionExpression [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P4_Replace_Constructor]^throw throw  new IllegalArgumentException (  ( "Non-literal value: " + n )  )   ;^1000^^^^^986^1005^throw new IllegalArgumentException  (" ")  ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getConditionExpression [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^switch  ( n.newNumber (  )  )  {^987^^^^^986^1005^switch  ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getConditionExpression [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^switch  ( n .getString (  )   )  {^987^^^^^986^1005^switch  ( n.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getConditionExpression [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^990^^^^^986^1005^return n.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getConditionExpression [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^992^^^^^986^1005^return n.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getConditionExpression [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^switch  ( n.newNumber (  )  )  {^994^^^^^986^1005^switch  ( n.getChildCount (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getConditionExpression [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^switch  ( n .addChildToFront ( n )   )  {^994^^^^^986^1005^switch  ( n.getChildCount (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getConditionExpression [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^994^995^996^^^986^1005^switch  ( n.getChildCount (  )  )  { case 3: return null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getConditionExpression [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^998^^^^^986^1005^return n.getFirstChild (  ) .getNext (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getConditionExpression [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  == Token.SCRIPT && n.getType (  )  == Token.BLOCK;^1011^^^^^1010^1012^return n.getType (  )  == Token.SCRIPT || n.getType (  )  == Token.BLOCK;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatementBlock [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  != Token.SCRIPT || n.getType (  )  == Token.BLOCK;^1011^^^^^1010^1012^return n.getType (  )  == Token.SCRIPT || n.getType (  )  == Token.BLOCK;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatementBlock [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  )  == Token.SCRIPT || n.getType (  )  == Token.BLOCK;^1011^^^^^1010^1012^return n.getType (  )  == Token.SCRIPT || n.getType (  )  == Token.BLOCK;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatementBlock [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P8_Replace_Mix]^return n .getString (  )   == Token.SCRIPT || n^1011^^^^^1010^1012^return n.getType (  )  == Token.SCRIPT || n.getType (  )  == Token.BLOCK;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatementBlock [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P12_Insert_Condition]^if  ( node.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  { return n.getType (  )  == Token.SCRIPT || n.getType (  )  == Token.BLOCK; }^1011^^^^^1010^1012^return n.getType (  )  == Token.SCRIPT || n.getType (  )  == Token.BLOCK;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatementBlock [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^1011^^^^^1010^1012^return n.getType (  )  == Token.SCRIPT || n.getType (  )  == Token.BLOCK;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatementBlock [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^Node parent = n.tokenToName (  ) ;^1018^^^^^1017^1032^Node parent = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^Node parent = parent.getParent (  ) ;^1018^^^^^1017^1032^Node parent = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^Node parent = n .getString (  )  ;^1018^^^^^1017^1032^Node parent = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P14_Delete_Statement]^^1018^^^^^1017^1032^Node parent = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P2_Replace_Operator]^Preconditions.checkState ( parent == null ) ;^1023^^^^^1017^1032^Preconditions.checkState ( parent != null ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^Preconditions.checkState ( n != null ) ;^1023^^^^^1017^1032^Preconditions.checkState ( parent != null ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P14_Delete_Statement]^^1023^^^^^1017^1032^Preconditions.checkState ( parent != null ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( isFunction ( fn )  ) ;Preconditions.checkState ( parent != null ) ;^1023^^^^^1017^1032^Preconditions.checkState ( parent != null ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( n.getType (  )  == Token.BLOCK ) ;Preconditions.checkState ( parent != null ) ;^1023^^^^^1017^1032^Preconditions.checkState ( parent != null ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( isName ( n )  ) ;Preconditions.checkState ( parent != null ) ;^1023^^^^^1017^1032^Preconditions.checkState ( parent != null ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( block.getType (  )  == Token.BLOCK ) ;Preconditions.checkState ( parent != null ) ;^1023^^^^^1017^1032^Preconditions.checkState ( parent != null ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( isFunction ( function )  ) ;Preconditions.checkState ( parent != null ) ;^1023^^^^^1017^1032^Preconditions.checkState ( parent != null ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( isControlStructure ( parent )  ) ;Preconditions.checkState ( parent != null ) ;^1023^^^^^1017^1032^Preconditions.checkState ( parent != null ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P11_Insert_Donor_Statement]^Preconditions.checkArgument ( n.getType (  )  == Token.TRY ) ;Preconditions.checkState ( parent != null ) ;^1023^^^^^1017^1032^Preconditions.checkState ( parent != null ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P3_Replace_Literal]^return false;^1028^^^^^1017^1032^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P3_Replace_Literal]^return true;^1030^^^^^1017^1032^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^switch  ( n.getType (  )  )  {^1024^^^^^1017^1032^switch  ( parent.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^switch  ( parent.newNumber (  )  )  {^1024^^^^^1017^1032^switch  ( parent.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^switch  ( parent .getString (  )   )  {^1024^^^^^1017^1032^switch  ( parent.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P8_Replace_Mix]^switch  ( n.newNumber (  )  )  {^1024^^^^^1017^1032^switch  ( parent.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isStatement [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P2_Replace_Operator]^return n.getType (  )  == Token.CASE && n.getType (  )  == Token.DEFAULT;^1036^^^^^1035^1037^return n.getType (  )  == Token.CASE || n.getType (  )  == Token.DEFAULT;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSwitchCase [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  != Token.CASE || n.getType (  )  == Token.DEFAULT;^1036^^^^^1035^1037^return n.getType (  )  == Token.CASE || n.getType (  )  == Token.DEFAULT;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSwitchCase [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P5_Replace_Variable]^return n.getType (  )  == Token.0 || n.getType (  )  == Token.DEFAULT;^1036^^^^^1035^1037^return n.getType (  )  == Token.CASE || n.getType (  )  == Token.DEFAULT;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSwitchCase [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  )  == Token.CASE || n.getType (  )  == Token.DEFAULT;^1036^^^^^1035^1037^return n.getType (  )  == Token.CASE || n.getType (  )  == Token.DEFAULT;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSwitchCase [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P12_Insert_Condition]^if  ( node.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  { return n.getType (  )  == Token.CASE || n.getType (  )  == Token.DEFAULT; }^1036^^^^^1035^1037^return n.getType (  )  == Token.CASE || n.getType (  )  == Token.DEFAULT;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSwitchCase [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n .getString (  )   == Token.CASE || n^1036^^^^^1035^1037^return n.getType (  )  == Token.CASE || n.getType (  )  == Token.DEFAULT;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSwitchCase [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^1036^^^^^1035^1037^return n.getType (  )  == Token.CASE || n.getType (  )  == Token.DEFAULT;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSwitchCase [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^if  ( n != null || n.getType (  )  == Token.NAME )  {^1041^^^^^1040^1053^if  ( n != null && n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P2_Replace_Operator]^if  ( n == null && n.getType (  )  == Token.NAME )  {^1041^^^^^1040^1053^if  ( n != null && n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P2_Replace_Operator]^if  ( n != null && n.getType (  )  != Token.NAME )  {^1041^^^^^1040^1053^if  ( n != null && n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P6_Replace_Expression]^if  ( n != null ) {^1041^^^^^1040^1053^if  ( n != null && n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P6_Replace_Expression]^if  (  n.getType (  )  == Token.NAME )  {^1041^^^^^1040^1053^if  ( n != null && n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P6_Replace_Expression]^if  ( n.getType (  )  == NAME )  {^1041^^^^^1040^1053^if  ( n != null && n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P6_Replace_Expression]^if  ( n == parent.getFirstChild() )  {^1041^^^^^1040^1053^if  ( n != null && n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^if  ( n != null && n.newNumber (  )  == Token.NAME )  {^1041^^^^^1040^1053^if  ( n != null && n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^if  ( n != null && n .getString (  )   == Token.NAME )  {^1041^^^^^1040^1053^if  ( n != null && n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P9_Replace_Statement]^if  ( nameNode.getType (  )  == Token.NAME )  {^1041^^^^^1040^1053^if  ( n != null && n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P9_Replace_Statement]^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^1041^^^^^1040^1053^if  ( n != null && n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P9_Replace_Statement]^if  ( callNode.getType (  )  == Token.CALL )  {^1041^^^^^1040^1053^if  ( n != null && n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P9_Replace_Statement]^if  ( last != null && last.getType (  )  == Token.STRING )  {^1041^^^^^1040^1053^if  ( n != null && n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P13_Insert_Block]^if  (  ( n.getType (  )  )  ==  ( NAME )  )  {     Node parent = n.getParent (  ) ;     if  (  ( parent != null )  &&  (  ( parent.getType (  )  )  ==  ( VAR )  )  )  {         String name = n.getString (  ) ;         if  ( ! ( vars.containsKey ( name )  )  )  {             vars.put ( name, n ) ;         }     } }^1041^^^^^1040^1053^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P2_Replace_Operator]^if  ( n >= parent.getFirstChild (  )  )  {^1047^^^^^1040^1053^if  ( n == parent.getFirstChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^if  ( parent == n.getFirstChild (  )  )  {^1047^^^^^1040^1053^if  ( n == parent.getFirstChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^if  ( n == parent.newNumber (  )  )  {^1047^^^^^1040^1053^if  ( n == parent.getFirstChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P15_Unwrap_Block]^return true;^1047^1048^1049^^^1040^1053^if  ( n == parent.getFirstChild (  )  )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P16_Remove_Block]^^1047^1048^1049^^^1040^1053^if  ( n == parent.getFirstChild (  )  )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P3_Replace_Literal]^return false;^1048^^^^^1040^1053^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^Node parent = n.tokenToName (  ) ;^1042^^^^^1040^1053^Node parent = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P8_Replace_Mix]^Node parent = n .getString (  )  ;^1042^^^^^1040^1053^Node parent = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^Node parent = parent.getParent (  ) ;^1042^^^^^1040^1053^Node parent = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P14_Delete_Statement]^^1042^^^^^1040^1053^Node parent = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^switch  ( n.getType (  )  )  {^1043^^^^^1040^1053^switch  ( parent.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^switch  ( parent.newNumber (  )  )  {^1043^^^^^1040^1053^switch  ( parent.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^switch  ( parent .getString (  )   )  {^1043^^^^^1040^1053^switch  ( parent.getType (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^if  ( n == n.getFirstChild (  )  )  {^1047^^^^^1040^1053^if  ( n == parent.getFirstChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^if  ( n == parent .getLastChild (  )   )  {^1047^^^^^1040^1053^if  ( n == parent.getFirstChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^if  ( parent != null && n.getType (  )  == Token.NAME )  {^1041^^^^^1040^1053^if  ( n != null && n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P8_Replace_Mix]^Node parent = parent.tokenToName (  ) ;^1042^^^^^1040^1053^Node parent = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P3_Replace_Literal]^return true;^1052^^^^^1040^1053^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLabelName [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  parent  
[P2_Replace_Operator]^return parent.getType (  )  == Token.TRY || parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^1057^1058^^^^1056^1059^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[P2_Replace_Operator]^return parent.getType (  )  != Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^1057^1058^^^^1056^1059^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[P2_Replace_Operator]^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  != 3 && child == parent.getLastChild (  ) ;^1057^1058^^^^1056^1059^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[P2_Replace_Operator]^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child != parent.getLastChild (  ) ;^1057^1058^^^^1056^1059^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[P3_Replace_Literal]^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  ==  && child == parent.getLastChild (  ) ;^1057^1058^^^^1056^1059^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[P5_Replace_Variable]^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && parent == parent.getLastChild (  ) ;^1057^1058^^^^1056^1059^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[P7_Replace_Invocation]^return parent.newNumber (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^1057^1058^^^^1056^1059^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[P7_Replace_Invocation]^return parent .getString (  )   == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^1057^1058^^^^1056^1059^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[P7_Replace_Invocation]^return parent.getType (  )  == Token.TRY && parent.newNumber (  )  == 3 && child == parent.getLastChild (  ) ;^1057^1058^^^^1056^1059^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[P7_Replace_Invocation]^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.newNumber (  ) ;^1057^1058^^^^1056^1059^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[P7_Replace_Invocation]^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent .getFirstChild (  )  ;^1057^1058^^^^1056^1059^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[P8_Replace_Mix]^return parent.getType (  )  == Token.TRY && parent.newNumber (  )  == 3 && parent == parent.getLastChild (  ) ;^1057^1058^^^^1056^1059^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[P8_Replace_Mix]^return child.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^1057^1058^^^^1056^1059^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[P14_Delete_Statement]^^1057^1058^^^^1056^1059^return parent.getType (  )  == Token.TRY && parent.getChildCount (  )  == 3 && child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[P7_Replace_Invocation]^&& child == parent.newNumber (  ) ;^1058^^^^^1056^1059^&& child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[P8_Replace_Mix]^&& child == child.getLastChild (  ) ;^1058^^^^^1056^1059^&& child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[P14_Delete_Statement]^^1058^^^^^1056^1059^&& child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[P12_Insert_Condition]^if  ( n == parent.getFirstChild (  )  )  { && child == parent.getLastChild (  ) ; }^1058^^^^^1056^1059^&& child == parent.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isTryFinallyNode [RETURN_TYPE] boolean   Node parent Node child [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  child  parent  
[P2_Replace_Operator]^if  ( isStatementBlock ( parent ) && isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P4_Replace_Constructor]^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode (  node )  )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P4_Replace_Constructor]^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent )  )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^if  ( isStatementBlock ( node ) || isSwitchCase ( parent ) || isTryFinallyNode ( parent, node )  )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^if  ( isStatementBlock ( parent ) ) {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^if  (  isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^if  ( isStatementBlock(parent || isSwitchCase(node)) )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^if  ( parent.getType() == VAR )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^if  ( node.getType() == BLOCK )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^if  ( parent.getType() == LABEL && node == parent.getLastChild() )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^if  ( parent.getType (  )  == LABEL )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^if  ( node == parent.getLastChild (  ) )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^if  ( parent.getType() == FOR && parent.getChildCount() == 4 )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^if  ( parent.getType (  )  == FOR )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^if  ( parent.getChildCount (  )  == 4 )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^if  (  ( "Invalid attempt to remove node: " +  ( node.toString (  )  )  )  + " of " + parent.toString (  ) )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^if  ( "Invalid attempt to remove node: " +  ( node.toString (  )  )  + " of " )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^if  ( "Invalid attempt to remove node: " + node.toString (  ) )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^if  ( isStatement ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^if  ( isStatementBlock ( parent ) || isThis ( node ) || isTryFinallyNode ( parent, node )  )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || getFunctionName ( parent, node )  )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  != Token.VAR )  {^1069^^^^^1054^1084^} else if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( node.getType() == BLOCK )  {^1069^^^^^1054^1084^} else if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( parent.getType() == LABEL && node == parent.getLastChild() )  {^1069^^^^^1054^1084^} else if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( parent.getType (  )  == LABEL )  {^1069^^^^^1054^1084^} else if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( node == parent.getLastChild (  ) )  {^1069^^^^^1054^1084^} else if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( parent.getType() == FOR && parent.getChildCount() == 4 )  {^1069^^^^^1054^1084^} else if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( parent.getType (  )  == FOR )  {^1069^^^^^1054^1084^} else if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( parent.getChildCount (  )  == 4 )  {^1069^^^^^1054^1084^} else if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  (  ( "Invalid attempt to remove node: " +  ( node.toString (  )  )  )  + " of " + parent.toString (  ) )  {^1069^^^^^1054^1084^} else if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( "Invalid attempt to remove node: " +  ( node.toString (  )  )  + " of " )  {^1069^^^^^1054^1084^} else if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( "Invalid attempt to remove node: " + node.toString (  ) )  {^1069^^^^^1054^1084^} else if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else {^1069^^^^^1054^1084^} else if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^} else if  ( parent.newNumber (  )  == Token.VAR )  {^1069^^^^^1054^1084^} else if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^} else if  ( parent .getString (  )   == Token.VAR )  {^1069^^^^^1054^1084^} else if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^} else if  ( node.getType (  )  >= Token.BLOCK )  {^1078^^^^^1063^1093^} else if  ( node.getType (  )  == Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^} else if  ( node.getType (  )  != Token.BLOCK )  {^1078^^^^^1063^1093^} else if  ( node.getType (  )  == Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^} else if  ( node.getType (  )  > Token.BLOCK )  {^1078^^^^^1063^1093^} else if  ( node.getType (  )  == Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^} else if  ( parent.getType (  )  == Token.BLOCK )  {^1078^^^^^1063^1093^} else if  ( node.getType (  )  == Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( parent.getType() == LABEL && node == parent.getLastChild() )  {^1078^^^^^1063^1093^} else if  ( node.getType (  )  == Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( parent.getType (  )  == LABEL )  {^1078^^^^^1063^1093^} else if  ( node.getType (  )  == Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( node == parent.getLastChild (  ) )  {^1078^^^^^1063^1093^} else if  ( node.getType (  )  == Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( parent.getType() == FOR && parent.getChildCount() == 4 )  {^1078^^^^^1063^1093^} else if  ( node.getType (  )  == Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( parent.getType (  )  == FOR )  {^1078^^^^^1063^1093^} else if  ( node.getType (  )  == Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( parent.getChildCount (  )  == 4 )  {^1078^^^^^1063^1093^} else if  ( node.getType (  )  == Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  (  ( "Invalid attempt to remove node: " +  ( node.toString (  )  )  )  + " of " + parent.toString (  ) )  {^1078^^^^^1063^1093^} else if  ( node.getType (  )  == Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( "Invalid attempt to remove node: " +  ( node.toString (  )  )  + " of " )  {^1078^^^^^1063^1093^} else if  ( node.getType (  )  == Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( "Invalid attempt to remove node: " + node.toString (  ) )  {^1078^^^^^1063^1093^} else if  ( node.getType (  )  == Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else {^1078^^^^^1063^1093^} else if  ( node.getType (  )  == Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^} else if  ( node.newNumber (  )  == Token.BLOCK )  {^1078^^^^^1063^1093^} else if  ( node.getType (  )  == Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^} else if  ( node .getString (  )   == Token.BLOCK )  {^1078^^^^^1063^1093^} else if  ( node.getType (  )  == Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  == Token.LABEL || node == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  >= Token.LABEL && node == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  == Token.LABEL && node != parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  <= Token.LABEL && node == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  != Token.LABEL && node == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^} else if  ( parent.getType (  )  == Token.LABEL && parent == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^} else if  ( parent.getType (  )  == Token.this && node == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^} else if  ( node.getType (  )  == Token.LABEL && parent == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( parent.getType (  )  == Token.LABEL ) {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  (  node == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( parent.getType (  )  == LABEL )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( parent.getType() == FOR && parent.getChildCount() == 4 )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( parent.getType (  )  == FOR )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( parent.getChildCount (  )  == 4 )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  (  ( "Invalid attempt to remove node: " +  ( node.toString (  )  )  )  + " of " + parent.toString (  ) )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( "Invalid attempt to remove node: " +  ( node.toString (  )  )  + " of " )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( "Invalid attempt to remove node: " + node.toString (  ) )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^} else if  ( parent.newNumber (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.newNumber (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^} else if  ( parent .getString (  )   == Token.LABEL && node == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P9_Replace_Statement]^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P9_Replace_Statement]^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  == Token.FOR || parent.getChildCount (  )  == 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  >= Token.FOR && parent.getChildCount (  )  == 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  != 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^} else if  ( node.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( parent.getType (  )  == Token.FOR ) {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  (  parent.getChildCount (  )  == 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( parent.getType (  )  == FOR )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  (  ( "Invalid attempt to remove node: " +  ( node.toString (  )  )  )  + " of " + parent.toString (  ) )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( "Invalid attempt to remove node: " +  ( node.toString (  )  )  + " of " )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else if  ( "Invalid attempt to remove node: " + node.toString (  ) )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P6_Replace_Expression]^} else {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^} else if  ( parent.newNumber (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^} else if  ( parent .getString (  )   == Token.FOR && parent.getChildCount (  )  == 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^} else if  ( parent.getType (  )  == Token.FOR && parent.newNumber (  )  == 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^}  if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 5 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P9_Replace_Statement]^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P9_Replace_Statement]^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  >=  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  <=  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  ||  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node:  to rem" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " oof "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^throw new IllegalStateException ( "Invalid attempt to remove parent: " + node.toString (  )  + " of "+ node.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.tokenToName (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (   instanceof   )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  >>  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "nvalid attempnvalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^node.tokenToName (  )  + " of "+ parent.toString (  )  ) ;^1096^^^^^1088^1097^node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P14_Delete_Statement]^^1096^^^^^1088^1097^node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^node.toString (  )  + " of "+ node.toString (  )  ) ;^1096^^^^^1088^1097^node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P4_Replace_Constructor]^parent.replaceChild (  new Node ( Token.EMPTY )  ) ;^1093^^^^^1088^1097^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^parent.addChildAfter ( node, new Node ( Token.EMPTY )  ) ;^1093^^^^^1088^1097^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P14_Delete_Statement]^^1093^^^^^1088^1097^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P11_Insert_Donor_Statement]^parent.replaceChild ( block, block.removeFirstChild (  )  ) ;parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^1093^^^^^1088^1097^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  &  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  <  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  &&  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: to remove " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + "oof "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^throw new IllegalStateException ( "Invalid attempt to remove parent: " + node.toString (  )  + " of "+ node.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.tokenToName (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  >  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  ^  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "v" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^&& node.getChildCount (  )  == 4 )  {^1089^^^^^1074^1104^&& parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^&& parent.newNumber (  )  == 4 )  {^1089^^^^^1074^1104^&& parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^&& parent .addChildToFront ( node )   == 4 )  {^1089^^^^^1074^1104^&& parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P4_Replace_Constructor]^parent.replaceChild (  new Node ( Token.EMPTY )  ) ;^1093^^^^^1078^1108^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^parent.replaceChild ( parent, new Node ( Token.EMPTY )  ) ;^1093^^^^^1078^1108^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^parent.addChildAfter ( node, new Node ( Token.EMPTY )  ) ;^1093^^^^^1078^1108^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^parent .replaceChild ( parent )  ;^1093^^^^^1078^1108^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^parent.addChildAfter ( node, new Node ( Token.null )  ) ;^1093^^^^^1078^1108^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P14_Delete_Statement]^^1093^^^^^1078^1108^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P11_Insert_Donor_Statement]^parent.replaceChild ( block, block.removeFirstChild (  )  ) ;parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^1093^^^^^1078^1108^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^node.tokenToName (  )  + " of "+ parent.toString (  )  ) ;^1096^^^^^1081^1111^node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P14_Delete_Statement]^^1096^^^^^1081^1111^node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^node.toString (  )  + " of "+ node.toString (  )  ) ;^1096^^^^^1081^1111^node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^parent.replaceChild ( node ) ;^1085^^^^^1082^1097^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P14_Delete_Statement]^^1085^^^^^1082^1097^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P11_Insert_Donor_Statement]^vistor.visit ( node ) ;parent.removeChild ( node ) ;^1085^^^^^1082^1097^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P11_Insert_Donor_Statement]^parent.removeChild ( block ) ;parent.removeChild ( node ) ;^1085^^^^^1082^1097^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^removeChild ( node.getParent (  ) , parent ) ;^1087^^^^^1082^1097^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^isLhs ( parent.getParent (  ) , parent ) ;^1087^^^^^1082^1097^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^removeChild ( parent.tokenToName (  ) , parent ) ;^1087^^^^^1082^1097^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^removeChild ( parent .getString (  )  , parent ) ;^1087^^^^^1082^1097^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P14_Delete_Statement]^^1087^^^^^1082^1097^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  <= 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 8 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4L )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  >  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  >=  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "valid attempt to remove nonvalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  ^  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  &&  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invnvalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^return true;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^parent.replaceChild ( node, new Node ( Token.null )  ) ;^1093^^^^^1088^1097^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^parent.replaceChild ( parent, new Node ( Token.EMPTY )  ) ;^1093^^^^^1088^1097^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^parent .replaceChild ( node )  ;^1093^^^^^1088^1097^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  >=  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  !=  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attemptnvalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of  "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  <=  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  ^  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  &  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "l" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^} else if  ( node.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^} else if  ( node .getString (  )   == Token.LABEL && node == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^&& node == node.getLastChild (  )  )  {^1083^^^^^1068^1098^&& node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^&& node == parent.newNumber (  )  )  {^1083^^^^^1068^1098^&& node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^&& node == parent .getFirstChild (  )   )  {^1083^^^^^1068^1098^&& node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P14_Delete_Statement]^^1083^1084^1085^^^1068^1098^&& node == parent.getLastChild (  )  )  {  parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^parent.replaceChild ( node ) ;^1085^^^^^1070^1100^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^parent .removeChild ( node )  ;^1085^^^^^1070^1100^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P14_Delete_Statement]^^1085^^^^^1070^1100^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P11_Insert_Donor_Statement]^vistor.visit ( node ) ;parent.removeChild ( node ) ;^1085^^^^^1070^1100^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P11_Insert_Donor_Statement]^parent.removeChild ( block ) ;parent.removeChild ( node ) ;^1085^^^^^1070^1100^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^removeChild ( node.getParent (  ) , parent ) ;^1087^^^^^1072^1102^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^isLhs ( parent.getParent (  ) , parent ) ;^1087^^^^^1072^1102^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^removeChild ( parent.tokenToName (  ) , parent ) ;^1087^^^^^1072^1102^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P14_Delete_Statement]^^1087^^^^^1072^1102^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^removeChild ( parent .getString (  )  , parent ) ;^1087^^^^^1072^1102^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^&& node.newNumber (  )  == 4 )  {^1089^^^^^1074^1104^&& parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^parent .replaceChild ( node )  ;^1093^^^^^1078^1108^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^node.tokenToName (  )  + " of "+ node.toString (  )  ) ;^1096^^^^^1081^1111^node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^node.newNumber (  ) ;^1081^^^^^1066^1096^node.detachChildren (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P14_Delete_Statement]^^1081^^^^^1066^1096^node.detachChildren (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P11_Insert_Donor_Statement]^nodeName.addChildrenToBack ( value ) ;node.detachChildren (  ) ;^1081^^^^^1066^1096^node.detachChildren (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P11_Insert_Donor_Statement]^return n.hasChildren (  ) ;node.detachChildren (  ) ;^1081^^^^^1066^1096^node.detachChildren (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^}  if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  != Token.FOR && parent.getChildCount (  )  == 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^} else if  ( parent.getType (  )  == Token.FOR && parent .addChildToFront ( node )   == 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 3 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  <  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  |  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  <<  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: mpt" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of o"+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  <<  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  <  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "mp" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " o"+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (   instanceof   )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  <<  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node:  atte" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  ==  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node:  remove n" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of f"+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^throw new IllegalStateException ( "Invalid attempt to remove node: " + ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^removeChild ( node.tokenToName (  ) , parent ) ;^1087^^^^^1082^1097^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  <= Token.FOR && parent.getChildCount (  )  == 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == type )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "lid attemnvalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + "of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  &  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  &  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: valid attempt to re" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^node.tokenToName (  )  + " of "+ node.toString (  )  ) ;^1096^^^^^1088^1097^node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  |  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  <  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( " to remove node:" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of  o"+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  >>  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid a" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^parent .removeChild ( parent )  ;^1085^^^^^1070^1100^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^removeChild ( node.tokenToName (  ) , parent ) ;^1087^^^^^1072^1102^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^if  ( parent.tokenToName (  )  )  {^1070^^^^^1055^1085^if  ( parent.hasMoreThanOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^parent.replaceChild ( node ) ;^1074^^^^^1070^1077^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P14_Delete_Statement]^^1074^^^^^1070^1077^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P11_Insert_Donor_Statement]^vistor.visit ( node ) ;parent.removeChild ( node ) ;^1074^^^^^1070^1077^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P11_Insert_Donor_Statement]^parent.removeChild ( block ) ;parent.removeChild ( node ) ;^1074^^^^^1070^1077^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^removeChild ( node.getParent (  ) , parent ) ;^1076^^^^^1070^1077^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^isLhs ( parent.getParent (  ) , parent ) ;^1076^^^^^1070^1077^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^removeChild ( parent.tokenToName (  ) , parent ) ;^1076^^^^^1070^1077^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^removeChild ( node.tokenToName (  ) , parent ) ;^1076^^^^^1070^1077^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P14_Delete_Statement]^^1076^^^^^1070^1077^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^parent.replaceChild ( node ) ;^1071^^^^^1056^1086^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P14_Delete_Statement]^^1071^^^^^1056^1086^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P11_Insert_Donor_Statement]^vistor.visit ( node ) ;parent.removeChild ( node ) ;^1071^^^^^1056^1086^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P11_Insert_Donor_Statement]^parent.removeChild ( block ) ;parent.removeChild ( node ) ;^1071^^^^^1056^1086^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^if  ( node.hasMoreThanOneChild (  )  )  {^1070^^^^^1055^1085^if  ( parent.hasMoreThanOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^parent .removeChild ( node )  ;^1071^^^^^1056^1086^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^parent.replaceChild ( node ) ;^1074^^^^^1059^1089^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^parent .removeChild ( parent )  ;^1074^^^^^1059^1089^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P14_Delete_Statement]^^1074^^^^^1059^1089^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P11_Insert_Donor_Statement]^vistor.visit ( node ) ;parent.removeChild ( node ) ;^1074^^^^^1059^1089^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P11_Insert_Donor_Statement]^parent.removeChild ( block ) ;parent.removeChild ( node ) ;^1074^^^^^1059^1089^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^removeChild ( node.getParent (  ) , parent ) ;^1076^^^^^1061^1091^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^isLhs ( parent.getParent (  ) , parent ) ;^1076^^^^^1061^1091^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^removeChild ( parent.tokenToName (  ) , parent ) ;^1076^^^^^1061^1091^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P14_Delete_Statement]^^1076^^^^^1061^1091^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^} else if  ( node.getType (  )  <= Token.BLOCK )  {^1078^^^^^1063^1093^} else if  ( node.getType (  )  == Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^} else if  ( parent.getType (  )  == Token.2 && node == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^} else if  ( parent.getType (  )  == Token.FOR && parent .addChildToFront ( parent )   == 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^}  if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 % 0 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "nvalinvalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  >>  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^parent.replaceChild ( node, new Node ( Token.this )  ) ;^1093^^^^^1088^1097^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invnvalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  !=  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "d att" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^&& parent .addChildToFront ( parent )   == 4 )  {^1089^^^^^1074^1104^&& parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^parent.addChildAfter ( parent, new Node ( Token.EMPTY )  ) ;^1093^^^^^1078^1108^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^}  if  ( parent.newNumber (  )  == Token.FOR && parent.getChildCount (  )  == 4 % 1 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( " attempt to remove nnvalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  ||  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  ==  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  !=  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: In" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^parent.replaceChild ( node, new Node ( Token.0 )  ) ;^1093^^^^^1078^1108^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  ||  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  >  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "id attempt to remove " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  &&  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  >>  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "mnvalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^} else if  ( node .getString (  )   == Token.FOR && parent.getChildCount (  )  == 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  >= 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 9 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  !=  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  >  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of  of"+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: ttempt to rem" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt tnvalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: lid attempt to" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^parent .removeChild ( node )  ;^1085^^^^^1082^1097^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^isLhs ( node.getParent (  ) , parent ) ;^1087^^^^^1082^1097^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  > 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 1 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  &&  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "ve nod" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "   instanceof   node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( " rnvalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^parent.replaceChild ( node, new Node ( Token.null )  ) ;^1093^^^^^1078^1108^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: empt to remove " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  >=  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Innvalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^} else if  ( node.getType (  )  == Token.VAR )  {^1069^^^^^1054^1084^} else if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^} else if  ( node.newNumber (  )  == Token.VAR )  {^1069^^^^^1054^1084^} else if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^removeChild ( node .getString (  )  , parent ) ;^1076^^^^^1061^1091^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^} else if  ( node.newNumber (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^parent.replaceChild ( node ) ;^1068^^^^^1053^1083^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P14_Delete_Statement]^^1068^^^^^1053^1083^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P11_Insert_Donor_Statement]^vistor.visit ( node ) ;parent.removeChild ( node ) ;^1068^^^^^1053^1083^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P11_Insert_Donor_Statement]^parent.removeChild ( block ) ;parent.removeChild ( node ) ;^1068^^^^^1053^1083^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  > Token.VAR )  {^1069^^^^^1054^1084^} else if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^}  if  ( parent.getType (  )  == Token.VAR )  {^1069^^^^^1054^1084^} else if  ( parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  == Token.LABEL && node <= parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^} else if  ( parent.getType (  )  == Token.LABEL && node == parent .getFirstChild (  )   )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 5 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^}  if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 1 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  ^  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^parent .replaceChild ( parent )  ;^1093^^^^^1088^1097^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: to r" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of  of"+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  <<  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: Inv" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^} else if  ( node.newNumber (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  < Token.FOR && parent.getChildCount (  )  == 4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == -4 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^}  if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 2 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  <=  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remnvalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: o remove node:" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^return ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: va" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "   instanceof   node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "pnvalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " o"+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  < Token.LABEL && node == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^} else if  ( parent.getType (  )  == Token.null && node == parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == -3 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^}  if  ( parent.getType (  )  == Token.FOR && parent.newNumber (  )  == 6 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  ==  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "nvalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "valid attempt to remnvalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  ==  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: d " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "lid attempt to remove nod" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^parent .removeChild ( parent )  ;^1085^^^^^1082^1097^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 2 )  {^1088^1089^^^^1073^1103^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: alid att" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "pnvalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^parent.replaceChild ( node, new Node ( Token.4 )  ) ;^1093^^^^^1078^1108^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "id attempt to remove node" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "lid attempt to remove nodenvalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^} else if  ( parent.newNumber (  )  == Token.BLOCK )  {^1078^^^^^1063^1093^} else if  ( node.getType (  )  == Token.BLOCK )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^if  ( parent .hasOneChild (  )   )  {^1070^^^^^1055^1085^if  ( parent.hasMoreThanOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^parent .removeChild ( node )  ;^1074^^^^^1070^1077^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^removeChild ( parent .getString (  )  , parent ) ;^1076^^^^^1070^1077^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^parent .removeChild ( node )  ;^1074^^^^^1059^1089^parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^removeChild ( parent .getString (  )  , parent ) ;^1076^^^^^1061^1091^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^isLhs ( node.getParent (  ) , parent ) ;^1076^^^^^1061^1091^removeChild ( parent.getParent (  ) , parent ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( " attempt to remonvalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "d attempnvalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^return false;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P8_Replace_Mix]^parent.addChildAfter ( parent, new Node ( Token.EMPTY )  ) ;^1093^^^^^1088^1097^parent.replaceChild ( node, new Node ( Token.EMPTY )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  |  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: to remov" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: nvalid atte" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalnvalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node:  to re" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "pt to remonvalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + "f"+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  == Token.LABEL && node > parent.getLastChild (  )  )  {^1082^1083^^^^1067^1097^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( " to remove node" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node:  attempt to r" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "nvalid attempt to " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invalid attempt to remove node:  to remove nod" + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "Invanvalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1088^1097^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "nvanvalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^throw new IllegalStateException ( "Invalid attempt to remove node: "  <=  node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P3_Replace_Literal]^throw new IllegalStateException ( "linvalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^1095^1096^^^^1080^1110^throw new IllegalStateException ( "Invalid attempt to remove node: " + node.toString (  )  + " of "+ parent.toString (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^if  ( isStatementBlock ( node ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^1064^1065^1066^^^1049^1079^if  ( isStatementBlock ( parent ) || isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^|| isSwitchCase ( parent ) || isTryFinallyNode ( parent, node )  )  {^1065^1066^^^^1050^1080^|| isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^|| isThis ( node ) || isTryFinallyNode ( parent, node )  )  {^1065^1066^^^^1050^1080^|| isSwitchCase ( node ) || isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^|| isTryFinallyNode (  node )  )  {^1066^^^^^1051^1081^|| isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^|| isTryFinallyNode ( parent )  )  {^1066^^^^^1051^1081^|| isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P5_Replace_Variable]^|| isTryFinallyNode ( node, parent )  )  {^1066^^^^^1051^1081^|| isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P7_Replace_Invocation]^|| getFunctionName ( parent, node )  )  {^1066^^^^^1051^1081^|| isTryFinallyNode ( parent, node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P14_Delete_Statement]^^1066^1067^1068^^^1051^1081^|| isTryFinallyNode ( parent, node )  )  {  parent.removeChild ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] removeChild [RETURN_TYPE] void   Node parent Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  parent  
[P2_Replace_Operator]^Preconditions.checkState ( block.getType (  )  >= Token.BLOCK ) ;^1105^^^^^1104^1124^Preconditions.checkState ( block.getType (  )  == Token.BLOCK ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P5_Replace_Variable]^Preconditions.checkState ( previous.getType (  )  == Token.BLOCK ) ;^1105^^^^^1104^1124^Preconditions.checkState ( block.getType (  )  == Token.BLOCK ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P7_Replace_Invocation]^Preconditions .checkArgument (  )  ;^1105^^^^^1104^1124^Preconditions.checkState ( block.getType (  )  == Token.BLOCK ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P7_Replace_Invocation]^Preconditions.checkState ( block.newNumber (  )  == Token.BLOCK ) ;^1105^^^^^1104^1124^Preconditions.checkState ( block.getType (  )  == Token.BLOCK ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P7_Replace_Invocation]^Preconditions.checkState ( block .getString (  )   == Token.BLOCK ) ;^1105^^^^^1104^1124^Preconditions.checkState ( block.getType (  )  == Token.BLOCK ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P14_Delete_Statement]^^1105^^^^^1104^1124^Preconditions.checkState ( block.getType (  )  == Token.BLOCK ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P7_Replace_Invocation]^Node parent = block.tokenToName (  ) ;^1106^^^^^1104^1124^Node parent = block.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P11_Insert_Donor_Statement]^Node current = n.getFirstChild (  ) ;Node parent = block.getParent (  ) ;^1106^^^^^1104^1124^Node parent = block.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P11_Insert_Donor_Statement]^Node parent = n.getParent (  ) ;Node parent = block.getParent (  ) ;^1106^^^^^1104^1124^Node parent = block.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P11_Insert_Donor_Statement]^Node nameNode = callNode.getFirstChild (  ) ;Node parent = block.getParent (  ) ;^1106^^^^^1104^1124^Node parent = block.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P11_Insert_Donor_Statement]^Node parent = getAddingRoot ( branch ) ;Node parent = block.getParent (  ) ;^1106^^^^^1104^1124^Node parent = block.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P11_Insert_Donor_Statement]^Node child = block.removeFirstChild (  ) ;Node parent = block.getParent (  ) ;^1106^^^^^1104^1124^Node parent = block.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P5_Replace_Variable]^Node parent = previous.getParent (  ) ;^1106^^^^^1104^1124^Node parent = block.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P14_Delete_Statement]^^1106^^^^^1104^1124^Node parent = block.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P11_Insert_Donor_Statement]^n = n.getParent (  ) ;Node parent = block.getParent (  ) ;^1106^^^^^1104^1124^Node parent = block.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P11_Insert_Donor_Statement]^parent = nameNode.getParent (  ) ;Node parent = block.getParent (  ) ;^1106^^^^^1104^1124^Node parent = block.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P5_Replace_Variable]^while  ( previous.hasChildren (  )  )  {^1111^^^^^1104^1124^while  ( block.hasChildren (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P7_Replace_Invocation]^while  ( block.newNumber (  )  )  {^1111^^^^^1104^1124^while  ( block.hasChildren (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P8_Replace_Mix]^while  ( previous.newNumber (  )  )  {^1111^^^^^1104^1124^while  ( block.hasChildren (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P5_Replace_Variable]^previous = previous;^1114^^^^^1104^1124^previous = child;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P8_Replace_Mix]^previous =  parent;^1114^^^^^1104^1124^previous = child;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P5_Replace_Variable]^Node child = previous.removeFirstChild (  ) ;^1112^^^^^1104^1124^Node child = block.removeFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P7_Replace_Invocation]^Node child = block.newNumber (  ) ;^1112^^^^^1104^1124^Node child = block.removeFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P7_Replace_Invocation]^Node child = block .getFirstChild (  )  ;^1112^^^^^1104^1124^Node child = block.removeFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P8_Replace_Mix]^Node child = previous.newNumber (  ) ;^1112^^^^^1104^1124^Node child = block.removeFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P14_Delete_Statement]^^1112^1113^^^^1104^1124^Node child = block.removeFirstChild (  ) ; parent.addChildAfter ( child, previous ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P5_Replace_Variable]^parent.addChildAfter ( previous, previous ) ;^1113^^^^^1104^1124^parent.addChildAfter ( child, previous ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P5_Replace_Variable]^parent.addChildAfter ( child, child ) ;^1113^^^^^1104^1124^parent.addChildAfter ( child, previous ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P5_Replace_Variable]^parent.addChildAfter (  previous ) ;^1113^^^^^1104^1124^parent.addChildAfter ( child, previous ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P5_Replace_Variable]^parent.addChildAfter ( child ) ;^1113^^^^^1104^1124^parent.addChildAfter ( child, previous ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P7_Replace_Invocation]^parent.newString ( child, previous ) ;^1113^^^^^1104^1124^parent.addChildAfter ( child, previous ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P8_Replace_Mix]^parent.newString ( parent, previous ) ;^1113^^^^^1104^1124^parent.addChildAfter ( child, previous ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P14_Delete_Statement]^^1113^^^^^1104^1124^parent.addChildAfter ( child, previous ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P11_Insert_Donor_Statement]^parent.addChildToFront ( var ) ;parent.addChildAfter ( child, previous ) ;^1113^^^^^1104^1124^parent.addChildAfter ( child, previous ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P5_Replace_Variable]^if  ( NodeUtil.isStatementBlock ( child )  )  {^1109^^^^^1104^1124^if  ( NodeUtil.isStatementBlock ( parent )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P6_Replace_Expression]^if  ( parent.getType (  )  == LABEL )  {^1109^^^^^1104^1124^if  ( NodeUtil.isStatementBlock ( parent )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P7_Replace_Invocation]^if  ( NodeUtil.isStatement ( parent )  )  {^1109^^^^^1104^1124^if  ( NodeUtil.isStatementBlock ( parent )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P9_Replace_Statement]^if  ( NodeUtil.isAssignmentOp ( n )  )  {^1109^^^^^1104^1124^if  ( NodeUtil.isStatementBlock ( parent )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  == Token.LABEL || block.hasOneChild (  )  )  {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  >= Token.LABEL && block.hasOneChild (  )  )  {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P5_Replace_Variable]^} else if  ( previous.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P5_Replace_Variable]^} else if  ( parent.getType (  )  == Token.LABEL && previous.hasOneChild (  )  )  {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P5_Replace_Variable]^} else if  ( block.getType (  )  == Token.LABEL && parent.hasOneChild (  )  )  {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P6_Replace_Expression]^} else if  ( parent.getType (  )  == Token.LABEL ) {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P6_Replace_Expression]^} else if  (  block.hasOneChild (  )  )  {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P6_Replace_Expression]^} else if  ( parent.getType (  )  == LABEL )  {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P6_Replace_Expression]^} else {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P7_Replace_Invocation]^} else if  ( parent.newNumber (  )  == Token.LABEL && block.hasOneChild (  )  )  {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P7_Replace_Invocation]^} else if  ( parent.getType (  )  == Token.LABEL && block.newNumber (  )  )  {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P9_Replace_Statement]^} else if  ( parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P9_Replace_Statement]^} else if  ( parent.getType (  )  == Token.LABEL && node == parent.getLastChild (  )  )  {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P15_Unwrap_Block]^parent.replaceChild(block, block.removeFirstChild()); return true;^1118^1119^1120^1121^1122^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  { parent.replaceChild ( block, block.removeFirstChild (  )  ) ; return true; } else { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P16_Remove_Block]^^1118^1119^1120^1121^1122^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  { parent.replaceChild ( block, block.removeFirstChild (  )  ) ; return true; } else { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P3_Replace_Literal]^return true;^1122^^^^^1104^1124^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P3_Replace_Literal]^return false;^1120^^^^^1104^1124^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P5_Replace_Variable]^parent.replaceChild (  block.removeFirstChild (  )  ) ;^1119^^^^^1104^1124^parent.replaceChild ( block, block.removeFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P7_Replace_Invocation]^parent.newString ( block, block.removeFirstChild (  )  ) ;^1119^^^^^1104^1124^parent.replaceChild ( block, block.removeFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P7_Replace_Invocation]^parent.replaceChild ( block, block.newNumber (  )  ) ;^1119^^^^^1104^1124^parent.replaceChild ( block, block.removeFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P8_Replace_Mix]^parent.newString ( previous, block.removeFirstChild (  )  ) ;^1119^^^^^1104^1124^parent.replaceChild ( block, block.removeFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P14_Delete_Statement]^^1119^^^^^1104^1124^parent.replaceChild ( block, block.removeFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P11_Insert_Donor_Statement]^Node child = block.removeFirstChild (  ) ;parent.replaceChild ( block, block.removeFirstChild (  )  ) ;^1119^^^^^1104^1124^parent.replaceChild ( block, block.removeFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P5_Replace_Variable]^parent.replaceChild ( previous, block.removeFirstChild (  )  ) ;^1119^^^^^1104^1124^parent.replaceChild ( block, block.removeFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P8_Replace_Mix]^} else if  ( parent .getString (  )   == Token.LABEL && block.hasOneChild (  )  )  {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P7_Replace_Invocation]^} else if  ( parent.getType (  )  == Token.LABEL && block .removeChild ( block , parent )   )  {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P7_Replace_Invocation]^parent .replaceChild ( previous , block )  ;^1119^^^^^1104^1124^parent.replaceChild ( block, block.removeFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P7_Replace_Invocation]^parent.replaceChild ( block, block .getFirstChild (  )   ) ;^1119^^^^^1104^1124^parent.replaceChild ( block, block.removeFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P14_Delete_Statement]^^1119^1120^^^^1104^1124^parent.replaceChild ( block, block.removeFirstChild (  )  ) ; return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P8_Replace_Mix]^Node child = previous .getFirstChild (  )  ;^1112^^^^^1104^1124^Node child = block.removeFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P5_Replace_Variable]^parent.addChildAfter ( previous, child ) ;^1113^^^^^1104^1124^parent.addChildAfter ( child, previous ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P3_Replace_Literal]^return false;^1117^^^^^1104^1124^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P5_Replace_Variable]^Node previous = parent;^1110^^^^^1104^1124^Node previous = block;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P14_Delete_Statement]^^1111^1112^^^^1104^1124^while  ( block.hasChildren (  )  )  { Node child = block.removeFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P14_Delete_Statement]^^1112^^^^^1104^1124^Node child = block.removeFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P5_Replace_Variable]^parent.addChildAfter ( child, parent ) ;^1113^^^^^1104^1124^parent.addChildAfter ( child, previous ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P8_Replace_Mix]^parent.newString ( child, child ) ;^1113^^^^^1104^1124^parent.addChildAfter ( child, previous ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P14_Delete_Statement]^^1113^1114^^^^1104^1124^parent.addChildAfter ( child, previous ) ; previous = child;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P7_Replace_Invocation]^parent.replaceChild ( block ) ;^1116^^^^^1104^1124^parent.removeChild ( block ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P8_Replace_Mix]^parent.removeChild ( previous ) ;^1116^^^^^1104^1124^parent.removeChild ( block ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P14_Delete_Statement]^^1116^1117^^^^1104^1124^parent.removeChild ( block ) ; return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P11_Insert_Donor_Statement]^parent.removeChild ( node ) ;parent.removeChild ( block ) ;^1116^^^^^1104^1124^parent.removeChild ( block ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P2_Replace_Operator]^} else if  ( parent.getType (  )  != Token.LABEL && block.hasOneChild (  )  )  {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P7_Replace_Invocation]^} else if  ( parent.getType (  )  == Token.LABEL && block .removeChild ( child , parent )   )  {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P8_Replace_Mix]^}  if  ( previous.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P8_Replace_Mix]^parent.replaceChild ( previous, block .getFirstChild (  )   ) ;^1119^^^^^1104^1124^parent.replaceChild ( block, block.removeFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P5_Replace_Variable]^if  ( NodeUtil.isStatementBlock ( previous )  )  {^1109^^^^^1104^1124^if  ( NodeUtil.isStatementBlock ( parent )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P8_Replace_Mix]^if  ( NodeUtil.isStatement ( previous )  )  {^1109^^^^^1104^1124^if  ( NodeUtil.isStatementBlock ( parent )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P8_Replace_Mix]^parent .addChildToFront ( block )  ;^1113^^^^^1104^1124^parent.addChildAfter ( child, previous ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P14_Delete_Statement]^^1116^^^^^1104^1124^parent.removeChild ( block ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P7_Replace_Invocation]^} else if  ( parent.getType (  )  == Token.LABEL && block .removeChild ( parent , parent )   )  {^1118^^^^^1104^1124^} else if  ( parent.getType (  )  == Token.LABEL && block.hasOneChild (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P8_Replace_Mix]^parent.replaceChild ( previous, block.newNumber (  )  ) ;^1119^^^^^1104^1124^parent.replaceChild ( block, block.removeFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] tryMergeBlock [RETURN_TYPE] boolean   Node block [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  block  child  parent  previous  
[P2_Replace_Operator]^return n.getType (  )  != Token.CALL;^1130^^^^^1129^1131^return n.getType (  )  == Token.CALL;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isCall [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  )  == Token.CALL;^1130^^^^^1129^1131^return n.getType (  )  == Token.CALL;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isCall [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^1130^^^^^1129^1131^return n.getType (  )  == Token.CALL;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isCall [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  >= Token.FUNCTION;^1137^^^^^1136^1138^return n.getType (  )  == Token.FUNCTION;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isFunction [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  )  == Token.FUNCTION;^1137^^^^^1136^1138^return n.getType (  )  == Token.FUNCTION;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isFunction [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P8_Replace_Mix]^return n .getString (  )   == Token.FUNCTION;^1137^^^^^1136^1138^return n.getType (  )  == Token.FUNCTION;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isFunction [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^1137^^^^^1136^1138^return n.getType (  )  == Token.FUNCTION;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isFunction [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^Preconditions .checkState (  )  ;^1144^^^^^1143^1146^Preconditions.checkArgument ( isFunction ( fn )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionBody [RETURN_TYPE] Node   Node fn [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  fn  
[P7_Replace_Invocation]^Preconditions.checkArgument ( isForIn ( fn )  ) ;^1144^^^^^1143^1146^Preconditions.checkArgument ( isFunction ( fn )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionBody [RETURN_TYPE] Node   Node fn [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  fn  
[P14_Delete_Statement]^^1144^^^^^1143^1146^Preconditions.checkArgument ( isFunction ( fn )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionBody [RETURN_TYPE] Node   Node fn [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  fn  
[P14_Delete_Statement]^^1144^1145^^^^1143^1146^Preconditions.checkArgument ( isFunction ( fn )  ) ; return fn.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionBody [RETURN_TYPE] Node   Node fn [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  fn  
[P7_Replace_Invocation]^return fn.newNumber (  ) ;^1145^^^^^1143^1146^return fn.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionBody [RETURN_TYPE] Node   Node fn [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  fn  
[P7_Replace_Invocation]^return fn .getFirstChild (  )  ;^1145^^^^^1143^1146^return fn.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionBody [RETURN_TYPE] Node   Node fn [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  fn  
[P14_Delete_Statement]^^1145^^^^^1143^1146^return fn.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFunctionBody [RETURN_TYPE] Node   Node fn [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  fn  
[P2_Replace_Operator]^return node.getType (  )  != Token.THIS;^1152^^^^^1151^1153^return node.getType (  )  == Token.THIS;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isThis [RETURN_TYPE] boolean   Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  
[P7_Replace_Invocation]^return node.newNumber (  )  == Token.THIS;^1152^^^^^1151^1153^return node.getType (  )  == Token.THIS;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isThis [RETURN_TYPE] boolean   Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  
[P8_Replace_Mix]^return node .getString (  )   == Token.THIS;^1152^^^^^1151^1153^return node.getType (  )  == Token.THIS;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isThis [RETURN_TYPE] boolean   Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  
[P14_Delete_Statement]^^1152^^^^^1151^1153^return node.getType (  )  == Token.THIS;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isThis [RETURN_TYPE] boolean   Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  node  
[P7_Replace_Invocation]^return containsCall ( n, Token.CALL ) ;^1159^^^^^1158^1160^return containsType ( n, Token.CALL ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsCall [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^1159^^^^^1158^1160^return containsType ( n, Token.CALL ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsCall [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  == Token.FUNCTION || !isFunctionAnonymous ( n ) ;^1168^^^^^1167^1169^return n.getType (  )  == Token.FUNCTION && !isFunctionAnonymous ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  != Token.FUNCTION && !isFunctionAnonymous ( n ) ;^1168^^^^^1167^1169^return n.getType (  )  == Token.FUNCTION && !isFunctionAnonymous ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  )  == Token.FUNCTION && !isFunctionAnonymous ( n ) ;^1168^^^^^1167^1169^return n.getType (  )  == Token.FUNCTION && !isFunctionAnonymous ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.getType (  )  == Token.FUNCTION && !isFunction ( n ) ;^1168^^^^^1167^1169^return n.getType (  )  == Token.FUNCTION && !isFunctionAnonymous ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P8_Replace_Mix]^return n .getString (  )   == Token.FUNCTION && !isFunctionAnonymous ( n ) ;^1168^^^^^1167^1169^return n.getType (  )  == Token.FUNCTION && !isFunctionAnonymous ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^1168^^^^^1167^1169^return n.getType (  )  == Token.FUNCTION && !isFunctionAnonymous ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return NodeUtil.isFunctionDeclaration ( n ) ||  ( n.getParent (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^1177^1178^1179^^^1176^1180^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n.getParent (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isHoistedFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n.getParent (  ) .getType (  )  == Token.SCRIPT && n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^1177^1178^1179^^^1176^1180^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n.getParent (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isHoistedFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n.getParent (  ) .getType (  )  <= Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^1177^1178^1179^^^1176^1180^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n.getParent (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isHoistedFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n.getParent (  ) .getType (  )  != Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^1177^1178^1179^^^1176^1180^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n.getParent (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isHoistedFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return NodeUtil.containsFunctionDeclaration ( n ) &&  ( n.getParent (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^1177^1178^1179^^^1176^1180^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n.getParent (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isHoistedFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n.getParent (  ) .equals (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^1177^1178^1179^^^1176^1180^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n.getParent (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isHoistedFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n.tokenToName (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^1177^1178^1179^^^1176^1180^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n.getParent (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isHoistedFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n.equals (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^1177^1178^1179^^^1176^1180^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n.getParent (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isHoistedFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n .getString (  )  .getType (  )  == Token.SCRIPT || n^1177^1178^1179^^^1176^1180^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n.getParent (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isHoistedFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P8_Replace_Mix]^return NodeUtil.isFunctionDeclaration ( n ) ;^1177^1178^1179^^^1176^1180^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n.getParent (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isHoistedFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^1177^1178^1179^^^1176^1180^return NodeUtil.isFunctionDeclaration ( n ) &&  ( n.getParent (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isHoistedFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^&&  ( n.getParent (  ) .equals (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^1178^1179^^^^1176^1180^&&  ( n.getParent (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isHoistedFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^&&  ( n.tokenToName (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^1178^1179^^^^1176^1180^&&  ( n.getParent (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isHoistedFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^1178^1179^^^^1176^1180^&&  ( n.getParent (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isHoistedFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P8_Replace_Mix]^&&  ( n .getString (  )  .getType (  )  == Token.SCRIPT || n^1178^1179^^^^1176^1180^&&  ( n.getParent (  ) .getType (  )  == Token.SCRIPT || n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isHoistedFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^|| n.getParent (  ) .getParent (  ) .equals (  )  == Token.FUNCTION ) ;^1179^^^^^1176^1180^|| n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isHoistedFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^|| n.equals (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^1179^^^^^1176^1180^|| n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isHoistedFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^|| n .getString (  )^1179^^^^^1176^1180^|| n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isHoistedFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^|| n.tokenToName (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^1179^^^^^1176^1180^|| n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isHoistedFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^1179^^^^^1176^1180^|| n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isHoistedFunctionDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  == Token.FUNCTION || isFunctionAnonymous ( n ) ;^1189^^^^^1188^1190^return n.getType (  )  == Token.FUNCTION && isFunctionAnonymous ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isAnonymousFunction [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  >= Token.FUNCTION && isFunctionAnonymous ( n ) ;^1189^^^^^1188^1190^return n.getType (  )  == Token.FUNCTION && isFunctionAnonymous ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isAnonymousFunction [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P5_Replace_Variable]^return n.getType (  )  == Token.this && isFunctionAnonymous ( n ) ;^1189^^^^^1188^1190^return n.getType (  )  == Token.FUNCTION && isFunctionAnonymous ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isAnonymousFunction [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  )  == Token.FUNCTION && isFunctionAnonymous ( n ) ;^1189^^^^^1188^1190^return n.getType (  )  == Token.FUNCTION && isFunctionAnonymous ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isAnonymousFunction [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return n.getType (  )  == Token.FUNCTION && isFunction ( n ) ;^1189^^^^^1188^1190^return n.getType (  )  == Token.FUNCTION && isFunctionAnonymous ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isAnonymousFunction [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^1189^^^^^1188^1190^return n.getType (  )  == Token.FUNCTION && isFunctionAnonymous ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isAnonymousFunction [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^return !isStatementBlock ( n ) ;^1216^^^^^1215^1217^return !isStatement ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isFunctionAnonymous [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P14_Delete_Statement]^^1216^^^^^1215^1217^return !isStatement ( n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isFunctionAnonymous [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  n  
[P7_Replace_Invocation]^Preconditions.checkArgument ( isForIn ( function )  ) ;^1224^^^^^1223^1229^Preconditions.checkArgument ( isFunction ( function )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarArgsFunction [RETURN_TYPE] boolean   Node function [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  function  
[P8_Replace_Mix]^Preconditions .checkState (  )  ;^1224^^^^^1223^1229^Preconditions.checkArgument ( isFunction ( function )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarArgsFunction [RETURN_TYPE] boolean   Node function [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  function  
[P14_Delete_Statement]^^1224^^^^^1223^1229^Preconditions.checkArgument ( isFunction ( function )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarArgsFunction [RETURN_TYPE] boolean   Node function [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  function  
[P3_Replace_Literal]^return NodeUtil.isNameReferenced ( function.getLastChild (  ) , "argumentsarg", Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1225^1226^1227^1228^^1223^1229^return NodeUtil.isNameReferenced ( function.getLastChild (  ) , "arguments", Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarArgsFunction [RETURN_TYPE] boolean   Node function [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  function  
[P4_Replace_Constructor]^return NodeUtil.isNameReferenced ( function.getLastChild (  ) , "arguments", Predicates.<Node>not ( return NodeUtil.isNameReferenced ( function.getLastChild (  ) , "arguments", Predicates.<Node>not (  NodeUtil.new Node ( EMPTY )   )  ) ;^1225^1226^1227^1228^^1223^1229^return NodeUtil.isNameReferenced ( function.getLastChild (  ) , "arguments", Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarArgsFunction [RETURN_TYPE] boolean   Node function [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  function  
[P7_Replace_Invocation]^return NodeUtil.getCount ( function.getLastChild (  ) , "arguments", Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1225^1226^1227^1228^^1223^1229^return NodeUtil.isNameReferenced ( function.getLastChild (  ) , "arguments", Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarArgsFunction [RETURN_TYPE] boolean   Node function [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  function  
[P7_Replace_Invocation]^return NodeUtil.isNameReferenced ( function.newNumber (  ) , "arguments", Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1225^1226^1227^1228^^1223^1229^return NodeUtil.isNameReferenced ( function.getLastChild (  ) , "arguments", Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarArgsFunction [RETURN_TYPE] boolean   Node function [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  function  
[P7_Replace_Invocation]^return NodeUtil.isNameReferenced ( function.getLastChild (  ) , "arguments", Predicates.<Node>alwaysTrue ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1225^1226^1227^1228^^1223^1229^return NodeUtil.isNameReferenced ( function.getLastChild (  ) , "arguments", Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarArgsFunction [RETURN_TYPE] boolean   Node function [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  function  
[P8_Replace_Mix]^return NodeUtil.isNameReferenced ( function .getFirstChild (  )  , "arguments", Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1225^1226^1227^1228^^1223^1229^return NodeUtil.isNameReferenced ( function.getLastChild (  ) , "arguments", Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarArgsFunction [RETURN_TYPE] boolean   Node function [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  function  
[P4_Replace_Constructor]^Predicates.<Node>not ( Predicates.<Node>not (  NodeUtil.new Node ( EMPTY )   )  ) ;^1228^^^^^1223^1229^Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarArgsFunction [RETURN_TYPE] boolean   Node function [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  function  
[P5_Replace_Variable]^Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.2 )  )  ) ;^1228^^^^^1223^1229^Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarArgsFunction [RETURN_TYPE] boolean   Node function [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  function  
[P3_Replace_Literal]^return NodeUtil.isNameReferenced ( function.getLastChild (  ) , "argumentsa", Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1225^1226^1227^1228^^1223^1229^return NodeUtil.isNameReferenced ( function.getLastChild (  ) , "arguments", Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarArgsFunction [RETURN_TYPE] boolean   Node function [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  function  
[P7_Replace_Invocation]^function.newNumber (  ) , "arguments", Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1226^1227^1228^^^1223^1229^function.getLastChild (  ) , "arguments", Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarArgsFunction [RETURN_TYPE] boolean   Node function [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  function  
[P7_Replace_Invocation]^function .getFirstChild (  )  , "arguments", Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1226^1227^1228^^^1223^1229^function.getLastChild (  ) , "arguments", Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarArgsFunction [RETURN_TYPE] boolean   Node function [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  function  
[P14_Delete_Statement]^^1226^1227^1228^^^1223^1229^function.getLastChild (  ) , "arguments", Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarArgsFunction [RETURN_TYPE] boolean   Node function [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  function  
[P7_Replace_Invocation]^Predicates.<Node>alwaysTrue ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1228^^^^^1223^1229^Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarArgsFunction [RETURN_TYPE] boolean   Node function [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  function  
[P14_Delete_Statement]^^1228^^^^^1223^1229^Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isVarArgsFunction [RETURN_TYPE] boolean   Node function [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  name  namespaceName  boolean  Map  vars  int  type  Node  function  
[P2_Replace_Operator]^if  ( callNode.getType (  )  != Token.CALL )  {^1237^^^^^1236^1248^if  ( callNode.getType (  )  == Token.CALL )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P2_Replace_Operator]^if  ( callNode.getType (  )  >= Token.CALL )  {^1237^^^^^1236^1248^if  ( callNode.getType (  )  == Token.CALL )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P5_Replace_Variable]^if  ( last.getType (  )  == Token.CALL )  {^1237^^^^^1236^1248^if  ( callNode.getType (  )  == Token.CALL )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P6_Replace_Expression]^if  ( last != null && last.getType() == STRING )  {^1237^^^^^1236^1248^if  ( callNode.getType (  )  == Token.CALL )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P6_Replace_Expression]^if  ( last != null )  {^1237^^^^^1236^1248^if  ( callNode.getType (  )  == Token.CALL )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P6_Replace_Expression]^if  ( last.getType (  )  == STRING )  {^1237^^^^^1236^1248^if  ( callNode.getType (  )  == Token.CALL )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P7_Replace_Invocation]^if  ( callNode.newNumber (  )  == Token.CALL )  {^1237^^^^^1236^1248^if  ( callNode.getType (  )  == Token.CALL )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P7_Replace_Invocation]^if  ( callNode .getString (  )   == Token.CALL )  {^1237^^^^^1236^1248^if  ( callNode.getType (  )  == Token.CALL )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P9_Replace_Statement]^if  ( n.getType (  )  == Token.NAME )  {^1237^^^^^1236^1248^if  ( callNode.getType (  )  == Token.CALL )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P9_Replace_Statement]^if  ( nameNode.getType (  )  == Token.NAME )  {^1237^^^^^1236^1248^if  ( callNode.getType (  )  == Token.CALL )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P9_Replace_Statement]^if  ( n.getType (  )  != Token.EMPTY )  {^1237^^^^^1236^1248^if  ( callNode.getType (  )  == Token.CALL )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P9_Replace_Statement]^if  ( n != null && n.getType (  )  == Token.NAME )  {^1237^^^^^1236^1248^if  ( callNode.getType (  )  == Token.CALL )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P13_Insert_Block]^if  ( isGet ( functionIndentifyingExpression )  )  {     Node last = functionIndentifyingExpression.getLastChild (  ) ;     if  (  ( last != null )  &&  (  ( last.getType (  )  )  ==  ( STRING )  )  )  {         String propName = last.getString (  ) ;         return propName.equals ( methodName ) ;     } }^1237^^^^^1236^1248^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P5_Replace_Variable]^if  ( NodeUtil.isGet ( callNode )  )  {^1239^^^^^1236^1248^if  ( NodeUtil.isGet ( functionIndentifyingExpression )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P6_Replace_Expression]^if  ( last != null )  {^1239^^^^^1236^1248^if  ( NodeUtil.isGet ( functionIndentifyingExpression )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P6_Replace_Expression]^if  ( last.getType (  )  == STRING )  {^1239^^^^^1236^1248^if  ( NodeUtil.isGet ( functionIndentifyingExpression )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P7_Replace_Invocation]^if  ( NodeUtil.isNew ( functionIndentifyingExpression )  )  {^1239^^^^^1236^1248^if  ( NodeUtil.isGet ( functionIndentifyingExpression )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P8_Replace_Mix]^if  ( NodeUtil.isNew ( callNode )  )  {^1239^^^^^1236^1248^if  ( NodeUtil.isGet ( functionIndentifyingExpression )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P15_Unwrap_Block]^com.google.javascript.rhino.Node last = functionIndentifyingExpression.getLastChild(); if ((last != null) && ((last.getType()) == (com.google.javascript.rhino.Token.STRING))) {    java.lang.String propName = last.getString();    return propName.equals(methodName);};^1239^1240^1241^1242^1243^1236^1248^if  ( NodeUtil.isGet ( functionIndentifyingExpression )  )  { Node last = functionIndentifyingExpression.getLastChild (  ) ; if  ( last != null && last.getType (  )  == Token.STRING )  { String propName = last.getString (  ) ; return  ( propName.equals ( methodName )  ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P16_Remove_Block]^^1239^1240^1241^1242^1243^1236^1248^if  ( NodeUtil.isGet ( functionIndentifyingExpression )  )  { Node last = functionIndentifyingExpression.getLastChild (  ) ; if  ( last != null && last.getType (  )  == Token.STRING )  { String propName = last.getString (  ) ; return  ( propName.equals ( methodName )  ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P13_Insert_Block]^if  (  ( callNode.getType (  )  )  ==  ( CALL )  )  {     Node functionIndentifyingExpression = callNode.getFirstChild (  ) ;     if  ( isGet ( functionIndentifyingExpression )  )  {         Node last = functionIndentifyingExpression.getLastChild (  ) ;         if  (  ( last != null )  &&  (  ( last.getType (  )  )  ==  ( STRING )  )  )  {             String propName = last.getString (  ) ;             return propName.equals ( methodName ) ;         }     } }^1239^^^^^1236^1248^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P13_Insert_Block]^if  (  ( n.getType (  )  )  ==  ( NAME )  )  {     Node parent = n.getParent (  ) ;     if  (  ( parent != null )  &&  (  ( parent.getType (  )  )  ==  ( VAR )  )  )  {         String name = n.getString (  ) ;         if  ( ! ( vars.containsKey ( name )  )  )  {             vars.put ( name, n ) ;         }     } }^1239^^^^^1236^1248^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P2_Replace_Operator]^if  ( last != null || last.getType (  )  == Token.STRING )  {^1241^^^^^1236^1248^if  ( last != null && last.getType (  )  == Token.STRING )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P2_Replace_Operator]^if  ( last == null && last.getType (  )  == Token.STRING )  {^1241^^^^^1236^1248^if  ( last != null && last.getType (  )  == Token.STRING )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P2_Replace_Operator]^if  ( last != null && last.getType (  )  != Token.STRING )  {^1241^^^^^1236^1248^if  ( last != null && last.getType (  )  == Token.STRING )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P5_Replace_Variable]^if  ( functionIndentifyingExpression != null && last.getType (  )  == Token.STRING )  {^1241^^^^^1236^1248^if  ( last != null && last.getType (  )  == Token.STRING )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P6_Replace_Expression]^if  ( last != null ) {^1241^^^^^1236^1248^if  ( last != null && last.getType (  )  == Token.STRING )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P6_Replace_Expression]^if  (  last.getType (  )  == Token.STRING )  {^1241^^^^^1236^1248^if  ( last != null && last.getType (  )  == Token.STRING )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P6_Replace_Expression]^if  ( last.getType (  )  == STRING )  {^1241^^^^^1236^1248^if  ( last != null && last.getType (  )  == Token.STRING )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P7_Replace_Invocation]^if  ( last != null && last.newNumber (  )  == Token.STRING )  {^1241^^^^^1236^1248^if  ( last != null && last.getType (  )  == Token.STRING )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P7_Replace_Invocation]^if  ( last != null && last .getString (  )   == Token.STRING )  {^1241^^^^^1236^1248^if  ( last != null && last.getType (  )  == Token.STRING )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P8_Replace_Mix]^if  ( last != true ) {^1241^^^^^1236^1248^if  ( last != null && last.getType (  )  == Token.STRING )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P9_Replace_Statement]^if  ( n != null && n.getType (  )  == Token.NAME )  {^1241^^^^^1236^1248^if  ( last != null && last.getType (  )  == Token.STRING )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P9_Replace_Statement]^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^1241^^^^^1236^1248^if  ( last != null && last.getType (  )  == Token.STRING )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P15_Unwrap_Block]^java.lang.String propName = last.getString(); return propName.equals(methodName);^1241^1242^1243^1244^^1236^1248^if  ( last != null && last.getType (  )  == Token.STRING )  { String propName = last.getString (  ) ; return  ( propName.equals ( methodName )  ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P16_Remove_Block]^^1241^1242^1243^1244^^1236^1248^if  ( last != null && last.getType (  )  == Token.STRING )  { String propName = last.getString (  ) ; return  ( propName.equals ( methodName )  ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P13_Insert_Block]^if  (  ( nameNode.getType (  )  )  ==  ( NAME )  )  {     String name = nameNode.getString (  ) ;     if  ( name.equals ( "String" )  )  {         return false;     } }^1241^^^^^1236^1248^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P13_Insert_Block]^if  (  ( parent != null )  &&  (  ( parent.getType (  )  )  ==  ( VAR )  )  )  {     String name = n.getString (  ) ;     if  ( ! ( vars.containsKey ( name )  )  )  {         vars.put ( name, n ) ;     } }^1241^^^^^1236^1248^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P5_Replace_Variable]^return  ( namespaceName.equals ( methodName )  ) ;^1243^^^^^1236^1248^return  ( propName.equals ( methodName )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P5_Replace_Variable]^return  ( propName.equals ( namespaceName )  ) ;^1243^^^^^1236^1248^return  ( propName.equals ( methodName )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P5_Replace_Variable]^return  ( methodName.equals ( propName )  ) ;^1243^^^^^1236^1248^return  ( propName.equals ( methodName )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P7_Replace_Invocation]^return  ( propName.substring ( methodName )  ) ;^1243^^^^^1236^1248^return  ( propName.equals ( methodName )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P12_Insert_Condition]^if  ( name.equals ( "String" )  )  { return  ( propName.equals ( methodName )  ) ; }^1243^^^^^1236^1248^return  ( propName.equals ( methodName )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P1_Replace_Type]^char propName = last.getchar (  ) ;^1242^^^^^1236^1248^String propName = last.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P5_Replace_Variable]^String propName = functionIndentifyingExpression.getString (  ) ;^1242^^^^^1236^1248^String propName = last.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P7_Replace_Invocation]^String propName = last.newNumber (  ) ;^1242^^^^^1236^1248^String propName = last.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P11_Insert_Donor_Statement]^String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;String propName = last.getString (  ) ;^1242^^^^^1236^1248^String propName = last.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P11_Insert_Donor_Statement]^String name = n.getString (  ) ;String propName = last.getString (  ) ;^1242^^^^^1236^1248^String propName = last.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P11_Insert_Donor_Statement]^String name = n.getFirstChild (  ) .getString (  ) ;String propName = last.getString (  ) ;^1242^^^^^1236^1248^String propName = last.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P11_Insert_Donor_Statement]^String qNameStr = qName.getQualifiedName (  ) ;String propName = last.getString (  ) ;^1242^^^^^1236^1248^String propName = last.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P11_Insert_Donor_Statement]^String name = nameNode.getString (  ) ;String propName = last.getString (  ) ;^1242^^^^^1236^1248^String propName = last.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P11_Insert_Donor_Statement]^String className = constructor.getString (  ) ;String propName = last.getString (  ) ;^1242^^^^^1236^1248^String propName = last.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P8_Replace_Mix]^String propName = functionIndentifyingExpression.newNumber (  ) ;^1242^^^^^1236^1248^String propName = last.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P14_Delete_Statement]^^1242^1243^^^^1236^1248^String propName = last.getString (  ) ; return  ( propName.equals ( methodName )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P11_Insert_Donor_Statement]^return parent.getString (  ) ;String propName = last.getString (  ) ;^1242^^^^^1236^1248^String propName = last.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P11_Insert_Donor_Statement]^return n.getString (  ) ;String propName = last.getString (  ) ;^1242^^^^^1236^1248^String propName = last.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P11_Insert_Donor_Statement]^parent = nameNode.getParent (  ) ;String propName = last.getString (  ) ;^1242^^^^^1236^1248^String propName = last.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P14_Delete_Statement]^^1243^^^^^1236^1248^return  ( propName.equals ( methodName )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P8_Replace_Mix]^return  ( propName .equals ( null )   ) ;^1243^^^^^1236^1248^return  ( propName.equals ( methodName )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P5_Replace_Variable]^Node last = callNode.getLastChild (  ) ;^1240^^^^^1236^1248^Node last = functionIndentifyingExpression.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P7_Replace_Invocation]^Node last = functionIndentifyingExpression.newNumber (  ) ;^1240^^^^^1236^1248^Node last = functionIndentifyingExpression.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P11_Insert_Donor_Statement]^Node functionIndentifyingExpression = callNode.getFirstChild (  ) ;Node last = functionIndentifyingExpression.getLastChild (  ) ;^1240^^^^^1236^1248^Node last = functionIndentifyingExpression.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P12_Insert_Condition]^if  ( NodeUtil.isGet ( functionIndentifyingExpression )  )  { Node last = functionIndentifyingExpression.getLastChild (  ) ; }^1240^^^^^1236^1248^Node last = functionIndentifyingExpression.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P7_Replace_Invocation]^String propName = last .newString (  )  ;^1242^^^^^1236^1248^String propName = last.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P5_Replace_Variable]^Node last = last.getLastChild (  ) ;^1240^^^^^1236^1248^Node last = functionIndentifyingExpression.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P14_Delete_Statement]^^1240^1241^1242^1243^1244^1236^1248^Node last = functionIndentifyingExpression.getLastChild (  ) ; if  ( last != null && last.getType (  )  == Token.STRING )  { String propName = last.getString (  ) ; return  ( propName.equals ( methodName )  ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P8_Replace_Mix]^String propName = functionIndentifyingExpression .newString (  )  ;^1242^^^^^1236^1248^String propName = last.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P8_Replace_Mix]^if  ( last != this ) {^1241^^^^^1236^1248^if  ( last != null && last.getType (  )  == Token.STRING )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P5_Replace_Variable]^Node functionIndentifyingExpression = last.getFirstChild (  ) ;^1238^^^^^1236^1248^Node functionIndentifyingExpression = callNode.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P7_Replace_Invocation]^Node functionIndentifyingExpression = callNode.newNumber (  ) ;^1238^^^^^1236^1248^Node functionIndentifyingExpression = callNode.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P7_Replace_Invocation]^Node functionIndentifyingExpression = callNode .getLastChild (  )  ;^1238^^^^^1236^1248^Node functionIndentifyingExpression = callNode.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P7_Replace_Invocation]^Node last = functionIndentifyingExpression .getFirstChild (  )  ;^1240^^^^^1236^1248^Node last = functionIndentifyingExpression.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P8_Replace_Mix]^Node functionIndentifyingExpression = last.newNumber (  ) ;^1238^^^^^1236^1248^Node functionIndentifyingExpression = callNode.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P5_Replace_Variable]^if  ( NodeUtil.isGet ( last )  )  {^1239^^^^^1236^1248^if  ( NodeUtil.isGet ( functionIndentifyingExpression )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P8_Replace_Mix]^if  ( NodeUtil.isNew ( last )  )  {^1239^^^^^1236^1248^if  ( NodeUtil.isGet ( functionIndentifyingExpression )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P8_Replace_Mix]^Node last = callNode.newNumber (  ) ;^1240^^^^^1236^1248^Node last = functionIndentifyingExpression.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P14_Delete_Statement]^^1242^^^^^1236^1248^String propName = last.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P8_Replace_Mix]^return  ( propName.substring ( namespaceName )  ) ;^1243^^^^^1236^1248^return  ( propName.equals ( methodName )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P3_Replace_Literal]^return true;^1247^^^^^1236^1248^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectCallMethod [RETURN_TYPE] boolean   Node callNode String methodName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  functionIndentifyingExpression  last  
[P3_Replace_Literal]^return isObjectCallMethod ( callNode, "callcal" ) ;^1257^^^^^1256^1258^return isObjectCallMethod ( callNode, "call" ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P7_Replace_Invocation]^return isNameReferenced ( callNode, "call" ) ;^1257^^^^^1256^1258^return isObjectCallMethod ( callNode, "call" ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P14_Delete_Statement]^^1257^^^^^1256^1258^return isObjectCallMethod ( callNode, "call" ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P3_Replace_Literal]^return isObjectCallMethod ( callNode, "pppply" ) ;^1266^^^^^1265^1267^return isObjectCallMethod ( callNode, "apply" ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isFunctionObjectApply [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P7_Replace_Invocation]^return isNameReferenced ( callNode, "apply" ) ;^1266^^^^^1265^1267^return isObjectCallMethod ( callNode, "apply" ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isFunctionObjectApply [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P3_Replace_Literal]^return isObjectCallMethod ( callNode, "applypp" ) ;^1266^^^^^1265^1267^return isObjectCallMethod ( callNode, "apply" ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isFunctionObjectApply [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P14_Delete_Statement]^^1266^^^^^1265^1267^return isObjectCallMethod ( callNode, "apply" ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isFunctionObjectApply [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P7_Replace_Invocation]^if  ( isFunctionObjectApply ( callNode )  )  {^1276^^^^^1275^1283^if  ( isFunctionObjectCall ( callNode )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P15_Unwrap_Block]^if ((callNode.getFirstChild().getFirstChild().getType()) == (com.google.javascript.rhino.Token.NAME)) {    return true;};^1276^1277^1278^1279^^1275^1283^if  ( isFunctionObjectCall ( callNode )  )  { if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  == Token.NAME )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P16_Remove_Block]^^1276^1277^1278^1279^^1275^1283^if  ( isFunctionObjectCall ( callNode )  )  { if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  == Token.NAME )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P13_Insert_Block]^if  (  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  )  ==  ( NAME )  )  {     return true; }^1276^^^^^1275^1283^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P2_Replace_Operator]^if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  != Token.NAME )  {^1277^^^^^1275^1283^if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P5_Replace_Variable]^if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  == Token.null )  {^1277^^^^^1275^1283^if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P7_Replace_Invocation]^if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .equals (  )  == Token.NAME )  {^1277^^^^^1275^1283^if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P7_Replace_Invocation]^if  ( callNode.equals (  ) .getFirstChild (  ) .getType (  )  == Token.NAME )  {^1277^^^^^1275^1283^if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P7_Replace_Invocation]^if  ( callNode.newNumber (  ) .getFirstChild (  ) .getType (  )  == Token.NAME )  {^1277^^^^^1275^1283^if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P7_Replace_Invocation]^if  ( callNode .getLastChild (  )^1277^^^^^1275^1283^if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P9_Replace_Statement]^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  {^1277^^^^^1275^1283^if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P15_Unwrap_Block]^return true;^1277^1278^1279^^^1275^1283^if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  == Token.NAME )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P16_Remove_Block]^^1277^1278^1279^^^1275^1283^if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  == Token.NAME )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P13_Insert_Block]^if  ( isFunctionObjectCall ( callNode )  )  {     if  (  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  )  ==  ( NAME )  )  {         return true;     } }^1277^^^^^1275^1283^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P13_Insert_Block]^if  (  ( n.getType (  )  )  !=  ( EMPTY )  )  {     return false; }^1277^^^^^1275^1283^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P13_Insert_Block]^if  (  ( block.getType (  )  )  !=  ( BLOCK )  )  {     return false; }^1277^^^^^1275^1283^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P3_Replace_Literal]^return false;^1278^^^^^1275^1283^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P7_Replace_Invocation]^if  ( callNode.getFirstChild (  ) .getFirstChild (  )  .getString (  )   == Token.NAME )  {^1277^^^^^1275^1283^if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P2_Replace_Operator]^if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  > Token.NAME )  {^1277^^^^^1275^1283^if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P3_Replace_Literal]^return true;^1282^^^^^1275^1283^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isSimpleFunctionObjectCall [RETURN_TYPE] boolean   Node callNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  callNode  
[P2_Replace_Operator]^return  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  && parent.getType (  )  == Token.VAR;^1295^1296^^^^1294^1297^return  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLhs [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  n  parent  
[P2_Replace_Operator]^return  ( parent.getType (  )  == Token.ASSIGN || parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^1295^1296^^^^1294^1297^return  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLhs [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  n  parent  
[P2_Replace_Operator]^return  ( parent.getType (  )  != Token.ASSIGN && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^1295^1296^^^^1294^1297^return  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLhs [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  n  parent  
[P2_Replace_Operator]^return  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  < n )  || parent.getType (  )  == Token.VAR;^1295^1296^^^^1294^1297^return  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLhs [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^return  ( n.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == parent )  || parent.getType (  )  == Token.VAR;^1295^1296^^^^1294^1297^return  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLhs [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^return  ( parent.newNumber (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^1295^1296^^^^1294^1297^return  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLhs [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^return  ( parent.getType (  )  == Token.ASSIGN && parent.newNumber (  )  == n )  || parent.getType (  )  == Token.VAR;^1295^1296^^^^1294^1297^return  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLhs [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^return  ( parent .getString (  )   == Token.ASSIGN && parent.getFirstChild (  )  == n )  || parent^1295^1296^^^^1294^1297^return  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLhs [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  n  parent  
[P5_Replace_Variable]^return  ( n.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^1295^1296^^^^1294^1297^return  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLhs [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  n  parent  
[P14_Delete_Statement]^^1295^1296^^^^1294^1297^return  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLhs [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  n  parent  
[P8_Replace_Mix]^return  ( n.getType (  )  == Token.ASSIGN && parent .getLastChild (  )   == n )  || parent.getType (  )  == Token.VAR;^1295^1296^^^^1294^1297^return  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLhs [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^parent.newNumber (  )  == Token.VAR;^1296^^^^^1294^1297^parent.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLhs [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  n  parent  
[P7_Replace_Invocation]^parent .getString (  )   == Token.VAR;^1296^^^^^1294^1297^parent.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLhs [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  n  parent  
[P14_Delete_Statement]^^1296^^^^^1294^1297^parent.getType (  )  == Token.VAR;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLhs [RETURN_TYPE] boolean   Node n Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  type  Node  n  parent  
[P2_Replace_Operator]^if  ( node.getType (  )  == Token.STRING || parent.getType (  )  == Token.OBJECTLIT )  {^1307^^^^^1306^1319^if  ( node.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P2_Replace_Operator]^if  ( node.getType (  )  >= Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^1307^^^^^1306^1319^if  ( node.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P2_Replace_Operator]^if  ( node.getType (  )  != Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^1307^^^^^1306^1319^if  ( node.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^1307^^^^^1306^1319^if  ( node.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P5_Replace_Variable]^if  ( node.getType (  )  == Token.STRING && node.getType (  )  == Token.OBJECTLIT )  {^1307^^^^^1306^1319^if  ( node.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.STRING && node.getType (  )  == Token.OBJECTLIT )  {^1307^^^^^1306^1319^if  ( node.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P6_Replace_Expression]^if  ( node.getType (  )  == Token.STRING ) {^1307^^^^^1306^1319^if  ( node.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P6_Replace_Expression]^if  (  parent.getType (  )  == Token.OBJECTLIT )  {^1307^^^^^1306^1319^if  ( node.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P6_Replace_Expression]^if  ( node.getType (  )  == STRING )  {^1307^^^^^1306^1319^if  ( node.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P6_Replace_Expression]^if  ( parent.getType (  )  == OBJECTLIT )  {^1307^^^^^1306^1319^if  ( node.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P6_Replace_Expression]^if  ( current != null )  {^1307^^^^^1306^1319^if  ( node.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P6_Replace_Expression]^if  ( current == node )  {^1307^^^^^1306^1319^if  ( node.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P6_Replace_Expression]^if  ( index % 2 == 0 )  {^1307^^^^^1306^1319^if  ( node.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P6_Replace_Expression]^if  ( index % 2 )  {^1307^^^^^1306^1319^if  ( node.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P7_Replace_Invocation]^if  ( node.newNumber (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^1307^^^^^1306^1319^if  ( node.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P7_Replace_Invocation]^if  ( node .getString (  )   == Token.STRING && parent^1307^^^^^1306^1319^if  ( node.getType (  )  == Token.STRING && parent.getType (  )  == Token.OBJECTLIT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P2_Replace_Operator]^if  ( current != node )  {^1312^^^^^1306^1319^if  ( current == node )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P5_Replace_Variable]^if  ( parent == node )  {^1312^^^^^1306^1319^if  ( current == node )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P5_Replace_Variable]^if  ( current == parent )  {^1312^^^^^1306^1319^if  ( current == node )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P5_Replace_Variable]^if  ( node == current )  {^1312^^^^^1306^1319^if  ( current == node )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P6_Replace_Expression]^if  ( index % 2 == 0 )  {^1312^^^^^1306^1319^if  ( current == node )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P6_Replace_Expression]^if  ( index % 2 )  {^1312^^^^^1306^1319^if  ( current == node )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P9_Replace_Statement]^if  ( res == null )  {^1312^^^^^1306^1319^if  ( current == node )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P15_Unwrap_Block]^return (index % 2) == 0;^1312^1313^1314^^^1306^1319^if  ( current == node )  { return index % 2 == 0; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P16_Remove_Block]^^1312^1313^1314^^^1306^1319^if  ( current == node )  { return index % 2 == 0; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P13_Insert_Block]^if  ( lhsString == null )  {     return false; }^1312^^^^^1306^1319^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P2_Replace_Operator]^return index % 2 != 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P2_Replace_Operator]^return index  <<  2 == 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P3_Replace_Literal]^return index % 10 == 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P3_Replace_Literal]^return index % 2 == -5;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P5_Replace_Variable]^return type % 2 == 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P8_Replace_Mix]^return index % 2  &&  0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P5_Replace_Variable]^for  ( Node current = node.getFirstChild (  ) ;^1309^^^^^1306^1319^for  ( Node current = parent.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P5_Replace_Variable]^for  ( Node parent = parent.getFirstChild (  ) ;^1309^^^^^1306^1319^for  ( Node current = parent.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P5_Replace_Variable]^for  ( Node parent = current.getFirstChild (  ) ;^1309^^^^^1306^1319^for  ( Node current = parent.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P7_Replace_Invocation]^for  ( Node current = parent.newNumber (  ) ;^1309^^^^^1306^1319^for  ( Node current = parent.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P2_Replace_Operator]^return index  >=  2 == 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P3_Replace_Literal]^return index % type == 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P3_Replace_Literal]^return index % 2 == type;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P8_Replace_Mix]^return index % 2  !=  0;;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P3_Replace_Literal]^return index %  == 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P8_Replace_Mix]^return index % 0  ||  0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P7_Replace_Invocation]^current = current.newNumber (  )  )  {^1311^^^^^1306^1319^current = current.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P7_Replace_Invocation]^current = current .getParent (  )   )  {^1311^^^^^1306^1319^current = current.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P8_Replace_Mix]^current =  parent.getNext (  )  )  {^1311^^^^^1306^1319^current = current.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P2_Replace_Operator]^return index  <=  2 == 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P3_Replace_Literal]^return index % 2 == ;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P8_Replace_Mix]^return type % 2  || type;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P1_Replace_Type]^short  index = 0;^1308^^^^^1306^1319^int index = 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P3_Replace_Literal]^int index = type;^1308^^^^^1306^1319^int index = 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P11_Insert_Donor_Statement]^int total = 0;int index = 0;^1308^^^^^1306^1319^int index = 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P8_Replace_Mix]^for  ( Node current = node.newNumber (  ) ;^1309^^^^^1306^1319^for  ( Node current = parent.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P7_Replace_Invocation]^for  ( Node current = parent .getLastChild (  )  ;^1309^^^^^1306^1319^for  ( Node current = parent.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P14_Delete_Statement]^^1309^1310^1311^1312^1313^1306^1319^for  ( Node current = parent.getFirstChild (  ) ; current != null; current = current.getNext (  )  )  { if  ( current == node )  { return index % 2 == 0; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P12_Insert_Condition]^if  ( n == parent.getFirstChild (  )  )  { for  ( Node current = parent.getFirstChild (  ) ; current != null; }^1309^1310^^^^1306^1319^for  ( Node current = parent.getFirstChild (  ) ; current != null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P14_Delete_Statement]^^1311^1312^1313^^^1306^1319^current = current.getNext (  )  )  { if  ( current == node )  { return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P2_Replace_Operator]^if  ( current <= node )  {^1312^^^^^1306^1319^if  ( current == node )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P2_Replace_Operator]^return index % 2 >= 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P2_Replace_Operator]^return index  &&  2 == 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P3_Replace_Literal]^return index % 9 == 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P3_Replace_Literal]^return index % 2 == index;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P2_Replace_Operator]^if  ( current >= node )  {^1312^^^^^1306^1319^if  ( current == node )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P2_Replace_Operator]^return index  <  2 == 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P3_Replace_Literal]^return index % 6 == 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P3_Replace_Literal]^return index % 2 == 2;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P8_Replace_Mix]^return false ;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P2_Replace_Operator]^return index  !=  2 == 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P3_Replace_Literal]^return index % 2 == -7;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P8_Replace_Mix]^return index % 2  && type;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P3_Replace_Literal]^return index % 11 == 0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P8_Replace_Mix]^returntype  &&  0;^1313^^^^^1306^1319^return index % 2 == 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P1_Replace_Type]^long  index = 0;^1308^^^^^1306^1319^int index = 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P3_Replace_Literal]^int index = 2;^1308^^^^^1306^1319^int index = 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P3_Replace_Literal]^return true;^1318^^^^^1306^1319^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isObjectLitKey [RETURN_TYPE] boolean   Node node Node parent [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  type  Node  current  node  parent  
[P3_Replace_Literal]^case Token.BITOR: return "";^1331^^^^^1316^1346^case Token.BITOR: return "|";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.OR: return "|||";^1332^^^^^1317^1347^case Token.OR: return "||";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.BITXOR: return "";^1333^^^^^1318^1348^case Token.BITXOR: return "^";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.AND: return "&";^1334^^^^^1319^1349^case Token.AND: return "&&";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.BITAND: return "";^1335^^^^^1320^1350^case Token.BITAND: return "&";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.SHEQ: return "==";^1336^^^^^1321^1351^case Token.SHEQ: return "===";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.EQ: return "=";^1337^^^^^1322^1352^case Token.EQ: return "==";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.IN: return "ini";^1342^^^^^1327^1357^case Token.IN: return "in";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.LE: return "";^1343^^^^^1328^1358^case Token.LE: return "<=";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.LT: return "";^1344^^^^^1329^1359^case Token.LT: return "<";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.URSH: return "";^1345^^^^^1330^1360^case Token.URSH: return ">>>";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.RSH: return ">>>";^1346^^^^^1331^1361^case Token.RSH: return ">>";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.GE: return "=";^1347^^^^^1332^1362^case Token.GE: return ">=";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.GT: return "";^1348^^^^^1333^1363^case Token.GT: return ">";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.MUL: return "";^1349^^^^^1334^1364^case Token.MUL: return "*";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.MOD: return "";^1351^^^^^1336^1366^case Token.MOD: return "%";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.SUB: return "";^1354^^^^^1339^1369^case Token.SUB: return "-";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.POS: return "";^1355^^^^^1340^1370^case Token.POS: return "+";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.NEG: return "";^1356^^^^^1341^1371^case Token.NEG: return "-";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.ASSIGN: return "";^1357^^^^^1342^1372^case Token.ASSIGN: return "=";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.ASSIGN_LSH: return "<<=<<";^1361^^^^^1346^1376^case Token.ASSIGN_LSH: return "<<=";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.ASSIGN_RSH: return ">>";^1362^^^^^1347^1377^case Token.ASSIGN_RSH: return ">>=";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.ASSIGN_ADD: return "+=+";^1364^^^^^1349^1379^case Token.ASSIGN_ADD: return "+=";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.ASSIGN_SUB: return "=";^1365^^^^^1350^1380^case Token.ASSIGN_SUB: return "-=";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.ASSIGN_MUL: return "*";^1366^^^^^1351^1381^case Token.ASSIGN_MUL: return "*=";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.ASSIGN_DIV: return "=";^1367^^^^^1352^1382^case Token.ASSIGN_DIV: return "/=";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.VOID: return "ooid";^1369^^^^^1354^1384^case Token.VOID: return "void";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^case Token.INSTANCEOF: return "anc";^1371^^^^^1356^1386^case Token.INSTANCEOF: return "instanceof";^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P8_Replace_Mix]^default: return this;^1372^^^^^1357^1387^default: return null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStr [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  boolean  Map  vars  int  index  operator  type  
[P1_Replace_Type]^char res = opToStr ( operator ) ;^1385^^^^^1384^1391^String res = opToStr ( operator ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P5_Replace_Variable]^String res = opToStr ( type ) ;^1385^^^^^1384^1391^String res = opToStr ( operator ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P7_Replace_Invocation]^String res = opToStrNoFail ( operator ) ;^1385^^^^^1384^1391^String res = opToStr ( operator ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P14_Delete_Statement]^^1385^^^^^1384^1391^String res = opToStr ( operator ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P2_Replace_Operator]^if  ( res != null )  {^1386^^^^^1384^1391^if  ( res == null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P6_Replace_Expression]^if  (  ( "Unknown op " + operator )  + ": " + name ( operator ) )  {^1386^^^^^1384^1391^if  ( res == null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P6_Replace_Expression]^if  ( "Unknown op " + operator + ": " )  {^1386^^^^^1384^1391^if  ( res == null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P6_Replace_Expression]^if  ( "Unknown op " + operator )  {^1386^^^^^1384^1391^if  ( res == null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P8_Replace_Mix]^if  ( res == this )  {^1386^^^^^1384^1391^if  ( res == null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P9_Replace_Statement]^if  ( lhsString == null )  {^1386^^^^^1384^1391^if  ( res == null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P9_Replace_Statement]^if  ( current == node )  {^1386^^^^^1384^1391^if  ( res == null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P9_Replace_Statement]^if  ( nameNode != null )  {^1386^^^^^1384^1391^if  ( res == null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P9_Replace_Statement]^if  ( value != null )  {^1386^^^^^1384^1391^if  ( res == null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P15_Unwrap_Block]^throw new java.lang.Error(((("Unknown op " + operator) + ": ") + (com.google.javascript.rhino.Token.name(operator))));^1386^1387^1388^1389^^1384^1391^if  ( res == null )  { throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P16_Remove_Block]^^1386^1387^1388^1389^^1384^1391^if  ( res == null )  { throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P2_Replace_Operator]^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  >=  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P2_Replace_Operator]^throw new Error ( "Unknown op "  &&  operator  &&  ": " + Token.name ( operator )  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P2_Replace_Operator]^throw new Error ( "Unknown op "  >=  operator + ": " + Token.name ( operator )  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^throw new Error ( "Unknown op Unknow" + operator + ": " + Token.name ( operator )  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P5_Replace_Variable]^throw new Error ( "Unknown op " + type + ": " + Token.name ( operator )  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P13_Insert_Block]^if  ( res == null )  {     throw new Error (  (  (  ( "Unknown op " + operator )  + ": " )  +  ( name ( operator )  )  )  ) ; }^1387^^^^^1384^1391^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P2_Replace_Operator]^throw new Error ( "Unknown op "  <  operator  <  ": " + Token.name ( operator )  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^throw new Error ( "Unknown opnknown op " + operator + ": " + Token.name ( operator )  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^throw new Error ( "Unknown op " + operator + ": :" + Token.name ( operator )  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P5_Replace_Variable]^Token.name ( type )  ) ;^1388^^^^^1384^1391^Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P14_Delete_Statement]^^1388^^^^^1384^1391^Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P2_Replace_Operator]^throw new Error ( "Unknown op "  >>  operator  >>  ": " + Token.name ( operator )  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^throw new Error ( "Unknown op Un" + operator + ": " + Token.name ( operator )  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^throw new Error ( "Unknown op " + operator + " " + Token.name ( operator )  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P2_Replace_Operator]^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ^  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P2_Replace_Operator]^throw new Error ( "Unknown op "  ^  operator  ^  ": " + Token.name ( operator )  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P2_Replace_Operator]^throw new Error ( "Unknown op "  &  operator + ": " + Token.name ( operator )  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^throw new Error ( "knknown op " + operator + ": " + Token.name ( operator )  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P3_Replace_Literal]^throw new Error ( "Unknown op " + operator + ":" + Token.name ( operator )  ) ;^1387^1388^^^^1384^1391^throw new Error ( "Unknown op " + operator + ": " + Token.name ( operator )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P5_Replace_Variable]^return propName;^1390^^^^^1384^1391^return res;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P8_Replace_Mix]^return namespaceName;^1390^^^^^1384^1391^return res;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] opToStrNoFail [RETURN_TYPE] String   int operator [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  
[P4_Replace_Constructor]^return containsType ( node, type, Predicates.<Node>not ( return containsType ( node, type, Predicates.<Node>not (  NodeUtil.new Node ( EMPTY )   )  ) ;^1398^1399^^^^1397^1400^return containsType ( node, type, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsTypeInOuterScope [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[P4_Replace_Constructor]^return containsType (  type, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1398^1399^^^^1397^1400^return containsType ( node, type, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsTypeInOuterScope [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[P4_Replace_Constructor]^return containsType ( node,  Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1398^1399^^^^1397^1400^return containsType ( node, type, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsTypeInOuterScope [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[P5_Replace_Variable]^return containsType ( node, operator, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1398^1399^^^^1397^1400^return containsType ( node, type, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsTypeInOuterScope [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[P5_Replace_Variable]^return containsType ( type, node, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1398^1399^^^^1397^1400^return containsType ( node, type, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsTypeInOuterScope [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[P7_Replace_Invocation]^return getCount ( node, type, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1398^1399^^^^1397^1400^return containsType ( node, type, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsTypeInOuterScope [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[P7_Replace_Invocation]^return containsType ( node, type, Predicates.<Node>alwaysTrue ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1398^1399^^^^1397^1400^return containsType ( node, type, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsTypeInOuterScope [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[P4_Replace_Constructor]^Predicates.<Node>not ( Predicates.<Node>not (  NodeUtil.new Node ( EMPTY )   )  ) ;^1399^^^^^1397^1400^Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsTypeInOuterScope [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[P8_Replace_Mix]^return getCount ( node, operator, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1398^1399^^^^1397^1400^return containsType ( node, type, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsTypeInOuterScope [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[P14_Delete_Statement]^^1398^1399^^^^1397^1400^return containsType ( node, type, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsTypeInOuterScope [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[P7_Replace_Invocation]^Predicates.<Node>alwaysTrue ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1399^^^^^1397^1400^Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsTypeInOuterScope [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[P14_Delete_Statement]^^1399^^^^^1397^1400^Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsTypeInOuterScope [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[P4_Replace_Constructor]^return has ( node, return has ( node,  new MatchNameNode ( name )  , traverseChildrenPred ) ;^1408^^^^^1405^1409^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  Predicate  traverseChildrenPred  
[P4_Replace_Constructor]^return has (  new MatchNodeType ( type ) , traverseChildrenPred ) ;^1408^^^^^1405^1409^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  Predicate  traverseChildrenPred  
[P4_Replace_Constructor]^return has ( node, new MatchNodeType ( type )  ) ;^1408^^^^^1405^1409^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^return has ( node, new MatchNodeType ( operator ) , traverseChildrenPred ) ;^1408^^^^^1405^1409^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^return has ( type, new MatchNodeType ( node ) , traverseChildrenPred ) ;^1408^^^^^1405^1409^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^return has ( traverseChildrenPred, new MatchNodeType ( type ) , node ) ;^1408^^^^^1405^1409^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  Predicate  traverseChildrenPred  
[P7_Replace_Invocation]^return visitPreOrder ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^1408^^^^^1405^1409^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  Predicate  traverseChildrenPred  
[P8_Replace_Mix]^return visitPreOrder ( node, new MatchNodeType ( operator ) , traverseChildrenPred ) ;^1408^^^^^1405^1409^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  Predicate  traverseChildrenPred  
[P14_Delete_Statement]^^1408^^^^^1405^1409^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^return containsType (  type, Predicates.<Node>alwaysTrue (  )  ) ;^1415^^^^^1414^1416^return containsType ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[P5_Replace_Variable]^return containsType ( node,  Predicates.<Node>alwaysTrue (  )  ) ;^1415^^^^^1414^1416^return containsType ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[P5_Replace_Variable]^return containsType ( type, node, Predicates.<Node>alwaysTrue (  )  ) ;^1415^^^^^1414^1416^return containsType ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[P7_Replace_Invocation]^return getCount ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^1415^^^^^1414^1416^return containsType ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[P5_Replace_Variable]^return containsType ( node, operator, Predicates.<Node>alwaysTrue (  )  ) ;^1415^^^^^1414^1416^return containsType ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[P14_Delete_Statement]^^1415^^^^^1414^1416^return containsType ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] containsType [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  node  
[P5_Replace_Variable]^Collection<Node> vars = getVarsDeclaredInBranch ( var ) ;^1425^^^^^1424^1437^Collection<Node> vars = getVarsDeclaredInBranch ( branch ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P7_Replace_Invocation]^Collection<Node> vars = isVarDeclaration ( branch ) ;^1425^^^^^1424^1437^Collection<Node> vars = getVarsDeclaredInBranch ( branch ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P8_Replace_Mix]^Collection<Node> vars = isVarDeclaration ( var ) ;^1425^^^^^1424^1437^Collection<Node> vars = getVarsDeclaredInBranch ( branch ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P14_Delete_Statement]^^1425^^^^^1424^1437^Collection<Node> vars = getVarsDeclaredInBranch ( branch ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P9_Replace_Statement]^if  ( pred.apply ( n )  )  {^1426^^^^^1424^1437^if  ( vars.isEmpty (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P9_Replace_Statement]^if  ( isAssignmentOp ( n )  )  {^1426^^^^^1424^1437^if  ( vars.isEmpty (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P15_Unwrap_Block]^return ;^1426^1427^1428^^^1424^1437^if  ( vars.isEmpty (  )  )  { return; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P16_Remove_Block]^^1426^1427^1428^^^1424^1437^if  ( vars.isEmpty (  )  )  { return; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P13_Insert_Block]^if  ( namespaceName.equals ( "Math" )  )  {     return false; }^1426^^^^^1424^1437^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P13_Insert_Block]^if  ( c > LARGEST_BASIC_LATIN )  {     return false; }^1426^^^^^1424^1437^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P13_Insert_Block]^if  ( pred.apply ( n )  )  {     total++; }^1426^^^^^1424^1437^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P13_Insert_Block]^if  ( pred.apply ( node )  )  {     return true; }^1426^^^^^1424^1437^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P13_Insert_Block]^if  ( name.equals ( "String" )  )  {     return false; }^1426^^^^^1424^1437^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P13_Insert_Block]^if  ( callNode.isNoSideEffectsCall (  )  )  {     return false; }^1426^^^^^1424^1437^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P13_Insert_Block]^if  ( n ==  ( parent.getFirstChild (  )  )  )  {     return true; }^1426^^^^^1424^1437^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P13_Insert_Block]^if  ( "Infinity".equals ( name )  )  {     return true; }^1426^^^^^1424^1437^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P13_Insert_Block]^if  ( lhsString == null )  {     return false; }^1426^^^^^1424^1437^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P13_Insert_Block]^if  ( checkForNewObjects )  {     return true; }^1426^^^^^1424^1437^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P5_Replace_Variable]^Node parent = getAddingRoot ( var ) ;^1430^^^^^1424^1437^Node parent = getAddingRoot ( branch ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P7_Replace_Invocation]^Node parent = getStringValue ( branch ) ;^1430^^^^^1424^1437^Node parent = getAddingRoot ( branch ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P11_Insert_Donor_Statement]^Node parent = n.getParent (  ) ;Node parent = getAddingRoot ( branch ) ;^1430^^^^^1424^1437^Node parent = getAddingRoot ( branch ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P11_Insert_Donor_Statement]^Node parent = block.getParent (  ) ;Node parent = getAddingRoot ( branch ) ;^1430^^^^^1424^1437^Node parent = getAddingRoot ( branch ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P8_Replace_Mix]^Node parent = getStringValue ( var ) ;^1430^^^^^1424^1437^Node parent = getAddingRoot ( branch ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P14_Delete_Statement]^^1430^^^^^1424^1437^Node parent = getAddingRoot ( branch ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P5_Replace_Variable]^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, var.getString (  )  )  ) ;^1432^1433^^^^1424^1437^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P5_Replace_Variable]^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME.getString (  )  )  ) ;^1432^1433^^^^1424^1437^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P5_Replace_Variable]^Node var = new Node ( Token. Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^1432^1433^^^^1424^1437^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P7_Replace_Invocation]^Node var = new Node ( Token.VAR, Node.newNumber ( Token.NAME, nameNode.getString (  )  )  ) ;^1432^1433^^^^1424^1437^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P7_Replace_Invocation]^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, nameNode.newNumber (  )  )  ) ;^1432^1433^^^^1424^1437^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P7_Replace_Invocation]^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, nameNode .newString (  )   )  ) ;^1432^1433^^^^1424^1437^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P5_Replace_Variable]^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, parent.getString (  )  )  ) ;^1432^1433^^^^1424^1437^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P7_Replace_Invocation]^Node var = new Node ( Token.VAR, Node .newString ( res , index , operator )   ) ;^1432^1433^^^^1424^1437^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P8_Replace_Mix]^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, parent.newNumber (  )  )  ) ;^1432^1433^^^^1424^1437^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P11_Insert_Donor_Statement]^Node nodeName = Node.newString ( Token.NAME, name ) ;Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^1432^1433^^^^1424^1437^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P11_Insert_Donor_Statement]^Node nameNode = Node.newString ( Token.NAME, name ) ;Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^1432^1433^^^^1424^1437^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P5_Replace_Variable]^Token.VAR, Node.newString ( Token.NAME, var.getString (  )  )  ) ;^1433^^^^^1424^1437^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P7_Replace_Invocation]^Token.VAR, Node.newNumber ( Token.NAME, nameNode.getString (  )  )  ) ;^1433^^^^^1424^1437^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P7_Replace_Invocation]^Token.VAR, Node .newString ( namespaceName , type , operator )   ) ;^1433^^^^^1424^1437^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P7_Replace_Invocation]^Token.VAR, Node.newString ( Token.NAME, nameNode.newNumber (  )  )  ) ;^1433^^^^^1424^1437^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P8_Replace_Mix]^Token.VAR, Node.newString ( Token.NAME, var.newNumber (  )  )  ) ;^1433^^^^^1424^1437^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P14_Delete_Statement]^^1433^1434^^^^1424^1437^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ; copyNameAnnotations ( nameNode, var.getFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P11_Insert_Donor_Statement]^Node nodeName = Node.newString ( Token.NAME, name ) ;Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^1433^^^^^1424^1437^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P11_Insert_Donor_Statement]^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^1433^^^^^1424^1437^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P11_Insert_Donor_Statement]^return Node.newString ( Token.NAME, name, lineno, charno ) ;Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^1433^^^^^1424^1437^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P11_Insert_Donor_Statement]^Node nameNode = Node.newString ( Token.NAME, name ) ;Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^1433^^^^^1424^1437^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P11_Insert_Donor_Statement]^Node.newString ( Token.NAME, name, lineno, charno )  ) ;Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^1433^^^^^1424^1437^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P11_Insert_Donor_Statement]^String name = nameNode.getString (  ) ;Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^1433^^^^^1424^1437^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P11_Insert_Donor_Statement]^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^1433^^^^^1424^1437^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P11_Insert_Donor_Statement]^"Expected NEW node, got " + Token.name ( callNode.getType (  )  )  ) ;Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^1433^^^^^1424^1437^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P11_Insert_Donor_Statement]^"Expected CALL node, got " + Token.name ( callNode.getType (  )  )  ) ;Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^1433^^^^^1424^1437^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P8_Replace_Mix]^Token.VAR, Node.newString ( Token.NAME, var .newString (  )   )  ) ;^1433^^^^^1424^1437^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P14_Delete_Statement]^^1433^^^^^1424^1437^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P5_Replace_Variable]^copyNameAnnotations ( parent, var.getFirstChild (  )  ) ;^1434^^^^^1424^1437^copyNameAnnotations ( nameNode, var.getFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P5_Replace_Variable]^copyNameAnnotations ( nameNode, parent.getFirstChild (  )  ) ;^1434^^^^^1424^1437^copyNameAnnotations ( nameNode, var.getFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P5_Replace_Variable]^copyNameAnnotations (  var.getFirstChild (  )  ) ;^1434^^^^^1424^1437^copyNameAnnotations ( nameNode, var.getFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P5_Replace_Variable]^copyNameAnnotations ( nameNode.getFirstChild (  )  ) ;^1434^^^^^1424^1437^copyNameAnnotations ( nameNode, var.getFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P5_Replace_Variable]^copyNameAnnotations ( var, nameNode.getFirstChild (  )  ) ;^1434^^^^^1424^1437^copyNameAnnotations ( nameNode, var.getFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P7_Replace_Invocation]^getFunctionName ( nameNode, var.getFirstChild (  )  ) ;^1434^^^^^1424^1437^copyNameAnnotations ( nameNode, var.getFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P7_Replace_Invocation]^copyNameAnnotations ( nameNode, var.newNumber (  )  ) ;^1434^^^^^1424^1437^copyNameAnnotations ( nameNode, var.getFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P7_Replace_Invocation]^copyNameAnnotations ( nameNode, var .getLastChild (  )   ) ;^1434^^^^^1424^1437^copyNameAnnotations ( nameNode, var.getFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P14_Delete_Statement]^^1434^1435^^^^1424^1437^copyNameAnnotations ( nameNode, var.getFirstChild (  )  ) ; parent.addChildToFront ( var ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P11_Insert_Donor_Statement]^Node nameNode = callNode.getFirstChild (  ) ;copyNameAnnotations ( nameNode, var.getFirstChild (  )  ) ;^1434^^^^^1424^1437^copyNameAnnotations ( nameNode, var.getFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P5_Replace_Variable]^parent.addChildToFront ( nameNode ) ;^1435^^^^^1424^1437^parent.addChildToFront ( var ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P7_Replace_Invocation]^parent.addChildAfter ( var ) ;^1435^^^^^1424^1437^parent.addChildToFront ( var ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P7_Replace_Invocation]^parent .addChildToBack ( nameNode )  ;^1435^^^^^1424^1437^parent.addChildToFront ( var ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P14_Delete_Statement]^^1435^^^^^1424^1437^parent.addChildToFront ( var ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P11_Insert_Donor_Statement]^nodeName.addChildrenToBack ( value ) ;parent.addChildToFront ( var ) ;^1435^^^^^1424^1437^parent.addChildToFront ( var ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P11_Insert_Donor_Statement]^parent.addChildAfter ( child, previous ) ;parent.addChildToFront ( var ) ;^1435^^^^^1424^1437^parent.addChildToFront ( var ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P11_Insert_Donor_Statement]^parameterParen.addChildToBack ( param ) ;parent.addChildToFront ( var ) ;^1435^^^^^1424^1437^parent.addChildToFront ( var ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] redeclareVarsInsideBranch [RETURN_TYPE] void   Node branch [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  branch  nameNode  parent  var  Collection  vars  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  index  operator  type  
[P7_Replace_Invocation]^if  ( source.putBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^1445^^^^^1444^1448^if  ( source.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] copyNameAnnotations [RETURN_TYPE] void   Node source Node destination [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  destination  source  
[P15_Unwrap_Block]^destination.putBooleanProp(Node.IS_CONSTANT_NAME, true);^1445^1446^1447^^^1444^1448^if  ( source.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { destination.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] copyNameAnnotations [RETURN_TYPE] void   Node source Node destination [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  destination  source  
[P16_Remove_Block]^^1445^1446^1447^^^1444^1448^if  ( source.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { destination.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] copyNameAnnotations [RETURN_TYPE] void   Node source Node destination [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  destination  source  
[P3_Replace_Literal]^destination.putBooleanProp ( Node.IS_CONSTANT_NAME, false ) ;^1446^^^^^1444^1448^destination.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] copyNameAnnotations [RETURN_TYPE] void   Node source Node destination [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  destination  source  
[P7_Replace_Invocation]^destination.replaceChild ( Node.IS_CONSTANT_NAME, true ) ;^1446^^^^^1444^1448^destination.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] copyNameAnnotations [RETURN_TYPE] void   Node source Node destination [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  destination  source  
[P14_Delete_Statement]^^1446^^^^^1444^1448^destination.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] copyNameAnnotations [RETURN_TYPE] void   Node source Node destination [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  destination  source  
[P11_Insert_Donor_Statement]^return node.getBooleanProp ( Node.IS_CONSTANT_NAME ) ;destination.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^1446^^^^^1444^1448^destination.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] copyNameAnnotations [RETURN_TYPE] void   Node source Node destination [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  destination  source  
[P12_Insert_Condition]^if  ( source.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { destination.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ; }^1446^^^^^1444^1448^destination.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] copyNameAnnotations [RETURN_TYPE] void   Node source Node destination [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  destination  source  
[P5_Replace_Variable]^if  ( destination.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^1445^^^^^1444^1448^if  ( source.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] copyNameAnnotations [RETURN_TYPE] void   Node source Node destination [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  destination  source  
[P7_Replace_Invocation]^destination .getBooleanProp (  )  ;^1446^^^^^1444^1448^destination.putBooleanProp ( Node.IS_CONSTANT_NAME, true ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] copyNameAnnotations [RETURN_TYPE] void   Node source Node destination [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  destination  source  
[P11_Insert_Donor_Statement]^Node ancestor = n;Node addingRoot = null;^1455^^^^^1454^1474^Node addingRoot = null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^Node parent = null;Node addingRoot = null;^1455^^^^^1454^1474^Node addingRoot = null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P8_Replace_Mix]^Node ancestor = addingRoot;^1456^^^^^1454^1474^Node ancestor = n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^Node addingRoot = null;Node ancestor = n;^1456^^^^^1454^1474^Node ancestor = n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^Node parent = null;Node ancestor = n;^1456^^^^^1454^1474^Node ancestor = n;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P2_Replace_Operator]^while  ( null ==  ( ancestor = ancestor.getParent (  )  )  )  {^1457^^^^^1454^1474^while  ( null !=  ( ancestor = ancestor.getParent (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P5_Replace_Variable]^while  ( null !=  ( n = ancestor.getParent (  )  )  )  {^1457^^^^^1454^1474^while  ( null !=  ( ancestor = ancestor.getParent (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P7_Replace_Invocation]^while  ( null !=  ( ancestor = ancestor.tokenToName (  )  )  )  {^1457^^^^^1454^1474^while  ( null !=  ( ancestor = ancestor.getParent (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P2_Replace_Operator]^if  ( type != Token.SCRIPT )  {^1459^^^^^1454^1474^if  ( type == Token.SCRIPT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P2_Replace_Operator]^if  ( type <= Token.SCRIPT )  {^1459^^^^^1454^1474^if  ( type == Token.SCRIPT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P5_Replace_Variable]^if  ( operator == Token.SCRIPT )  {^1459^^^^^1454^1474^if  ( type == Token.SCRIPT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P6_Replace_Expression]^if  ( type == FUNCTION )  {^1459^^^^^1454^1474^if  ( type == Token.SCRIPT )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P2_Replace_Operator]^} else if  ( type != Token.FUNCTION )  {^1462^^^^^1454^1474^} else if  ( type == Token.FUNCTION )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P5_Replace_Variable]^} else if  ( operator == Token.FUNCTION )  {^1462^^^^^1454^1474^} else if  ( type == Token.FUNCTION )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P6_Replace_Expression]^} else {^1462^^^^^1454^1474^} else if  ( type == Token.FUNCTION )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P8_Replace_Mix]^}  if  ( operator == Token.FUNCTION )  {^1462^^^^^1454^1474^} else if  ( type == Token.FUNCTION )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P15_Unwrap_Block]^addingRoot = ancestor.getLastChild(); break;^1462^1463^1464^1465^^1454^1474^} else if  ( type == Token.FUNCTION )  { addingRoot = ancestor.getLastChild (  ) ; break; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P16_Remove_Block]^^1462^1463^1464^1465^^1454^1474^} else if  ( type == Token.FUNCTION )  { addingRoot = ancestor.getLastChild (  ) ; break; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P5_Replace_Variable]^addingRoot = n.getLastChild (  ) ;^1463^^^^^1454^1474^addingRoot = ancestor.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P7_Replace_Invocation]^addingRoot = ancestor.newNumber (  ) ;^1463^^^^^1454^1474^addingRoot = ancestor.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^addingRoot = ancestor;addingRoot = ancestor.getLastChild (  ) ;^1463^^^^^1454^1474^addingRoot = ancestor.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^cur = cur.getFirstChild (  ) ;addingRoot = ancestor.getLastChild (  ) ;^1463^^^^^1454^1474^addingRoot = ancestor.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P7_Replace_Invocation]^addingRoot = ancestor .getFirstChild (  )  ;^1463^^^^^1454^1474^addingRoot = ancestor.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P14_Delete_Statement]^^1463^^^^^1454^1474^addingRoot = ancestor.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^Node current = n.getFirstChild (  ) ;addingRoot = ancestor.getLastChild (  ) ;^1463^^^^^1454^1474^addingRoot = ancestor.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^int type = ancestor.getType (  ) ;addingRoot = ancestor.getLastChild (  ) ;^1463^^^^^1454^1474^addingRoot = ancestor.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^return cur.getFirstChild (  ) ;addingRoot = ancestor.getLastChild (  ) ;^1463^^^^^1454^1474^addingRoot = ancestor.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^&& child == parent.getLastChild (  ) ;addingRoot = ancestor.getLastChild (  ) ;^1463^^^^^1454^1474^addingRoot = ancestor.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^Node nameNode = callNode.getFirstChild (  ) ;addingRoot = ancestor.getLastChild (  ) ;^1463^^^^^1454^1474^addingRoot = ancestor.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^return fn.getLastChild (  ) ;addingRoot = ancestor.getLastChild (  ) ;^1463^^^^^1454^1474^addingRoot = ancestor.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^return n.getLastChild (  ) ;addingRoot = ancestor.getLastChild (  ) ;^1463^^^^^1454^1474^addingRoot = ancestor.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P8_Replace_Mix]^addingRoot =  null.getLastChild (  ) ;^1463^^^^^1454^1474^addingRoot = ancestor.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P8_Replace_Mix]^addingRoot = n.newNumber (  ) ;^1463^^^^^1454^1474^addingRoot = ancestor.getLastChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P5_Replace_Variable]^addingRoot = n;^1460^^^^^1454^1474^addingRoot = ancestor;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^addingRoot = ancestor.getLastChild (  ) ;addingRoot = ancestor;^1460^^^^^1454^1474^addingRoot = ancestor;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P14_Delete_Statement]^^1463^1464^^^^1454^1474^addingRoot = ancestor.getLastChild (  ) ; break;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P1_Replace_Type]^long  type = ancestor.getType (  ) ;^1458^^^^^1454^1474^int type = ancestor.getType (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P5_Replace_Variable]^int type = n.getType (  ) ;^1458^^^^^1454^1474^int type = ancestor.getType (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P7_Replace_Invocation]^int type = ancestor.newNumber (  ) ;^1458^^^^^1454^1474^int type = ancestor.getType (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P8_Replace_Mix]^int type = ancestor .getString (  )  ;^1458^^^^^1454^1474^int type = ancestor.getType (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^String name = nameNode.getString (  ) ;int type = ancestor.getType (  ) ;^1458^^^^^1454^1474^int type = ancestor.getType (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P8_Replace_Mix]^int type = n.newNumber (  ) ;^1458^^^^^1454^1474^int type = ancestor.getType (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P14_Delete_Statement]^^1458^^^^^1454^1474^int type = ancestor.getType (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^addingRoot = ancestor.getLastChild (  ) ;int type = ancestor.getType (  ) ;^1458^^^^^1454^1474^int type = ancestor.getType (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P2_Replace_Operator]^} else if  ( type >= Token.FUNCTION )  {^1462^^^^^1454^1474^} else if  ( type == Token.FUNCTION )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P2_Replace_Operator]^} else if  ( type <= Token.FUNCTION )  {^1462^^^^^1454^1474^} else if  ( type == Token.FUNCTION )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P8_Replace_Mix]^while  ( null !=   ( n^1457^^^^^1454^1474^while  ( null !=  ( ancestor = ancestor.getParent (  )  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P14_Delete_Statement]^^1457^1458^^^^1454^1474^while  ( null !=  ( ancestor = ancestor.getParent (  )  )  )  { int type = ancestor.getType (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P2_Replace_Operator]^Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK && addingRoot.getType (  )  == Token.SCRIPT ) ;^1469^1470^^^^1454^1474^Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P2_Replace_Operator]^Preconditions.checkState ( addingRoot.getType (  )  < Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^1469^1470^^^^1454^1474^Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P2_Replace_Operator]^Preconditions.checkState ( addingRoot.getType (  )  != Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^1469^1470^^^^1454^1474^Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P5_Replace_Variable]^Preconditions.checkState ( n.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^1469^1470^^^^1454^1474^Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P7_Replace_Invocation]^Preconditions.checkState ( addingRoot.newNumber (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^1469^1470^^^^1454^1474^Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P7_Replace_Invocation]^Preconditions.checkState ( addingRoot .getString (  )   == Token.BLOCK || addingRoot^1469^1470^^^^1454^1474^Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P14_Delete_Statement]^^1469^1470^^^^1454^1474^Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^return n.getType (  )  == Token.SCRIPT || n.getType (  )  == Token.BLOCK;Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^1469^1470^^^^1454^1474^Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^return n.getType (  )  == Token.CASE || n.getType (  )  == Token.DEFAULT;Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^1469^1470^^^^1454^1474^Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( addingRoot.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^1469^1470^^^^1454^1474^Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^return n.getType (  )  == Token.GETPROP || n.getType (  )  == Token.GETELEM;Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^1469^1470^^^^1454^1474^Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( block.getType (  )  == Token.BLOCK ) ;Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^1469^1470^^^^1454^1474^Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P8_Replace_Mix]^Preconditions.checkState ( n .getString (  )   == Token.BLOCK || addingRoot^1469^1470^^^^1454^1474^Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P7_Replace_Invocation]^addingRoot.newNumber (  )  == Token.SCRIPT ) ;^1470^^^^^1454^1474^addingRoot.getType (  )  == Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P14_Delete_Statement]^^1470^^^^^1454^1474^addingRoot.getType (  )  == Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P2_Replace_Operator]^Preconditions.checkState ( addingRoot.getFirstChild (  )  == null && addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^1471^1472^^^^1454^1474^Preconditions.checkState ( addingRoot.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P2_Replace_Operator]^Preconditions.checkState ( addingRoot.getFirstChild (  )  != null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^1471^1472^^^^1454^1474^Preconditions.checkState ( addingRoot.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P2_Replace_Operator]^Preconditions.checkState ( addingRoot.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  == Token.SCRIPT ) ;^1471^1472^^^^1454^1474^Preconditions.checkState ( addingRoot.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P5_Replace_Variable]^Preconditions.checkState ( n.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^1471^1472^^^^1454^1474^Preconditions.checkState ( addingRoot.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P7_Replace_Invocation]^Preconditions.checkState ( addingRoot.newNumber (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^1471^1472^^^^1454^1474^Preconditions.checkState ( addingRoot.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P7_Replace_Invocation]^Preconditions.checkState ( addingRoot.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .equals (  )  != Token.SCRIPT ) ;^1471^1472^^^^1454^1474^Preconditions.checkState ( addingRoot.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P14_Delete_Statement]^^1471^1472^^^^1454^1474^Preconditions.checkState ( addingRoot.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( addingRoot.getType (  )  == Token.BLOCK || addingRoot.getType (  )  == Token.SCRIPT ) ;Preconditions.checkState ( addingRoot.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^1471^1472^^^^1454^1474^Preconditions.checkState ( addingRoot.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P7_Replace_Invocation]^Preconditions.checkState ( addingRoot .getLastChild (  )   == null || addingRoot^1471^1472^^^^1454^1474^Preconditions.checkState ( addingRoot.getFirstChild (  )  == null || addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P7_Replace_Invocation]^addingRoot.getFirstChild (  ) .equals (  )  != Token.SCRIPT ) ;^1472^^^^^1454^1474^addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P7_Replace_Invocation]^addingRoot.newNumber (  ) .getType (  )  != Token.SCRIPT ) ;^1472^^^^^1454^1474^addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P7_Replace_Invocation]^addingRoot .getLastChild (  )  .getType (  )  != Token.SCRIPT ) ;^1472^^^^^1454^1474^addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P14_Delete_Statement]^^1472^^^^^1454^1474^addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^&& n.getFirstChild (  ) .getType (  )  == Token.ASSIGN;addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^1472^^^^^1454^1474^addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^|| n.getParent (  ) .getParent (  ) .getType (  )  == Token.FUNCTION ) ;addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^1472^^^^^1454^1474^addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^return n.hasChildren (  )  && n.getFirstChild (  ) .getType (  )  == Token.CATCH;addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^1472^^^^^1454^1474^addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^&& n.getFirstChild (  ) .getType (  )  == Token.CALL;addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^1472^^^^^1454^1474^addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P11_Insert_Donor_Statement]^addingRoot.getType (  )  == Token.SCRIPT ) ;addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^1472^^^^^1454^1474^addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P14_Delete_Statement]^^1472^1473^^^^1454^1474^addingRoot.getFirstChild (  ) .getType (  )  != Token.SCRIPT ) ; return addingRoot;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P8_Replace_Mix]^return n;^1473^^^^^1454^1474^return addingRoot;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getAddingRoot [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  boolean  Map  vars  int  index  operator  type  Node  addingRoot  ancestor  n  
[P4_Replace_Constructor]^Node parameterParen = new Node ( Token.LP,  charno ) ;^1479^^^^^1477^1489^Node parameterParen = new Node ( Token.LP, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P4_Replace_Constructor]^Node parameterParen = new Node ( Token.LP, lineno ) ;^1479^^^^^1477^1489^Node parameterParen = new Node ( Token.LP, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^Node parameterParen = new Node ( Token.LP, type, charno ) ;^1479^^^^^1477^1489^Node parameterParen = new Node ( Token.LP, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^Node parameterParen = new Node ( Token.LP, lineno, type ) ;^1479^^^^^1477^1489^Node parameterParen = new Node ( Token.LP, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^Node parameterParen = new Node ( Token. lineno, charno ) ;^1479^^^^^1477^1489^Node parameterParen = new Node ( Token.LP, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^Node parameterParen = new Node ( Token.LP, charno, lineno ) ;^1479^^^^^1477^1489^Node parameterParen = new Node ( Token.LP, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P8_Replace_Mix]^Node parameterParen = new Node ( Token.LP, lineno, operator ) ;^1479^^^^^1477^1489^Node parameterParen = new Node ( Token.LP, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P11_Insert_Donor_Statement]^Node var = new Node ( Token.VAR, nodeName ) ;Node parameterParen = new Node ( Token.LP, lineno, charno ) ;^1479^^^^^1477^1489^Node parameterParen = new Node ( Token.LP, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^parameterParen.addChildToBack ( body ) ;^1481^^^^^1477^1489^parameterParen.addChildToBack ( param ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P7_Replace_Invocation]^parameterParen.addChildAfter ( param ) ;^1481^^^^^1477^1489^parameterParen.addChildToBack ( param ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P8_Replace_Mix]^parameterParen .addChildrenToBack (  )  ;^1481^^^^^1477^1489^parameterParen.addChildToBack ( param ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P14_Delete_Statement]^^1481^^^^^1477^1489^parameterParen.addChildToBack ( param ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P11_Insert_Donor_Statement]^nodeName.addChildrenToBack ( value ) ;parameterParen.addChildToBack ( param ) ;^1481^^^^^1477^1489^parameterParen.addChildToBack ( param ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P11_Insert_Donor_Statement]^parent.addChildToFront ( var ) ;parameterParen.addChildToBack ( param ) ;^1481^^^^^1477^1489^parameterParen.addChildToBack ( param ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P11_Insert_Donor_Statement]^function.addChildToBack ( body ) ;parameterParen.addChildToBack ( param ) ;^1481^^^^^1477^1489^parameterParen.addChildToBack ( param ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P11_Insert_Donor_Statement]^function.addChildToBack ( parameterParen ) ;parameterParen.addChildToBack ( param ) ;^1481^^^^^1477^1489^parameterParen.addChildToBack ( param ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P4_Replace_Constructor]^FunctionNode function = new FunctionNode (  lineno, charno ) ;^1483^^^^^1477^1489^FunctionNode function = new FunctionNode ( name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P4_Replace_Constructor]^FunctionNode function = new FunctionNode ( name,  charno ) ;^1483^^^^^1477^1489^FunctionNode function = new FunctionNode ( name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P4_Replace_Constructor]^FunctionNode function = new FunctionNode ( name, lineno ) ;^1483^^^^^1477^1489^FunctionNode function = new FunctionNode ( name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^FunctionNode function = new FunctionNode ( res, lineno, charno ) ;^1483^^^^^1477^1489^FunctionNode function = new FunctionNode ( name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^FunctionNode function = new FunctionNode ( name, type, charno ) ;^1483^^^^^1477^1489^FunctionNode function = new FunctionNode ( name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^FunctionNode function = new FunctionNode ( name, lineno, type ) ;^1483^^^^^1477^1489^FunctionNode function = new FunctionNode ( name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^FunctionNode function = new FunctionNode ( lineno, name, charno ) ;^1483^^^^^1477^1489^FunctionNode function = new FunctionNode ( name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^FunctionNode function = new FunctionNode ( name, charno, lineno ) ;^1483^^^^^1477^1489^FunctionNode function = new FunctionNode ( name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P8_Replace_Mix]^FunctionNode function = new FunctionNode ( propName, lineno, charno ) ;^1483^^^^^1477^1489^FunctionNode function = new FunctionNode ( name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^FunctionNode function = new FunctionNode ( name, operator, charno ) ;^1483^^^^^1477^1489^FunctionNode function = new FunctionNode ( name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^FunctionNode function = new FunctionNode ( name, lineno, operator ) ;^1483^^^^^1477^1489^FunctionNode function = new FunctionNode ( name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^function.addChildrenToBack ( Node.newString ( Token.NAME, res, lineno, charno )  ) ;^1484^1485^^^^1477^1489^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^function.addChildrenToBack ( Node.newString ( Token.NAME, name, type, charno )  ) ;^1484^1485^^^^1477^1489^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, type )  ) ;^1484^1485^^^^1477^1489^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^function.addChildrenToBack ( Node.newString ( Token.NAME,  lineno, charno )  ) ;^1484^1485^^^^1477^1489^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^function.addChildrenToBack ( Node.newString ( Token.NAME, name,  charno )  ) ;^1484^1485^^^^1477^1489^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno )  ) ;^1484^1485^^^^1477^1489^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^function.addChildrenToBack ( Node.newString ( Token.NAME, lineno, name, charno )  ) ;^1484^1485^^^^1477^1489^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^function.addChildrenToBack ( Node.newString ( Token.NAME, name, charno, lineno )  ) ;^1484^1485^^^^1477^1489^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P7_Replace_Invocation]^function .addChildrenToBack (  )  ;^1484^1485^^^^1477^1489^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P7_Replace_Invocation]^function.addChildrenToBack ( Node .newString (  )   ) ;^1484^1485^^^^1477^1489^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P14_Delete_Statement]^^1484^1485^^^^1477^1489^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P11_Insert_Donor_Statement]^Node nodeName = Node.newString ( Token.NAME, name ) ;function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^1484^1485^^^^1477^1489^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P11_Insert_Donor_Statement]^return Node.newString ( Token.NAME, name, lineno, charno ) ;function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^1484^1485^^^^1477^1489^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P11_Insert_Donor_Statement]^Node nameNode = Node.newString ( Token.NAME, name ) ;function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^1484^1485^^^^1477^1489^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P11_Insert_Donor_Statement]^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^1484^1485^^^^1477^1489^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P11_Insert_Donor_Statement]^Node.newString ( Token.NAME, name, lineno, charno )  ) ;function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^1484^1485^^^^1477^1489^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^Node.newString ( Token.NAME, res, lineno, charno )  ) ;^1485^^^^^1477^1489^Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^Node.newString ( Token.NAME, name, type, charno )  ) ;^1485^^^^^1477^1489^Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^Node.newString ( Token.NAME, name, lineno, type )  ) ;^1485^^^^^1477^1489^Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^Node.newString ( Token.NAME,  lineno, charno )  ) ;^1485^^^^^1477^1489^Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^Node.newString ( Token.NAME, name,  charno )  ) ;^1485^^^^^1477^1489^Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^Node.newString ( Token.NAME, name, lineno )  ) ;^1485^^^^^1477^1489^Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^Node.newString ( Token.NAME, charno, lineno, name )  ) ;^1485^^^^^1477^1489^Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^Node.newString ( Token.NAME, name, charno, lineno )  ) ;^1485^^^^^1477^1489^Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P7_Replace_Invocation]^Node .newString (  )   ) ;^1485^^^^^1477^1489^Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P14_Delete_Statement]^^1485^^^^^1477^1489^Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P11_Insert_Donor_Statement]^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;Node.newString ( Token.NAME, name, lineno, charno )  ) ;^1485^^^^^1477^1489^Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P11_Insert_Donor_Statement]^return Node.newString ( Token.NAME, name, lineno, charno ) ;Node.newString ( Token.NAME, name, lineno, charno )  ) ;^1485^^^^^1477^1489^Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P11_Insert_Donor_Statement]^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;Node.newString ( Token.NAME, name, lineno, charno )  ) ;^1485^^^^^1477^1489^Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P11_Insert_Donor_Statement]^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;Node.newString ( Token.NAME, name, lineno, charno )  ) ;^1485^^^^^1477^1489^Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P11_Insert_Donor_Statement]^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;Node.newString ( Token.NAME, name, lineno, charno )  ) ;^1485^^^^^1477^1489^Node.newString ( Token.NAME, name, lineno, charno )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^function.addChildToBack ( param ) ;^1486^^^^^1477^1489^function.addChildToBack ( parameterParen ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P7_Replace_Invocation]^function .addChildrenToBack (  )  ;^1486^^^^^1477^1489^function.addChildToBack ( parameterParen ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P14_Delete_Statement]^^1486^1487^^^^1477^1489^function.addChildToBack ( parameterParen ) ; function.addChildToBack ( body ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P11_Insert_Donor_Statement]^function.addChildToBack ( body ) ;function.addChildToBack ( parameterParen ) ;^1486^^^^^1477^1489^function.addChildToBack ( parameterParen ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P11_Insert_Donor_Statement]^parameterParen.addChildToBack ( param ) ;function.addChildToBack ( parameterParen ) ;^1486^^^^^1477^1489^function.addChildToBack ( parameterParen ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P5_Replace_Variable]^function.addChildToBack ( parameterParen ) ;^1487^^^^^1477^1489^function.addChildToBack ( body ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P7_Replace_Invocation]^function .addChildrenToBack (  )  ;^1487^^^^^1477^1489^function.addChildToBack ( body ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P14_Delete_Statement]^^1487^1488^^^^1477^1489^function.addChildToBack ( body ) ; return function;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P11_Insert_Donor_Statement]^nodeName.addChildrenToBack ( value ) ;function.addChildToBack ( body ) ;^1487^^^^^1477^1489^function.addChildToBack ( body ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P11_Insert_Donor_Statement]^function.addChildToBack ( parameterParen ) ;function.addChildToBack ( body ) ;^1487^^^^^1477^1489^function.addChildToBack ( body ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P11_Insert_Donor_Statement]^parameterParen.addChildToBack ( param ) ;function.addChildToBack ( body ) ;^1487^^^^^1477^1489^function.addChildToBack ( body ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newFunctionNode [RETURN_TYPE] FunctionNode   String name Node> params Node body int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  body  param  parameterParen  FunctionNode  function  List  params  String  CONSTANT_MARKER  className  methodName  name  namespaceName  propName  res  Map  vars  int  charno  index  lineno  operator  type  
[P1_Replace_Type]^short  endPos = name.indexOf ( '.' ) ;^1500^^^^^1499^1519^int endPos = name.indexOf ( '.' ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^int endPos = part.indexOf ( '.' ) ;^1500^^^^^1499^1519^int endPos = name.indexOf ( '.' ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P7_Replace_Invocation]^int endPos = name .indexOf ( startPos )  ;^1500^^^^^1499^1519^int endPos = name.indexOf ( '.' ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P8_Replace_Mix]^int endPos = res.indexOf ( '.' ) ;^1500^^^^^1499^1519^int endPos = name.indexOf ( '.' ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P14_Delete_Statement]^^1500^^^^^1499^1519^int endPos = name.indexOf ( '.' ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P11_Insert_Donor_Statement]^endPos = name.indexOf ( '.', startPos ) ;int endPos = name.indexOf ( '.' ) ;^1500^^^^^1499^1519^int endPos = name.indexOf ( '.' ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P2_Replace_Operator]^if  ( endPos >= -1 )  {^1501^^^^^1499^1519^if  ( endPos == -1 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P3_Replace_Literal]^if  ( endPos == --5 )  {^1501^^^^^1499^1519^if  ( endPos == -1 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^if  ( type == -1 )  {^1501^^^^^1499^1519^if  ( endPos == -1 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P8_Replace_Mix]^if  ( type == -3 )  {^1501^^^^^1499^1519^if  ( endPos == -1 )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P15_Unwrap_Block]^return com.google.javascript.rhino.Node.newString(Token.NAME, name, lineno, charno);^1501^1502^1503^^^1499^1519^if  ( endPos == -1 )  { return Node.newString ( Token.NAME, name, lineno, charno ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P16_Remove_Block]^^1501^1502^1503^^^1499^1519^if  ( endPos == -1 )  { return Node.newString ( Token.NAME, name, lineno, charno ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^return Node.newString ( Token.NAME, res, lineno, charno ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^return Node.newString ( Token.NAME, name, startPos, charno ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^return Node.newString ( Token.NAME, name, lineno, type ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^return Node.newString ( Token.NAME,  lineno, charno ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^return Node.newString ( Token.NAME, name,  charno ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^return Node.newString ( Token.NAME, name, lineno ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^return Node.newString ( Token.NAME, charno, lineno, name ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^return Node.newString ( Token.NAME, name, charno, lineno ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P8_Replace_Mix]^return Node .newString (  )  ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P13_Insert_Block]^if  ( endPos ==  ( -1 )  )  {     return newString ( Token.NAME, name, lineno, charno ) ; }^1502^^^^^1499^1519^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^return Node.newString ( Token.NAME, name, operator, charno ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^return Node.newString ( Token.NAME, lineno, name, charno ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P14_Delete_Statement]^^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^return Node.newString ( Token.NAME, part, lineno, charno ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P8_Replace_Mix]^return Node.newString ( Token.NAME, name, lineno, startPos ) ;^1502^^^^^1499^1519^return Node.newString ( Token.NAME, name, lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P3_Replace_Literal]^Node node = Node.newString ( Token.NAME, name.substring ( charno, endPos ) , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^Node node = Node.newString ( Token.NAME, res.substring ( 0, endPos ) , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^Node node = Node.newString ( Token.NAME, name.substring ( 0, type ) , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, type ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^Node node = Node.newString ( Token.NAME.substring ( 0, endPos ) , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^Node node = Node.newString ( Token.NAME, name.substring ( 0 ) , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) ,  charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^Node node = Node.newString ( Token.NAME, endPos.substring ( 0, name ) , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^Node node = Node.newString ( Token.NAME, name.substring ( 0, lineno ) , endPos, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , charno, lineno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P7_Replace_Invocation]^Node node = Node .newString (  )  ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P8_Replace_Mix]^Node node = Node.newString ( Token.NAME, propName.substring ( 0, endPos ) , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P3_Replace_Literal]^Node node = Node.newString ( Token.NAME, name.substring ( -8, endPos ) , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^Node node = Node.newString ( Token.NAME, part.substring ( 0, endPos ) , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^Node node = Node.newString ( Token.NAME, name.substring ( 0, startPos ) , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , type, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^Node node = Node.newString ( Token.NAME, name.substring ( 0, charno ) , lineno, endPos ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P7_Replace_Invocation]^Node node = Node.newString ( Token.NAME, name .substring ( index , operator )  , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P14_Delete_Statement]^^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P11_Insert_Donor_Statement]^return Node.newString ( Token.NAME, name, lineno, charno ) ;Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P11_Insert_Donor_Statement]^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P11_Insert_Donor_Statement]^Node.newString ( Token.NAME, name, lineno, charno )  ) ;Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P11_Insert_Donor_Statement]^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P1_Replace_Type]^Node node = Node.newchar ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P3_Replace_Literal]^Node node = Node.newString ( Token.NAME, name.substring ( startPos, endPos ) , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P7_Replace_Invocation]^Node node = Node.newString ( Token.NAME, name .substring ( lineno , type )  , lineno, charno ) ;^1504^1505^^^^1499^1519^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P1_Replace_Type]^short  startPos;^1506^^^^^1499^1519^int startPos;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P3_Replace_Literal]^startPos = endPos ;^1508^^^^^1499^1519^startPos = endPos + 1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^startPos = operator + 1;^1508^^^^^1499^1519^startPos = endPos + 1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P8_Replace_Mix]^startPos = endPos + 2;^1508^^^^^1499^1519^startPos = endPos + 1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^endPos = res.indexOf ( '.', startPos ) ;^1509^^^^^1499^1519^endPos = name.indexOf ( '.', startPos ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^endPos = name.indexOf ( '.', type ) ;^1509^^^^^1499^1519^endPos = name.indexOf ( '.', startPos ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^endPos = name.indexOf ( '.' ) ;^1509^^^^^1499^1519^endPos = name.indexOf ( '.', startPos ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^endPos = startPos.indexOf ( '.', name ) ;^1509^^^^^1499^1519^endPos = name.indexOf ( '.', startPos ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P7_Replace_Invocation]^endPos = name .indexOf ( index )  ;^1509^^^^^1499^1519^endPos = name.indexOf ( '.', startPos ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P4_Replace_Constructor]^node = new Node ( Token.GETPROP,  Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P4_Replace_Constructor]^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING,  lineno, charno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P4_Replace_Constructor]^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part,  charno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P4_Replace_Constructor]^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, res, lineno, charno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, startPos, charno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, startPos ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^node = new Node ( Token. node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^node = new Node ( Token.GETPROP, charno, Node.newString ( Token.STRING, part, lineno, node ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, lineno, part, charno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, charno, lineno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P8_Replace_Mix]^node =  new Node ( Token.GETPROP, null, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, namespaceName, lineno, charno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, type, charno ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, type ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, charno, lineno, part ) , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P7_Replace_Invocation]^node = new Node ( Token.GETPROP, node, Node .newString (  )  , lineno, charno ) ;^1513^1514^1515^^^1499^1519^node = new Node ( Token.GETPROP, node, Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P1_Replace_Type]^char part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^1510^1511^1512^^^1499^1519^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P2_Replace_Operator]^String part =  ( endPos != -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^1510^1511^1512^^^1499^1519^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P3_Replace_Literal]^String part =  ( endPos == -endPos ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^1510^1511^1512^^^1499^1519^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^String part =  ( type == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^1510^1511^1512^^^1499^1519^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^String part =  ( endPos == -1 ? res.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^1510^1511^1512^^^1499^1519^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^String part =  ( endPos == -1 ? name.substring ( lineno ) : name.substring ( startPos, endPos )  ) ;^1510^1511^1512^^^1499^1519^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos )  ) ;^1510^1511^1512^^^1499^1519^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring (  endPos )  ) ;^1510^1511^1512^^^1499^1519^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^String part =  ( startPos == -1 ? name.substring ( endPos ) : name.substring ( startPos, endPos )  ) ;^1510^1511^1512^^^1499^1519^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^String part =  ( endPos == -1 ? startPos.substring ( name ) : name.substring ( startPos, endPos )  ) ;^1510^1511^1512^^^1499^1519^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P6_Replace_Expression]^String part =  ( name.substring ( startPos, endPos )  ) ;^1510^1511^1512^^^1499^1519^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P7_Replace_Invocation]^String part =  ( endPos == -1 ? name .substring ( startPos )  : name^1510^1511^1512^^^1499^1519^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P8_Replace_Mix]^String part =  ( endPos == -1 ? name.substring ( type ) : name.substring ( startPos, endPos )  ) ;^1510^1511^1512^^^1499^1519^String part =  ( endPos == -1 ? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P8_Replace_Mix]^endPos = part.indexOf ( '.', startPos ) ;^1509^^^^^1499^1519^endPos = name.indexOf ( '.', startPos ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P14_Delete_Statement]^^1509^^^^^1499^1519^endPos = name.indexOf ( '.', startPos ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P11_Insert_Donor_Statement]^int endPos = name.indexOf ( '.' ) ;endPos = name.indexOf ( '.', startPos ) ;^1509^^^^^1499^1519^endPos = name.indexOf ( '.', startPos ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^? res.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^1511^1512^^^^1499^1519^? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^? name.substring ( lineno ) : name.substring ( startPos, endPos )  ) ;^1511^1512^^^^1499^1519^? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^? name.substring ( startPos ) : name.substring (  endPos )  ) ;^1511^1512^^^^1499^1519^? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^? startPos.substring ( name ) : name.substring ( startPos, endPos )  ) ;^1511^1512^^^^1499^1519^? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P14_Delete_Statement]^^1511^1512^^^^1499^1519^? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P11_Insert_Donor_Statement]^: name.substring ( startPos, endPos )  ) ;? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^1511^1512^^^^1499^1519^? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^: res.substring ( startPos, endPos )  ) ;^1512^^^^^1499^1519^: name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^: name.substring ( operator, endPos )  ) ;^1512^^^^^1499^1519^: name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^: name.substring ( startPos, type )  ) ;^1512^^^^^1499^1519^: name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^: name.substring (  endPos )  ) ;^1512^^^^^1499^1519^: name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^: name.substring ( startPos )  ) ;^1512^^^^^1499^1519^: name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^: startPos.substring ( name, endPos )  ) ;^1512^^^^^1499^1519^: name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^: name.substring ( endPos, startPos )  ) ;^1512^^^^^1499^1519^: name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P8_Replace_Mix]^: propName.substring ( startPos, endPos )  ) ;^1512^^^^^1499^1519^: name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P14_Delete_Statement]^^1512^^^^^1499^1519^: name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P11_Insert_Donor_Statement]^? name.substring ( startPos ) : name.substring ( startPos, endPos )  ) ;: name.substring ( startPos, endPos )  ) ;^1512^^^^^1499^1519^: name.substring ( startPos, endPos )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^Node.newString ( Token.STRING, namespaceName, lineno, charno ) , lineno, charno ) ;^1514^1515^^^^1499^1519^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^Node.newString ( Token.STRING, part, startPos, charno ) , lineno, charno ) ;^1514^1515^^^^1499^1519^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^Node.newString ( Token.STRING, part, lineno, type ) , lineno, charno ) ;^1514^1515^^^^1499^1519^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^Node.newString ( Token.STRING,  lineno, charno ) , lineno, charno ) ;^1514^1515^^^^1499^1519^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^Node.newString ( Token.STRING, part,  charno ) , lineno, charno ) ;^1514^1515^^^^1499^1519^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^Node.newString ( Token.STRING, part, lineno ) , lineno, charno ) ;^1514^1515^^^^1499^1519^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^Node.newString ( Token.STRING, charno, lineno, part ) , lineno, charno ) ;^1514^1515^^^^1499^1519^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P5_Replace_Variable]^Node.newString ( Token.STRING, part, charno, lineno ) , lineno, charno ) ;^1514^1515^^^^1499^1519^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P8_Replace_Mix]^Node.newString ( Token.STRING, res, lineno, charno ) , lineno, charno ) ;^1514^1515^^^^1499^1519^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P14_Delete_Statement]^^1514^1515^^^^1499^1519^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P11_Insert_Donor_Statement]^Node node = Node.newString ( Token.NAME, name.substring ( 0, endPos ) , lineno, charno ) ;Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^1514^1515^^^^1499^1519^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P11_Insert_Donor_Statement]^return Node.newString ( Token.NAME, name, lineno, charno ) ;Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^1514^1515^^^^1499^1519^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P11_Insert_Donor_Statement]^Node.newString ( Token.NAME, name, lineno, charno )  ) ;Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^1514^1515^^^^1499^1519^Node.newString ( Token.STRING, part, lineno, charno ) , lineno, charno ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name int lineno int charno [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  node  
[P3_Replace_Literal]^Node node = newQualifiedNameNode ( name, --5, --5 ) ;^1536^^^^^1534^1539^Node node = newQualifiedNameNode ( name, -1, -1 ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P3_Replace_Literal]^Node node = newQualifiedNameNode ( name, -0, -0 ) ;^1536^^^^^1534^1539^Node node = newQualifiedNameNode ( name, -1, -1 ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P5_Replace_Variable]^Node node = newQualifiedNameNode ( originalName, -1, -1 ) ;^1536^^^^^1534^1539^Node node = newQualifiedNameNode ( name, -1, -1 ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P8_Replace_Mix]^Node node = newQualifiedNameNode ( res, -1, -1 ) ;^1536^^^^^1534^1539^Node node = newQualifiedNameNode ( name, -1, -1 ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P3_Replace_Literal]^Node node = newQualifiedNameNode ( name, -charno, -charno ) ;^1536^^^^^1534^1539^Node node = newQualifiedNameNode ( name, -1, -1 ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P3_Replace_Literal]^Node node = newQualifiedNameNode ( name, -type, -type ) ;^1536^^^^^1534^1539^Node node = newQualifiedNameNode ( name, -1, -1 ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P14_Delete_Statement]^^1536^1537^1538^1539^^1534^1539^Node node = newQualifiedNameNode ( name, -1, -1 ) ; setDebugInformation ( node, basisNode, originalName ) ; return node; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P5_Replace_Variable]^setDebugInformation ( node, node, originalName ) ;^1537^^^^^1534^1539^setDebugInformation ( node, basisNode, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P5_Replace_Variable]^setDebugInformation (  basisNode, originalName ) ;^1537^^^^^1534^1539^setDebugInformation ( node, basisNode, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P5_Replace_Variable]^setDebugInformation ( node,  originalName ) ;^1537^^^^^1534^1539^setDebugInformation ( node, basisNode, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P5_Replace_Variable]^setDebugInformation ( node, basisNode ) ;^1537^^^^^1534^1539^setDebugInformation ( node, basisNode, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P5_Replace_Variable]^setDebugInformation ( basisNode, node, originalName ) ;^1537^^^^^1534^1539^setDebugInformation ( node, basisNode, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P5_Replace_Variable]^setDebugInformation ( node, originalName, basisNode ) ;^1537^^^^^1534^1539^setDebugInformation ( node, basisNode, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P7_Replace_Invocation]^newQualifiedNameNode ( node, basisNode, originalName ) ;^1537^^^^^1534^1539^setDebugInformation ( node, basisNode, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P8_Replace_Mix]^setDebugInformation ( node, basisNode, part ) ;^1537^^^^^1534^1539^setDebugInformation ( node, basisNode, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P14_Delete_Statement]^^1537^1538^1539^^^1534^1539^setDebugInformation ( node, basisNode, originalName ) ; return node; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P8_Replace_Mix]^return basisNode;^1538^^^^^1534^1539^return node;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newQualifiedNameNode [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P7_Replace_Invocation]^node.addChildAfter ( basisNode ) ;^1551^^^^^1549^1553^node.copyInformationFrom ( basisNode ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] setDebugInformation [RETURN_TYPE] void   Node node Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P14_Delete_Statement]^^1551^1552^1553^^^1549^1553^node.copyInformationFrom ( basisNode ) ; node.putProp ( Node.ORIGINALNAME_PROP, originalName ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] setDebugInformation [RETURN_TYPE] void   Node node Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P11_Insert_Donor_Statement]^nameNode.copyInformationFrom ( basisNode ) ;node.copyInformationFrom ( basisNode ) ;^1551^^^^^1549^1553^node.copyInformationFrom ( basisNode ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] setDebugInformation [RETURN_TYPE] void   Node node Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P5_Replace_Variable]^node.putProp ( Node.ORIGINALNAME_PROP, propName ) ;^1552^^^^^1549^1553^node.putProp ( Node.ORIGINALNAME_PROP, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] setDebugInformation [RETURN_TYPE] void   Node node Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P5_Replace_Variable]^node.putProp ( Node.ORIGINALNAME_PROP ) ;^1552^^^^^1549^1553^node.putProp ( Node.ORIGINALNAME_PROP, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] setDebugInformation [RETURN_TYPE] void   Node node Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P7_Replace_Invocation]^node.addChildAfter ( Node.ORIGINALNAME_PROP, originalName ) ;^1552^^^^^1549^1553^node.putProp ( Node.ORIGINALNAME_PROP, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] setDebugInformation [RETURN_TYPE] void   Node node Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P7_Replace_Invocation]^node .getProp (  )  ;^1552^^^^^1549^1553^node.putProp ( Node.ORIGINALNAME_PROP, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] setDebugInformation [RETURN_TYPE] void   Node node Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P8_Replace_Mix]^node.putProp ( Node.ORIGINALNAME_PROP, part ) ;^1552^^^^^1549^1553^node.putProp ( Node.ORIGINALNAME_PROP, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] setDebugInformation [RETURN_TYPE] void   Node node Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P14_Delete_Statement]^^1552^^^^^1549^1553^node.putProp ( Node.ORIGINALNAME_PROP, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] setDebugInformation [RETURN_TYPE] void   Node node Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P11_Insert_Donor_Statement]^nameNode.putProp ( Node.ORIGINALNAME_PROP, originalName ) ;node.putProp ( Node.ORIGINALNAME_PROP, originalName ) ;^1552^^^^^1549^1553^node.putProp ( Node.ORIGINALNAME_PROP, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] setDebugInformation [RETURN_TYPE] void   Node node Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  node  
[P5_Replace_Variable]^Node resNode = Node.newString ( Token.NAME, name ) ;^1566^^^^^1565^1569^Node nameNode = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P7_Replace_Invocation]^Node nameNode = Node.putProp ( Token.NAME, name ) ;^1566^^^^^1565^1569^Node nameNode = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P8_Replace_Mix]^Node resNode = Node.putProp ( Token.NAME, name ) ;^1566^^^^^1565^1569^Node nameNode = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P11_Insert_Donor_Statement]^Node var = new Node ( Token.VAR, nodeName ) ;Node nameNode = Node.newString ( Token.NAME, name ) ;^1566^^^^^1565^1569^Node nameNode = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P11_Insert_Donor_Statement]^Node nodeName = Node.newString ( Token.NAME, name ) ;Node nameNode = Node.newString ( Token.NAME, name ) ;^1566^^^^^1565^1569^Node nameNode = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P11_Insert_Donor_Statement]^Node nameNode = newName ( name, basisNode ) ;Node nameNode = Node.newString ( Token.NAME, name ) ;^1566^^^^^1565^1569^Node nameNode = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P11_Insert_Donor_Statement]^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;Node nameNode = Node.newString ( Token.NAME, name ) ;^1566^^^^^1565^1569^Node nameNode = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P5_Replace_Variable]^Node originalNameNode = Node.newString ( Token.NAME, name ) ;^1566^^^^^1565^1569^Node nameNode = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P14_Delete_Statement]^^1566^^^^^1565^1569^Node nameNode = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P11_Insert_Donor_Statement]^return Node.newString ( Token.NAME, name, lineno, charno ) ;Node nameNode = Node.newString ( Token.NAME, name ) ;^1566^^^^^1565^1569^Node nameNode = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P11_Insert_Donor_Statement]^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;Node nameNode = Node.newString ( Token.NAME, name ) ;^1566^^^^^1565^1569^Node nameNode = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P11_Insert_Donor_Statement]^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;Node nameNode = Node.newString ( Token.NAME, name ) ;^1566^^^^^1565^1569^Node nameNode = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P7_Replace_Invocation]^nameNode.addChildAfter ( basisNode ) ;^1567^^^^^1565^1569^nameNode.copyInformationFrom ( basisNode ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P14_Delete_Statement]^^1567^1568^1569^^^1565^1569^nameNode.copyInformationFrom ( basisNode ) ; return nameNode; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P11_Insert_Donor_Statement]^node.copyInformationFrom ( basisNode ) ;nameNode.copyInformationFrom ( basisNode ) ;^1567^^^^^1565^1569^nameNode.copyInformationFrom ( basisNode ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P5_Replace_Variable]^return basisNode;^1568^^^^^1565^1569^return nameNode;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P5_Replace_Variable]^Node resNode = newName ( name, basisNode ) ;^1585^^^^^1584^1588^Node nameNode = newName ( name, basisNode ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P5_Replace_Variable]^Node nameNode = newName (  basisNode ) ;^1585^^^^^1584^1588^Node nameNode = newName ( name, basisNode ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P5_Replace_Variable]^Node nameNode = newName ( name ) ;^1585^^^^^1584^1588^Node nameNode = newName ( name, basisNode ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P5_Replace_Variable]^Node basisNodeNode = newName ( name, name ) ;^1585^^^^^1584^1588^Node nameNode = newName ( name, basisNode ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P7_Replace_Invocation]^Node nameNode = newVarNode ( name, basisNode ) ;^1585^^^^^1584^1588^Node nameNode = newName ( name, basisNode ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P8_Replace_Mix]^Node resNode = newVarNode ( name, basisNode ) ;^1585^^^^^1584^1588^Node nameNode = newName ( name, basisNode ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P11_Insert_Donor_Statement]^Node nameNode = Node.newString ( Token.NAME, name ) ;Node nameNode = newName ( name, basisNode ) ;^1585^^^^^1584^1588^Node nameNode = newName ( name, basisNode ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P5_Replace_Variable]^Node nameNode = newName ( name, nameNode ) ;^1585^^^^^1584^1588^Node nameNode = newName ( name, basisNode ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P14_Delete_Statement]^^1585^^^^^1584^1588^Node nameNode = newName ( name, basisNode ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P5_Replace_Variable]^nameNode.putProp ( Node.ORIGINALNAME_PROP, namespaceName ) ;^1586^^^^^1584^1588^nameNode.putProp ( Node.ORIGINALNAME_PROP, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P5_Replace_Variable]^nameNode.putProp ( Node.ORIGINALNAME_PROP ) ;^1586^^^^^1584^1588^nameNode.putProp ( Node.ORIGINALNAME_PROP, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P7_Replace_Invocation]^nameNode.addChildAfter ( Node.ORIGINALNAME_PROP, originalName ) ;^1586^^^^^1584^1588^nameNode.putProp ( Node.ORIGINALNAME_PROP, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P8_Replace_Mix]^nameNode.putProp ( Node.ORIGINALNAME_PROP, res ) ;^1586^^^^^1584^1588^nameNode.putProp ( Node.ORIGINALNAME_PROP, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P14_Delete_Statement]^^1586^^^^^1584^1588^nameNode.putProp ( Node.ORIGINALNAME_PROP, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P11_Insert_Donor_Statement]^node.putProp ( Node.ORIGINALNAME_PROP, originalName ) ;nameNode.putProp ( Node.ORIGINALNAME_PROP, originalName ) ;^1586^^^^^1584^1588^nameNode.putProp ( Node.ORIGINALNAME_PROP, originalName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P5_Replace_Variable]^return basisNode;^1587^^^^^1584^1588^return nameNode;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newName [RETURN_TYPE] Node   String name Node basisNode String originalName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  boolean  Map  vars  int  charno  endPos  index  lineno  operator  startPos  type  Node  basisNode  nameNode  
[P1_Replace_Type]^String LARGEST_BASIC_LATIN = 0x7f;^1605^^^^^1604^1614^char LARGEST_BASIC_LATIN = 0x7f;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P1_Replace_Type]^short  len = s.length (  ) ;^1606^^^^^1604^1614^int len = s.length (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P3_Replace_Literal]^int len = s.length() + 6 ;^1606^^^^^1604^1614^int len = s.length (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P7_Replace_Invocation]^int len = s.charAt (  ) ;^1606^^^^^1604^1614^int len = s.length (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P8_Replace_Mix]^int len = part.length (  ) ;^1606^^^^^1604^1614^int len = s.length (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P3_Replace_Literal]^int len = s.length() - 4 ;^1606^^^^^1604^1614^int len = s.length (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P5_Replace_Variable]^int len = res.length (  ) ;^1606^^^^^1604^1614^int len = s.length (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P14_Delete_Statement]^^1606^^^^^1604^1614^int len = s.length (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P2_Replace_Operator]^if  ( c >= LARGEST_BASIC_LATIN )  {^1609^^^^^1604^1614^if  ( c > LARGEST_BASIC_LATIN )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P5_Replace_Variable]^if  ( LARGEST_BASIC_LATIN > c )  {^1609^^^^^1604^1614^if  ( c > LARGEST_BASIC_LATIN )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P15_Unwrap_Block]^return false;^1609^1610^1611^^^1604^1614^if  ( c > LARGEST_BASIC_LATIN )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P16_Remove_Block]^^1609^1610^1611^^^1604^1614^if  ( c > LARGEST_BASIC_LATIN )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P13_Insert_Block]^if  ( namespaceName.equals ( "Math" )  )  {     return false; }^1609^^^^^1604^1614^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P13_Insert_Block]^if  ( name.equals ( "String" )  )  {     return false; }^1609^^^^^1604^1614^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P13_Insert_Block]^if  ( vars.isEmpty (  )  )  {     return ; }^1609^^^^^1604^1614^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P13_Insert_Block]^if  ( callNode.isNoSideEffectsCall (  )  )  {     return false; }^1609^^^^^1604^1614^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P13_Insert_Block]^if  ( n ==  ( parent.getFirstChild (  )  )  )  {     return true; }^1609^^^^^1604^1614^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P13_Insert_Block]^if  ( lhsString == null )  {     return false; }^1609^^^^^1604^1614^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P13_Insert_Block]^if  ( checkForNewObjects )  {     return true; }^1609^^^^^1604^1614^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P3_Replace_Literal]^return true;^1610^^^^^1604^1614^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P1_Replace_Type]^for  (  short  index = 0; index < len; index++ )  {^1607^^^^^1604^1614^for  ( int index = 0; index < len; index++ )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P2_Replace_Operator]^for  ( int index = 0; index <= len; index++ )  {^1607^^^^^1604^1614^for  ( int index = 0; index < len; index++ )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P3_Replace_Literal]^for  ( int index = 6; index < len; index++ )  {^1607^^^^^1604^1614^for  ( int index = 0; index < len; index++ )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P5_Replace_Variable]^for  ( int operator = 0; index < len; index++ )  {^1607^^^^^1604^1614^for  ( int index = 0; index < len; index++ )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P5_Replace_Variable]^for  ( int index = 0; index < type; index++ )  {^1607^^^^^1604^1614^for  ( int index = 0; index < len; index++ )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P5_Replace_Variable]^for  ( int len = 0; index < index; index++ )  {^1607^^^^^1604^1614^for  ( int index = 0; index < len; index++ )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P8_Replace_Mix]^for  ( int type = 0; index < len; index++ )  {^1607^^^^^1604^1614^for  ( int index = 0; index < len; index++ )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P1_Replace_Type]^int c = s.charAt ( index ) ;^1608^^^^^1604^1614^char c = s.charAt ( index ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P5_Replace_Variable]^char c = propName.charAt ( index ) ;^1608^^^^^1604^1614^char c = s.charAt ( index ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P5_Replace_Variable]^char c = s.charAt ( type ) ;^1608^^^^^1604^1614^char c = s.charAt ( index ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P5_Replace_Variable]^char c = index.charAt ( s ) ;^1608^^^^^1604^1614^char c = s.charAt ( index ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P7_Replace_Invocation]^char c = s.indexOf ( index ) ;^1608^^^^^1604^1614^char c = s.charAt ( index ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P8_Replace_Mix]^char c = originalName.indexOf ( index ) ;^1608^^^^^1604^1614^char c = s.charAt ( index ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P7_Replace_Invocation]^char c = s .substring ( len , len )  ;^1608^^^^^1604^1614^char c = s.charAt ( index ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P14_Delete_Statement]^^1608^^^^^1604^1614^char c = s.charAt ( index ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P3_Replace_Literal]^for  ( int index = charno; index < len; index++ )  {^1607^^^^^1604^1614^for  ( int index = 0; index < len; index++ )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P5_Replace_Variable]^char c = s.charAt ( startPos ) ;^1608^^^^^1604^1614^char c = s.charAt ( index ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P8_Replace_Mix]^char c = s.indexOf ( type ) ;^1608^^^^^1604^1614^char c = s.charAt ( index ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P5_Replace_Variable]^char c = part.charAt ( index ) ;^1608^^^^^1604^1614^char c = s.charAt ( index ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P7_Replace_Invocation]^char c = s .substring ( type , operator )  ;^1608^^^^^1604^1614^char c = s.charAt ( index ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P3_Replace_Literal]^return false;^1613^^^^^1604^1614^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isLatin [RETURN_TYPE] boolean   String s [VARIABLES] char  LARGEST_BASIC_LATIN  c  Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P2_Replace_Operator]^return TokenStream.isJSIdentifier ( name )  || !TokenStream.isKeyword ( name )  &&^1621^1622^1623^1624^^1620^1630^return TokenStream.isJSIdentifier ( name )  && !TokenStream.isKeyword ( name )  &&^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidPropertyName [RETURN_TYPE] boolean   String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P5_Replace_Variable]^return TokenStream.isJSIdentifier ( s )  && !TokenStream.isKeyword ( name )  &&^1621^1622^1623^1624^^1620^1630^return TokenStream.isJSIdentifier ( name )  && !TokenStream.isKeyword ( name )  &&^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidPropertyName [RETURN_TYPE] boolean   String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P7_Replace_Invocation]^return TokenStream.isKeyword ( name )  && !TokenStream.isKeyword ( name )  &&^1621^1622^1623^1624^^1620^1630^return TokenStream.isJSIdentifier ( name )  && !TokenStream.isKeyword ( name )  &&^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidPropertyName [RETURN_TYPE] boolean   String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P7_Replace_Invocation]^return TokenStream .isKeyword ( namespaceName )   && !TokenStream.isKeyword ( name )  &&^1621^1622^1623^1624^^1620^1630^return TokenStream.isJSIdentifier ( name )  && !TokenStream.isKeyword ( name )  &&^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidPropertyName [RETURN_TYPE] boolean   String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P7_Replace_Invocation]^return TokenStream.isJSIdentifier ( name )  && !TokenStream.isJSIdentifier ( name )  &&^1621^1622^1623^1624^^1620^1630^return TokenStream.isJSIdentifier ( name )  && !TokenStream.isKeyword ( name )  &&^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidPropertyName [RETURN_TYPE] boolean   String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P8_Replace_Mix]^return TokenStream.isKeyword ( s )  && !TokenStream.isKeyword ( name )  &&^1621^1622^1623^1624^^1620^1630^return TokenStream.isJSIdentifier ( name )  && !TokenStream.isKeyword ( name )  &&^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidPropertyName [RETURN_TYPE] boolean   String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P7_Replace_Invocation]^!TokenStream.isJSIdentifier ( name )  &&^1622^1623^1624^1625^^1620^1630^!TokenStream.isKeyword ( name )  &&^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidPropertyName [RETURN_TYPE] boolean   String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P8_Replace_Mix]^!TokenStream.isKeyword ( s )  &&^1622^1623^1624^1625^^1620^1630^!TokenStream.isKeyword ( name )  &&^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidPropertyName [RETURN_TYPE] boolean   String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P5_Replace_Variable]^NodeUtil.isLatin ( part ) ;^1629^^^^^1620^1630^NodeUtil.isLatin ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidPropertyName [RETURN_TYPE] boolean   String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P7_Replace_Invocation]^NodeUtil.isValidPropertyName ( name ) ;^1629^^^^^1620^1630^NodeUtil.isLatin ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidPropertyName [RETURN_TYPE] boolean   String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P8_Replace_Mix]^NodeUtil.isLatin ( propName ) ;^1629^^^^^1620^1630^NodeUtil.isLatin ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidPropertyName [RETURN_TYPE] boolean   String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P14_Delete_Statement]^^1629^^^^^1620^1630^NodeUtil.isLatin ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidPropertyName [RETURN_TYPE] boolean   String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P12_Insert_Condition]^if  ( !NodeUtil.isExprAssign ( n )  )  { NodeUtil.isLatin ( name ) ; }^1629^^^^^1620^1630^NodeUtil.isLatin ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isValidPropertyName [RETURN_TYPE] boolean   String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P2_Replace_Operator]^if  ( n.getType (  )  <= Token.NAME )  {^1636^^^^^1635^1645^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P2_Replace_Operator]^if  ( n.getType (  )  != Token.NAME )  {^1636^^^^^1635^1645^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P6_Replace_Expression]^if  ( parent != null && parent.getType() == VAR )  {^1636^^^^^1635^1645^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P6_Replace_Expression]^if  ( parent != null )  {^1636^^^^^1635^1645^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P6_Replace_Expression]^if  ( parent.getType (  )  == VAR )  {^1636^^^^^1635^1645^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P7_Replace_Invocation]^if  ( n.newNumber (  )  == Token.NAME )  {^1636^^^^^1635^1645^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P7_Replace_Invocation]^if  ( n .getString (  )   == Token.NAME )  {^1636^^^^^1635^1645^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P9_Replace_Statement]^if  ( nameNode.getType (  )  == Token.NAME )  {^1636^^^^^1635^1645^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P9_Replace_Statement]^if  ( n.getType (  )  != Token.EMPTY )  {^1636^^^^^1635^1645^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P9_Replace_Statement]^if  ( n != null && n.getType (  )  == Token.NAME )  {^1636^^^^^1635^1645^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P13_Insert_Block]^if  ( isGet ( functionIndentifyingExpression )  )  {     Node last = functionIndentifyingExpression.getLastChild (  ) ;     if  (  ( last != null )  &&  (  ( last.getType (  )  )  ==  ( STRING )  )  )  {         String propName = last.getString (  ) ;         return propName.equals ( methodName ) ;     } }^1636^^^^^1635^1645^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P13_Insert_Block]^if  (  ( n != null )  &&  (  ( n.getType (  )  )  ==  ( NAME )  )  )  {     Node parent = n.getParent (  ) ;     switch  ( parent.getType (  )  )  {         case LABEL :         case BREAK :         case CONTINUE :             if  ( n ==  ( parent.getFirstChild (  )  )  )  {                 return true;             }     } }^1636^^^^^1635^1645^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P13_Insert_Block]^if  (  ( parent != null )  &&  (  ( parent.getType (  )  )  ==  ( VAR )  )  )  {     String name = n.getString (  ) ;     if  ( ! ( vars.containsKey ( name )  )  )  {         vars.put ( name, n ) ;     } }^1636^^^^^1635^1645^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P2_Replace_Operator]^if  ( parent != null || parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P2_Replace_Operator]^if  ( parent == null && parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P2_Replace_Operator]^if  ( parent != null && parent.getType (  )  != Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P5_Replace_Variable]^if  ( n != null && parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P5_Replace_Variable]^if  ( parent != parentull && parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P5_Replace_Variable]^if  ( n != parentull && parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P6_Replace_Expression]^if  ( parent != null ) {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P6_Replace_Expression]^if  (  parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P6_Replace_Expression]^if  ( parent.getType (  )  == VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P7_Replace_Invocation]^if  ( parent != null && parent.newNumber (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P7_Replace_Invocation]^if  ( parent != null && parent .getString (  )   == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P8_Replace_Mix]^if  ( parent != true && parent .getString (  )   == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P9_Replace_Statement]^if  ( n != null && n.getType (  )  == Token.NAME )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P15_Unwrap_Block]^java.lang.String name = n.getString(); if (!(vars.containsKey(name))) {    vars.put(name, n);};^1638^1639^1640^1641^1642^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  { String name = n.getString (  ) ; if  ( !vars.containsKey ( name )  )  { vars.put ( name, n ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P16_Remove_Block]^^1638^1639^1640^1641^1642^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  { String name = n.getString (  ) ; if  ( !vars.containsKey ( name )  )  { vars.put ( name, n ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P13_Insert_Block]^if  (  ( nameNode.getType (  )  )  ==  ( NAME )  )  {     String name = nameNode.getString (  ) ;     if  ( name.equals ( "String" )  )  {         return false;     } }^1638^^^^^1635^1645^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P13_Insert_Block]^if  (  ( last != null )  &&  (  ( last.getType (  )  )  ==  ( STRING )  )  )  {     String propName = last.getString (  ) ;     return propName.equals ( methodName ) ; }^1638^^^^^1635^1645^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P13_Insert_Block]^if  (  (  ( nameNode.getType (  )  )  ==  ( GETPROP )  )  &&  (  ( nameNode.getFirstChild (  ) .getType (  )  )  ==  ( NAME )  )  )  {     String namespaceName = nameNode.getFirstChild (  ) .getString (  ) ;     if  ( namespaceName.equals ( "Math" )  )  {         return false;     } }^1638^^^^^1635^1645^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P13_Insert_Block]^if  (  ( n.getType (  )  )  ==  ( NAME )  )  {     Node parent = n.getParent (  ) ;     if  (  ( parent != null )  &&  (  ( parent.getType (  )  )  ==  ( VAR )  )  )  {         String name = n.getString (  ) ;         if  ( ! ( vars.containsKey ( name )  )  )  {             vars.put ( name, n ) ;         }     } }^1638^^^^^1635^1645^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P5_Replace_Variable]^if  ( !vars.containsKey ( part )  )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P5_Replace_Variable]^if  ( !vars.containsKey ( parentame )  )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P5_Replace_Variable]^if  ( !vars.containsKey ( n )  )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P7_Replace_Invocation]^if  ( !vars .values (  )   )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P8_Replace_Mix]^if  ( !vars.containsKey ( s )  )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P15_Unwrap_Block]^vars.put(name, n);^1640^1641^1642^^^1635^1645^if  ( !vars.containsKey ( name )  )  { vars.put ( name, n ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P16_Remove_Block]^^1640^1641^1642^^^1635^1645^if  ( !vars.containsKey ( name )  )  { vars.put ( name, n ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P5_Replace_Variable]^vars.put ( propName, n ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P5_Replace_Variable]^vars.put ( parentame, n ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P5_Replace_Variable]^vars.put (  n ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P5_Replace_Variable]^vars.put ( name ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P5_Replace_Variable]^vars.put ( n, name ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P5_Replace_Variable]^vars.put ( nameame, n ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P8_Replace_Mix]^vars .values (  )  ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P14_Delete_Statement]^^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P1_Replace_Type]^char name = n.getchar (  ) ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P5_Replace_Variable]^String parentame = n.getString (  ) ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P7_Replace_Invocation]^String name = n.newNumber (  ) ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P7_Replace_Invocation]^String name = n .newString (  )  ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P8_Replace_Mix]^String parentame = n .newString (  )  ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P11_Insert_Donor_Statement]^double value = n.getDouble (  ) ;String name = n.getString (  ) ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P11_Insert_Donor_Statement]^Node parent = n.getParent (  ) ;String name = n.getString (  ) ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P11_Insert_Donor_Statement]^String name = n.getFirstChild (  ) .getString (  ) ;String name = n.getString (  ) ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P11_Insert_Donor_Statement]^String qNameStr = qName.getQualifiedName (  ) ;String name = n.getString (  ) ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P11_Insert_Donor_Statement]^String propName = last.getString (  ) ;String name = n.getString (  ) ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P11_Insert_Donor_Statement]^String name = nameNode.getString (  ) ;String name = n.getString (  ) ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P11_Insert_Donor_Statement]^String className = constructor.getString (  ) ;String name = n.getString (  ) ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P11_Insert_Donor_Statement]^String lhsString = n.getQualifiedName (  ) ;String name = n.getString (  ) ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P14_Delete_Statement]^^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P11_Insert_Donor_Statement]^return parent.getString (  ) ;String name = n.getString (  ) ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P11_Insert_Donor_Statement]^return n.getString (  ) ;String name = n.getString (  ) ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P11_Insert_Donor_Statement]^info = nameNode.getJSDocInfo (  ) ;String name = n.getString (  ) ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P11_Insert_Donor_Statement]^n = n.getParent (  ) ;String name = n.getString (  ) ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P11_Insert_Donor_Statement]^parent = nameNode.getParent (  ) ;String name = n.getString (  ) ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P8_Replace_Mix]^if  ( !vars.containsKey ( propName )  )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P7_Replace_Invocation]^Node parent = n.tokenToName (  ) ;^1637^^^^^1635^1645^Node parent = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P5_Replace_Variable]^Node parent = parent.getParent (  ) ;^1637^^^^^1635^1645^Node parent = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P7_Replace_Invocation]^Node parent = n .getString (  )  ;^1637^^^^^1635^1645^Node parent = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P14_Delete_Statement]^^1637^^^^^1635^1645^Node parent = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P8_Replace_Mix]^if  ( n != null && parent.newNumber (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P5_Replace_Variable]^vars.put ( s, n ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P8_Replace_Mix]^vars.put ( part, n ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P8_Replace_Mix]^if  ( parent != this && parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P5_Replace_Variable]^vars.put ( res, n ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P8_Replace_Mix]^if  ( !vars.containsKey ( res )  )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.NAME )  {^1636^^^^^1635^1645^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P8_Replace_Mix]^String parentame = n.newNumber (  ) ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  parent  
[P4_Replace_Constructor]^VarCollector collector = new MatchNodeType ( type )  ;^1652^^^^^1651^1658^VarCollector collector = new VarCollector (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getVarsDeclaredInBranch [RETURN_TYPE] Collection   Node root [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  root  VarCollector  collector  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P4_Replace_Constructor]^Predicates.<Node>not ( Predicates.<Node>not (  NodeUtil.new Node ( EMPTY )   )  ) ;^1656^^^^^1651^1658^Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getVarsDeclaredInBranch [RETURN_TYPE] Collection   Node root [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  root  VarCollector  collector  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P5_Replace_Variable]^Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.null )  )  ) ;^1656^^^^^1651^1658^Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getVarsDeclaredInBranch [RETURN_TYPE] Collection   Node root [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  root  VarCollector  collector  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P4_Replace_Constructor]^visitPreOrder ( root, collector, Predicates.<Node>not ( visitPreOrder ( root, collector, Predicates.<Node>not (  NodeUtil.new Node ( EMPTY )   )  ) ;^1653^1654^1655^1656^^1651^1658^visitPreOrder ( root, collector, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getVarsDeclaredInBranch [RETURN_TYPE] Collection   Node root [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  root  VarCollector  collector  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P4_Replace_Constructor]^visitPreOrder (  collector, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1653^1654^1655^1656^^1651^1658^visitPreOrder ( root, collector, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getVarsDeclaredInBranch [RETURN_TYPE] Collection   Node root [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  root  VarCollector  collector  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P4_Replace_Constructor]^visitPreOrder ( root,  Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1653^1654^1655^1656^^1651^1658^visitPreOrder ( root, collector, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getVarsDeclaredInBranch [RETURN_TYPE] Collection   Node root [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  root  VarCollector  collector  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P5_Replace_Variable]^visitPreOrder ( collector, root, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1653^1654^1655^1656^^1651^1658^visitPreOrder ( root, collector, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getVarsDeclaredInBranch [RETURN_TYPE] Collection   Node root [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  root  VarCollector  collector  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P7_Replace_Invocation]^getCount ( root, collector, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1653^1654^1655^1656^^1651^1658^visitPreOrder ( root, collector, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getVarsDeclaredInBranch [RETURN_TYPE] Collection   Node root [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  root  VarCollector  collector  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P7_Replace_Invocation]^visitPreOrder ( root, collector, Predicates.<Node>alwaysTrue ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1653^1654^1655^1656^^1651^1658^visitPreOrder ( root, collector, Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getVarsDeclaredInBranch [RETURN_TYPE] Collection   Node root [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  root  VarCollector  collector  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P7_Replace_Invocation]^Predicates.<Node>alwaysTrue ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^1656^^^^^1651^1658^Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getVarsDeclaredInBranch [RETURN_TYPE] Collection   Node root [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  root  VarCollector  collector  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P14_Delete_Statement]^^1656^^^^^1651^1658^Predicates.<Node>not ( new NodeUtil.MatchNodeType ( Token.FUNCTION )  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getVarsDeclaredInBranch [RETURN_TYPE] Collection   Node root [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  root  VarCollector  collector  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P5_Replace_Variable]^return collector.vars.vars.values (  ) ;^1657^^^^^1651^1658^return collector.vars.values (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getVarsDeclaredInBranch [RETURN_TYPE] Collection   Node root [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  root  VarCollector  collector  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P5_Replace_Variable]^return collector.values (  ) ;^1657^^^^^1651^1658^return collector.vars.values (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getVarsDeclaredInBranch [RETURN_TYPE] Collection   Node root [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  root  VarCollector  collector  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P7_Replace_Invocation]^return collector.vars.containsKey (  ) ;^1657^^^^^1651^1658^return collector.vars.values (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getVarsDeclaredInBranch [RETURN_TYPE] Collection   Node root [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  root  VarCollector  collector  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P8_Replace_Mix]^return 0.containsKey (  ) ;^1657^^^^^1651^1658^return collector.vars.values (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getVarsDeclaredInBranch [RETURN_TYPE] Collection   Node root [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  root  VarCollector  collector  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P5_Replace_Variable]^return 0.values (  ) ;^1657^^^^^1651^1658^return collector.vars.values (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getVarsDeclaredInBranch [RETURN_TYPE] Collection   Node root [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  root  VarCollector  collector  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P14_Delete_Statement]^^1657^^^^^1651^1658^return collector.vars.values (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getVarsDeclaredInBranch [RETURN_TYPE] Collection   Node root [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  root  VarCollector  collector  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  
[P7_Replace_Invocation]^if  ( !NodeUtil.isAssign ( n )  )  {^1665^^^^^1664^1669^if  ( !NodeUtil.isExprAssign ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypePropertyDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  
[P9_Replace_Statement]^if  ( NodeUtil.isAssignmentOp ( n )  )  {^1665^^^^^1664^1669^if  ( !NodeUtil.isExprAssign ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypePropertyDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  
[P15_Unwrap_Block]^return false;^1665^1666^1667^^^1664^1669^if  ( !NodeUtil.isExprAssign ( n )  )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypePropertyDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  
[P16_Remove_Block]^^1665^1666^1667^^^1664^1669^if  ( !NodeUtil.isExprAssign ( n )  )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypePropertyDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  
[P3_Replace_Literal]^return true;^1666^^^^^1664^1669^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypePropertyDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  
[P7_Replace_Invocation]^return getPrototypePropertyName ( n.getFirstChild (  ) .getFirstChild (  )  ) ;^1668^^^^^1664^1669^return isPrototypeProperty ( n.getFirstChild (  ) .getFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypePropertyDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  
[P7_Replace_Invocation]^return isPrototypeProperty ( n.equals (  ) .getFirstChild (  )  ) ;^1668^^^^^1664^1669^return isPrototypeProperty ( n.getFirstChild (  ) .getFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypePropertyDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  
[P7_Replace_Invocation]^return isPrototypeProperty ( n.newNumber (  ) .getFirstChild (  )  ) ;^1668^^^^^1664^1669^return isPrototypeProperty ( n.getFirstChild (  ) .getFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypePropertyDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  
[P8_Replace_Mix]^return isPrototypeProperty ( n .getLastChild (  )^1668^^^^^1664^1669^return isPrototypeProperty ( n.getFirstChild (  ) .getFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypePropertyDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  
[P14_Delete_Statement]^^1668^^^^^1664^1669^return isPrototypeProperty ( n.getFirstChild (  ) .getFirstChild (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypePropertyDeclaration [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  startPos  type  Node  n  
[P1_Replace_Type]^char lhschar = n.getQualifiedName (  ) ;^1672^^^^^1671^1678^String lhsString = n.getQualifiedName (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[P7_Replace_Invocation]^String lhsString = n.tokenToName (  ) ;^1672^^^^^1671^1678^String lhsString = n.getQualifiedName (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[P11_Insert_Donor_Statement]^String name = n.getString (  ) ;String lhsString = n.getQualifiedName (  ) ;^1672^^^^^1671^1678^String lhsString = n.getQualifiedName (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[P11_Insert_Donor_Statement]^String qNameStr = qName.getQualifiedName (  ) ;String lhsString = n.getQualifiedName (  ) ;^1672^^^^^1671^1678^String lhsString = n.getQualifiedName (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[P14_Delete_Statement]^^1672^1673^1674^1675^^1671^1678^String lhsString = n.getQualifiedName (  ) ; if  ( lhsString == null )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[P2_Replace_Operator]^if  ( lhsString != null )  {^1673^^^^^1671^1678^if  ( lhsString == null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[P5_Replace_Variable]^if  ( part == null )  {^1673^^^^^1671^1678^if  ( lhsString == null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[P8_Replace_Mix]^if  ( lhsString == true )  {^1673^^^^^1671^1678^if  ( lhsString == null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[P9_Replace_Statement]^if  ( res == null )  {^1673^^^^^1671^1678^if  ( lhsString == null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[P15_Unwrap_Block]^return false;^1673^1674^1675^^^1671^1678^if  ( lhsString == null )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[P16_Remove_Block]^^1673^1674^1675^^^1671^1678^if  ( lhsString == null )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[P3_Replace_Literal]^return true;^1674^^^^^1671^1678^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[P1_Replace_Type]^short  prototypeIdx = lhsString.indexOf ( ".prototype." ) ;^1676^^^^^1671^1678^int prototypeIdx = lhsString.indexOf ( ".prototype." ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[P3_Replace_Literal]^int prototypeIdx = lhsString.indexOf ( ".prototype.." ) ;^1676^^^^^1671^1678^int prototypeIdx = lhsString.indexOf ( ".prototype." ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[P5_Replace_Variable]^int prototypeIdx = part.indexOf ( ".prototype." ) ;^1676^^^^^1671^1678^int prototypeIdx = lhsString.indexOf ( ".prototype." ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[P8_Replace_Mix]^int prototypeIdx = originalName.indexOf ( ".prototype." ) ;^1676^^^^^1671^1678^int prototypeIdx = lhsString.indexOf ( ".prototype." ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[P11_Insert_Donor_Statement]^int prototypeIdx = qNameStr.lastIndexOf ( ".prototype." ) ;int prototypeIdx = lhsString.indexOf ( ".prototype." ) ;^1676^^^^^1671^1678^int prototypeIdx = lhsString.indexOf ( ".prototype." ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[P3_Replace_Literal]^int prototypeIdx = lhsString.indexOf ( "prototyprototype." ) ;^1676^^^^^1671^1678^int prototypeIdx = lhsString.indexOf ( ".prototype." ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[P14_Delete_Statement]^^1676^1677^^^^1671^1678^int prototypeIdx = lhsString.indexOf ( ".prototype." ) ; return prototypeIdx != -1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[P2_Replace_Operator]^return prototypeIdx >= -1;^1677^^^^^1671^1678^return prototypeIdx != -1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[P3_Replace_Literal]^return prototypeIdx != -5;^1677^^^^^1671^1678^return prototypeIdx != -1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[P5_Replace_Variable]^return lineno != -1;^1677^^^^^1671^1678^return prototypeIdx != -1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[P8_Replace_Mix]^returntype  ;^1677^^^^^1671^1678^return prototypeIdx != -1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isPrototypeProperty [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  n  
[P11_Insert_Donor_Statement]^Node parent = null;Node cur = qName;^1684^^^^^1683^1693^Node cur = qName;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P5_Replace_Variable]^while  ( isGetProp ( qName )  )  {^1685^^^^^1683^1693^while  ( isGetProp ( cur )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P7_Replace_Invocation]^while  ( isGet ( cur )  )  {^1685^^^^^1683^1693^while  ( isGetProp ( cur )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P3_Replace_Literal]^if  ( cur.getLastChild (  ) .getString (  ) .equals ( "rot" )  )  {^1686^^^^^1683^1693^if  ( cur.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P5_Replace_Variable]^if  ( qName.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^1686^^^^^1683^1693^if  ( cur.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P7_Replace_Invocation]^if  ( cur.getLastChild (  ) .equals (  ) .equals ( "prototype" )  )  {^1686^^^^^1683^1693^if  ( cur.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P7_Replace_Invocation]^if  ( cur.newNumber (  ) .getString (  ) .equals ( "prototype" )  )  {^1686^^^^^1683^1693^if  ( cur.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P15_Unwrap_Block]^return cur.getFirstChild();^1686^1687^1688^1689^1690^1683^1693^if  ( cur.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  { return cur.getFirstChild (  ) ; } else { cur = cur.getFirstChild (  ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P16_Remove_Block]^^1686^1687^1688^1689^1690^1683^1693^if  ( cur.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  { return cur.getFirstChild (  ) ; } else { cur = cur.getFirstChild (  ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P7_Replace_Invocation]^cur = cur.newNumber (  ) ;^1689^^^^^1683^1693^cur = cur.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P8_Replace_Mix]^cur =  qName.getFirstChild (  ) ;^1689^^^^^1683^1693^cur = cur.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P12_Insert_Condition]^if  ( n == parent.getFirstChild (  )  )  { cur = cur.getFirstChild (  ) ; }^1689^^^^^1683^1693^cur = cur.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P8_Replace_Mix]^cur = qName.newNumber (  ) ;^1689^^^^^1683^1693^cur = cur.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P14_Delete_Statement]^^1689^^^^^1683^1693^cur = cur.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P5_Replace_Variable]^return qName.getFirstChild (  ) ;^1687^^^^^1683^1693^return cur.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P7_Replace_Invocation]^return cur.newNumber (  ) ;^1687^^^^^1683^1693^return cur.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P12_Insert_Condition]^if  ( n == parent.getFirstChild (  )  )  { return cur.getFirstChild (  ) ; }^1687^^^^^1683^1693^return cur.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P8_Replace_Mix]^return qName.newNumber (  ) ;^1687^^^^^1683^1693^return cur.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P14_Delete_Statement]^^1687^^^^^1683^1693^return cur.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P7_Replace_Invocation]^cur = cur .getLastChild (  )  ;^1689^^^^^1683^1693^cur = cur.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P8_Replace_Mix]^return cur .getLastChild (  )  ;^1687^^^^^1683^1693^return cur.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P3_Replace_Literal]^if  ( cur.getLastChild (  ) .getString (  ) .equals ( "prototypep" )  )  {^1686^^^^^1683^1693^if  ( cur.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P7_Replace_Invocation]^if  ( cur.getLastChild (  )  .newString (  )  .equals ( "prototype" )  )  {^1686^^^^^1683^1693^if  ( cur.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P7_Replace_Invocation]^if  ( cur .getFirstChild (  )  .getString (  ) .equals ( "prototype" )  )  {^1686^^^^^1683^1693^if  ( cur.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P8_Replace_Mix]^if  ( qName .getFirstChild (  )  .getString (  ) .equals ( "prototype" )  )  {^1686^^^^^1683^1693^if  ( cur.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P3_Replace_Literal]^if  ( cur.getLastChild (  ) .getString (  ) .equals ( "prototypepr" )  )  {^1686^^^^^1683^1693^if  ( cur.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P14_Delete_Statement]^^1685^1686^1687^^^1683^1693^while  ( isGetProp ( cur )  )  { if  ( cur.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  { return cur.getFirstChild (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P3_Replace_Literal]^if  ( cur.getLastChild (  ) .getString (  ) .equals ( "p" )  )  {^1686^^^^^1683^1693^if  ( cur.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P8_Replace_Mix]^if  ( qName.newNumber (  ) .getString (  ) .equals ( "prototype" )  )  {^1686^^^^^1683^1693^if  ( cur.getLastChild (  ) .getString (  ) .equals ( "prototype" )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P8_Replace_Mix]^return this;^1692^^^^^1683^1693^return null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypeClassName [RETURN_TYPE] Node   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  operator  prototypeIdx  startPos  type  Node  cur  qName  
[P1_Replace_Type]^char qNameStr = qName.getQualifiedName (  ) ;^1699^^^^^1698^1703^String qNameStr = qName.getQualifiedName (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P7_Replace_Invocation]^String qNameStr = qName.tokenToName (  ) ;^1699^^^^^1698^1703^String qNameStr = qName.getQualifiedName (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P7_Replace_Invocation]^String qNameStr = qName .getParent (  )  ;^1699^^^^^1698^1703^String qNameStr = qName.getQualifiedName (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P11_Insert_Donor_Statement]^String name = n.getString (  ) ;String qNameStr = qName.getQualifiedName (  ) ;^1699^^^^^1698^1703^String qNameStr = qName.getQualifiedName (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P11_Insert_Donor_Statement]^String propName = last.getString (  ) ;String qNameStr = qName.getQualifiedName (  ) ;^1699^^^^^1698^1703^String qNameStr = qName.getQualifiedName (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P11_Insert_Donor_Statement]^String name = nameNode.getString (  ) ;String qNameStr = qName.getQualifiedName (  ) ;^1699^^^^^1698^1703^String qNameStr = qName.getQualifiedName (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P11_Insert_Donor_Statement]^String lhsString = n.getQualifiedName (  ) ;String qNameStr = qName.getQualifiedName (  ) ;^1699^^^^^1698^1703^String qNameStr = qName.getQualifiedName (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P14_Delete_Statement]^^1699^1700^1701^1702^1703^1698^1703^String qNameStr = qName.getQualifiedName (  ) ; int prototypeIdx = qNameStr.lastIndexOf ( ".prototype." ) ; int memberIndex = prototypeIdx + ".prototype".length (  )  + 1; return qNameStr.substring ( memberIndex ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P1_Replace_Type]^short  prototypeIdx = qNameStr.lastIndexOf ( ".prototype." ) ;^1700^^^^^1698^1703^int prototypeIdx = qNameStr.lastIndexOf ( ".prototype." ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P3_Replace_Literal]^int prototypeIdx = qNameStr.lastIndexOf ( ".pprototype." ) ;^1700^^^^^1698^1703^int prototypeIdx = qNameStr.lastIndexOf ( ".prototype." ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P5_Replace_Variable]^int prototypeIdx = res.lastIndexOf ( ".prototype." ) ;^1700^^^^^1698^1703^int prototypeIdx = qNameStr.lastIndexOf ( ".prototype." ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P7_Replace_Invocation]^int prototypeIdx = qNameStr.indexOf ( ".prototype." ) ;^1700^^^^^1698^1703^int prototypeIdx = qNameStr.lastIndexOf ( ".prototype." ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P8_Replace_Mix]^int prototypeIdx = originalName.indexOf ( ".prototype." ) ;^1700^^^^^1698^1703^int prototypeIdx = qNameStr.lastIndexOf ( ".prototype." ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P11_Insert_Donor_Statement]^int prototypeIdx = lhsString.indexOf ( ".prototype." ) ;int prototypeIdx = qNameStr.lastIndexOf ( ".prototype." ) ;^1700^^^^^1698^1703^int prototypeIdx = qNameStr.lastIndexOf ( ".prototype." ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P3_Replace_Literal]^int prototypeIdx = qNameStr.lastIndexOf ( ".prototype.y" ) ;^1700^^^^^1698^1703^int prototypeIdx = qNameStr.lastIndexOf ( ".prototype." ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P5_Replace_Variable]^int prototypeIdx = originalName.lastIndexOf ( ".prototype." ) ;^1700^^^^^1698^1703^int prototypeIdx = qNameStr.lastIndexOf ( ".prototype." ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P14_Delete_Statement]^^1700^1701^^^^1698^1703^int prototypeIdx = qNameStr.lastIndexOf ( ".prototype." ) ; int memberIndex = prototypeIdx + ".prototype".length (  )  + 1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P1_Replace_Type]^short  memberIndex = prototypeIdx + ".prototype".length (  )  + 1;^1701^^^^^1698^1703^int memberIndex = prototypeIdx + ".prototype".length (  )  + 1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P2_Replace_Operator]^int memberIndex = prototypeIdx + ".prototype".length (  &  )  + 1;^1701^^^^^1698^1703^int memberIndex = prototypeIdx + ".prototype".length (  )  + 1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P2_Replace_Operator]^int memberIndex = prototypeIdx + ".prototype".length (   instanceof   )  + 1;^1701^^^^^1698^1703^int memberIndex = prototypeIdx + ".prototype".length (  )  + 1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P3_Replace_Literal]^int memberIndex = prototypeIdx + ".protoprototype".length (  )  + 1;^1701^^^^^1698^1703^int memberIndex = prototypeIdx + ".prototype".length (  )  + 1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P3_Replace_Literal]^int memberIndex = prototypeIdx + ".prototype".length (  )  + prototypeIdx;^1701^^^^^1698^1703^int memberIndex = prototypeIdx + ".prototype".length (  )  + 1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P3_Replace_Literal]^int memberIndex = prototypeIdx + ".prototype".length() - 7  + 1;^1701^^^^^1698^1703^int memberIndex = prototypeIdx + ".prototype".length (  )  + 1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P5_Replace_Variable]^int memberIndex = type + ".prototype".length (  )  + 1;^1701^^^^^1698^1703^int memberIndex = prototypeIdx + ".prototype".length (  )  + 1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P7_Replace_Invocation]^int memberIndex = prototypeIdx + ".prototype".charAt (  )  + 1;^1701^^^^^1698^1703^int memberIndex = prototypeIdx + ".prototype".length (  )  + 1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P7_Replace_Invocation]^int memberIndex = prototypeIdx + ".prototype" .getNext (  )   + 1;^1701^^^^^1698^1703^int memberIndex = prototypeIdx + ".prototype".length (  )  + 1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P8_Replace_Mix]^int memberIndex = operator + ".prototype".length (  )  + 1;^1701^^^^^1698^1703^int memberIndex = prototypeIdx + ".prototype".length (  )  + 1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P3_Replace_Literal]^int memberIndex = prototypeIdx + ".protprototype".length (  )  + 1;^1701^^^^^1698^1703^int memberIndex = prototypeIdx + ".prototype".length (  )  + 1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P3_Replace_Literal]^int memberIndex = prototypeIdx + ".prototype".length() + 2  + 1;^1701^^^^^1698^1703^int memberIndex = prototypeIdx + ".prototype".length (  )  + 1;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P14_Delete_Statement]^^1701^1702^^^^1698^1703^int memberIndex = prototypeIdx + ".prototype".length (  )  + 1; return qNameStr.substring ( memberIndex ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P5_Replace_Variable]^return propName.substring ( memberIndex ) ;^1702^^^^^1698^1703^return qNameStr.substring ( memberIndex ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P5_Replace_Variable]^return qNameStr.substring ( operator ) ;^1702^^^^^1698^1703^return qNameStr.substring ( memberIndex ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P5_Replace_Variable]^return memberIndex.substring ( qNameStr ) ;^1702^^^^^1698^1703^return qNameStr.substring ( memberIndex ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P5_Replace_Variable]^return qNameStr.substring ( type ) ;^1702^^^^^1698^1703^return qNameStr.substring ( memberIndex ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P7_Replace_Invocation]^return qNameStr .substring ( index )  ;^1702^^^^^1698^1703^return qNameStr.substring ( memberIndex ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P14_Delete_Statement]^^1702^^^^^1698^1703^return qNameStr.substring ( memberIndex ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getPrototypePropertyName [RETURN_TYPE] String   Node qName [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  qName  
[P3_Replace_Literal]^return new Node ( Token.VOID, Node.newNumber ( 1 )  ) ;^1711^^^^^1709^1712^return new Node ( Token.VOID, Node.newNumber ( 0 )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newUndefinedNode [RETURN_TYPE] Node   [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  
[P7_Replace_Invocation]^return new Node ( Token.VOID, Node.tokenToName ( 0 )  ) ;^1711^^^^^1709^1712^return new Node ( Token.VOID, Node.newNumber ( 0 )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newUndefinedNode [RETURN_TYPE] Node   [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  
[P8_Replace_Mix]^return new Node ( Token.VOID, Node.tokenToName ( 0 % 2 )  ) ;^1711^^^^^1709^1712^return new Node ( Token.VOID, Node.newNumber ( 0 )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newUndefinedNode [RETURN_TYPE] Node   [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  
[P7_Replace_Invocation]^return new Node ( Token.VOID, Node .newString (  )   ) ;^1711^^^^^1709^1712^return new Node ( Token.VOID, Node.newNumber ( 0 )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newUndefinedNode [RETURN_TYPE] Node   [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  
[P3_Replace_Literal]^return new Node ( Token.VOID, Node.newNumber ( -9 )  ) ;^1711^^^^^1709^1712^return new Node ( Token.VOID, Node.newNumber ( 0 )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newUndefinedNode [RETURN_TYPE] Node   [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  
[P14_Delete_Statement]^^1711^^^^^1709^1712^return new Node ( Token.VOID, Node.newNumber ( 0 )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newUndefinedNode [RETURN_TYPE] Node   [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  
[P5_Replace_Variable]^Node nodeName = Node.newString ( Token.NAME, propName ) ;^1718^^^^^1717^1725^Node nodeName = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P7_Replace_Invocation]^Node nodeName = Node.putProp ( Token.NAME, name ) ;^1718^^^^^1717^1725^Node nodeName = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P8_Replace_Mix]^Node nodeName = Node.putProp ( Token.NAME, part ) ;^1718^^^^^1717^1725^Node nodeName = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P11_Insert_Donor_Statement]^Node var = new Node ( Token.VAR, nodeName ) ;Node nodeName = Node.newString ( Token.NAME, name ) ;^1718^^^^^1717^1725^Node nodeName = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P11_Insert_Donor_Statement]^Node nameNode = Node.newString ( Token.NAME, name ) ;Node nodeName = Node.newString ( Token.NAME, name ) ;^1718^^^^^1717^1725^Node nodeName = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P11_Insert_Donor_Statement]^Node var = new Node ( Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;Node nodeName = Node.newString ( Token.NAME, name ) ;^1718^^^^^1717^1725^Node nodeName = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P5_Replace_Variable]^Node nodeName = Node.newString ( Token.NAME, s ) ;^1718^^^^^1717^1725^Node nodeName = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P14_Delete_Statement]^^1718^^^^^1717^1725^Node nodeName = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P11_Insert_Donor_Statement]^return Node.newString ( Token.NAME, name, lineno, charno ) ;Node nodeName = Node.newString ( Token.NAME, name ) ;^1718^^^^^1717^1725^Node nodeName = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P11_Insert_Donor_Statement]^Token.VAR, Node.newString ( Token.NAME, nameNode.getString (  )  )  ) ;Node nodeName = Node.newString ( Token.NAME, name ) ;^1718^^^^^1717^1725^Node nodeName = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P11_Insert_Donor_Statement]^function.addChildrenToBack ( Node.newString ( Token.NAME, name, lineno, charno )  ) ;Node nodeName = Node.newString ( Token.NAME, name ) ;^1718^^^^^1717^1725^Node nodeName = Node.newString ( Token.NAME, name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P2_Replace_Operator]^if  ( value == null )  {^1719^^^^^1717^1725^if  ( value != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P5_Replace_Variable]^if  ( var != null )  {^1719^^^^^1717^1725^if  ( value != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P8_Replace_Mix]^if  ( value != true )  {^1719^^^^^1717^1725^if  ( value != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P9_Replace_Statement]^if  ( res == null )  {^1719^^^^^1717^1725^if  ( value != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P9_Replace_Statement]^if  ( nameNode != null )  {^1719^^^^^1717^1725^if  ( value != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P9_Replace_Statement]^if  ( longValue == value )  {^1719^^^^^1717^1725^if  ( value != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P15_Unwrap_Block]^nodeName.addChildrenToBack(value);^1719^1720^1721^^^1717^1725^if  ( value != null )  { nodeName.addChildrenToBack ( value ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P16_Remove_Block]^^1719^1720^1721^^^1717^1725^if  ( value != null )  { nodeName.addChildrenToBack ( value ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P5_Replace_Variable]^nodeName.addChildrenToBack ( var ) ;^1720^^^^^1717^1725^nodeName.addChildrenToBack ( value ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P7_Replace_Invocation]^nodeName.addChildAfter ( value ) ;^1720^^^^^1717^1725^nodeName.addChildrenToBack ( value ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P14_Delete_Statement]^^1720^^^^^1717^1725^nodeName.addChildrenToBack ( value ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P11_Insert_Donor_Statement]^parent.addChildToFront ( var ) ;nodeName.addChildrenToBack ( value ) ;^1720^^^^^1717^1725^nodeName.addChildrenToBack ( value ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P11_Insert_Donor_Statement]^node.detachChildren (  ) ;nodeName.addChildrenToBack ( value ) ;^1720^^^^^1717^1725^nodeName.addChildrenToBack ( value ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P11_Insert_Donor_Statement]^function.addChildToBack ( body ) ;nodeName.addChildrenToBack ( value ) ;^1720^^^^^1717^1725^nodeName.addChildrenToBack ( value ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P11_Insert_Donor_Statement]^parameterParen.addChildToBack ( param ) ;nodeName.addChildrenToBack ( value ) ;^1720^^^^^1717^1725^nodeName.addChildrenToBack ( value ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P13_Insert_Block]^if  ( value != null )  {     nodeName.addChildrenToBack ( value ) ; }^1720^^^^^1717^1725^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P7_Replace_Invocation]^nodeName .addChildrenToBack (  )  ;^1720^^^^^1717^1725^nodeName.addChildrenToBack ( value ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P5_Replace_Variable]^Node var = new Node ( Token.VAR, var ) ;^1722^^^^^1717^1725^Node var = new Node ( Token.VAR, nodeName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P5_Replace_Variable]^Node var = new Node ( Token.VAR ) ;^1722^^^^^1717^1725^Node var = new Node ( Token.VAR, nodeName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P5_Replace_Variable]^Node var = new Node ( Token. nodeName ) ;^1722^^^^^1717^1725^Node var = new Node ( Token.VAR, nodeName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P5_Replace_Variable]^Node var = new Node ( Token.VAR, value ) ;^1722^^^^^1717^1725^Node var = new Node ( Token.VAR, nodeName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P11_Insert_Donor_Statement]^Node nodeName = Node.newString ( Token.NAME, name ) ;Node var = new Node ( Token.VAR, nodeName ) ;^1722^^^^^1717^1725^Node var = new Node ( Token.VAR, nodeName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P11_Insert_Donor_Statement]^Node nameNode = Node.newString ( Token.NAME, name ) ;Node var = new Node ( Token.VAR, nodeName ) ;^1722^^^^^1717^1725^Node var = new Node ( Token.VAR, nodeName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P11_Insert_Donor_Statement]^Node parameterParen = new Node ( Token.LP, lineno, charno ) ;Node var = new Node ( Token.VAR, nodeName ) ;^1722^^^^^1717^1725^Node var = new Node ( Token.VAR, nodeName ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P5_Replace_Variable]^return value;^1724^^^^^1717^1725^return var;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] newVarNode [RETURN_TYPE] Node   String name Node value [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  nodeName  value  var  
[P2_Replace_Operator]^return n.getType (  )  == Token.NAME || n.getString (  ) .equals ( name ) ;^1738^1739^^^^1737^1740^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  != Token.NAME && n.getString (  ) .equals ( name ) ;^1738^1739^^^^1737^1740^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[P5_Replace_Variable]^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( part ) ;^1738^1739^^^^1737^1740^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[P5_Replace_Variable]^return name.getType (  )  == Token.NAME && n.getString (  ) .equals ( n ) ;^1738^1739^^^^1737^1740^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^1738^1739^^^^1737^1740^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[P7_Replace_Invocation]^return n.getType (  )  == Token.NAME && n.newNumber (  ) .equals ( name ) ;^1738^1739^^^^1737^1740^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[P8_Replace_Mix]^return n.getType (  )  == Token.NAME && n .newString (  )  .equals ( name ) ;^1738^1739^^^^1737^1740^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[P14_Delete_Statement]^^1738^1739^^^^1737^1740^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[P5_Replace_Variable]^&& n.getString (  ) .equals ( qNameStr ) ;^1739^^^^^1737^1740^&& n.getString (  ) .equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[P5_Replace_Variable]^&& name.getString (  ) .equals ( n ) ;^1739^^^^^1737^1740^&& n.getString (  ) .equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[P7_Replace_Invocation]^&& n.newNumber (  ) .equals ( name ) ;^1739^^^^^1737^1740^&& n.getString (  ) .equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[P14_Delete_Statement]^^1739^^^^^1737^1740^&& n.getString (  ) .equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[P11_Insert_Donor_Statement]^|| "NaN".equals ( name ) ;&& n.getString (  ) .equals ( name ) ;^1739^^^^^1737^1740^&& n.getString (  ) .equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[P11_Insert_Donor_Statement]^return parent.getFirstChild (  ) .getQualifiedName (  ) ;&& n.getString (  ) .equals ( name ) ;^1739^^^^^1737^1740^&& n.getString (  ) .equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[P11_Insert_Donor_Statement]^return n.getString (  ) .length (  )  > 0;&& n.getString (  ) .equals ( name ) ;^1739^^^^^1737^1740^&& n.getString (  ) .equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[P11_Insert_Donor_Statement]^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;&& n.getString (  ) .equals ( name ) ;^1739^^^^^1737^1740^&& n.getString (  ) .equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[P7_Replace_Invocation]^&& n .newString (  )  .equals ( name ) ;^1739^^^^^1737^1740^&& n.getString (  ) .equals ( name ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[P2_Replace_Operator]^return n.getType (  )  != type;^1754^^^^^1753^1755^return n.getType (  )  == type;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[P5_Replace_Variable]^return n.getType (  )  == startPos;^1754^^^^^1753^1755^return n.getType (  )  == type;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[P5_Replace_Variable]^return type.getType (  )  == n;^1754^^^^^1753^1755^return n.getType (  )  == type;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  )  == type;^1754^^^^^1753^1755^return n.getType (  )  == type;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[P7_Replace_Invocation]^return n .getString (  )   == type;^1754^^^^^1753^1755^return n.getType (  )  == type;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[P12_Insert_Condition]^if  ( n.getType (  )  == Token.NAME )  { return n.getType (  )  == type; }^1754^^^^^1753^1755^return n.getType (  )  == type;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[P14_Delete_Statement]^^1754^^^^^1753^1755^return n.getType (  )  == type;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  n  
[P5_Replace_Variable]^return isNodeTypeReferenced ( node, startPos, Predicates.<Node>alwaysTrue (  )  ) ;^1762^^^^^1761^1763^return isNodeTypeReferenced ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P5_Replace_Variable]^return isNodeTypeReferenced (  type, Predicates.<Node>alwaysTrue (  )  ) ;^1762^^^^^1761^1763^return isNodeTypeReferenced ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P5_Replace_Variable]^return isNodeTypeReferenced ( node,  Predicates.<Node>alwaysTrue (  )  ) ;^1762^^^^^1761^1763^return isNodeTypeReferenced ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P5_Replace_Variable]^return isNodeTypeReferenced ( type, node, Predicates.<Node>alwaysTrue (  )  ) ;^1762^^^^^1761^1763^return isNodeTypeReferenced ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P7_Replace_Invocation]^return getCount ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^1762^^^^^1761^1763^return isNodeTypeReferenced ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P5_Replace_Variable]^return isNodeTypeReferenced ( node, memberIndex, Predicates.<Node>alwaysTrue (  )  ) ;^1762^^^^^1761^1763^return isNodeTypeReferenced ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P8_Replace_Mix]^return getCount ( node, operator, Predicates.<Node>alwaysTrue (  )  ) ;^1762^^^^^1761^1763^return isNodeTypeReferenced ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P14_Delete_Statement]^^1762^^^^^1761^1763^return isNodeTypeReferenced ( node, type, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P4_Replace_Constructor]^return has ( node, return has ( node,  new MatchNameNode ( name )  , traverseChildrenPred ) ;^1770^^^^^1768^1771^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[P4_Replace_Constructor]^return has (  new MatchNodeType ( type ) , traverseChildrenPred ) ;^1770^^^^^1768^1771^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[P4_Replace_Constructor]^return has ( node, new MatchNodeType ( type )  ) ;^1770^^^^^1768^1771^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^return has ( node, new MatchNodeType ( memberIndex ) , traverseChildrenPred ) ;^1770^^^^^1768^1771^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^return has ( node, new MatchNodeType ( type ) , 2 ) ;^1770^^^^^1768^1771^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^return has ( traverseChildrenPred, new MatchNodeType ( type ) , node ) ;^1770^^^^^1768^1771^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^return has ( node, new MatchNodeType ( traverseChildrenPred ) , type ) ;^1770^^^^^1768^1771^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[P7_Replace_Invocation]^return visitPreOrder ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^1770^^^^^1768^1771^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[P8_Replace_Mix]^return visitPreOrder ( node, new MatchNodeType ( startPos ) , traverseChildrenPred ) ;^1770^^^^^1768^1771^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[P14_Delete_Statement]^^1770^^^^^1768^1771^return has ( node, new MatchNodeType ( type ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNodeTypeReferenced [RETURN_TYPE] boolean   Node node int type Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[P4_Replace_Constructor]^return getCount ( node, return getCount ( node,  new MatchNameNode ( name )   ) ;^1777^^^^^1776^1778^return getCount ( node, new MatchNodeType ( type )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNodeTypeReferenceCount [RETURN_TYPE] int   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P4_Replace_Constructor]^return getCount (  new MatchNodeType ( type )  ) ;^1777^^^^^1776^1778^return getCount ( node, new MatchNodeType ( type )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNodeTypeReferenceCount [RETURN_TYPE] int   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P5_Replace_Variable]^return getCount ( node, new MatchNodeType ( memberIndex )  ) ;^1777^^^^^1776^1778^return getCount ( node, new MatchNodeType ( type )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNodeTypeReferenceCount [RETURN_TYPE] int   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P5_Replace_Variable]^return getCount ( type, new MatchNodeType ( node )  ) ;^1777^^^^^1776^1778^return getCount ( node, new MatchNodeType ( type )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNodeTypeReferenceCount [RETURN_TYPE] int   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P7_Replace_Invocation]^return getFunctionName ( node, new MatchNodeType ( type )  ) ;^1777^^^^^1776^1778^return getCount ( node, new MatchNodeType ( type )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNodeTypeReferenceCount [RETURN_TYPE] int   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P8_Replace_Mix]^return getCount ( node, new MatchNodeType ( operator )  ) ;^1777^^^^^1776^1778^return getCount ( node, new MatchNodeType ( type )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNodeTypeReferenceCount [RETURN_TYPE] int   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P8_Replace_Mix]^return getFunctionName ( node, new MatchNodeType ( operator )  ) ;^1777^^^^^1776^1778^return getCount ( node, new MatchNodeType ( type )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNodeTypeReferenceCount [RETURN_TYPE] int   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P14_Delete_Statement]^^1777^^^^^1776^1778^return getCount ( node, new MatchNodeType ( type )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNodeTypeReferenceCount [RETURN_TYPE] int   Node node int type [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P4_Replace_Constructor]^return has ( node, return has ( node,  new MatchNodeType ( type )  , traverseChildrenPred ) ;^1786^^^^^1783^1787^return has ( node, new MatchNameNode ( name ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[P4_Replace_Constructor]^return has (  new MatchNameNode ( name ) , traverseChildrenPred ) ;^1786^^^^^1783^1787^return has ( node, new MatchNameNode ( name ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[P4_Replace_Constructor]^return has ( node, new MatchNameNode ( name )  ) ;^1786^^^^^1783^1787^return has ( node, new MatchNameNode ( name ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^return has ( node, new MatchNameNode ( qNameStr ) , traverseChildrenPred ) ;^1786^^^^^1783^1787^return has ( node, new MatchNameNode ( name ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^return has ( name, new MatchNameNode ( node ) , traverseChildrenPred ) ;^1786^^^^^1783^1787^return has ( node, new MatchNameNode ( name ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^return has ( node, new MatchNameNode ( traverseChildrenPred ) , name ) ;^1786^^^^^1783^1787^return has ( node, new MatchNameNode ( name ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[P7_Replace_Invocation]^return visitPreOrder ( node, new MatchNameNode ( name ) , traverseChildrenPred ) ;^1786^^^^^1783^1787^return has ( node, new MatchNameNode ( name ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^return has ( node, new MatchNameNode ( s ) , traverseChildrenPred ) ;^1786^^^^^1783^1787^return has ( node, new MatchNameNode ( name ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^return has ( node, new MatchNameNode ( propName ) , traverseChildrenPred ) ;^1786^^^^^1783^1787^return has ( node, new MatchNameNode ( name ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[P8_Replace_Mix]^return has ( node, new MatchNameNode ( part ) , traverseChildrenPred ) ;^1786^^^^^1783^1787^return has ( node, new MatchNameNode ( name ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[P14_Delete_Statement]^^1786^^^^^1783^1787^return has ( node, new MatchNameNode ( name ) , traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^return isNameReferenced ( node, propName, Predicates.<Node>alwaysTrue (  )  ) ;^1793^^^^^1792^1794^return isNameReferenced ( node, name, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P5_Replace_Variable]^return isNameReferenced (  name, Predicates.<Node>alwaysTrue (  )  ) ;^1793^^^^^1792^1794^return isNameReferenced ( node, name, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P5_Replace_Variable]^return isNameReferenced ( node,  Predicates.<Node>alwaysTrue (  )  ) ;^1793^^^^^1792^1794^return isNameReferenced ( node, name, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P5_Replace_Variable]^return isNameReferenced ( name, node, Predicates.<Node>alwaysTrue (  )  ) ;^1793^^^^^1792^1794^return isNameReferenced ( node, name, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P7_Replace_Invocation]^return getCount ( node, name, Predicates.<Node>alwaysTrue (  )  ) ;^1793^^^^^1792^1794^return isNameReferenced ( node, name, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P8_Replace_Mix]^return isNameReferenced ( node, part, Predicates.<Node>alwaysTrue (  )  ) ;^1793^^^^^1792^1794^return isNameReferenced ( node, name, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P14_Delete_Statement]^^1793^^^^^1792^1794^return isNameReferenced ( node, name, Predicates.<Node>alwaysTrue (  )  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isNameReferenced [RETURN_TYPE] boolean   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P4_Replace_Constructor]^return getCount ( node, return getCount ( node,  new MatchNodeType ( type )    ) ;^1800^^^^^1799^1801^return getCount ( node, new MatchNameNode ( name )   ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNameReferenceCount [RETURN_TYPE] int   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P4_Replace_Constructor]^return getCount (  new MatchNameNode ( name )   ) ;^1800^^^^^1799^1801^return getCount ( node, new MatchNameNode ( name )   ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNameReferenceCount [RETURN_TYPE] int   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P5_Replace_Variable]^return getCount ( node, new MatchNameNode ( qNameStr )   ) ;^1800^^^^^1799^1801^return getCount ( node, new MatchNameNode ( name )   ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNameReferenceCount [RETURN_TYPE] int   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P5_Replace_Variable]^return getCount ( name, new MatchNameNode ( node )   ) ;^1800^^^^^1799^1801^return getCount ( node, new MatchNameNode ( name )   ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNameReferenceCount [RETURN_TYPE] int   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P7_Replace_Invocation]^return getFunctionName ( node, new MatchNameNode ( name )   ) ;^1800^^^^^1799^1801^return getCount ( node, new MatchNameNode ( name )   ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNameReferenceCount [RETURN_TYPE] int   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P8_Replace_Mix]^return getFunctionName ( node,  new MatchNodeType ( type )    ) ;^1800^^^^^1799^1801^return getCount ( node, new MatchNameNode ( name )   ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNameReferenceCount [RETURN_TYPE] int   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P5_Replace_Variable]^return getCount ( node, new MatchNameNode ( part )   ) ;^1800^^^^^1799^1801^return getCount ( node, new MatchNameNode ( name )   ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNameReferenceCount [RETURN_TYPE] int   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P5_Replace_Variable]^return getCount ( node, new MatchNameNode ( propName )   ) ;^1800^^^^^1799^1801^return getCount ( node, new MatchNameNode ( name )   ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNameReferenceCount [RETURN_TYPE] int   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P14_Delete_Statement]^^1800^^^^^1799^1801^return getCount ( node, new MatchNameNode ( name )   ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getNameReferenceCount [RETURN_TYPE] int   Node node String name [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Node  node  
[P5_Replace_Variable]^if  ( pred.apply ( c )  )  {^1809^^^^^1806^1824^if  ( pred.apply ( node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P5_Replace_Variable]^if  ( node.apply ( pred )  )  {^1809^^^^^1806^1824^if  ( pred.apply ( node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P9_Replace_Statement]^if  ( pred.apply ( n )  )  {^1809^^^^^1806^1824^if  ( pred.apply ( node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P15_Unwrap_Block]^return true;^1809^1810^1811^^^1806^1824^if  ( pred.apply ( node )  )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P16_Remove_Block]^^1809^1810^1811^^^1806^1824^if  ( pred.apply ( node )  )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P3_Replace_Literal]^return false;^1810^^^^^1806^1824^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P5_Replace_Variable]^if  ( !traverseChildrenPred.apply ( c )  )  {^1813^^^^^1806^1824^if  ( !traverseChildrenPred.apply ( node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P8_Replace_Mix]^if  ( traverseChildrenPred.apply ( node )  )  {^1813^^^^^1806^1824^if  ( !traverseChildrenPred.apply ( node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P15_Unwrap_Block]^return false;^1813^1814^1815^^^1806^1824^if  ( !traverseChildrenPred.apply ( node )  )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P16_Remove_Block]^^1813^1814^1815^^^1806^1824^if  ( !traverseChildrenPred.apply ( node )  )  { return false; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P13_Insert_Block]^if  ( namespaceName.equals ( "Math" )  )  {     return false; }^1813^^^^^1806^1824^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P13_Insert_Block]^if  ( pred.apply ( node )  )  {     return true; }^1813^^^^^1806^1824^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P13_Insert_Block]^if  ( name.equals ( "String" )  )  {     return false; }^1813^^^^^1806^1824^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P13_Insert_Block]^if  ( callNode.isNoSideEffectsCall (  )  )  {     return false; }^1813^^^^^1806^1824^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P3_Replace_Literal]^return true;^1814^^^^^1806^1824^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P8_Replace_Mix]^if  ( !traverseChildrenPred .MatchNameNode ( s )   )  {^1813^^^^^1806^1824^if  ( !traverseChildrenPred.apply ( node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P13_Insert_Block]^if  ( ! ( traverseChildrenPred.apply ( node )  )  )  {     return false; }^1813^^^^^1806^1824^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P5_Replace_Variable]^if  ( has ( node, pred, traverseChildrenPred )  )  {^1818^^^^^1806^1824^if  ( has ( c, pred, traverseChildrenPred )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P5_Replace_Variable]^if  ( has ( c, null, traverseChildrenPred )  )  {^1818^^^^^1806^1824^if  ( has ( c, pred, traverseChildrenPred )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P5_Replace_Variable]^if  ( has (  pred, traverseChildrenPred )  )  {^1818^^^^^1806^1824^if  ( has ( c, pred, traverseChildrenPred )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P5_Replace_Variable]^if  ( has ( c,  traverseChildrenPred )  )  {^1818^^^^^1806^1824^if  ( has ( c, pred, traverseChildrenPred )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P5_Replace_Variable]^if  ( has ( c, pred )  )  {^1818^^^^^1806^1824^if  ( has ( c, pred, traverseChildrenPred )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P5_Replace_Variable]^if  ( has ( pred, c, traverseChildrenPred )  )  {^1818^^^^^1806^1824^if  ( has ( c, pred, traverseChildrenPred )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P5_Replace_Variable]^if  ( has ( c, traverseChildrenPred, pred )  )  {^1818^^^^^1806^1824^if  ( has ( c, pred, traverseChildrenPred )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P7_Replace_Invocation]^if  ( visitPreOrder ( c, pred, traverseChildrenPred )  )  {^1818^^^^^1806^1824^if  ( has ( c, pred, traverseChildrenPred )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P15_Unwrap_Block]^return true;^1818^1819^1820^^^1806^1824^if  ( has ( c, pred, traverseChildrenPred )  )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P16_Remove_Block]^^1818^1819^1820^^^1806^1824^if  ( has ( c, pred, traverseChildrenPred )  )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P3_Replace_Literal]^return false;^1819^^^^^1806^1824^return true;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P2_Replace_Operator]^for  ( Node c = node.getFirstChild (  ) ; c == null; c = c.getNext (  )  )  {^1817^^^^^1806^1824^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P5_Replace_Variable]^for  ( Node node = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1817^^^^^1806^1824^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P5_Replace_Variable]^for  ( Node node = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1817^^^^^1806^1824^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P7_Replace_Invocation]^for  ( Node c = node.newNumber (  ) ; c != null; c = c.getNext (  )  )  {^1817^^^^^1806^1824^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P7_Replace_Invocation]^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.newNumber (  )  )  {^1817^^^^^1806^1824^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P8_Replace_Mix]^for  ( Node node = node.newNumber (  ) ; c != null; c = c.getNext (  )  )  {^1817^^^^^1806^1824^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P5_Replace_Variable]^if  ( has ( traverseChildrenPred, pred, c )  )  {^1818^^^^^1806^1824^if  ( has ( c, pred, traverseChildrenPred )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P8_Replace_Mix]^if  ( visitPreOrder ( node, pred, traverseChildrenPred )  )  {^1818^^^^^1806^1824^if  ( has ( c, pred, traverseChildrenPred )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P7_Replace_Invocation]^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c .getParent (  )   )  {^1817^^^^^1806^1824^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P8_Replace_Mix]^for  ( Node c =  node.getFirstChild (  ) ; node !^1817^^^^^1806^1824^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P7_Replace_Invocation]^for  ( Node c = node .getLastChild (  )  ; c != null; c = c.getNext (  )  )  {^1817^^^^^1806^1824^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P5_Replace_Variable]^for  ( Node c = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1817^^^^^1806^1824^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P8_Replace_Mix]^for  ( Node c = c.newNumber (  ) ; c != null; c = c.getNext (  )  )  {^1817^^^^^1806^1824^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P14_Delete_Statement]^^1817^1818^1819^1820^^1806^1824^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  { if  ( has ( c, pred, traverseChildrenPred )  )  { return true; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P3_Replace_Literal]^return true;^1823^^^^^1806^1824^return false;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] has [RETURN_TYPE] boolean   Node node Node> pred Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  type  Predicate  pred  traverseChildrenPred  
[P1_Replace_Type]^short  total = 0;^1831^^^^^1830^1842^int total = 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P3_Replace_Literal]^int total = 5;^1831^^^^^1830^1842^int total = 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P11_Insert_Donor_Statement]^int index = 0;int total = 0;^1831^^^^^1830^1842^int total = 0;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P5_Replace_Variable]^if  ( pred.apply ( c )  )  {^1833^^^^^1830^1842^if  ( pred.apply ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P5_Replace_Variable]^if  ( n.apply ( pred )  )  {^1833^^^^^1830^1842^if  ( pred.apply ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P9_Replace_Statement]^if  ( pred.apply ( node )  )  {^1833^^^^^1830^1842^if  ( pred.apply ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P9_Replace_Statement]^if  ( vars.isEmpty (  )  )  {^1833^^^^^1830^1842^if  ( pred.apply ( n )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P15_Unwrap_Block]^total++;^1833^1834^1835^^^1830^1842^if  ( pred.apply ( n )  )  { total++; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P16_Remove_Block]^^1833^1834^1835^^^1830^1842^if  ( pred.apply ( n )  )  { total++; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P13_Insert_Block]^if  ( pred.apply ( node )  )  {     return true; }^1833^^^^^1830^1842^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P13_Insert_Block]^if  ( vars.isEmpty (  )  )  {     return ; }^1833^^^^^1830^1842^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P2_Replace_Operator]^for  ( Node c = n.getFirstChild (  ) ; c == null; c = c.getNext (  )  )  {^1837^^^^^1830^1842^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P5_Replace_Variable]^for  ( Node n = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1837^^^^^1830^1842^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P5_Replace_Variable]^for  ( Node n = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1837^^^^^1830^1842^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P7_Replace_Invocation]^for  ( Node c = n.newNumber (  ) ; c != null; c = c.getNext (  )  )  {^1837^^^^^1830^1842^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P7_Replace_Invocation]^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.newNumber (  )  )  {^1837^^^^^1830^1842^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P8_Replace_Mix]^for  ( Node n = n.getFirstChild (  ) ; c != null; c = c.newNumber (  )  )  {^1837^^^^^1830^1842^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P5_Replace_Variable]^total += getCount ( n, pred ) ;^1838^^^^^1830^1842^total += getCount ( c, pred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P5_Replace_Variable]^total += getCount (  pred ) ;^1838^^^^^1830^1842^total += getCount ( c, pred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P5_Replace_Variable]^total += getCount ( c ) ;^1838^^^^^1830^1842^total += getCount ( c, pred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P5_Replace_Variable]^total += getCount ( pred, c ) ;^1838^^^^^1830^1842^total += getCount ( c, pred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P7_Replace_Invocation]^total += getFunctionName ( c, pred ) ;^1838^^^^^1830^1842^total += getCount ( c, pred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P8_Replace_Mix]^total +=  getCount ( null, pred ) ;^1838^^^^^1830^1842^total += getCount ( c, pred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P14_Delete_Statement]^^1838^^^^^1830^1842^total += getCount ( c, pred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P7_Replace_Invocation]^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c .getParent (  )   )  {^1837^^^^^1830^1842^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P8_Replace_Mix]^for  ( Node c =  n.getFirstChild (  ) ; n !^1837^^^^^1830^1842^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P7_Replace_Invocation]^for  ( Node c = n .getLastChild (  )  ; c != null; c = c.getNext (  )  )  {^1837^^^^^1830^1842^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P5_Replace_Variable]^for  ( Node c = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1837^^^^^1830^1842^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P8_Replace_Mix]^for  ( Node c = c .getLastChild (  )  ; c != null; c = c.getNext (  )  )  {^1837^^^^^1830^1842^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P14_Delete_Statement]^^1837^1838^1839^^^1830^1842^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  { total += getCount ( c, pred ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P8_Replace_Mix]^return operator;^1841^^^^^1830^1842^return total;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCount [RETURN_TYPE] int   Node n Node> pred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  c  n  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  pred  
[P5_Replace_Variable]^vistor.visit ( c ) ;^1859^^^^^1856^1866^vistor.visit ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P14_Delete_Statement]^^1859^^^^^1856^1866^vistor.visit ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P11_Insert_Donor_Statement]^parent.removeChild ( node ) ;vistor.visit ( node ) ;^1859^^^^^1856^1866^vistor.visit ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^if  ( node.apply ( traverseChildrenPred )  )  {^1861^^^^^1856^1866^if  ( traverseChildrenPred.apply ( node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P9_Replace_Statement]^if  ( pred.apply ( node )  )  {^1861^^^^^1856^1866^if  ( traverseChildrenPred.apply ( node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P9_Replace_Statement]^if  ( !traverseChildrenPred.apply ( node )  )  {^1861^^^^^1856^1866^if  ( traverseChildrenPred.apply ( node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P15_Unwrap_Block]^for (com.google.javascript.rhino.Node c = node.getFirstChild(); c != null; c = c.getNext()) {    com.google.javascript.jscomp.NodeUtil.visitPreOrder(c, vistor, traverseChildrenPred);};^1861^1862^1863^1864^^1856^1866^if  ( traverseChildrenPred.apply ( node )  )  { for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  { visitPreOrder ( c, vistor, traverseChildrenPred ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P16_Remove_Block]^^1861^1862^1863^1864^^1856^1866^if  ( traverseChildrenPred.apply ( node )  )  { for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  { visitPreOrder ( c, vistor, traverseChildrenPred ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P13_Insert_Block]^if  ( traverseChildrenPred.apply ( node )  )  {     for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {         visitPostOrder ( c, vistor, traverseChildrenPred ) ;     } }^1861^^^^^1856^1866^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P2_Replace_Operator]^for  ( Node c = node.getFirstChild (  ) ; c == null; c = c.getNext (  )  )  {^1862^^^^^1856^1866^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^for  ( Node node = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1862^^^^^1856^1866^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P7_Replace_Invocation]^for  ( Node c = node.newNumber (  ) ; c != null; c = c.getNext (  )  )  {^1862^^^^^1856^1866^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P7_Replace_Invocation]^for  ( Node c = node .getLastChild (  )  ; c != null; c = c.getNext (  )  )  {^1862^^^^^1856^1866^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P7_Replace_Invocation]^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.newNumber (  )  )  {^1862^^^^^1856^1866^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P7_Replace_Invocation]^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c .getParent (  )   )  {^1862^^^^^1856^1866^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P13_Insert_Block]^if  ( traverseChildrenPred.apply ( node )  )  {     for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {         visitPostOrder ( c, vistor, traverseChildrenPred ) ;     } }^1862^^^^^1856^1866^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P13_Insert_Block]^if  ( traverseChildrenPred.apply ( node )  )  {     for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {         visitPreOrder ( c, vistor, traverseChildrenPred ) ;     } }^1862^^^^^1856^1866^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^visitPreOrder ( node, vistor, traverseChildrenPred ) ;^1863^^^^^1856^1866^visitPreOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^visitPreOrder (  vistor, traverseChildrenPred ) ;^1863^^^^^1856^1866^visitPreOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^visitPreOrder ( c,  traverseChildrenPred ) ;^1863^^^^^1856^1866^visitPreOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^visitPreOrder ( c, vistor ) ;^1863^^^^^1856^1866^visitPreOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^visitPreOrder ( vistor, c, traverseChildrenPred ) ;^1863^^^^^1856^1866^visitPreOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^visitPreOrder ( traverseChildrenPred, vistor, c ) ;^1863^^^^^1856^1866^visitPreOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P7_Replace_Invocation]^visitPostOrder ( c, vistor, traverseChildrenPred ) ;^1863^^^^^1856^1866^visitPreOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P14_Delete_Statement]^^1863^^^^^1856^1866^visitPreOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P11_Insert_Donor_Statement]^visitPostOrder ( c, vistor, traverseChildrenPred ) ;visitPreOrder ( c, vistor, traverseChildrenPred ) ;^1863^^^^^1856^1866^visitPreOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P12_Insert_Condition]^if  ( has ( c, pred, traverseChildrenPred )  )  { visitPreOrder ( c, vistor, traverseChildrenPred ) ; }^1863^^^^^1856^1866^visitPreOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P8_Replace_Mix]^for  ( Node c =  node.getFirstChild (  ) ; null !^1862^^^^^1856^1866^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^for  ( Node c = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1862^^^^^1856^1866^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P8_Replace_Mix]^for  ( Node c = c.newNumber (  ) ; c != null; c = c.getNext (  )  )  {^1862^^^^^1856^1866^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P14_Delete_Statement]^^1862^1863^1864^^^1856^1866^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  { visitPreOrder ( c, vistor, traverseChildrenPred ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P8_Replace_Mix]^for  ( Node node = node.getFirstChild (  ) ; c != null; c = c.newNumber (  )  )  {^1862^^^^^1856^1866^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^visitPreOrder ( c, traverseChildrenPred, vistor ) ;^1863^^^^^1856^1866^visitPreOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^for  ( Node node = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1862^^^^^1856^1866^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P8_Replace_Mix]^visitPostOrder ( node, vistor, traverseChildrenPred ) ;^1863^^^^^1856^1866^visitPreOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P8_Replace_Mix]^for  ( Node c =  node.getFirstChild (  ) ; node !^1862^^^^^1856^1866^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^if  ( traverseChildrenPred.apply ( c )  )  {^1861^^^^^1856^1866^if  ( traverseChildrenPred.apply ( node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P13_Insert_Block]^if  ( ! ( traverseChildrenPred.apply ( node )  )  )  {     return false; }^1861^^^^^1856^1866^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPreOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P8_Replace_Mix]^if  ( traverseChildrenPred .MatchNameNode ( name )   )  {^1875^^^^^1872^1882^if  ( traverseChildrenPred.apply ( node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P9_Replace_Statement]^if  ( pred.apply ( node )  )  {^1875^^^^^1872^1882^if  ( traverseChildrenPred.apply ( node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P9_Replace_Statement]^if  ( !traverseChildrenPred.apply ( node )  )  {^1875^^^^^1872^1882^if  ( traverseChildrenPred.apply ( node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P15_Unwrap_Block]^for (com.google.javascript.rhino.Node c = node.getFirstChild(); c != null; c = c.getNext()) {    com.google.javascript.jscomp.NodeUtil.visitPostOrder(c, vistor, traverseChildrenPred);};^1875^1876^1877^1878^^1872^1882^if  ( traverseChildrenPred.apply ( node )  )  { for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  { visitPostOrder ( c, vistor, traverseChildrenPred ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P16_Remove_Block]^^1875^1876^1877^1878^^1872^1882^if  ( traverseChildrenPred.apply ( node )  )  { for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  { visitPostOrder ( c, vistor, traverseChildrenPred ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P13_Insert_Block]^if  ( traverseChildrenPred.apply ( node )  )  {     for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {         visitPreOrder ( c, vistor, traverseChildrenPred ) ;     } }^1875^^^^^1872^1882^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P2_Replace_Operator]^for  ( Node c = node.getFirstChild (  ) ; c == null; c = c.getNext (  )  )  {^1876^^^^^1872^1882^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^for  ( Node node = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1876^^^^^1872^1882^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^for  ( Node node = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1876^^^^^1872^1882^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P7_Replace_Invocation]^for  ( Node c = node.newNumber (  ) ; c != null; c = c.getNext (  )  )  {^1876^^^^^1872^1882^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P7_Replace_Invocation]^for  ( Node c = node .getLastChild (  )  ; c != null; c = c.getNext (  )  )  {^1876^^^^^1872^1882^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P7_Replace_Invocation]^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.newNumber (  )  )  {^1876^^^^^1872^1882^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P7_Replace_Invocation]^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c .getParent (  )   )  {^1876^^^^^1872^1882^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P8_Replace_Mix]^for  ( Node node = node.getFirstChild (  ) ; c != null; c = c.newNumber (  )  )  {^1876^^^^^1872^1882^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P13_Insert_Block]^if  ( traverseChildrenPred.apply ( node )  )  {     for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {         visitPostOrder ( c, vistor, traverseChildrenPred ) ;     } }^1876^^^^^1872^1882^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P13_Insert_Block]^if  ( traverseChildrenPred.apply ( node )  )  {     for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {         visitPreOrder ( c, vistor, traverseChildrenPred ) ;     } }^1876^^^^^1872^1882^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^visitPostOrder ( node, vistor, traverseChildrenPred ) ;^1877^^^^^1872^1882^visitPostOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^visitPostOrder (  vistor, traverseChildrenPred ) ;^1877^^^^^1872^1882^visitPostOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^visitPostOrder ( c,  traverseChildrenPred ) ;^1877^^^^^1872^1882^visitPostOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^visitPostOrder ( c, vistor ) ;^1877^^^^^1872^1882^visitPostOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^visitPostOrder ( vistor, c, traverseChildrenPred ) ;^1877^^^^^1872^1882^visitPostOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^visitPostOrder ( c, traverseChildrenPred, vistor ) ;^1877^^^^^1872^1882^visitPostOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P7_Replace_Invocation]^visitPreOrder ( c, vistor, traverseChildrenPred ) ;^1877^^^^^1872^1882^visitPostOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P14_Delete_Statement]^^1877^^^^^1872^1882^visitPostOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P11_Insert_Donor_Statement]^visitPreOrder ( c, vistor, traverseChildrenPred ) ;visitPostOrder ( c, vistor, traverseChildrenPred ) ;^1877^^^^^1872^1882^visitPostOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P12_Insert_Condition]^if  ( has ( c, pred, traverseChildrenPred )  )  { visitPostOrder ( c, vistor, traverseChildrenPred ) ; }^1877^^^^^1872^1882^visitPostOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P8_Replace_Mix]^for  ( Node c =  node.getFirstChild (  ) ; null !^1876^^^^^1872^1882^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^for  ( Node c = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^1876^^^^^1872^1882^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P14_Delete_Statement]^^1876^1877^1878^^^1872^1882^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  { visitPostOrder ( c, vistor, traverseChildrenPred ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^visitPostOrder ( traverseChildrenPred, vistor, c ) ;^1877^^^^^1872^1882^visitPostOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P8_Replace_Mix]^for  ( Node node = node.newNumber (  ) ; c != null; c = c.getNext (  )  )  {^1876^^^^^1872^1882^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P8_Replace_Mix]^for  ( Node c =  node.getFirstChild (  ) ; node !^1876^^^^^1872^1882^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^if  ( traverseChildrenPred.apply ( c )  )  {^1875^^^^^1872^1882^if  ( traverseChildrenPred.apply ( node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^if  ( node.apply ( traverseChildrenPred )  )  {^1875^^^^^1872^1882^if  ( traverseChildrenPred.apply ( node )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P13_Insert_Block]^if  ( ! ( traverseChildrenPred.apply ( node )  )  )  {     return false; }^1875^^^^^1872^1882^[Delete]^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P8_Replace_Mix]^for  ( Node c = c.newNumber (  ) ; c != null; c = c.getNext (  )  )  {^1876^^^^^1872^1882^for  ( Node c = node.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P8_Replace_Mix]^visitPreOrder ( node, vistor, traverseChildrenPred ) ;^1877^^^^^1872^1882^visitPostOrder ( c, vistor, traverseChildrenPred ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P5_Replace_Variable]^vistor.visit ( c ) ;^1881^^^^^1872^1882^vistor.visit ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P14_Delete_Statement]^^1881^^^^^1872^1882^vistor.visit ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P11_Insert_Donor_Statement]^parent.removeChild ( node ) ;vistor.visit ( node ) ;^1881^^^^^1872^1882^vistor.visit ( node ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] visitPostOrder [RETURN_TYPE] void   Node node Visitor vistor Node> traverseChildrenPred [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Visitor  vistor  Node  c  node  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Predicate  traverseChildrenPred  
[P2_Replace_Operator]^Preconditions.checkArgument ( n.getType (  )  <= Token.TRY ) ;^1888^^^^^1887^1890^Preconditions.checkArgument ( n.getType (  )  == Token.TRY ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasFinally [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P5_Replace_Variable]^Preconditions.checkArgument ( n.getType (  )  == Token.null ) ;^1888^^^^^1887^1890^Preconditions.checkArgument ( n.getType (  )  == Token.TRY ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasFinally [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P7_Replace_Invocation]^Preconditions .checkState (  )  ;^1888^^^^^1887^1890^Preconditions.checkArgument ( n.getType (  )  == Token.TRY ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasFinally [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P7_Replace_Invocation]^Preconditions.checkArgument ( n.newNumber (  )  == Token.TRY ) ;^1888^^^^^1887^1890^Preconditions.checkArgument ( n.getType (  )  == Token.TRY ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasFinally [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P8_Replace_Mix]^Preconditions.checkArgument ( n.newNumber (  )  == Token.null ) ;^1888^^^^^1887^1890^Preconditions.checkArgument ( n.getType (  )  == Token.TRY ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasFinally [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P14_Delete_Statement]^^1888^^^^^1887^1890^Preconditions.checkArgument ( n.getType (  )  == Token.TRY ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasFinally [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P2_Replace_Operator]^return n.getChildCount (  )  <= 3;^1889^^^^^1887^1890^return n.getChildCount (  )  == 3;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasFinally [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P3_Replace_Literal]^return n.getChildCount (  )  == 7;^1889^^^^^1887^1890^return n.getChildCount (  )  == 3;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasFinally [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  )  == 3;^1889^^^^^1887^1890^return n.getChildCount (  )  == 3;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasFinally [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P14_Delete_Statement]^^1889^^^^^1887^1890^return n.getChildCount (  )  == 3;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasFinally [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P2_Replace_Operator]^Preconditions.checkArgument ( n.getType (  )  <= Token.TRY ) ;^1897^^^^^1896^1899^Preconditions.checkArgument ( n.getType (  )  == Token.TRY ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCatchBlock [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P7_Replace_Invocation]^Preconditions.checkArgument ( n.newNumber (  )  == Token.TRY ) ;^1897^^^^^1896^1899^Preconditions.checkArgument ( n.getType (  )  == Token.TRY ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCatchBlock [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P7_Replace_Invocation]^Preconditions.checkArgument ( n .getString (  )   == Token.TRY ) ;^1897^^^^^1896^1899^Preconditions.checkArgument ( n.getType (  )  == Token.TRY ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCatchBlock [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P14_Delete_Statement]^^1897^^^^^1896^1899^Preconditions.checkArgument ( n.getType (  )  == Token.TRY ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCatchBlock [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P7_Replace_Invocation]^return n.getFirstChild (  ) .equals (  ) ;^1898^^^^^1896^1899^return n.getFirstChild (  ) .getNext (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCatchBlock [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P7_Replace_Invocation]^return n.getFirstChild (  )  .getParent (  )  ;^1898^^^^^1896^1899^return n.getFirstChild (  ) .getNext (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCatchBlock [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  ) .getNext (  ) ;^1898^^^^^1896^1899^return n.getFirstChild (  ) .getNext (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCatchBlock [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P14_Delete_Statement]^^1898^^^^^1896^1899^return n.getFirstChild (  ) .getNext (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getCatchBlock [RETURN_TYPE] Node   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P2_Replace_Operator]^Preconditions.checkArgument ( n.getType (  )  > Token.BLOCK ) ;^1906^^^^^1905^1908^Preconditions.checkArgument ( n.getType (  )  == Token.BLOCK ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasCatchHandler [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P7_Replace_Invocation]^Preconditions .checkState (  )  ;^1906^^^^^1905^1908^Preconditions.checkArgument ( n.getType (  )  == Token.BLOCK ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasCatchHandler [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P7_Replace_Invocation]^Preconditions.checkArgument ( n.newNumber (  )  == Token.BLOCK ) ;^1906^^^^^1905^1908^Preconditions.checkArgument ( n.getType (  )  == Token.BLOCK ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasCatchHandler [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P8_Replace_Mix]^Preconditions.checkArgument ( n.getType (  )  == Token.null ) ;^1906^^^^^1905^1908^Preconditions.checkArgument ( n.getType (  )  == Token.BLOCK ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasCatchHandler [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P14_Delete_Statement]^^1906^^^^^1905^1908^Preconditions.checkArgument ( n.getType (  )  == Token.BLOCK ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasCatchHandler [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P12_Insert_Condition]^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  { Preconditions.checkArgument ( n.getType (  )  == Token.BLOCK ) ; return n.hasChildren (  )  && n.getFirstChild (  ) .getType (  )  == Token.CATCH; }^1906^1907^^^^1905^1908^Preconditions.checkArgument ( n.getType (  )  == Token.BLOCK ) ; return n.hasChildren (  )  && n.getFirstChild (  ) .getType (  )  == Token.CATCH;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasCatchHandler [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P7_Replace_Invocation]^Preconditions.checkArgument ( n .getString (  )   == Token.BLOCK ) ;^1906^^^^^1905^1908^Preconditions.checkArgument ( n.getType (  )  == Token.BLOCK ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasCatchHandler [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P14_Delete_Statement]^^1906^1907^^^^1905^1908^Preconditions.checkArgument ( n.getType (  )  == Token.BLOCK ) ; return n.hasChildren (  )  && n.getFirstChild (  ) .getType (  )  == Token.CATCH;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasCatchHandler [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P2_Replace_Operator]^return n.hasChildren (  )  || n.getFirstChild (  ) .getType (  )  == Token.CATCH;^1907^^^^^1905^1908^return n.hasChildren (  )  && n.getFirstChild (  ) .getType (  )  == Token.CATCH;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasCatchHandler [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P2_Replace_Operator]^return n.hasChildren (  )  && n.getFirstChild (  ) .getType (  )  > Token.CATCH;^1907^^^^^1905^1908^return n.hasChildren (  )  && n.getFirstChild (  ) .getType (  )  == Token.CATCH;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasCatchHandler [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P7_Replace_Invocation]^return n.newNumber (  )  && n.getFirstChild (  ) .getType (  )  == Token.CATCH;^1907^^^^^1905^1908^return n.hasChildren (  )  && n.getFirstChild (  ) .getType (  )  == Token.CATCH;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasCatchHandler [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P7_Replace_Invocation]^return n .detachChildren (  )   && n.getFirstChild (  ) .getType (  )  == Token.CATCH;^1907^^^^^1905^1908^return n.hasChildren (  )  && n.getFirstChild (  ) .getType (  )  == Token.CATCH;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasCatchHandler [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P7_Replace_Invocation]^return n.hasChildren (  )  && n.getFirstChild (  ) .equals (  )  == Token.CATCH;^1907^^^^^1905^1908^return n.hasChildren (  )  && n.getFirstChild (  ) .getType (  )  == Token.CATCH;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasCatchHandler [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P7_Replace_Invocation]^return n.hasChildren (  )  && n.getFirstChild (  )  .getString (  )   == Token.CATCH;^1907^^^^^1905^1908^return n.hasChildren (  )  && n.getFirstChild (  ) .getType (  )  == Token.CATCH;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasCatchHandler [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P7_Replace_Invocation]^return n.hasChildren (  )  && n.newNumber (  ) .getType (  )  == Token.CATCH;^1907^^^^^1905^1908^return n.hasChildren (  )  && n.getFirstChild (  ) .getType (  )  == Token.CATCH;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasCatchHandler [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P12_Insert_Condition]^if  ( nameNode.getType (  )  == Token.GETPROP && nameNode.getFirstChild (  ) .getType (  )  == Token.NAME )  { return n.hasChildren (  )  && n.getFirstChild (  ) .getType (  )  == Token.CATCH; }^1907^^^^^1905^1908^return n.hasChildren (  )  && n.getFirstChild (  ) .getType (  )  == Token.CATCH;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasCatchHandler [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P12_Insert_Condition]^if  ( callNode.getFirstChild (  ) .getFirstChild (  ) .getType (  )  == Token.NAME )  { return n.hasChildren (  )  && n.getFirstChild (  ) .getType (  )  == Token.CATCH; }^1907^^^^^1905^1908^return n.hasChildren (  )  && n.getFirstChild (  ) .getType (  )  == Token.CATCH;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasCatchHandler [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P14_Delete_Statement]^^1907^^^^^1905^1908^return n.hasChildren (  )  && n.getFirstChild (  ) .getType (  )  == Token.CATCH;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] hasCatchHandler [RETURN_TYPE] boolean   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P2_Replace_Operator]^Preconditions.checkArgument ( fnNode.getType (  )  != Token.FUNCTION ) ;^1916^^^^^1914^1918^Preconditions.checkArgument ( fnNode.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFnParameters [RETURN_TYPE] Node   Node fnNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  fnNode  
[P7_Replace_Invocation]^Preconditions.checkArgument ( fnNode.newNumber (  )  == Token.FUNCTION ) ;^1916^^^^^1914^1918^Preconditions.checkArgument ( fnNode.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFnParameters [RETURN_TYPE] Node   Node fnNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  fnNode  
[P7_Replace_Invocation]^Preconditions.checkArgument ( fnNode .getString (  )   == Token.FUNCTION ) ;^1916^^^^^1914^1918^Preconditions.checkArgument ( fnNode.getType (  )  == Token.FUNCTION ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFnParameters [RETURN_TYPE] Node   Node fnNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  fnNode  
[P14_Delete_Statement]^^1916^1917^^^^1914^1918^Preconditions.checkArgument ( fnNode.getType (  )  == Token.FUNCTION ) ; return fnNode.getFirstChild (  ) .getNext (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFnParameters [RETURN_TYPE] Node   Node fnNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  fnNode  
[P7_Replace_Invocation]^return fnNode.getFirstChild (  ) .equals (  ) ;^1917^^^^^1914^1918^return fnNode.getFirstChild (  ) .getNext (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFnParameters [RETURN_TYPE] Node   Node fnNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  fnNode  
[P7_Replace_Invocation]^return fnNode.newNumber (  ) .getNext (  ) ;^1917^^^^^1914^1918^return fnNode.getFirstChild (  ) .getNext (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFnParameters [RETURN_TYPE] Node   Node fnNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  fnNode  
[P7_Replace_Invocation]^return fnNode.getFirstChild (  )  .getParent (  )  ;^1917^^^^^1914^1918^return fnNode.getFirstChild (  ) .getNext (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFnParameters [RETURN_TYPE] Node   Node fnNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  fnNode  
[P14_Delete_Statement]^^1917^^^^^1914^1918^return fnNode.getFirstChild (  ) .getNext (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFnParameters [RETURN_TYPE] Node   Node fnNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  fnNode  
[P7_Replace_Invocation]^return fnNode .getLastChild (  )  .getNext (  ) ;^1917^^^^^1914^1918^return fnNode.getFirstChild (  ) .getNext (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getFnParameters [RETURN_TYPE] Node   Node fnNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  fnNode  
[P7_Replace_Invocation]^return node.putBooleanProp ( Node.IS_CONSTANT_NAME ) ;^1938^^^^^1937^1939^return node.getBooleanProp ( Node.IS_CONSTANT_NAME ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isConstantName [RETURN_TYPE] boolean   Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  node  
[P12_Insert_Condition]^if  ( source.getBooleanProp ( Node.IS_CONSTANT_NAME )  )  { return node.getBooleanProp ( Node.IS_CONSTANT_NAME ) ; }^1938^^^^^1937^1939^return node.getBooleanProp ( Node.IS_CONSTANT_NAME ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isConstantName [RETURN_TYPE] boolean   Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  node  
[P14_Delete_Statement]^^1938^^^^^1937^1939^return node.getBooleanProp ( Node.IS_CONSTANT_NAME ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] isConstantName [RETURN_TYPE] boolean   Node node [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  node  
[P11_Insert_Donor_Statement]^Node ancestor = n;Node parent = null;^1947^^^^^1945^1959^Node parent = null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P11_Insert_Donor_Statement]^Node addingRoot = null;Node parent = null;^1947^^^^^1945^1959^Node parent = null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P11_Insert_Donor_Statement]^Node cur = qName;Node parent = null;^1947^^^^^1945^1959^Node parent = null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P2_Replace_Operator]^if  ( nameNode == null )  {^1948^^^^^1945^1959^if  ( nameNode != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P5_Replace_Variable]^if  ( parent != null )  {^1948^^^^^1945^1959^if  ( nameNode != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P8_Replace_Mix]^if  ( nameNode != true )  {^1948^^^^^1945^1959^if  ( nameNode != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P9_Replace_Statement]^if  ( res == null )  {^1948^^^^^1945^1959^if  ( nameNode != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P9_Replace_Statement]^if  ( value != null )  {^1948^^^^^1945^1959^if  ( nameNode != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P15_Unwrap_Block]^info = nameNode.getJSDocInfo(); parent = nameNode.getParent();^1948^1949^1950^1951^^1945^1959^if  ( nameNode != null )  { info = nameNode.getJSDocInfo (  ) ; parent = nameNode.getParent (  ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P16_Remove_Block]^^1948^1949^1950^1951^^1945^1959^if  ( nameNode != null )  { info = nameNode.getJSDocInfo (  ) ; parent = nameNode.getParent (  ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P5_Replace_Variable]^info = parent.getJSDocInfo (  ) ;^1949^^^^^1945^1959^info = nameNode.getJSDocInfo (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P7_Replace_Invocation]^info = nameNode.newNumber (  ) ;^1949^^^^^1945^1959^info = nameNode.getJSDocInfo (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P11_Insert_Donor_Statement]^info = parent.getJSDocInfo (  ) ;info = nameNode.getJSDocInfo (  ) ;^1949^^^^^1945^1959^info = nameNode.getJSDocInfo (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P11_Insert_Donor_Statement]^parent = nameNode.getParent (  ) ;info = nameNode.getJSDocInfo (  ) ;^1949^^^^^1945^1959^info = nameNode.getJSDocInfo (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P7_Replace_Invocation]^parent = nameNode.tokenToName (  ) ;^1950^^^^^1945^1959^parent = nameNode.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P7_Replace_Invocation]^parent = nameNode .getString (  )  ;^1950^^^^^1945^1959^parent = nameNode.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P8_Replace_Mix]^parent =  null.getParent (  ) ;^1950^^^^^1945^1959^parent = nameNode.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P11_Insert_Donor_Statement]^n = n.getParent (  ) ;parent = nameNode.getParent (  ) ;^1950^^^^^1945^1959^parent = nameNode.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P11_Insert_Donor_Statement]^info = nameNode.getJSDocInfo (  ) ;parent = nameNode.getParent (  ) ;^1950^^^^^1945^1959^parent = nameNode.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P7_Replace_Invocation]^info = nameNode .getString (  )  ;^1949^^^^^1945^1959^info = nameNode.getJSDocInfo (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P14_Delete_Statement]^^1949^1950^^^^1945^1959^info = nameNode.getJSDocInfo (  ) ; parent = nameNode.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P11_Insert_Donor_Statement]^String name = n.getString (  ) ;info = nameNode.getJSDocInfo (  ) ;^1949^^^^^1945^1959^info = nameNode.getJSDocInfo (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P11_Insert_Donor_Statement]^return parent.getString (  ) ;info = nameNode.getJSDocInfo (  ) ;^1949^^^^^1945^1959^info = nameNode.getJSDocInfo (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P11_Insert_Donor_Statement]^String name = nameNode.getString (  ) ;info = nameNode.getJSDocInfo (  ) ;^1949^^^^^1945^1959^info = nameNode.getJSDocInfo (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P5_Replace_Variable]^parent = parent.getParent (  ) ;^1950^^^^^1945^1959^parent = nameNode.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P14_Delete_Statement]^^1950^^^^^1945^1959^parent = nameNode.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P11_Insert_Donor_Statement]^return n.getNext (  ) ;parent = nameNode.getParent (  ) ;^1950^^^^^1945^1959^parent = nameNode.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P11_Insert_Donor_Statement]^Node parent = n.getParent (  ) ;parent = nameNode.getParent (  ) ;^1950^^^^^1945^1959^parent = nameNode.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P11_Insert_Donor_Statement]^String name = n.getString (  ) ;parent = nameNode.getParent (  ) ;^1950^^^^^1945^1959^parent = nameNode.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P11_Insert_Donor_Statement]^Node parent = block.getParent (  ) ;parent = nameNode.getParent (  ) ;^1950^^^^^1945^1959^parent = nameNode.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P11_Insert_Donor_Statement]^return parent.getString (  ) ;parent = nameNode.getParent (  ) ;^1950^^^^^1945^1959^parent = nameNode.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P11_Insert_Donor_Statement]^Node nameNode = callNode.getFirstChild (  ) ;parent = nameNode.getParent (  ) ;^1950^^^^^1945^1959^parent = nameNode.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P11_Insert_Donor_Statement]^return n.getString (  ) ;parent = nameNode.getParent (  ) ;^1950^^^^^1945^1959^parent = nameNode.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P11_Insert_Donor_Statement]^String propName = last.getString (  ) ;parent = nameNode.getParent (  ) ;^1950^^^^^1945^1959^parent = nameNode.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P11_Insert_Donor_Statement]^String name = nameNode.getString (  ) ;parent = nameNode.getParent (  ) ;^1950^^^^^1945^1959^parent = nameNode.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P14_Delete_Statement]^^1949^^^^^1945^1959^info = nameNode.getJSDocInfo (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P2_Replace_Operator]^if  ( info == null || parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^1953^1954^1955^^^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P2_Replace_Operator]^if  ( info != null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^1953^1954^1955^^^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P2_Replace_Operator]^if  ( info == null && parent == null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^1953^1954^1955^^^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P2_Replace_Operator]^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  && parent.getType (  )  == Token.FUNCTION )  )  {^1953^1954^1955^^^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P5_Replace_Variable]^if  ( info == null && nameNode != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^1953^1954^1955^^^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P6_Replace_Expression]^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  ) {^1953^1954^1955^^^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P6_Replace_Expression]^if  (  parent.getType (  )  == Token.FUNCTION )  )  {^1953^1954^1955^^^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P6_Replace_Expression]^if  ( (info == null && parent != null) )  {^1953^1954^1955^^^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P6_Replace_Expression]^if  ( info == null )  {^1953^1954^1955^^^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P6_Replace_Expression]^if  ( parent != null )  {^1953^1954^1955^^^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P6_Replace_Expression]^if  ( ((parent.getType() == VAR) && parent.hasOneChild() || parent.getType() == FUNCTION) )  {^1953^1954^1955^^^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P6_Replace_Expression]^if  ( (parent.getType() == VAR && parent.hasOneChild()) )  {^1953^1954^1955^^^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P6_Replace_Expression]^if  ( parent.getType (  )  == VAR )  {^1953^1954^1955^^^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P6_Replace_Expression]^if  ( parent.getType (  )  == FUNCTION )  {^1953^1954^1955^^^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P7_Replace_Invocation]^if  ( info == null && parent != null && (  ( parent.newNumber (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^1953^1954^1955^^^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P7_Replace_Invocation]^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.newNumber (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^1953^1954^1955^^^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P7_Replace_Invocation]^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent .removeChild ( nameNode , parent )   )  || parent.getType (  )  == Token.FUNCTION )  )  {^1953^1954^1955^^^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P15_Unwrap_Block]^info = parent.getJSDocInfo();^1953^1954^1955^1956^1957^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  { info = parent.getJSDocInfo (  ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P16_Remove_Block]^^1953^1954^1955^1956^1957^1945^1959^if  ( info == null && parent != null && (  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  { info = parent.getJSDocInfo (  ) ; }^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P5_Replace_Variable]^info = nameNode.getJSDocInfo (  ) ;^1956^^^^^1945^1959^info = parent.getJSDocInfo (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P7_Replace_Invocation]^info = parent.newNumber (  ) ;^1956^^^^^1945^1959^info = parent.getJSDocInfo (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P11_Insert_Donor_Statement]^n = n.getParent (  ) ;info = parent.getJSDocInfo (  ) ;^1956^^^^^1945^1959^info = parent.getJSDocInfo (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P11_Insert_Donor_Statement]^info = nameNode.getJSDocInfo (  ) ;info = parent.getJSDocInfo (  ) ;^1956^^^^^1945^1959^info = parent.getJSDocInfo (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P14_Delete_Statement]^^1956^^^^^1945^1959^info = parent.getJSDocInfo (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P11_Insert_Donor_Statement]^Node parent = n.getParent (  ) ;info = parent.getJSDocInfo (  ) ;^1956^^^^^1945^1959^info = parent.getJSDocInfo (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P11_Insert_Donor_Statement]^&& child == parent.getLastChild (  ) ;info = parent.getJSDocInfo (  ) ;^1956^^^^^1945^1959^info = parent.getJSDocInfo (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P11_Insert_Donor_Statement]^return parent.getString (  ) ;info = parent.getJSDocInfo (  ) ;^1956^^^^^1945^1959^info = parent.getJSDocInfo (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P5_Replace_Variable]^(  ( nameNode.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^1954^1955^^^^1945^1959^(  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P7_Replace_Invocation]^(  ( parent.newNumber (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^1954^1955^^^^1945^1959^(  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P14_Delete_Statement]^^1954^1955^1956^^^1945^1959^(  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  { info = parent.getJSDocInfo (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P7_Replace_Invocation]^(  ( parent.getType (  )  == Token.VAR && parent.newNumber (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^1954^1955^^^^1945^1959^(  ( parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  || parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P7_Replace_Invocation]^parent.newNumber (  )  == Token.FUNCTION )  )  {^1955^^^^^1945^1959^parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P7_Replace_Invocation]^parent .getString (  )   == Token.FUNCTION )  )  {^1955^^^^^1945^1959^parent.getType (  )  == Token.FUNCTION )  )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P14_Delete_Statement]^^1955^1956^^^^1945^1959^parent.getType (  )  == Token.FUNCTION )  )  { info = parent.getJSDocInfo (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P7_Replace_Invocation]^info = parent .getString (  )  ;^1956^^^^^1945^1959^info = parent.getJSDocInfo (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getInfoForNameNode [RETURN_TYPE] JSDocInfo   Node nameNode [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  boolean  Node  nameNode  parent  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  JSDocInfo  info  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  
[P1_Replace_Type]^char sourceName = null;^1966^^^^^1965^1972^String sourceName = null;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P2_Replace_Operator]^while  ( sourceName == null || n != null )  {^1967^^^^^1965^1972^while  ( sourceName == null && n != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P2_Replace_Operator]^while  ( sourceName != null && n != null )  {^1967^^^^^1965^1972^while  ( sourceName == null && n != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P2_Replace_Operator]^while  ( sourceName == null && n == null )  {^1967^^^^^1965^1972^while  ( sourceName == null && n != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P5_Replace_Variable]^while  ( originalName == null && n != null )  {^1967^^^^^1965^1972^while  ( sourceName == null && n != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P5_Replace_Variable]^while  ( n == sourceNameull && n != null )  {^1967^^^^^1965^1972^while  ( sourceName == null && n != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P8_Replace_Mix]^while  ( part == null && n != null )  {^1967^^^^^1965^1972^while  ( sourceName == null && n != null )  {^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P1_Replace_Type]^sourceName =  ( char )  n.getProp ( Node.SOURCENAME_PROP ) ;^1968^^^^^1965^1972^sourceName =  ( String )  n.getProp ( Node.SOURCENAME_PROP ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P7_Replace_Invocation]^sourceName =  ( String )  n.newNumber ( Node.SOURCENAME_PROP ) ;^1968^^^^^1965^1972^sourceName =  ( String )  n.getProp ( Node.SOURCENAME_PROP ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P8_Replace_Mix]^sourceName =   ( Strinullg )  null.getProp ( Node.SOURCENAME_PROP ) ;^1968^^^^^1965^1972^sourceName =  ( String )  n.getProp ( Node.SOURCENAME_PROP ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P7_Replace_Invocation]^n = n.tokenToName (  ) ;^1969^^^^^1965^1972^n = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P8_Replace_Mix]^n =  null.getParenullt (  ) ;^1969^^^^^1965^1972^n = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P11_Insert_Donor_Statement]^info = parent.getJSDocInfo (  ) ;n = n.getParent (  ) ;^1969^^^^^1965^1972^n = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P11_Insert_Donor_Statement]^parent = nameNode.getParent (  ) ;n = n.getParent (  ) ;^1969^^^^^1965^1972^n = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P14_Delete_Statement]^^1968^^^^^1965^1972^sourceName =  ( String )  n.getProp ( Node.SOURCENAME_PROP ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P14_Delete_Statement]^^1969^^^^^1965^1972^n = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P11_Insert_Donor_Statement]^return n.getNext (  ) ;n = n.getParent (  ) ;^1969^^^^^1965^1972^n = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P11_Insert_Donor_Statement]^Node parent = n.getParent (  ) ;n = n.getParent (  ) ;^1969^^^^^1965^1972^n = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P11_Insert_Donor_Statement]^String name = n.getString (  ) ;n = n.getParent (  ) ;^1969^^^^^1965^1972^n = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P11_Insert_Donor_Statement]^Node parent = block.getParent (  ) ;n = n.getParent (  ) ;^1969^^^^^1965^1972^n = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P11_Insert_Donor_Statement]^return parent.getString (  ) ;n = n.getParent (  ) ;^1969^^^^^1965^1972^n = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P11_Insert_Donor_Statement]^return n.getString (  ) ;n = n.getParent (  ) ;^1969^^^^^1965^1972^n = n.getParent (  ) ;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P5_Replace_Variable]^return qNameStr;^1971^^^^^1965^1972^return sourceName;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P8_Replace_Mix]^return propName;^1971^^^^^1965^1972^return sourceName;^[CLASS] NodeUtil VarCollector MatchNameNode MatchNodeType  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P8_Replace_Mix]^final Map<String, Node> vars  = null ;^1633^^^^^1628^1638^final Map<String, Node> vars = Maps.newLinkedHashMap (  ) ;^[CLASS] VarCollector  [METHOD] getSourceName [RETURN_TYPE] String   Node n [VARIABLES] Set  CONSTRUCTORS_WITHOUT_SIDE_EFFECTS  defines  emptySet  knownConstants  String  CONSTANT_MARKER  className  lhsString  methodName  name  namespaceName  originalName  part  propName  qNameStr  res  s  sourceName  boolean  Map  vars  int  charno  endPos  index  len  lineno  memberIndex  operator  prototypeIdx  startPos  total  type  Node  n  
[P2_Replace_Operator]^if  ( n.getType (  )  != Token.NAME )  {^1636^^^^^1635^1645^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P2_Replace_Operator]^if  ( n.getType (  )  > Token.NAME )  {^1636^^^^^1635^1645^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P6_Replace_Expression]^if  ( parent != null && parent.getType() == VAR )  {^1636^^^^^1635^1645^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P6_Replace_Expression]^if  ( parent != null )  {^1636^^^^^1635^1645^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P6_Replace_Expression]^if  ( parent.getType (  )  == VAR )  {^1636^^^^^1635^1645^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P8_Replace_Mix]^if  ( n .getParent (  )   == Token.NAME )  {^1636^^^^^1635^1645^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P13_Insert_Block]^if  (  ( parent != null )  &&  (  ( parent.getType (  )  )  ==  ( VAR )  )  )  {     String name = n.getString (  ) ;     if  ( ! ( vars.containsKey ( name )  )  )  {         vars.put ( name, n ) ;     } }^1636^^^^^1635^1645^[Delete]^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P2_Replace_Operator]^if  ( parent != null || parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P2_Replace_Operator]^if  ( parent == null && parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P2_Replace_Operator]^if  ( parent != null && parent.getType (  )  != Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P5_Replace_Variable]^if  ( n != null && parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P5_Replace_Variable]^if  ( parent != parentull && parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P5_Replace_Variable]^if  ( n != parentull && parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P6_Replace_Expression]^if  ( parent != null ) {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P6_Replace_Expression]^if  (  parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P6_Replace_Expression]^if  ( parent.getType (  )  == VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P8_Replace_Mix]^if  ( n != this ) {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P15_Unwrap_Block]^java.lang.String name = n.getString(); if (!(vars.containsKey(name))) {    vars.put(name, n);};^1638^1639^1640^1641^1642^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  { String name = n.getString (  ) ; if  ( !vars.containsKey ( name )  )  { vars.put ( name, n ) ; }^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P16_Remove_Block]^^1638^1639^1640^1641^1642^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  { String name = n.getString (  ) ; if  ( !vars.containsKey ( name )  )  { vars.put ( name, n ) ; }^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P13_Insert_Block]^if  (  ( n.getType (  )  )  ==  ( NAME )  )  {     Node parent = n.getParent (  ) ;     if  (  ( parent != null )  &&  (  ( parent.getType (  )  )  ==  ( VAR )  )  )  {         String name = n.getString (  ) ;         if  ( ! ( vars.containsKey ( name )  )  )  {             vars.put ( name, n ) ;         }     } }^1638^^^^^1635^1645^[Delete]^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P5_Replace_Variable]^if  ( !vars.containsKey ( parentame )  )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P7_Replace_Invocation]^if  ( !vars .put ( name , parent )   )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P15_Unwrap_Block]^vars.put(name, n);^1640^1641^1642^^^1635^1645^if  ( !vars.containsKey ( name )  )  { vars.put ( name, n ) ; }^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P16_Remove_Block]^^1640^1641^1642^^^1635^1645^if  ( !vars.containsKey ( name )  )  { vars.put ( name, n ) ; }^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P5_Replace_Variable]^vars.put ( parentame, n ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P5_Replace_Variable]^vars.put (  n ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P5_Replace_Variable]^vars.put ( name ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P5_Replace_Variable]^vars.put ( nameame, n ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P14_Delete_Statement]^^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P1_Replace_Type]^char name = n.getchar (  ) ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P5_Replace_Variable]^String parentame = n.getString (  ) ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P7_Replace_Invocation]^String name = n .getParent (  )  ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P11_Insert_Donor_Statement]^Node parent = n.getParent (  ) ;String name = n.getString (  ) ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P14_Delete_Statement]^^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P7_Replace_Invocation]^vars .containsKey ( name )  ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P5_Replace_Variable]^if  ( !vars.containsKey ( n )  )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P5_Replace_Variable]^if  ( !vars.containsKey ( nameame )  )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P7_Replace_Invocation]^Node parent = n .getString (  )  ;^1637^^^^^1635^1645^Node parent = n.getParent (  ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P11_Insert_Donor_Statement]^String name = n.getString (  ) ;Node parent = n.getParent (  ) ;^1637^^^^^1635^1645^Node parent = n.getParent (  ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P5_Replace_Variable]^Node parent = parent.getParent (  ) ;^1637^^^^^1635^1645^Node parent = n.getParent (  ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P8_Replace_Mix]^Node parent = parent .getString (  )  ;^1637^^^^^1635^1645^Node parent = n.getParent (  ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P14_Delete_Statement]^^1637^^^^^1635^1645^Node parent = n.getParent (  ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P8_Replace_Mix]^if  ( parent != true && parent.getType (  )  == Token.VAR )  {^1638^^^^^1635^1645^if  ( parent != null && parent.getType (  )  == Token.VAR )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P7_Replace_Invocation]^if  ( !vars .put ( name , n )   )  {^1640^^^^^1635^1645^if  ( !vars.containsKey ( name )  )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P5_Replace_Variable]^vars.put ( n, name ) ;^1641^^^^^1635^1645^vars.put ( name, n ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P8_Replace_Mix]^String parentame = n .getParent (  )  ;^1639^^^^^1635^1645^String name = n.getString (  ) ;^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P8_Replace_Mix]^if  ( parent.getType (  )  == Token.NAME )  {^1636^^^^^1635^1645^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] VarCollector  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P1_Replace_Type]^final char name;^1731^^^^^1726^1736^final String name;^[CLASS] MatchNameNode  [METHOD] visit [RETURN_TYPE] void   Node n [VARIABLES] String  name  boolean  Map  vars  Node  n  parent  
[P8_Replace_Mix]^this.name =  null;^1734^^^^^1733^1735^this.name = name;^[CLASS] MatchNameNode  [METHOD] <init> [RETURN_TYPE] String)   String name [VARIABLES] String  name  boolean  
[P2_Replace_Operator]^return n.getType (  )  == Token.NAME || n.getString (  ) .equals ( name ) ;^1738^1739^^^^1737^1740^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^[CLASS] MatchNameNode  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] String  name  Node  n  boolean  
[P2_Replace_Operator]^return n.getType (  )  <= Token.NAME && n.getString (  ) .equals ( name ) ;^1738^1739^^^^1737^1740^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^[CLASS] MatchNameNode  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] String  name  Node  n  boolean  
[P5_Replace_Variable]^return name.getType (  )  == Token.NAME && n.getString (  ) .equals ( n ) ;^1738^1739^^^^1737^1740^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^[CLASS] MatchNameNode  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] String  name  Node  n  boolean  
[P7_Replace_Invocation]^return n .getString (  )   == Token.NAME && n.getString (  ) .equals ( name ) ;^1738^1739^^^^1737^1740^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^[CLASS] MatchNameNode  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] String  name  Node  n  boolean  
[P7_Replace_Invocation]^return n.getType (  )  == Token.NAME && n .getType (  )  .equals ( name ) ;^1738^1739^^^^1737^1740^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^[CLASS] MatchNameNode  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] String  name  Node  n  boolean  
[P14_Delete_Statement]^^1738^1739^^^^1737^1740^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;^[CLASS] MatchNameNode  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] String  name  Node  n  boolean  
[P5_Replace_Variable]^&& name.getString (  ) .equals ( n ) ;^1739^^^^^1737^1740^&& n.getString (  ) .equals ( name ) ;^[CLASS] MatchNameNode  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] String  name  Node  n  boolean  
[P14_Delete_Statement]^^1739^^^^^1737^1740^&& n.getString (  ) .equals ( name ) ;^[CLASS] MatchNameNode  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] String  name  Node  n  boolean  
[P11_Insert_Donor_Statement]^return n.getType (  )  == Token.NAME && n.getString (  ) .equals ( name ) ;&& n.getString (  ) .equals ( name ) ;^1739^^^^^1737^1740^&& n.getString (  ) .equals ( name ) ;^[CLASS] MatchNameNode  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] String  name  Node  n  boolean  
[P8_Replace_Mix]^&& n .getType (  )  .equals ( name ) ;^1739^^^^^1737^1740^&& n.getString (  ) .equals ( name ) ;^[CLASS] MatchNameNode  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] String  name  Node  n  boolean  
[P1_Replace_Type]^final  long  type;^1747^^^^^1742^1752^final int type;^[CLASS] MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] String  name  Node  n  boolean  
[P8_Replace_Mix]^final  short  type;^1747^^^^^1742^1752^final int type;^[CLASS] MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] String  name  Node  n  boolean  
[P8_Replace_Mix]^this.type =  null;^1750^^^^^1749^1751^this.type = type;^[CLASS] MatchNodeType  [METHOD] <init> [RETURN_TYPE] NodeUtil$MatchNodeType(int)   int type [VARIABLES] int  type  boolean  
[P2_Replace_Operator]^return n.getType (  )  != type;^1754^^^^^1753^1755^return n.getType (  )  == type;^[CLASS] MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] int  type  Node  n  boolean  
[P5_Replace_Variable]^return type.getType (  )  == n;^1754^^^^^1753^1755^return n.getType (  )  == type;^[CLASS] MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] int  type  Node  n  boolean  
[P8_Replace_Mix]^return n.getType (  )   &&  type;^1754^^^^^1753^1755^return n.getType (  )  == type;^[CLASS] MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] int  type  Node  n  boolean  
[P14_Delete_Statement]^^1754^^^^^1753^1755^return n.getType (  )  == type;^[CLASS] MatchNodeType  [METHOD] apply [RETURN_TYPE] boolean   Node n [VARIABLES] int  type  Node  n  boolean  
