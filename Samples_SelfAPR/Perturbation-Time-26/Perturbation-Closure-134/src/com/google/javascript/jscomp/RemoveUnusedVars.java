[P8_Replace_Mix]^private static final Logger logger_  = null ;^47^48^^^^47^48^private static final Logger logger_ = Logger.getLogger ( RemoveUnusedVars.class.getName (  )  ) ;^[CLASS] RemoveUnusedVars   [VARIABLES] 
[P8_Replace_Mix]^private  AbstractCompiler compiler_;^50^^^^^45^55^private final AbstractCompiler compiler_;^[CLASS] RemoveUnusedVars   [VARIABLES] 
[P1_Replace_Type]^private static final  short  MAX_ITERATIONS = 20;^53^^^^^48^58^private static final int MAX_ITERATIONS = 20;^[CLASS] RemoveUnusedVars   [VARIABLES] 
[P3_Replace_Literal]^private static final int MAX_ITERATIONS = 17;^53^^^^^48^58^private static final int MAX_ITERATIONS = 20;^[CLASS] RemoveUnusedVars   [VARIABLES] 
[P8_Replace_Mix]^private static final int MAX_ITERATIONS ;^53^^^^^48^58^private static final int MAX_ITERATIONS = 20;^[CLASS] RemoveUnusedVars   [VARIABLES] 
[P1_Replace_Type]^private  long  numRemoved_ = 0;^56^^^^^51^61^private int numRemoved_ = 0;^[CLASS] RemoveUnusedVars   [VARIABLES] 
[P3_Replace_Literal]^private int numRemoved_ = -2;^56^^^^^51^61^private int numRemoved_ = 0;^[CLASS] RemoveUnusedVars   [VARIABLES] 
[P8_Replace_Mix]^private  long  numRemoved_ = 2;^56^^^^^51^61^private int numRemoved_ = 0;^[CLASS] RemoveUnusedVars   [VARIABLES] 
[P8_Replace_Mix]^private  boolean removeGlobals;^58^^^^^53^63^private final boolean removeGlobals;^[CLASS] RemoveUnusedVars   [VARIABLES] 
[P12_Insert_Condition]^if  ( !preserveAnonymousFunctionNames )  { private boolean preserveAnonymousFunctionNames; }^60^^^^^55^65^private boolean preserveAnonymousFunctionNames;^[CLASS] RemoveUnusedVars   [VARIABLES] 
[P8_Replace_Mix]^private final Set<Var> warnedVars_  = null ;^66^^^^^61^71^private final Set<Var> warnedVars_ = Sets.newHashSet (  ) ;^[CLASS] RemoveUnusedVars   [VARIABLES] 
[P8_Replace_Mix]^private  Set<Var> referenced = Sets.newHashSet (  ) ;^71^^^^^66^76^private final Set<Var> referenced = Sets.newHashSet (  ) ;^[CLASS] RemoveUnusedVars   [VARIABLES] 
[P5_Replace_Variable]^compiler_ = compiler_;^77^^^^^73^80^compiler_ = compiler;^[CLASS] RemoveUnusedVars  [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean,boolean)   AbstractCompiler compiler boolean removeGlobals boolean preserveAnonymousFunctionNames [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  numRemoved_  
[P8_Replace_Mix]^compiler_ =  null;^77^^^^^73^80^compiler_ = compiler;^[CLASS] RemoveUnusedVars  [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean,boolean)   AbstractCompiler compiler boolean removeGlobals boolean preserveAnonymousFunctionNames [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  numRemoved_  
[P5_Replace_Variable]^this.removeGlobals = preserveAnonymousFunctionNames;^78^^^^^73^80^this.removeGlobals = removeGlobals;^[CLASS] RemoveUnusedVars  [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean,boolean)   AbstractCompiler compiler boolean removeGlobals boolean preserveAnonymousFunctionNames [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  numRemoved_  
[P5_Replace_Variable]^this.preserveAnonymousFunctionNames = removeGlobals;^79^^^^^73^80^this.preserveAnonymousFunctionNames = preserveAnonymousFunctionNames;^[CLASS] RemoveUnusedVars  [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean,boolean)   AbstractCompiler compiler boolean removeGlobals boolean preserveAnonymousFunctionNames [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  numRemoved_  
[P8_Replace_Mix]^this.preserveAnonymousFunctionNames =  null;^79^^^^^73^80^this.preserveAnonymousFunctionNames = preserveAnonymousFunctionNames;^[CLASS] RemoveUnusedVars  [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean,boolean)   AbstractCompiler compiler boolean removeGlobals boolean preserveAnonymousFunctionNames [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  numRemoved_  
[P14_Delete_Statement]^^87^^^^^86^106^warnedVars_.clear (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P11_Insert_Donor_Statement]^warnedVars_.add ( var ) ;warnedVars_.clear (  ) ;^87^^^^^86^106^warnedVars_.clear (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P11_Insert_Donor_Statement]^referenced.clear (  ) ;warnedVars_.clear (  ) ;^87^^^^^86^106^warnedVars_.clear (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P1_Replace_Type]^short  i = 0;^91^^^^^86^106^int i = 0;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P3_Replace_Literal]^int i = -4;^91^^^^^86^106^int i = 0;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P2_Replace_Operator]^if  ( numRemoved_ < 0 )  {^97^^^^^86^106^if  ( numRemoved_ > 0 )  {^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P3_Replace_Literal]^if  ( numRemoved_ > 1 )  {^97^^^^^86^106^if  ( numRemoved_ > 0 )  {^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P5_Replace_Variable]^if  ( i > 0 )  {^97^^^^^86^106^if  ( numRemoved_ > 0 )  {^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P6_Replace_Expression]^if  (  ( "RemoveUnusedVars ( " + i )  + " ) : removed " + numRemoved_ )  {^97^^^^^86^106^if  ( numRemoved_ > 0 )  {^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P6_Replace_Expression]^if  ( "RemoveUnusedVars ( " + i + " ) : removed " )  {^97^^^^^86^106^if  ( numRemoved_ > 0 )  {^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P6_Replace_Expression]^if  ( "RemoveUnusedVars ( " + i )  {^97^^^^^86^106^if  ( numRemoved_ > 0 )  {^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P8_Replace_Mix]^if  ( numRemoved_ > 0 - 4 )  {^97^^^^^86^106^if  ( numRemoved_ > 0 )  {^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P15_Unwrap_Block]^compiler_.reportCodeChange(); com.google.javascript.jscomp.RemoveUnusedVars.logger_.fine(((("RemoveUnusedVars(" + i) + "): removed ") + (numRemoved_)));^97^98^99^100^^86^106^if  ( numRemoved_ > 0 )  { compiler_.reportCodeChange (  ) ; logger_.fine ( "RemoveUnusedVars ( " + i + " ) : removed " + numRemoved_ ) ; }^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P16_Remove_Block]^^97^98^99^100^^86^106^if  ( numRemoved_ > 0 )  { compiler_.reportCodeChange (  ) ; logger_.fine ( "RemoveUnusedVars ( " + i + " ) : removed " + numRemoved_ ) ; }^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P7_Replace_Invocation]^compiler_.addToDebugLog (  ) ;^98^^^^^86^106^compiler_.reportCodeChange (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P14_Delete_Statement]^^98^^^^^86^106^compiler_.reportCodeChange (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P2_Replace_Operator]^logger_.fine ( "RemoveUnusedVars ( "  <=  i  <=  " ) : removed " + numRemoved_ ) ;^99^^^^^86^106^logger_.fine ( "RemoveUnusedVars ( " + i + " ) : removed " + numRemoved_ ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P2_Replace_Operator]^logger_.fine ( "RemoveUnusedVars ( "  <<  i + " ) : removed " + numRemoved_ ) ;^99^^^^^86^106^logger_.fine ( "RemoveUnusedVars ( " + i + " ) : removed " + numRemoved_ ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P5_Replace_Variable]^logger_.fine ( "RemoveUnusedVars ( " + MAX_ITERATIONS + " ) : removed " + numRemoved_ ) ;^99^^^^^86^106^logger_.fine ( "RemoveUnusedVars ( " + i + " ) : removed " + numRemoved_ ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P5_Replace_Variable]^logger_.fine ( "RemoveUnusedVars ( " + i + " ) : removed " + MAX_ITERATIONS ) ;^99^^^^^86^106^logger_.fine ( "RemoveUnusedVars ( " + i + " ) : removed " + numRemoved_ ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P5_Replace_Variable]^logger_.fine ( "RemoveUnusedVars ( " + numRemoved_ + " ) : removed " + i ) ;^99^^^^^86^106^logger_.fine ( "RemoveUnusedVars ( " + i + " ) : removed " + numRemoved_ ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P8_Replace_Mix]^logger_.fine ( "RemoveUnusedVars ( " + numRemoved_ + " ) : removed " + numRemoved_ ) ;^99^^^^^86^106^logger_.fine ( "RemoveUnusedVars ( " + i + " ) : removed " + numRemoved_ ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P14_Delete_Statement]^^99^^^^^86^106^logger_.fine ( "RemoveUnusedVars ( " + i + " ) : removed " + numRemoved_ ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P3_Replace_Literal]^numRemoved_ = 8;^93^^^^^86^106^numRemoved_ = 0;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P8_Replace_Mix]^numRemoved_ = 3;^93^^^^^86^106^numRemoved_ = 0;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P12_Insert_Condition]^if  ( numRemoved_ > 0 )  { numRemoved_ = 0; }^93^^^^^86^106^numRemoved_ = 0;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P14_Delete_Statement]^^94^95^^^^86^106^referenced.clear (  ) ; traverseAndRemoveUnusedReferences ( root ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P11_Insert_Donor_Statement]^referenced.add ( var ) ;referenced.clear (  ) ;^94^^^^^86^106^referenced.clear (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P11_Insert_Donor_Statement]^warnedVars_.clear (  ) ;referenced.clear (  ) ;^94^^^^^86^106^referenced.clear (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P11_Insert_Donor_Statement]^markReferencedVar ( var ) ;referenced.clear (  ) ;^94^^^^^86^106^referenced.clear (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P5_Replace_Variable]^traverseAndRemoveUnusedReferences ( externs ) ;^95^^^^^86^106^traverseAndRemoveUnusedReferences ( root ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P7_Replace_Invocation]^removeUnreferencedVars ( root ) ;^95^^^^^86^106^traverseAndRemoveUnusedReferences ( root ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P8_Replace_Mix]^removeUnreferencedVars ( externs ) ;^95^^^^^86^106^traverseAndRemoveUnusedReferences ( root ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P14_Delete_Statement]^^95^^^^^86^106^traverseAndRemoveUnusedReferences ( root ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P2_Replace_Operator]^logger_.fine ( "RemoveUnusedVars ( "  >=  i  >=  " ) : removed " + numRemoved_ ) ;^99^^^^^86^106^logger_.fine ( "RemoveUnusedVars ( " + i + " ) : removed " + numRemoved_ ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P2_Replace_Operator]^logger_.fine ( "RemoveUnusedVars ( "  ^  i + " ) : removed " + numRemoved_ ) ;^99^^^^^86^106^logger_.fine ( "RemoveUnusedVars ( " + i + " ) : removed " + numRemoved_ ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P2_Replace_Operator]^if  ( i > MAX_ITERATIONS )  {^103^^^^^86^106^if  ( i == MAX_ITERATIONS )  {^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P5_Replace_Variable]^if  ( numRemoved_ == MAX_ITERATIONS )  {^103^^^^^86^106^if  ( i == MAX_ITERATIONS )  {^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P5_Replace_Variable]^if  ( i == numRemoved_ )  {^103^^^^^86^106^if  ( i == MAX_ITERATIONS )  {^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P5_Replace_Variable]^if  ( MAX_ITERATIONS == i )  {^103^^^^^86^106^if  ( i == MAX_ITERATIONS )  {^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P15_Unwrap_Block]^com.google.javascript.jscomp.RemoveUnusedVars.logger_.warning("Reached max allowable iterations. Stopping.");^103^104^105^^^86^106^if  ( i == MAX_ITERATIONS )  { logger_.warning ( "Reached max allowable iterations. Stopping." ) ; }^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P16_Remove_Block]^^103^104^105^^^86^106^if  ( i == MAX_ITERATIONS )  { logger_.warning ( "Reached max allowable iterations. Stopping." ) ; }^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P3_Replace_Literal]^logger_.warning ( "Reached max allowable iteratieached max allowable iterations. Stopping." ) ;^104^^^^^86^106^logger_.warning ( "Reached max allowable iterations. Stopping." ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P7_Replace_Invocation]^logger_.fine ( "Reached max allowable iterations. Stopping." ) ;^104^^^^^86^106^logger_.warning ( "Reached max allowable iterations. Stopping." ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P14_Delete_Statement]^^104^^^^^86^106^logger_.warning ( "Reached max allowable iterations. Stopping." ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P13_Insert_Block]^if  ( i ==  ( MAX_ITERATIONS )  )  {     warning ( "Reached max allowable iterations. Stopping." ) ; }^104^^^^^86^106^[Delete]^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P3_Replace_Literal]^logger_.warning ( "d max aeached max allowable iterations. Stopping." ) ;^104^^^^^86^106^logger_.warning ( "Reached max allowable iterations. Stopping." ) ;^[CLASS] RemoveUnusedVars  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  Node  externs  root  
[P5_Replace_Variable]^Scope scope = new SyntacticScopeCreator ( compiler ) .createScope ( root, null ) ;^112^^^^^111^118^Scope scope = new SyntacticScopeCreator ( compiler_ ) .createScope ( root, null ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[P5_Replace_Variable]^Scope scope = new SyntacticScopeCreator ( compiler_ ) .createScope (  null ) ;^112^^^^^111^118^Scope scope = new SyntacticScopeCreator ( compiler_ ) .createScope ( root, null ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[P5_Replace_Variable]^Scope scope = new SyntacticScopeCreator ( root ) .createScope ( compiler_, null ) ;^112^^^^^111^118^Scope scope = new SyntacticScopeCreator ( compiler_ ) .createScope ( root, null ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[P11_Insert_Donor_Statement]^Scope fnScope = new SyntacticScopeCreator ( compiler_ ) .createScope ( n, scope ) ;Scope scope = new SyntacticScopeCreator ( compiler_ ) .createScope ( root, null ) ;^112^^^^^111^118^Scope scope = new SyntacticScopeCreator ( compiler_ ) .createScope ( root, null ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[P14_Delete_Statement]^^112^^^^^111^118^Scope scope = new SyntacticScopeCreator ( compiler_ ) .createScope ( root, null ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[P5_Replace_Variable]^traverseNode (  null, scope ) ;^113^^^^^111^118^traverseNode ( root, null, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[P5_Replace_Variable]^traverseNode ( root, null ) ;^113^^^^^111^118^traverseNode ( root, null, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[P5_Replace_Variable]^traverseNode ( scope, null, root ) ;^113^^^^^111^118^traverseNode ( root, null, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[P7_Replace_Invocation]^RemoveUnusedVars ( root, null, scope ) ;^113^^^^^111^118^traverseNode ( root, null, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[P14_Delete_Statement]^^113^^^^^111^118^traverseNode ( root, null, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[P11_Insert_Donor_Statement]^traverseFunction ( n, scope ) ;traverseNode ( root, null, scope ) ;^113^^^^^111^118^traverseNode ( root, null, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[P11_Insert_Donor_Statement]^traverseNode ( c, n, scope ) ;traverseNode ( root, null, scope ) ;^113^^^^^111^118^traverseNode ( root, null, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[P11_Insert_Donor_Statement]^traverseFunction ( parent, var.scope ) ;traverseNode ( root, null, scope ) ;^113^^^^^111^118^traverseNode ( root, null, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[P11_Insert_Donor_Statement]^traverseNode ( body, n, fnScope ) ;traverseNode ( root, null, scope ) ;^113^^^^^111^118^traverseNode ( root, null, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[P5_Replace_Variable]^if  ( preserveAnonymousFunctionNames )  {^115^^^^^111^118^if  ( removeGlobals )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[P15_Unwrap_Block]^removeUnreferencedVars(scope);^115^116^117^^^111^118^if  ( removeGlobals )  { removeUnreferencedVars ( scope ) ; }^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[P16_Remove_Block]^^115^116^117^^^111^118^if  ( removeGlobals )  { removeUnreferencedVars ( scope ) ; }^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[P13_Insert_Block]^if  ( var != null )  {     markReferencedVar ( var ) ; }^115^^^^^111^118^[Delete]^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[P7_Replace_Invocation]^markReferencedVar ( scope ) ;^116^^^^^111^118^removeUnreferencedVars ( scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[P14_Delete_Statement]^^116^^^^^111^118^removeUnreferencedVars ( scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[P11_Insert_Donor_Statement]^removeUnreferencedFunctionArgs ( n, fnScope ) ;removeUnreferencedVars ( scope ) ;^116^^^^^111^118^removeUnreferencedVars ( scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[P11_Insert_Donor_Statement]^referenced.add ( var ) ;removeUnreferencedVars ( scope ) ;^116^^^^^111^118^removeUnreferencedVars ( scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[P11_Insert_Donor_Statement]^removeUnreferencedVars ( fnScope ) ;removeUnreferencedVars ( scope ) ;^116^^^^^111^118^removeUnreferencedVars ( scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[P11_Insert_Donor_Statement]^markReferencedVar ( var ) ;removeUnreferencedVars ( scope ) ;^116^^^^^111^118^removeUnreferencedVars ( scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[P13_Insert_Block]^if  ( removeGlobals )  {     removeUnreferencedVars ( scope ) ; }^116^^^^^111^118^[Delete]^[CLASS] RemoveUnusedVars  [METHOD] traverseAndRemoveUnusedReferences [RETURN_TYPE] void   Node root [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Node  root  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  
[P1_Replace_Type]^short  type = n.getType (  ) ;^126^^^^^111^141^int type = n.getType (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^int type = parent.getType (  ) ;^126^^^^^111^141^int type = n.getType (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^int type = n.removeChild (  ) ;^126^^^^^111^141^int type = n.getType (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^final Node body = n.getLastChild (  ) ;int type = n.getType (  ) ;^126^^^^^111^141^int type = n.getType (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^126^^^^^111^141^int type = n.getType (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^if  ( NodeUtil.isFunctionAnonymous ( n )  && compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^139^140^141^^^124^154^if  ( NodeUtil.isFunctionAnonymous ( n )  || compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^if  ( NodeUtil.isFunctionAnonymous ( parent )  || compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^139^140^141^^^124^154^if  ( NodeUtil.isFunctionAnonymous ( n )  || compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^if  ( NodeUtil.isFunctionAnonymous ( n )  || compiler.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^139^140^141^^^124^154^if  ( NodeUtil.isFunctionAnonymous ( n )  || compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^if  ( NodeUtil.isFunctionAnonymous ( compiler_ )  || n.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^139^140^141^^^124^154^if  ( NodeUtil.isFunctionAnonymous ( n )  || compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( NodeUtil.isFunctionAnonymous ( n )  ) {^139^140^141^^^124^154^if  ( NodeUtil.isFunctionAnonymous ( n )  || compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  (  compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^139^140^141^^^124^154^if  ( NodeUtil.isFunctionAnonymous ( n )  || compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^if  ( NodeUtil .mayHaveSideEffects (  )   || compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^139^140^141^^^124^154^if  ( NodeUtil.isFunctionAnonymous ( n )  || compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^if  ( NodeUtil.isFunctionAnonymous ( n )  || compiler_.getCodingConvention (  ) .setString ( n.getFirstChild (  ) .getString (  )  )  )  {^139^140^141^^^124^154^if  ( NodeUtil.isFunctionAnonymous ( n )  || compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^if  ( NodeUtil.isFunctionAnonymous ( n )  || compiler_.reportCodeChange (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^139^140^141^^^124^154^if  ( NodeUtil.isFunctionAnonymous ( n )  || compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^if  ( NodeUtil.isFunctionAnonymous ( n )  || compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .setString (  )  )  )  {^139^140^141^^^124^154^if  ( NodeUtil.isFunctionAnonymous ( n )  || compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^if  ( NodeUtil.isFunctionAnonymous ( n )  || compiler_.getCodingConvention (  ) .isExported ( n.removeChild (  ) .getString (  )  )  )  {^139^140^141^^^124^154^if  ( NodeUtil.isFunctionAnonymous ( n )  || compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^if  ( NodeUtil.isFunctionAnonymous ( n )  || compiler_.getCodingConvention (  ) .isExported ( n .getLastChild (  )  .getString (  )  )  )  {^139^140^141^^^124^154^if  ( NodeUtil.isFunctionAnonymous ( n )  || compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P15_Unwrap_Block]^traverseFunction(n, scope);^139^140^141^142^143^124^154^if  ( NodeUtil.isFunctionAnonymous ( n )  || compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  { traverseFunction ( n, scope ) ; }^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P16_Remove_Block]^^139^140^141^142^143^124^154^if  ( NodeUtil.isFunctionAnonymous ( n )  || compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  { traverseFunction ( n, scope ) ; }^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^traverseFunction ( parent, scope ) ;^142^^^^^139^143^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^traverseFunction (  scope ) ;^142^^^^^139^143^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^traverseFunction ( n ) ;^142^^^^^139^143^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^traverseFunction ( scope, n ) ;^142^^^^^139^143^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^removeUnreferencedFunctionArgs ( n, scope ) ;^142^^^^^139^143^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^142^^^^^139^143^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^removeUnreferencedFunctionArgs ( n, fnScope ) ;traverseFunction ( n, scope ) ;^142^^^^^139^143^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^traverseNode ( c, n, scope ) ;traverseFunction ( n, scope ) ;^142^^^^^139^143^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^traverseFunction ( parent, var.scope ) ;traverseFunction ( n, scope ) ;^142^^^^^139^143^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^traverseNode ( body, n, fnScope ) ;traverseFunction ( n, scope ) ;^142^^^^^139^143^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^traverseNode ( root, null, scope ) ;traverseFunction ( n, scope ) ;^142^^^^^139^143^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^if  ( parent.getType (  )  == Token.VAR )  {^147^^^^^132^162^if  ( parent.getType (  )  != Token.VAR )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^if  ( parent.getType (  )  <= Token.VAR )  {^147^^^^^132^162^if  ( parent.getType (  )  != Token.VAR )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^if  ( n.getType (  )  != Token.VAR )  {^147^^^^^132^162^if  ( parent.getType (  )  != Token.VAR )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^if  ( parent.getType (  )  != Token.2 )  {^147^^^^^132^162^if  ( parent.getType (  )  != Token.VAR )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( var != null )  {^147^^^^^132^162^if  ( parent.getType (  )  != Token.VAR )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^if  ( parent.removeChild (  )  != Token.VAR )  {^147^^^^^132^162^if  ( parent.getType (  )  != Token.VAR )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^if  ( parent .getString (  )   != Token.VAR )  {^147^^^^^132^162^if  ( parent.getType (  )  != Token.VAR )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P15_Unwrap_Block]^com.google.javascript.jscomp.Scope.Var var = scope.getVar(n.getString()); if (var != null) {    markReferencedVar(var);};^147^148^149^150^151^132^162^if  ( parent.getType (  )  != Token.VAR )  {  Var var = scope.getVar ( n.getString (  )  ) ; if  ( var != null )  { markReferencedVar ( var ) ; }^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P16_Remove_Block]^^147^148^149^150^151^132^162^if  ( parent.getType (  )  != Token.VAR )  {  Var var = scope.getVar ( n.getString (  )  ) ; if  ( var != null )  { markReferencedVar ( var ) ; }^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^if  ( var == null )  {^150^^^^^135^165^if  ( var != null )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( var != false )  {^150^^^^^135^165^if  ( var != null )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P15_Unwrap_Block]^markReferencedVar(var);^150^151^152^^^135^165^if  ( var != null )  { markReferencedVar ( var ) ; }^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P16_Remove_Block]^^150^151^152^^^135^165^if  ( var != null )  { markReferencedVar ( var ) ; }^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P13_Insert_Block]^if  ( removeGlobals )  {     removeUnreferencedVars ( scope ) ; }^150^^^^^135^165^[Delete]^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^removeUnreferencedVars ( var ) ;^151^^^^^136^166^markReferencedVar ( var ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^151^^^^^136^166^markReferencedVar ( var ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^referenced.add ( var ) ;markReferencedVar ( var ) ;^151^^^^^136^166^markReferencedVar ( var ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^warnedVars_.add ( var ) ;markReferencedVar ( var ) ;^151^^^^^136^166^markReferencedVar ( var ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^referenced.clear (  ) ;markReferencedVar ( var ) ;^151^^^^^136^166^markReferencedVar ( var ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^removeUnreferencedVars ( fnScope ) ;markReferencedVar ( var ) ;^151^^^^^136^166^markReferencedVar ( var ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^fnScope.undeclare ( var ) ;markReferencedVar ( var ) ;^151^^^^^136^166^markReferencedVar ( var ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^removeUnreferencedVars ( scope ) ;markReferencedVar ( var ) ;^151^^^^^136^166^markReferencedVar ( var ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P12_Insert_Condition]^if  ( referenced.contains ( var )  )  { markReferencedVar ( var ) ; }^151^^^^^136^166^markReferencedVar ( var ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^Var var = scope.getVar ( parent.getString (  )  ) ;^149^^^^^134^164^Var var = scope.getVar ( n.getString (  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^Var var = n.getVar ( scope.getString (  )  ) ;^149^^^^^134^164^Var var = scope.getVar ( n.getString (  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^Var var = scope .getVars (  )  ;^149^^^^^134^164^Var var = scope.getVar ( n.getString (  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^Var var = scope.getVar ( n.removeChild (  )  ) ;^149^^^^^134^164^Var var = scope.getVar ( n.getString (  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^Var var = fnScope.getVar ( lastArg.getString (  )  ) ;Var var = scope.getVar ( n.getString (  )  ) ;^149^^^^^134^164^Var var = scope.getVar ( n.getString (  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^149^^^^^134^164^Var var = scope.getVar ( n.getString (  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( var != true )  {^150^^^^^135^165^if  ( var != null )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^Var var = scope.getVar ( parent.removeChild (  )  ) ;^149^^^^^134^164^Var var = scope.getVar ( n.getString (  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^compiler_.getCodingConvention (  ) .isExported ( parent.getFirstChild (  ) .getString (  )  )  )  {^140^141^^^^125^155^compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^compiler_.getCodingConvention (  ) .setString ( n.getFirstChild (  ) .getString (  )  )  )  {^140^141^^^^125^155^compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^compiler_.reportCodeChange (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^140^141^^^^125^155^compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .setString (  )  )  )  {^140^141^^^^125^155^compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^compiler_.getCodingConvention (  ) .isExported ( n.removeChild (  ) .getString (  )  )  )  {^140^141^^^^125^155^compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^compiler_.getCodingConvention (  ) .isExported ( n .getLastChild (  )  .getString (  )  )  )  {^140^141^^^^125^155^compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^140^141^142^^^125^155^compiler_.getCodingConvention (  ) .isExported ( n.getFirstChild (  ) .getString (  )  )  )  { traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^n.getFirstChild (  ) .setString (  )  )  )  {^141^^^^^126^156^n.getFirstChild (  ) .getString (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^n.removeChild (  ) .getString (  )  )  )  {^141^^^^^126^156^n.getFirstChild (  ) .getString (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^n .getLastChild (  )  .getString (  )  )  )  {^141^^^^^126^156^n.getFirstChild (  ) .getString (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^141^142^^^^126^156^n.getFirstChild (  ) .getString (  )  )  )  { traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^traverseFunction ( parent, scope ) ;^142^^^^^127^157^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^traverseFunction (  scope ) ;^142^^^^^127^157^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^traverseFunction ( n ) ;^142^^^^^127^157^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^traverseFunction ( scope, n ) ;^142^^^^^127^157^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^removeUnreferencedFunctionArgs ( n, scope ) ;^142^^^^^127^157^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^142^^^^^127^157^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^removeUnreferencedFunctionArgs ( n, fnScope ) ;traverseFunction ( n, scope ) ;^142^^^^^127^157^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^traverseNode ( c, n, scope ) ;traverseFunction ( n, scope ) ;^142^^^^^127^157^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^traverseFunction ( parent, var.scope ) ;traverseFunction ( n, scope ) ;^142^^^^^127^157^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^traverseNode ( body, n, fnScope ) ;traverseFunction ( n, scope ) ;^142^^^^^127^157^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^traverseNode ( root, null, scope ) ;traverseFunction ( n, scope ) ;^142^^^^^127^157^traverseFunction ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( n.removeChild (  )  != Token.VAR )  {^147^^^^^132^162^if  ( parent.getType (  )  != Token.VAR )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^for  ( Node c = n.getFirstChild (  ) ; c == null; c = c.getNext (  )  )  {^157^^^^^142^172^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^for  ( Node c = parent.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^157^^^^^142^172^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^for  ( Node parent = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^157^^^^^142^172^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^for  ( Node n = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^157^^^^^142^172^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^for  ( Node c = n.removeChild (  ) ; c != null; c = c.getNext (  )  )  {^157^^^^^142^172^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^for  ( Node c = n .getLastChild (  )  ; c != null; c = c.getNext (  )  )  {^157^^^^^142^172^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.removeChild (  )  )  {^157^^^^^142^172^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c .getParent (  )   )  {^157^^^^^142^172^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^traverseNode ( parent, n, scope ) ;^158^^^^^143^173^traverseNode ( c, n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^traverseNode ( c, parent, scope ) ;^158^^^^^143^173^traverseNode ( c, n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^traverseNode (  n, scope ) ;^158^^^^^143^173^traverseNode ( c, n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^traverseNode ( c,  scope ) ;^158^^^^^143^173^traverseNode ( c, n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^traverseNode ( c, n ) ;^158^^^^^143^173^traverseNode ( c, n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^traverseNode ( n, c, scope ) ;^158^^^^^143^173^traverseNode ( c, n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^traverseNode ( scope, n, c ) ;^158^^^^^143^173^traverseNode ( c, n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^RemoveUnusedVars ( c, n, scope ) ;^158^^^^^143^173^traverseNode ( c, n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^158^^^^^143^173^traverseNode ( c, n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^traverseFunction ( n, scope ) ;traverseNode ( c, n, scope ) ;^158^^^^^143^173^traverseNode ( c, n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^traverseFunction ( parent, var.scope ) ;traverseNode ( c, n, scope ) ;^158^^^^^143^173^traverseNode ( c, n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^traverseNode ( body, n, fnScope ) ;traverseNode ( c, n, scope ) ;^158^^^^^143^173^traverseNode ( c, n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^traverseNode ( root, null, scope ) ;traverseNode ( c, n, scope ) ;^158^^^^^143^173^traverseNode ( c, n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^for  ( Node c =  n.getFirstChild (  ) ; parent !^157^^^^^142^172^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^for  ( Node c = parent.removeChild (  ) ; c != null; c = c.getNext (  )  )  {^157^^^^^142^172^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^157^158^159^^^142^172^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  { traverseNode ( c, n, scope ) ; }^[CLASS] RemoveUnusedVars  [METHOD] traverseNode [RETURN_TYPE] void   Node n Node parent Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  Node  c  n  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^Preconditions.checkState ( n.getChildCount (  )  <= 3 ) ;^171^^^^^170^183^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^Preconditions.checkState ( n.getChildCount (  )  == 8 ) ;^171^^^^^170^183^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^Preconditions.checkState ( body.getChildCount (  )  == 3 ) ;^171^^^^^170^183^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^Preconditions.checkState ( n.removeChild (  )  == 3 ) ;^171^^^^^170^183^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^171^^^^^170^183^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^Preconditions.checkState ( body.removeChild (  )  == 3 ) ;^171^^^^^170^183^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^171^172^^^^170^183^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ; Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P12_Insert_Condition]^if  ( toRemove.getChildCount (  )  == 1 )  { Preconditions.checkState ( n.getChildCount (  )  == 3 ) ; }^171^^^^^170^183^Preconditions.checkState ( n.getChildCount (  )  == 3 ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^Preconditions.checkState ( n.getType (  )  != Token.FUNCTION ) ;^172^^^^^170^183^Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^Preconditions.checkState ( body.getType (  )  == Token.FUNCTION ) ;^172^^^^^170^183^Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^Preconditions.checkState ( n.removeChild (  )  == Token.FUNCTION ) ;^172^^^^^170^183^Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^Preconditions.checkState ( n .getString (  )   == Token.FUNCTION ) ;^172^^^^^170^183^Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^172^^^^^170^183^Preconditions.checkState ( n.getType (  )  == Token.FUNCTION ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^final Node body = n.removeChild (  ) ;^174^^^^^170^183^final Node body = n.getLastChild (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^int type = n.getType (  ) ;final Node body = n.getLastChild (  ) ;^174^^^^^170^183^final Node body = n.getLastChild (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^final Node body = body.getLastChild (  ) ;^174^^^^^170^183^final Node body = n.getLastChild (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^final Node body = n .getFirstChild (  )  ;^174^^^^^170^183^final Node body = n.getLastChild (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^174^^^^^170^183^final Node body = n.getLastChild (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^Preconditions.checkState ( body.getNext (  )  == null || body.getType (  )  == Token.BLOCK ) ;^175^176^^^^170^183^Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^Preconditions.checkState ( body.getNext (  )  != null && body.getType (  )  == Token.BLOCK ) ;^175^176^^^^170^183^Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^Preconditions.checkState ( n.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^175^176^^^^170^183^Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^Preconditions.checkState ( body.removeChild (  )  == null && body.getType (  )  == Token.BLOCK ) ;^175^176^^^^170^183^Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^Preconditions.checkState ( body.getNext (  )  == null && body.removeChild (  )  == Token.BLOCK ) ;^175^176^^^^170^183^Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^175^176^^^^170^183^Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^Preconditions.checkState ( body .getParent (  )   == null && body.getType (  )  == Token.BLOCK ) ;^175^176^^^^170^183^Preconditions.checkState ( body.getNext (  )  == null && body.getType (  )  == Token.BLOCK ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^body.removeChild (  )  == Token.BLOCK ) ;^176^^^^^170^183^body.getType (  )  == Token.BLOCK ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^body .getString (  )   == Token.BLOCK ) ;^176^^^^^170^183^body.getType (  )  == Token.BLOCK ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^176^^^^^170^183^body.getType (  )  == Token.BLOCK ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P12_Insert_Condition]^if  ( parent.getType (  )  != Token.VAR )  { body.getType (  )  == Token.BLOCK ) ; }^176^^^^^170^183^body.getType (  )  == Token.BLOCK ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^Scope fnScope = new SyntacticScopeCreator ( compiler ) .createScope ( n, scope ) ;^178^^^^^170^183^Scope fnScope = new SyntacticScopeCreator ( compiler_ ) .createScope ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P4_Replace_Constructor]^Scope fnScope = new SyntacticScopeCreator ( compiler_ ) .createScope (  scope ) ;^178^^^^^170^183^Scope fnScope = new SyntacticScopeCreator ( compiler_ ) .createScope ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P4_Replace_Constructor]^Scope fnScope = new SyntacticScopeCreator ( compiler_ ) .createScope ( n ) ;^178^^^^^170^183^Scope fnScope = new SyntacticScopeCreator ( compiler_ ) .createScope ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^Scope fnScope = bodyew SyntacticScopeCreator ( compiler_ ) .createScope ( n, scope ) ;^178^^^^^170^183^Scope fnScope = new SyntacticScopeCreator ( compiler_ ) .createScope ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^Scope fnScope = scopeew SyntacticScopeCreator ( compiler_ ) .createScope ( n, n ) ;^178^^^^^170^183^Scope fnScope = new SyntacticScopeCreator ( compiler_ ) .createScope ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^Scope fnScope = new SyntacticScopeCreator ( scope ) .createScope ( n, compiler_ ) ;^178^^^^^170^183^Scope fnScope = new SyntacticScopeCreator ( compiler_ ) .createScope ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^Scope fnScope = compiler_ew SyntacticScopeCreator ( n ) .createScope ( n, scope ) ;^178^^^^^170^183^Scope fnScope = new SyntacticScopeCreator ( compiler_ ) .createScope ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^Scope scope = new SyntacticScopeCreator ( compiler_ ) .createScope ( root, null ) ;Scope fnScope = new SyntacticScopeCreator ( compiler_ ) .createScope ( n, scope ) ;^178^^^^^170^183^Scope fnScope = new SyntacticScopeCreator ( compiler_ ) .createScope ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^Scope fnScope = new SyntacticScopeCreator ( compiler_ ) .createScope ( n, fnScope ) ;^178^^^^^170^183^Scope fnScope = new SyntacticScopeCreator ( compiler_ ) .createScope ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^178^^^^^170^183^Scope fnScope = new SyntacticScopeCreator ( compiler_ ) .createScope ( n, scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^traverseNode ( body, n, scope ) ;^179^^^^^170^183^traverseNode ( body, n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^traverseNode (  n, fnScope ) ;^179^^^^^170^183^traverseNode ( body, n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^traverseNode ( body,  fnScope ) ;^179^^^^^170^183^traverseNode ( body, n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^traverseNode ( body, n ) ;^179^^^^^170^183^traverseNode ( body, n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^traverseNode ( n, body, fnScope ) ;^179^^^^^170^183^traverseNode ( body, n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^traverseNode ( fnScope, n, body ) ;^179^^^^^170^183^traverseNode ( body, n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^RemoveUnusedVars ( body, n, fnScope ) ;^179^^^^^170^183^traverseNode ( body, n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^RemoveUnusedVars ( body, n, scope ) ;^179^^^^^170^183^traverseNode ( body, n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^179^^^^^170^183^traverseNode ( body, n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^traverseFunction ( n, scope ) ;traverseNode ( body, n, fnScope ) ;^179^^^^^170^183^traverseNode ( body, n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^traverseNode ( c, n, scope ) ;traverseNode ( body, n, fnScope ) ;^179^^^^^170^183^traverseNode ( body, n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^traverseFunction ( parent, var.scope ) ;traverseNode ( body, n, fnScope ) ;^179^^^^^170^183^traverseNode ( body, n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^traverseNode ( root, null, scope ) ;traverseNode ( body, n, fnScope ) ;^179^^^^^170^183^traverseNode ( body, n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^removeUnreferencedFunctionArgs ( body, fnScope ) ;^181^^^^^170^183^removeUnreferencedFunctionArgs ( n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^removeUnreferencedFunctionArgs ( n, scope ) ;^181^^^^^170^183^removeUnreferencedFunctionArgs ( n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^removeUnreferencedFunctionArgs (  fnScope ) ;^181^^^^^170^183^removeUnreferencedFunctionArgs ( n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^removeUnreferencedFunctionArgs ( n ) ;^181^^^^^170^183^removeUnreferencedFunctionArgs ( n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^removeUnreferencedFunctionArgs ( fnScope, n ) ;^181^^^^^170^183^removeUnreferencedFunctionArgs ( n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^traverseFunction ( n, fnScope ) ;^181^^^^^170^183^removeUnreferencedFunctionArgs ( n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^181^182^^^^170^183^removeUnreferencedFunctionArgs ( n, fnScope ) ; removeUnreferencedVars ( fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^traverseFunction ( n, scope ) ;removeUnreferencedFunctionArgs ( n, fnScope ) ;^181^^^^^170^183^removeUnreferencedFunctionArgs ( n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^removeUnreferencedVars ( fnScope ) ;removeUnreferencedFunctionArgs ( n, fnScope ) ;^181^^^^^170^183^removeUnreferencedFunctionArgs ( n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^removeUnreferencedVars ( scope ) ;removeUnreferencedFunctionArgs ( n, fnScope ) ;^181^^^^^170^183^removeUnreferencedFunctionArgs ( n, fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^removeUnreferencedVars ( scope ) ;^182^^^^^170^183^removeUnreferencedVars ( fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^markReferencedVar ( fnScope ) ;^182^^^^^170^183^removeUnreferencedVars ( fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^182^^^^^170^183^removeUnreferencedVars ( fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^removeUnreferencedFunctionArgs ( n, fnScope ) ;removeUnreferencedVars ( fnScope ) ;^182^^^^^170^183^removeUnreferencedVars ( fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^markReferencedVar ( var ) ;removeUnreferencedVars ( fnScope ) ;^182^^^^^170^183^removeUnreferencedVars ( fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^removeUnreferencedVars ( scope ) ;removeUnreferencedVars ( fnScope ) ;^182^^^^^170^183^removeUnreferencedVars ( fnScope ) ;^[CLASS] RemoveUnusedVars  [METHOD] traverseFunction [RETURN_TYPE] void   Node n Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  scope  Node  body  n  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^Node argList = lastArg.getFirstChild (  ) .getNext (  ) ;^193^^^^^191^205^Node argList = function.getFirstChild (  ) .getNext (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^Node argList = function.getFirstChild (  ) .setString (  ) ;^193^^^^^191^205^Node argList = function.getFirstChild (  ) .getNext (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^Node argList = function.getFirstChild (  )  .getParent (  )  ;^193^^^^^191^205^Node argList = function.getFirstChild (  ) .getNext (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^Node argList = function.removeChild (  ) .getNext (  ) ;^193^^^^^191^205^Node argList = function.getFirstChild (  ) .getNext (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^Node argList = function .getLastChild (  )  .getNext (  ) ;^193^^^^^191^205^Node argList = function.getFirstChild (  ) .getNext (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^193^^^^^191^205^Node argList = function.getFirstChild (  ) .getNext (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^while  (  ( lastArg = argList.getLastChild (  )  )  == null )  {^195^^^^^191^205^while  (  ( lastArg = argList.getLastChild (  )  )  != null )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^while  (  ( function = argList.getLastChild (  )  )  != null )  {^195^^^^^191^205^while  (  ( lastArg = argList.getLastChild (  )  )  != null )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^while  (  ( argList = lastArg.getLastChild (  )  )  != null )  {^195^^^^^191^205^while  (  ( lastArg = argList.getLastChild (  )  )  != null )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^while  (  ( lastArg = argList.removeChild (  )  )  != null )  {^195^^^^^191^205^while  (  ( lastArg = argList.getLastChild (  )  )  != null )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^while  (  ( lastArg = argList .getFirstChild (  )   )  != null )  {^195^^^^^191^205^while  (  ( lastArg = argList.getLastChild (  )  )  != null )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^while  (  ( lastArg = lastArg.removeChild (  )  )  != null )  {^195^^^^^191^205^while  (  ( lastArg = argList.getLastChild (  )  )  != null )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^if  ( !referenced.add ( var )  )  {^197^^^^^191^205^if  ( !referenced.contains ( var )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^if  ( !referenced .clear (  )   )  {^197^^^^^191^205^if  ( !referenced.contains ( var )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P9_Replace_Statement]^if  ( !warnedVars_.contains ( var )  )  {^197^^^^^191^205^if  ( !referenced.contains ( var )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P9_Replace_Statement]^if  ( referenced.contains ( var )  )  {^197^^^^^191^205^if  ( !referenced.contains ( var )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^argList.removeChild ( function ) ;^198^^^^^191^205^argList.removeChild ( lastArg ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^argList.replaceChild ( lastArg ) ;^198^^^^^191^205^argList.removeChild ( lastArg ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^198^199^^^^191^205^argList.removeChild ( lastArg ) ; fnScope.undeclare ( var ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^NodeUtil.removeChild ( parent, toRemove ) ;argList.removeChild ( lastArg ) ;^198^^^^^191^205^argList.removeChild ( lastArg ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^toRemove.removeChild ( nameNode ) ;argList.removeChild ( lastArg ) ;^198^^^^^191^205^argList.removeChild ( lastArg ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^fnScope .getVar (  )  ;^199^^^^^191^205^fnScope.undeclare ( var ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^199^200^^^^191^205^fnScope.undeclare ( var ) ; numRemoved_++;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^referenced.add ( var ) ;fnScope.undeclare ( var ) ;^199^^^^^191^205^fnScope.undeclare ( var ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^markReferencedVar ( var ) ;fnScope.undeclare ( var ) ;^199^^^^^191^205^fnScope.undeclare ( var ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^Var var = fnScope.getVar ( function.getString (  )  ) ;^196^^^^^191^205^Var var = fnScope.getVar ( lastArg.getString (  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^Var var = lastArg.getVar ( fnScope.getString (  )  ) ;^196^^^^^191^205^Var var = fnScope.getVar ( lastArg.getString (  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^Var var = fnScope.getVar ( lastArg.removeChild (  )  ) ;^196^^^^^191^205^Var var = fnScope.getVar ( lastArg.getString (  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^Var var = fnScope.getVar ( function.removeChild (  )  ) ;^196^^^^^191^205^Var var = fnScope.getVar ( lastArg.getString (  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^Var var = scope.getVar ( n.getString (  )  ) ;Var var = fnScope.getVar ( lastArg.getString (  )  ) ;^196^^^^^191^205^Var var = fnScope.getVar ( lastArg.getString (  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^Var var = fnScope .getVars (  )  ;^196^^^^^191^205^Var var = fnScope.getVar ( lastArg.getString (  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^196^^^^^191^205^Var var = fnScope.getVar ( lastArg.getString (  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P13_Insert_Block]^if  ( referenced.contains ( var )  )  {     return ; }^197^^^^^191^205^[Delete]^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^199^^^^^191^205^fnScope.undeclare ( var ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^argList .removeChild ( lastArg )  ;^198^^^^^191^205^argList.removeChild ( lastArg ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^argList.replaceChild ( function ) ;^198^^^^^191^205^argList.removeChild ( lastArg ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^while  (  ( lastArg = lastArg.getLastChild (  )  )  != null )  {^195^^^^^191^205^while  (  ( lastArg = argList.getLastChild (  )  )  != null )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^while  (  ( lastArg =  function.getLastChild (  )  )  !^195^^^^^191^205^while  (  ( lastArg = argList.getLastChild (  )  )  != null )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^195^196^^^^191^205^while  (  ( lastArg = argList.getLastChild (  )  )  != null )  { Var var = fnScope.getVar ( lastArg.getString (  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^Var var = fnScope.getVar ( lastArg .setString ( 2 )   ) ;^196^^^^^191^205^Var var = fnScope.getVar ( lastArg.getString (  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^198^^^^^191^205^argList.removeChild ( lastArg ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedFunctionArgs [RETURN_TYPE] void   Node function Scope fnScope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  fnScope  Var  var  Node  argList  function  lastArg  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^if  ( var.contains ( referenced )  )  {^211^^^^^210^226^if  ( referenced.contains ( var )  )  {^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^if  ( referenced.add ( var )  )  {^211^^^^^210^226^if  ( referenced.contains ( var )  )  {^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( 1.contains ( var )  )  {^211^^^^^210^226^if  ( referenced.contains ( var )  )  {^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P9_Replace_Statement]^if  ( !referenced.contains ( var )  )  {^211^^^^^210^226^if  ( referenced.contains ( var )  )  {^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P9_Replace_Statement]^if  ( !warnedVars_.contains ( var )  )  {^211^^^^^210^226^if  ( referenced.contains ( var )  )  {^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P15_Unwrap_Block]^return ;^211^212^213^214^^210^226^if  ( referenced.contains ( var )  )  {  return; }^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P16_Remove_Block]^^211^212^213^214^^210^226^if  ( referenced.contains ( var )  )  {  return; }^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P13_Insert_Block]^if  ( referenced.contains ( var )  )  {     return ; }^211^^^^^210^226^[Delete]^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^referenced.contains ( var ) ;^215^^^^^210^226^referenced.add ( var ) ;^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^215^^^^^210^226^referenced.add ( var ) ;^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P12_Insert_Condition]^if  ( !referenced.contains ( var )  )  { referenced.add ( var ) ; }^215^^^^^210^226^referenced.add ( var ) ;^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P12_Insert_Condition]^if  ( referenced.contains ( var )  )  { referenced.add ( var ) ; }^215^^^^^210^226^referenced.add ( var ) ;^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^Node parent = var .getInitialValue (  )  ;^217^^^^^210^226^Node parent = var.getParentNode (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^Node parent = toRemove.getParent (  ) ;Node parent = var.getParentNode (  ) ;^217^^^^^210^226^Node parent = var.getParentNode (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^Node toRemove = nameNode.getParent (  ) ;Node parent = var.getParentNode (  ) ;^217^^^^^210^226^Node parent = var.getParentNode (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^Node nameNode = var.nameNode;Node parent = var.getParentNode (  ) ;^217^^^^^210^226^Node parent = var.getParentNode (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^217^^^^^210^226^Node parent = var.getParentNode (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^if  ( parent.getType (  )  == Token.FUNCTION || var.getInitialValue (  )  != var.scope.getRootNode (  )  )  {^218^219^^^^210^226^if  ( parent.getType (  )  == Token.FUNCTION && var.getInitialValue (  )  != var.scope.getRootNode (  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^if  ( parent.getType (  )  > Token.FUNCTION && var.getInitialValue (  )  != var.scope.getRootNode (  )  )  {^218^219^^^^210^226^if  ( parent.getType (  )  == Token.FUNCTION && var.getInitialValue (  )  != var.scope.getRootNode (  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^if  ( parent.getType (  )  == Token.FUNCTION && var.getInitialValue (  )  == var.scope.getRootNode (  )  )  {^218^219^^^^210^226^if  ( parent.getType (  )  == Token.FUNCTION && var.getInitialValue (  )  != var.scope.getRootNode (  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( parent.getType (  )  == Token.FUNCTION ) {^218^219^^^^210^226^if  ( parent.getType (  )  == Token.FUNCTION && var.getInitialValue (  )  != var.scope.getRootNode (  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  (  var.getInitialValue (  )  != var.scope.getRootNode (  )  )  {^218^219^^^^210^226^if  ( parent.getType (  )  == Token.FUNCTION && var.getInitialValue (  )  != var.scope.getRootNode (  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( parent.getType (  )  == FUNCTION )  {^218^219^^^^210^226^if  ( parent.getType (  )  == Token.FUNCTION && var.getInitialValue (  )  != var.scope.getRootNode (  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( var.getInitialValue (  )  != getRootNode (  ) )  {^218^219^^^^210^226^if  ( parent.getType (  )  == Token.FUNCTION && var.getInitialValue (  )  != var.scope.getRootNode (  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^if  ( parent.removeChild (  )  == Token.FUNCTION && var.getInitialValue (  )  != var.scope.getRootNode (  )  )  {^218^219^^^^210^226^if  ( parent.getType (  )  == Token.FUNCTION && var.getInitialValue (  )  != var.scope.getRootNode (  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^if  ( parent.getType (  )  == Token.FUNCTION && var .getParentNode (  )   != var.scope.getRootNode (  )  )  {^218^219^^^^210^226^if  ( parent.getType (  )  == Token.FUNCTION && var.getInitialValue (  )  != var.scope.getRootNode (  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  (  var .getParentNode (  )   != var.scope.getRootNode (  )  )  {^218^219^^^^210^226^if  ( parent.getType (  )  == Token.FUNCTION && var.getInitialValue (  )  != var.scope.getRootNode (  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^traverseFunction (  var.scope ) ;^224^^^^^210^226^traverseFunction ( parent, var.scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^traverseFunction ( parent.scope ) ;^224^^^^^210^226^traverseFunction ( parent, var.scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^traverseFunction ( parent ) ;^224^^^^^210^226^traverseFunction ( parent, var.scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^removeUnreferencedFunctionArgs ( parent, var.scope ) ;^224^^^^^210^226^traverseFunction ( parent, var.scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^224^^^^^210^226^traverseFunction ( parent, var.scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^traverseFunction ( n, scope ) ;traverseFunction ( parent, var.scope ) ;^224^^^^^210^226^traverseFunction ( parent, var.scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^traverseNode ( c, n, scope ) ;traverseFunction ( parent, var.scope ) ;^224^^^^^210^226^traverseFunction ( parent, var.scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^traverseNode ( body, n, fnScope ) ;traverseFunction ( parent, var.scope ) ;^224^^^^^210^226^traverseFunction ( parent, var.scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^traverseNode ( root, null, scope ) ;traverseFunction ( parent, var.scope ) ;^224^^^^^210^226^traverseFunction ( parent, var.scope ) ;^[CLASS] RemoveUnusedVars  [METHOD] markReferencedVar [RETURN_TYPE] void   Var var [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Var  var  Node  parent  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^CodingConvention convention = compiler.getCodingConvention (  ) ;^232^^^^^217^247^CodingConvention convention = compiler_.getCodingConvention (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^CodingConvention convention = compiler_.reportCodeChange (  ) ;^232^^^^^217^247^CodingConvention convention = compiler_.getCodingConvention (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^CodingConvention convention = compiler .reportCodeChange (  )  ;^232^^^^^217^247^CodingConvention convention = compiler_.getCodingConvention (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^232^^^^^217^247^CodingConvention convention = compiler_.getCodingConvention (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^if  ( !referenced.contains ( var )  || ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  && !convention.isExported ( var.name )  )  )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  ) {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  (  !convention.isExported ( var.name )  )  )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( var.isLocal( || name))) )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( "Unreferenced var: " + var.name )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( ((toRemove.getType() == VAR) || (toRemove.getType() == FUNCTION) || (toRemove.getType() == LP) && (parent.getType() == FUNCTION)) )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( (toRemove.getType() == VAR || toRemove.getType() == FUNCTION) )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( toRemove.getType (  )  == VAR )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( toRemove.getType (  )  == FUNCTION )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( (toRemove.getType() == LP && parent.getType() == FUNCTION) )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( toRemove.getType (  )  == LP )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( parent.getType (  )  == FUNCTION )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( toRemove.getType() == LP && parent.getType() == FUNCTION )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( toRemove.getType() == FUNCTION && isFunctionAnonymous(toRemove) )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( (parent != null) && (parent.getType() == FOR) && parent.getChildCount() < 4 )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( (parent != null && parent.getType() == FOR) )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( parent != null )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( parent.getType (  )  == FOR )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( parent.getChildCount (  )  < 4 )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( (toRemove.getType() == VAR) && nameNode.hasChildren() && getFirstChild()) )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( (toRemove.getType() == VAR && nameNode.hasChildren()) )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( var.input != null )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  (  (  (  (  ( "Unused var " +  ( var.name )  )  + " declared in " )  + inputName )  + " at line " )  +  ( toRemove.getLineno (  )  )  + " may have side effects and can't be removed" )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  (  (  (  ( "Unused var " +  ( var.name )  )  + " declared in " )  + inputName )  + " at line " + toRemove.getLineno (  ) )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  (  (  ( "Unused var " +  ( var.name )  )  + " declared in " )  + inputName + " at line " )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  (  ( "Unused var " +  ( var.name )  )  + " declared in " + inputName )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( "Unused var " +  ( var.name )  + " declared in " )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( "Unused var " + var.name )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( toRemove.getChildCount() == 1 )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( toRemove.getType() == VAR && toRemove.getChildCount() > 1 )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( toRemove.getChildCount (  )  > 1 )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^if  ( !referenced.add ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^if  ( !referenced .clear (  )   && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^if  ( toRemove.getType (  )  == Token.LP || parent.getType (  )  == Token.FUNCTION )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^if  ( toRemove.getType (  )  >= Token.LP && parent.getType (  )  == Token.FUNCTION )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^if  ( toRemove.getType (  )  <= Token.LP && parent.getType (  )  == Token.FUNCTION )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^if  ( toRemove.getType (  )  > Token.LP && parent.getType (  )  == Token.FUNCTION )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^if  ( toRemove.getType (  )  != Token.LP && parent.getType (  )  == Token.FUNCTION )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( toRemove.getType (  )  == Token.LP ) {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  (  parent.getType (  )  == Token.FUNCTION )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( toRemove.getType (  )  == LP )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( parent.getType (  )  == FUNCTION )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( toRemove.getType() == FUNCTION && isFunctionAnonymous(toRemove) )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( toRemove.getType (  )  == FUNCTION )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( (parent != null) && (parent.getType() == FOR) && parent.getChildCount() < 4 )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( (parent != null && parent.getType() == FOR) )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( parent != null )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( parent.getType (  )  == FOR )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( parent.getChildCount (  )  < 4 )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( (toRemove.getType() == VAR) && nameNode.hasChildren() && getFirstChild()) )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( (toRemove.getType() == VAR && nameNode.hasChildren()) )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( toRemove.getType (  )  == VAR )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( var.input != null )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  (  (  (  (  ( "Unused var " +  ( var.name )  )  + " declared in " )  + inputName )  + " at line " )  +  ( toRemove.getLineno (  )  )  + " may have side effects and can't be removed" )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  (  (  (  ( "Unused var " +  ( var.name )  )  + " declared in " )  + inputName )  + " at line " + toRemove.getLineno (  ) )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  (  (  ( "Unused var " +  ( var.name )  )  + " declared in " )  + inputName + " at line " )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  (  ( "Unused var " +  ( var.name )  )  + " declared in " + inputName )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( "Unused var " +  ( var.name )  + " declared in " )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( "Unused var " + var.name )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( toRemove.getChildCount() == 1 )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( toRemove.getType() == VAR && toRemove.getChildCount() > 1 )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( toRemove.getChildCount (  )  > 1 )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^if  ( toRemove.removeChild (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^if  ( toRemove .getString (  )   == Token.LP && parent^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( toRemove.removeChild (  )  == Token.LP ) {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( toRemove.getType (  )  == Token.FUNCTION || NodeUtil.isFunctionAnonymous ( toRemove )  )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( toRemove.getType (  )  != Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( toRemove.getType (  )  >= Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( toRemove.getType (  )  < Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( toRemove.getType (  )  > Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( toRemove.getType (  )  == Token.FUNCTION ) {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  (  NodeUtil.isFunctionAnonymous ( toRemove )  )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( toRemove.getType (  )  == FUNCTION )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( (parent != null) && (parent.getType() == FOR) && parent.getChildCount() < 4 )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( (parent != null && parent.getType() == FOR) )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( parent != null )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( parent.getType (  )  == FOR )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( parent.getChildCount (  )  < 4 )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( (toRemove.getType() == VAR) && nameNode.hasChildren() && getFirstChild()) )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( (toRemove.getType() == VAR && nameNode.hasChildren()) )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( toRemove.getType (  )  == VAR )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( var.input != null )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  (  (  (  (  ( "Unused var " +  ( var.name )  )  + " declared in " )  + inputName )  + " at line " )  +  ( toRemove.getLineno (  )  )  + " may have side effects and can't be removed" )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  (  (  (  ( "Unused var " +  ( var.name )  )  + " declared in " )  + inputName )  + " at line " + toRemove.getLineno (  ) )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  (  (  ( "Unused var " +  ( var.name )  )  + " declared in " )  + inputName + " at line " )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  (  ( "Unused var " +  ( var.name )  )  + " declared in " + inputName )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( "Unused var " +  ( var.name )  + " declared in " )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( "Unused var " + var.name )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( toRemove.getChildCount() == 1 )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( toRemove.getType() == VAR && toRemove.getChildCount() > 1 )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( toRemove.getChildCount (  )  > 1 )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^} else if  ( toRemove.removeChild (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^} else if  ( toRemove .getString (  )   == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  (  NodeUtil.isFunctionAnonymous ( toRemove )  )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P15_Unwrap_Block]^if (!(preserveAnonymousFunctionNames)) {    toRemove.getFirstChild().setString("");    compiler_.reportCodeChange();};^256^257^258^259^260^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  { if  ( !preserveAnonymousFunctionNames )  { toRemove.getFirstChild (  ) .setString ( "" ) ; compiler_.reportCodeChange (  ) ; }^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P16_Remove_Block]^^256^257^258^259^260^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  { if  ( !preserveAnonymousFunctionNames )  { toRemove.getFirstChild (  ) .setString ( "" ) ; compiler_.reportCodeChange (  ) ; }^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( parent != null || parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( parent == null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( parent != null && parent.getType (  )  != Token.FOR && parent.getChildCount (  )  < 4 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  <= 4 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 5 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( parent != null ) {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  (  parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( (parent != null && parent.getType() == FOR) )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( parent.getType (  )  == FOR )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( parent.getChildCount (  )  < 4 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( (toRemove.getType() == VAR) && nameNode.hasChildren() && getFirstChild()) )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( (toRemove.getType() == VAR && nameNode.hasChildren()) )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( toRemove.getType (  )  == VAR )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( var.input != null )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  (  (  (  (  ( "Unused var " +  ( var.name )  )  + " declared in " )  + inputName )  + " at line " )  +  ( toRemove.getLineno (  )  )  + " may have side effects and can't be removed" )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  (  (  (  ( "Unused var " +  ( var.name )  )  + " declared in " )  + inputName )  + " at line " + toRemove.getLineno (  ) )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  (  (  ( "Unused var " +  ( var.name )  )  + " declared in " )  + inputName + " at line " )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  (  ( "Unused var " +  ( var.name )  )  + " declared in " + inputName )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( "Unused var " +  ( var.name )  + " declared in " )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( "Unused var " + var.name )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( toRemove.getChildCount() == 1 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( toRemove.getType() == VAR && toRemove.getChildCount() > 1 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( toRemove.getChildCount (  )  > 1 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^} else if  ( parent != null && parent.removeChild (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^} else if  ( parent != null && parent .getString (  )   == Token.FOR && parent.getChildCount (  )  < 4 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.removeChild (  )  < 4 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  (  parent.removeChild (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P9_Replace_Statement]^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( toRemove.getType (  )  == Token.VAR || nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( toRemove.getType (  )  > Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( toRemove.getType (  )  != Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( toRemove.getType (  )  <= Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( toRemove.getType (  )  == Token.VAR ) {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  (  nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( (toRemove.getType() == VAR && nameNode.hasChildren()) )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( toRemove.getType (  )  == VAR )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( var.input != null )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  (  (  (  (  ( "Unused var " +  ( var.name )  )  + " declared in " )  + inputName )  + " at line " )  +  ( toRemove.getLineno (  )  )  + " may have side effects and can't be removed" )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  (  (  (  ( "Unused var " +  ( var.name )  )  + " declared in " )  + inputName )  + " at line " + toRemove.getLineno (  ) )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  (  (  ( "Unused var " +  ( var.name )  )  + " declared in " )  + inputName + " at line " )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  (  ( "Unused var " +  ( var.name )  )  + " declared in " + inputName )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( "Unused var " +  ( var.name )  + " declared in " )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( "Unused var " + var.name )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( toRemove.getChildCount() == 1 )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( toRemove.getType() == VAR && toRemove.getChildCount() > 1 )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( toRemove.getChildCount (  )  > 1 )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( parent != null )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^} else if  ( toRemove.removeChild (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^} else if  ( toRemove .getString (  )   == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.removeChild (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.isFunctionAnonymous ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil .removeChild ( nameNode )   )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.removeChild (  )  )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode .getLastChild (  )   )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil .removeChild ( toRemove )   )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( toRemove.getType (  )  == Token.VAR || toRemove.getChildCount (  )  > 1 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( toRemove.getType (  )  <= Token.VAR && toRemove.getChildCount (  )  > 1 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  >= 1 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > -4 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^} else if  ( nameNode.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( toRemove.getType (  )  == Token.VAR ) {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  (  toRemove.getChildCount (  )  > 1 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( toRemove.getType (  )  == VAR )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else if  ( parent != null )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^} else if  ( toRemove.removeChild (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^} else if  ( toRemove .getString (  )   == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.removeChild (  )  > 1 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( parent == null )  {^295^^^^^280^310^} else if  ( parent != null )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^} else if  ( nameNode != null )  {^295^^^^^280^310^} else if  ( parent != null )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^} else {^295^^^^^280^310^} else if  ( parent != null )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P15_Unwrap_Block]^com.google.javascript.jscomp.NodeUtil.removeChild(parent, toRemove); (numRemoved_)++;^295^296^297^298^^280^310^} else if  ( parent != null )  { NodeUtil.removeChild ( parent, toRemove ) ; numRemoved_++; }^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P16_Remove_Block]^^295^296^297^298^^280^310^} else if  ( parent != null )  { NodeUtil.removeChild ( parent, toRemove ) ; numRemoved_++; }^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^NodeUtil.removeChild ( nameNode, toRemove ) ;^296^^^^^281^311^NodeUtil.removeChild ( parent, toRemove ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^NodeUtil.removeChild ( parent, nameNode ) ;^296^^^^^281^311^NodeUtil.removeChild ( parent, toRemove ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^NodeUtil.removeChild (  toRemove ) ;^296^^^^^281^311^NodeUtil.removeChild ( parent, toRemove ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^NodeUtil.removeChild ( parent ) ;^296^^^^^281^311^NodeUtil.removeChild ( parent, toRemove ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^NodeUtil.removeChild ( toRemove, parent ) ;^296^^^^^281^311^NodeUtil.removeChild ( parent, toRemove ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^296^^^^^281^311^NodeUtil.removeChild ( parent, toRemove ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^argList.removeChild ( lastArg ) ;NodeUtil.removeChild ( parent, toRemove ) ;^296^^^^^281^311^NodeUtil.removeChild ( parent, toRemove ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^toRemove.removeChild ( nameNode ) ;NodeUtil.removeChild ( parent, toRemove ) ;^296^^^^^281^311^NodeUtil.removeChild ( parent, toRemove ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P13_Insert_Block]^if  ( parent != null )  {     removeChild ( parent, toRemove ) ;      ( numRemoved_ ) ++; }^296^^^^^281^311^[Delete]^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^NodeUtil .removeChild ( nameNode )  ;^296^^^^^281^311^NodeUtil.removeChild ( parent, toRemove ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^toRemove.removeChild ( parent ) ;^293^^^^^289^298^toRemove.removeChild ( nameNode ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^toRemove.replaceChild ( nameNode ) ;^293^^^^^289^298^toRemove.removeChild ( nameNode ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^toRemove .removeChild ( toRemove )  ;^293^^^^^289^298^toRemove.removeChild ( nameNode ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^293^294^^^^289^298^toRemove.removeChild ( nameNode ) ; numRemoved_++;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^argList.removeChild ( lastArg ) ;toRemove.removeChild ( nameNode ) ;^293^^^^^289^298^toRemove.removeChild ( nameNode ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^NodeUtil.removeChild ( parent, toRemove ) ;toRemove.removeChild ( nameNode ) ;^293^^^^^289^298^toRemove.removeChild ( nameNode ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^toRemove.getFirstChild (  ) .setString ( "" ) ;toRemove.removeChild ( nameNode ) ;^293^^^^^289^298^toRemove.removeChild ( nameNode ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^} else if  ( parent.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^} else if  ( parent.removeChild (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^toRemove.removeChild (  )  > 1 )  {^290^^^^^275^305^toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^toRemove .hasChildren (  )   > 1 )  {^290^^^^^275^305^toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^toRemove.removeChild ( parent ) ;^293^^^^^278^308^toRemove.removeChild ( nameNode ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^toRemove.replaceChild ( nameNode ) ;^293^^^^^278^308^toRemove.removeChild ( nameNode ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^toRemove .removeChild ( toRemove )  ;^293^^^^^278^308^toRemove.removeChild ( nameNode ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^293^^^^^278^308^toRemove.removeChild ( nameNode ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^argList.removeChild ( lastArg ) ;toRemove.removeChild ( nameNode ) ;^293^^^^^278^308^toRemove.removeChild ( nameNode ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^NodeUtil.removeChild ( parent, toRemove ) ;toRemove.removeChild ( nameNode ) ;^293^^^^^278^308^toRemove.removeChild ( nameNode ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^toRemove.getFirstChild (  ) .setString ( "" ) ;toRemove.removeChild ( nameNode ) ;^293^^^^^278^308^toRemove.removeChild ( nameNode ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  (  (  (  (  ( "Unused var " +  ( var.name )  )  + " declared in " )  + inputName )  + " at line " )  +  ( toRemove.getLineno (  )  )  + " may have side effects and can't be removed" )  {^270^^^^^255^285^if  ( !warnedVars_.contains ( var )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  (  (  (  ( "Unused var " +  ( var.name )  )  + " declared in " )  + inputName )  + " at line " + toRemove.getLineno (  ) )  {^270^^^^^255^285^if  ( !warnedVars_.contains ( var )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  (  (  ( "Unused var " +  ( var.name )  )  + " declared in " )  + inputName + " at line " )  {^270^^^^^255^285^if  ( !warnedVars_.contains ( var )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  (  ( "Unused var " +  ( var.name )  )  + " declared in " + inputName )  {^270^^^^^255^285^if  ( !warnedVars_.contains ( var )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( "Unused var " +  ( var.name )  + " declared in " )  {^270^^^^^255^285^if  ( !warnedVars_.contains ( var )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^if  ( "Unused var " + var.name )  {^270^^^^^255^285^if  ( !warnedVars_.contains ( var )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^if  ( !warnedVars_.add ( var )  )  {^270^^^^^255^285^if  ( !warnedVars_.contains ( var )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^if  ( !warnedVars_ .clear (  )   )  {^270^^^^^255^285^if  ( !warnedVars_.contains ( var )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P9_Replace_Statement]^if  ( !referenced.contains ( var )  )  {^270^^^^^255^285^if  ( !warnedVars_.contains ( var )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P9_Replace_Statement]^if  ( referenced.contains ( var )  )  {^270^^^^^255^285^if  ( !warnedVars_.contains ( var )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P1_Replace_Type]^char inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^String inputName = var.input == null ? var.input.getName (  ) : "<unknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>nknown";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^String inputName  =  "<unknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P6_Replace_Expression]^String inputName  =  var.input.getName (  ) ;^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^warnedVars_.contains ( var ) ;^271^^^^^256^286^warnedVars_.add ( var ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^271^^^^^256^286^warnedVars_.add ( var ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^referenced.add ( var ) ;warnedVars_.add ( var ) ;^271^^^^^256^286^warnedVars_.add ( var ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^warnedVars_.clear (  ) ;warnedVars_.add ( var ) ;^271^^^^^256^286^warnedVars_.add ( var ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^markReferencedVar ( var ) ;warnedVars_.add ( var ) ;^271^^^^^256^286^warnedVars_.add ( var ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P12_Insert_Condition]^if  ( !warnedVars_.contains ( var )  )  { warnedVars_.add ( var ) ; }^271^^^^^256^286^warnedVars_.add ( var ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^273^274^^^^258^288^? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  <  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  &  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  <<  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  >>  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var "  <=  var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unnused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "areddeclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line  at li" + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.removeChild (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove .getNext (  )   + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^" at line " + parent.getLineno (  )  + " may have side effects and can't be removed" ) ;^277^278^^^^262^292^" at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^" at line " + toRemove.removeChild (  )  + " may have side effects and can't be removed" ) ;^277^278^^^^262^292^" at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^" at line " + toRemove .getNext (  )   + " may have side effects and can't be removed" ) ;^277^278^^^^262^292^" at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^" at line " + parent.removeChild (  )  + " may have side effects and can't be removed" ) ;^277^278^^^^262^292^" at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^277^278^^^^262^292^" at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^if  ( toRemove.getChildCount (  )  != 1 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^if  ( toRemove.getChildCount (  )  == MAX_ITERATIONS )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^if  ( parent.getChildCount (  )  == 1 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^if  ( toRemove.removeChild (  )  == 1 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( toRemove .hasChildren (  )   == 3 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P15_Unwrap_Block]^parent.replaceChild(toRemove, new com.google.javascript.rhino.Node(com.google.javascript.rhino.Token.EXPR_RESULT, nameNode.removeFirstChild())); (numRemoved_)++;^284^285^286^287^288^269^299^if  ( toRemove.getChildCount (  )  == 1 )  { parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ; numRemoved_++; }^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P16_Remove_Block]^^284^285^286^287^288^269^299^if  ( toRemove.getChildCount (  )  == 1 )  { parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ; numRemoved_++; }^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^new Node ( Token.EXPR_RESULT, toRemove.removeFirstChild (  )  )  ) ;^286^^^^^271^301^new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^new Node ( Token.EXPR_RESULT.removeFirstChild (  )  )  ) ;^286^^^^^271^301^new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^new Node ( Token. nameNode.removeFirstChild (  )  )  ) ;^286^^^^^271^301^new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^new Node ( Token.EXPR_RESULT, nameNode.removeChild (  )  )  ) ;^286^^^^^271^301^new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^new Node ( Token.EXPR_RESULT, nameNode .getFirstChild (  )   )  ) ;^286^^^^^271^301^new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P4_Replace_Constructor]^parent.replaceChild (  new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^285^286^^^^270^300^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P4_Replace_Constructor]^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT.removeFirstChild (  )  )  ) ;^285^286^^^^270^300^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^parent.replaceChild ( nameNode, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^285^286^^^^270^300^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, toRemove.removeFirstChild (  )  )  ) ;^285^286^^^^270^300^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^parent.replaceChild ( toRemove, new Node ( Token. nameNode.removeFirstChild (  )  )  ) ;^285^286^^^^270^300^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^parent.replaceChild ( nameNode, new Node ( Token.EXPR_RESULT, toRemove.removeFirstChild (  )  )  ) ;^285^286^^^^270^300^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeChild (  )  )  ) ;^285^286^^^^270^300^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode .getFirstChild (  )   )  ) ;^285^286^^^^270^300^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^parent.replaceChild ( parent, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^285^286^^^^270^300^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^285^286^^^^270^300^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^285^286^^^^270^300^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P13_Insert_Block]^if  (  ( toRemove.getChildCount (  )  )  == 1 )  {     parent.replaceChild ( toRemove, new Node ( EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;      ( numRemoved_ ) ++; }^285^^^^^270^300^[Delete]^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^new Node ( Token.EXPR_RESULT, toRemove .getFirstChild (  )   )  ) ;^286^^^^^271^301^new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^286^287^^^^271^301^new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ; numRemoved_++;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknownunknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  ^  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  ==  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  |  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  >=  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var "  >=  var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "a" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "clare" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line at lin" + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "ve side emay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  >  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (   instanceof   )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  ||  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var "  ^  var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused nused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in ecl" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + "iat line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removedy have side effects" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^if  ( toRemove.getChildCount (  )  == 0 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^if  ( toRemove .hasChildren (  )   == 1 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( toRemove.getChildCount (  )  == 2 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^new Node ( Token.EXPR_RESULT, toRemove.removeChild (  )  )  ) ;^286^^^^^271^301^new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, parent.removeFirstChild (  )  )  ) ;^285^286^^^^270^300^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^parent.replaceChild ( parent, new Node ( Token.EXPR_RESULT, nameNode.removeChild (  )  )  ) ;^285^286^^^^270^300^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( toRemove.getType (  )  >= Token.VAR && toRemove.getChildCount (  )  > 1 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > i )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove .hasChildren (  )   > 1 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^} else if  (  toRemove.getChildCount (  )  > 2 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  ( parent != true )  {^295^^^^^280^310^} else if  ( parent != null )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^296^297^^^^281^311^NodeUtil.removeChild ( parent, toRemove ) ; numRemoved_++;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  ( parent != false )  {^295^^^^^280^310^} else if  ( parent != null )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "unknunknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^} else if  ( parent.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( toRemove.getFirstChild (  )  )  )  {^268^269^^^^253^283^nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^nameNode.removeChild (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^268^269^^^^253^283^nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^nameNode .getChildCount (  )   && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^268^269^^^^253^283^nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^NodeUtil.mayHaveSideEffects ( toRemove.getFirstChild (  )  )  )  {^269^^^^^254^284^NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^NodeUtil.isFunctionAnonymous ( nameNode.getFirstChild (  )  )  )  {^269^^^^^254^284^NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^NodeUtil.mayHaveSideEffects ( nameNode.removeChild (  )  )  )  {^269^^^^^254^284^NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^NodeUtil.mayHaveSideEffects ( nameNode .getLastChild (  )   )  )  {^269^^^^^254^284^NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^269^270^271^^^254^284^NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  { if  ( !warnedVars_.contains ( var )  )  { warnedVars_.add ( var ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^NodeUtil.mayHaveSideEffects ( toRemove.removeChild (  )  )  )  {^269^^^^^254^284^NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var "  <<  var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var n" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declareddeclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at l" + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " have side efmay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^parent.replaceChild ( nameNode, new Node ( Token.EXPR_RESULT, nameNode.removeChild (  )  )  ) ;^285^286^^^^270^300^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^} else if  ( parent .getString (  )   == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^293^294^^^^278^308^toRemove.removeChild ( nameNode ) ; numRemoved_++;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( toRemove.getType (  )  >= Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  ( nameNode != true )  {^295^^^^^280^310^} else if  ( parent != null )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  ( nameNode != this )  {^295^^^^^280^310^} else if  ( parent != null )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unk";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  !=  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var "  <  var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "l" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line  l" + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removede effects" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^logger_ .fine ( inputName )  ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^if  ( toRemove.getChildCount (  )  == 3 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( toRemove.getChildCount (  )  == 4 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^parent .getLastChild (  )   ) ;^285^286^^^^270^300^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, toRemove .getFirstChild (  )   )  ) ;^285^286^^^^270^300^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^286^^^^^271^301^new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>kn";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var "  >  var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "nused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " aat line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "e e" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var "  !=  var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var d " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "lared i" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + "at" + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "effects and" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^if  ( toRemove.getChildCount (  )  == type )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( toRemove.getChildCount (  )  == 1L )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > MAX_ITERATIONS )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^toRemove.replaceChild ( parent ) ;^293^^^^^289^298^toRemove.removeChild ( nameNode ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "nk";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^parent.getType (  )  == Token.FOR && toRemove.getChildCount (  )  < 4 )  {^264^265^^^^249^279^parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^parent.removeChild (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^264^265^^^^249^279^parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^parent.removeChild (  )  == Token.FOR && toRemove.getChildCount (  )  < 4 )  {^264^265^^^^249^279^parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^parent.removeChild (  )  < 4 )  {^265^^^^^250^280^parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^parent .hasChildren (  )   < 4 )  {^265^^^^^250^280^parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  &&  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unuse" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " ddeclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed effects and can't be re" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( !removeGlobals )  {^258^^^^^243^273^if  ( !preserveAnonymousFunctionNames )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P15_Unwrap_Block]^toRemove.getFirstChild().setString(""); compiler_.reportCodeChange();^258^259^260^261^^243^273^if  ( !preserveAnonymousFunctionNames )  { toRemove.getFirstChild (  ) .setString ( "" ) ; compiler_.reportCodeChange (  ) ; }^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P16_Remove_Block]^^258^259^260^261^^243^273^if  ( !preserveAnonymousFunctionNames )  { toRemove.getFirstChild (  ) .setString ( "" ) ; compiler_.reportCodeChange (  ) ; }^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^toRemove.removeChild (  ) .setString ( "" ) ;^259^^^^^244^274^toRemove.getFirstChild (  ) .setString ( "" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^259^^^^^244^274^toRemove.getFirstChild (  ) .setString ( "" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^toRemove.removeChild ( nameNode ) ;toRemove.getFirstChild (  ) .setString ( "" ) ;^259^^^^^244^274^toRemove.getFirstChild (  ) .setString ( "" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^toRemove .getLastChild (  )  .setString ( "" ) ;^259^^^^^244^274^toRemove.getFirstChild (  ) .setString ( "" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^compiler_.addToDebugLog (  ) ;^260^^^^^245^275^compiler_.reportCodeChange (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^260^^^^^245^275^compiler_.reportCodeChange (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^toRemove.getFirstChild (  )  .getString (  )  ;^259^^^^^244^274^toRemove.getFirstChild (  ) .setString ( "" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^259^260^^^^244^274^toRemove.getFirstChild (  ) .setString ( "" ) ; compiler_.reportCodeChange (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  == 4 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < type )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent .hasChildren (  )   < 4 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  ( parent != false ) {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode .getChildCount (  )   && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( toRemove.getType (  )  != Token.VAR && toRemove.getChildCount (  )  > 1 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  < 1 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  (  toRemove.getChildCount (  )  > 1 + 0 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>known";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  <=  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var "  |  var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused vanused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in ed" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( toRemove.getChildCount (  )  == 1 / 0 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in ecla" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can'tmay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknown><unknow";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var "  ||  var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "lared declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "y have side effects and can't be rmay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^if  ( toRemove.getChildCount (  )  == -7 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > numRemoved_ )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  ( parent.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 >>> 0 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var "  &&  var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "use" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line at " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "ve simay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^" at line " + parent .getNext (  )   + " may have side effects and can't be removed" ) ;^277^278^^^^262^292^" at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  (  nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > -6 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^} else if  (  toRemove.getChildCount (  )  > 1 >> 0 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^} else if  ( parent != this )  {^295^^^^^280^310^} else if  ( parent != null )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var "  &  var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in  declared" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + "lat line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "ide effects and can't be remove" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^if  ( toRemove.getChildCount (  )  <= 1 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( parent.removeChild (  )  == 4 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "usnused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "lared indeclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " have side effects and can" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, toRemove.removeChild (  )  )  ) ;^285^286^^^^270^300^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>nkn";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var Unu" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + "linat line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removedave side effects and can't be rem" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^if  ( toRemove.getChildCount (  )  == numRemoved_ )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( toRemove.removeChild (  )  == 3 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > -7 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^toRemove .removeChild ( nameNode )  ;^293^^^^^289^298^toRemove.removeChild ( nameNode ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^293^^^^^289^298^toRemove.removeChild ( nameNode ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknown><unk";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^} else if  ( parent.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^} else if  ( parent.removeChild (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^NodeUtil .mayHaveSideEffects (  )   )  {^257^^^^^242^272^NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^NodeUtil.isFunctionAnonymous ( parent )  )  {^257^^^^^242^272^NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^257^258^259^^^242^272^NodeUtil.isFunctionAnonymous ( toRemove )  )  { if  ( !preserveAnonymousFunctionNames )  { toRemove.getFirstChild (  ) .setString ( "" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^parent .getString (  )   == Token.FOR && parent.getChildCount (  )  < 4 )  {^264^265^^^^249^279^parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^NodeUtil .removeChild ( nameNode )   )  {^269^^^^^254^284^NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^NodeUtil.mayHaveSideEffects ( toRemove .getLastChild (  )   )  )  {^269^^^^^254^284^NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " decla" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line at line" + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removeday have side" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( parent.removeChild (  )  == 1 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( toRemove.getType (  )  <= Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < i )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^} else if  ( parent != this && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( toRemove.getType (  )  < Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil .removeChild ( parent )   )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "u";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "nu" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " decdeclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removedfec" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^if  ( toRemove.getChildCount (  )  == i )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>nkno";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in clared " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removedma" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, parent .getFirstChild (  )   )  ) ;^285^286^^^^270^300^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "knunknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var "  ==  var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "h" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( toRemove.getType (  )  > Token.VAR && toRemove.getChildCount (  )  > 1 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  == 1 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^} else if  (  toRemove.getChildCount (  )  > 3 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "wnunknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^NodeUtil .removeChild ( parent )   )  {^269^^^^^254^284^NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var nuse" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in e" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removedy" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^toRemove.replaceChild ( parent ) ;^293^^^^^278^308^toRemove.removeChild ( nameNode ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > -3 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  (  toRemove.getChildCount (  )  > 0 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  ( parent != this )  {^295^^^^^280^310^} else if  ( parent != null )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var ed va" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in  declared in" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line t li" + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "y may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^if  ( toRemove.getChildCount (  )  == -5 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^if  ( nameNode.getChildCount (  )  == 1 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>k";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "n" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + "ne" + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " m" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "usenused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in red " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 3 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<ununknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^parent .getString (  )   == Token.FOR && toRemove.getChildCount (  )  < 4 )  {^264^265^^^^249^279^parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var "  >>  var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unus" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "lared ideclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "e efmay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( parent .hasChildren (  )   == 1 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < -5 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  ( parent != false && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  (  toRemove.removeChild (  )  > 1L )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "unknowunknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( " vnused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in a" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removedects and can't be remov" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^if  ( toRemove.getChildCount (  )  == 9 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( parent.getChildCount (  )  == 3 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "U" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared i" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "emovmay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>n";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "us" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "edeclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + "i" + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " and can't bemay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^if  ( toRemove.getChildCount (  )  > 1 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^} else if  ( toRemove.getType (  )  == Token.3 && toRemove.getChildCount (  )  > 1 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "nunknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^} else if  ( parent.removeChild (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^nameNode.removeChild (  )  && NodeUtil.mayHaveSideEffects ( toRemove.getFirstChild (  )  )  )  {^268^269^^^^253^283^nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in  declared i" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + "a" + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " have side effec" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.isFunctionAnonymous ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  ( toRemove.getType (  )  == Token.VAR && toRemove.removeChild (  )  > 1 - 4 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "enused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "clardeclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "tsmay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( toRemove.removeChild (  )  == 2 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "sed" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declar" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " side eff" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "nknounknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var us" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "clared ideclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + "t at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "fects a" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( toRemove.removeChild (  )  == 1 - 2 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 10 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  ( toRemove.getType (  )  == Token.VAR ) {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^Node parent = var.getParentNode (  ) ;Node nameNode = var.nameNode;^241^^^^^226^256^Node nameNode = var.nameNode;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^Node toRemove = parent.getParent (  ) ;^242^^^^^227^257^Node toRemove = nameNode.getParent (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^Node toRemove = nameNode.removeChild (  ) ;^242^^^^^227^257^Node toRemove = nameNode.getParent (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^Node toRemove = nameNode .getString (  )  ;^242^^^^^227^257^Node toRemove = nameNode.getParent (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^Node parent = var.getParentNode (  ) ;Node toRemove = nameNode.getParent (  ) ;^242^^^^^227^257^Node toRemove = nameNode.getParent (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^Node parent = toRemove.getParent (  ) ;Node toRemove = nameNode.getParent (  ) ;^242^^^^^227^257^Node toRemove = nameNode.getParent (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^Node parent = nameNode.getParent (  ) ;^243^^^^^228^258^Node parent = toRemove.getParent (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^Node parent = toRemove.removeChild (  ) ;^243^^^^^228^258^Node parent = toRemove.getParent (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^Node parent = var.getParentNode (  ) ;Node parent = toRemove.getParent (  ) ;^243^^^^^228^258^Node parent = toRemove.getParent (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P11_Insert_Donor_Statement]^Node toRemove = nameNode.getParent (  ) ;Node parent = toRemove.getParent (  ) ;^243^^^^^228^258^Node parent = toRemove.getParent (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unkn";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^compiler_.addToDebugLog ( "Unreferenced var: "  |  var.name ) ;^240^^^^^225^255^compiler_.addToDebugLog ( "Unreferenced var: " + var.name ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^compiler_.addToDebugLog ( "Unreferenced var: Unr" + var.name ) ;^240^^^^^225^255^compiler_.addToDebugLog ( "Unreferenced var: " + var.name ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^240^241^^^^225^255^compiler_.addToDebugLog ( "Unreferenced var: " + var.name ) ; Node nameNode = var.nameNode;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^Node toRemove = toRemove.getParent (  ) ;^242^^^^^227^257^Node toRemove = nameNode.getParent (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^Node toRemove = toRemove.removeChild (  ) ;^242^^^^^227^257^Node toRemove = nameNode.getParent (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^242^243^^^^227^257^Node toRemove = nameNode.getParent (  ) ; Node parent = toRemove.getParent (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^Node parent = parent.getParent (  ) ;^243^^^^^228^258^Node parent = toRemove.getParent (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^Node parent = parent.removeChild (  ) ;^243^^^^^228^258^Node parent = toRemove.getParent (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^243^^^^^228^258^Node parent = toRemove.getParent (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^Preconditions.checkState ( toRemove.getType (  )  == Token.VAR && toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP &&^245^246^247^248^^230^260^Preconditions.checkState ( toRemove.getType (  )  == Token.VAR || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP &&^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^Preconditions.checkState ( toRemove.getType (  )  != Token.VAR || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP &&^245^246^247^248^^230^260^Preconditions.checkState ( toRemove.getType (  )  == Token.VAR || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP &&^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^Preconditions.checkState ( nameNode.getType (  )  == Token.VAR || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP &&^245^246^247^248^^230^260^Preconditions.checkState ( toRemove.getType (  )  == Token.VAR || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP &&^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^Preconditions .checkState (  )   == Token.FUNCTION || toRemove.getType (  )  == Token.LP &&^245^246^247^248^^230^260^Preconditions.checkState ( toRemove.getType (  )  == Token.VAR || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP &&^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^Preconditions.checkState ( toRemove.removeChild (  )  == Token.VAR || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP &&^245^246^247^248^^230^260^Preconditions.checkState ( toRemove.getType (  )  == Token.VAR || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP &&^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^Preconditions.checkState ( toRemove .getString (  )   == Token.VAR || toRemove^245^246^247^248^^230^260^Preconditions.checkState ( toRemove.getType (  )  == Token.VAR || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP &&^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^toRemove.getType (  )  == Token.VAR || parent.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION,^246^247^248^249^^231^261^toRemove.getType (  )  == Token.VAR || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION,^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^toRemove.removeChild (  )  == Token.VAR || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION,^246^247^248^249^^231^261^toRemove.getType (  )  == Token.VAR || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION,^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^toRemove.getType (  )  == Token.FUNCTION || parent.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION, "We should only declare vars and functions and function args" ) ;^247^248^249^250^^232^262^toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION, "We should only declare vars and functions and function args" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^toRemove.removeChild (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION, "We should only declare vars and functions and function args" ) ;^247^248^249^250^^232^262^toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION, "We should only declare vars and functions and function args" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^toRemove .getString (  )   == Token.FUNCTION || toRemove^247^248^249^250^^232^262^toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION, "We should only declare vars and functions and function args" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^toRemove.removeChild (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION, "We should only declare vars and functions and function args" ) ;^248^249^250^^^233^263^toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION, "We should only declare vars and functions and function args" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^toRemove .getString (  )   == Token.LP && parent^248^249^250^^^233^263^toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION, "We should only declare vars and functions and function args" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^248^249^250^^^233^263^toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION, "We should only declare vars and functions and function args" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^parent.removeChild (  )  == Token.FUNCTION, "We should only declare vars and functions and function args" ) ;^249^250^^^^234^264^parent.getType (  )  == Token.FUNCTION, "We should only declare vars and functions and function args" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^parent .getString (  )   == Token.FUNCTION, "We should only declare vars and functions and function args" ) ;^249^250^^^^234^264^parent.getType (  )  == Token.FUNCTION, "We should only declare vars and functions and function args" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^249^250^^^^234^264^parent.getType (  )  == Token.FUNCTION, "We should only declare vars and functions and function args" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^parent.removeChild (  )  == Token.FUNCTION )  {^253^^^^^238^268^parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^parent .getString (  )   == Token.FUNCTION )  {^253^^^^^238^268^parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in  dec" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line line" + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "hav" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^if  ( toRemove.getType (  )  < Token.LP && parent.getType (  )  == Token.FUNCTION )  {^252^253^^^^237^267^if  ( toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil .mayHaveSideEffects (  )   )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^} else if  ( toRemove.removeChild (  )  == Token.FUNCTION ) {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < -4 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil .removeChild ( toRemove )   )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  ( toRemove.removeChild (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > type )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^} else if  ( toRemove.getType (  )  == Token.1 && toRemove.getChildCount (  )  > 1 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "red indeclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed may " ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^if  ( toRemove.getChildCount (  )  == 5 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( toRemove.getChildCount (  )  == 1 / 4 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknown><unkn";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "ladeclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "ffect" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>kno";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var Un" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + "at lin" + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removeds and can" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( parent.getChildCount (  )  == 1 - 2 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 5 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^} else if  ( toRemove.getType (  )  == Token.2 && toRemove.getChildCount (  )  > 1 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^} else if  (  toRemove.removeChild (  )  > 0 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^} else if  ( parent != true )  {^295^^^^^280^310^} else if  ( parent != null )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^NodeUtil.isFunctionAnonymous ( toRemove.getFirstChild (  )  )  )  {^269^^^^^254^284^NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "used va" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " decldeclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed may have side effects and can't" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^} else if  ( nameNode.getType (  )  == Token.VAR ) {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "ununknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var s" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "lare" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + "t lin" + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed m" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^if  ( toRemove.getChildCount (  )  == 7 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var Unused v" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line  a" + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in lared " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + "t l" + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removedts and c" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^if  ( toRemove.getChildCount (  )  >= 1 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^} else if  ( nameNode != true )  {^295^^^^^280^310^} else if  ( parent != null )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "owunknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var va" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "e effects and can't be removemay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  > 4 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^toRemove .removeChild ( nameNode )  ;^293^^^^^278^308^toRemove.removeChild ( nameNode ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "no";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "d vnused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + "t lineat line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed have side effects a" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "nownunknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var e" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in lared in" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removeday" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknown><";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused v" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "eclardeclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "ects and canmay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( toRemove.getChildCount (  )  == 1 << 1 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  >  )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 + 0 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^} else if  ( parent != false )  {^295^^^^^280^310^} else if  ( parent != null )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknounknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var ar" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be r" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^} else if  ( toRemove.getType (  )  < Token.VAR && toRemove.getChildCount (  )  > 1 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "dec" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "ha" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "nkno";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var U" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "cldeclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at li" + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "y have " ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var ed" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in  de" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removedy have side effects and can't be r" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 2 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "unknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^} else if  ( parent .getString (  )   == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^NodeUtil .removeChild ( toRemove )   )  {^269^^^^^254^284^NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unusnused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "d can't may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 12 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  (  nameNode.hasChildren (  )  && NodeUtil.isFunctionAnonymous ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "kunknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "cladeclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "t be may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( toRemove.getChildCount (  )  == 1 % 1 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknowunknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " dedeclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "have sidmay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var Unused var" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^if  ( toRemove.getChildCount (  )  ==  )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 8 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in i" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line t " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "ide effects and can't be r" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  (  nameNode.removeChild (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<uunknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removedand ca" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( parent.getChildCount (  )  == 2 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "ow";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "eclar" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "unkunknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "ed va" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be " ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^if  ( toRemove.getChildCount (  )  == 8 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 4 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  ( nameNode != false )  {^295^^^^^280^310^} else if  ( parent != null )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>no";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "nnused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "an't be" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 6 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.removeChild (  )  )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > -5 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "clareddeclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "f" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( toRemove.removeChild (  )  == 1 << 0 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<un";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Ununused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " l" + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in  d" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removede effects and " ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  (  toRemove.getChildCount (  )  > 4 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknunknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "va" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "ar" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at linat line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "ts and can't may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  ( toRemove.getType (  )  == Token.VAR && nameNode.removeChild (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^} else if  (  toRemove.removeChild (  )  > 2 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var Unus" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in eclar" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may " ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^if  ( toRemove.getChildCount (  )  == -8 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( nameNode.removeChild (  )  == 0 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "ecdeclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "s and cmay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "clar" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "ma" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^for  ( Iterator<Var> it = scope.undeclare (  ) ; it.hasNext (  ) ;  )  {^234^^^^^219^249^for  ( Iterator<Var> it = scope.getVars (  ) ; it.hasNext (  ) ;  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^for  ( Iterator<Var> it = scope .getVar (  )  ; it.hasNext (  ) ;  )  {^234^^^^^219^249^for  ( Iterator<Var> it = scope.getVars (  ) ; it.hasNext (  ) ;  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^if  ( !referenced.contains ( var )  && ( var .getInitialValue (  )   || !convention.isExported ( var.name )  )  )  {^237^238^^^^222^252^if  ( !referenced.contains ( var )  && ( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^} else if  ( toRemove .getString (  )   == Token.FUNCTION ) {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 9 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^} else if  ( parent != this && parent .getString (  )   == Token.FOR && parent.getChildCount (  )  < 4 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "nknow";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var Unused" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " d" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "ve s" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( nameNode.removeChild (  )  == 1 - 3 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^logger_.info ( "Unused var "   instanceof   var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "senused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "declared ideclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + "nat line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "demay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "ed vanused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in decl" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line  at l" + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " havmay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^if  ( toRemove.getChildCount (  )  == -1 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( toRemove.getChildCount (  )  == 1 << 0 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "v" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed have side effects" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  ( toRemove .getString (  )   == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "y hmay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "kno";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var used va" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "eddeclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " effects and can't be remmay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var used" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "ay have side effects anmay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var nused" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " lineat line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^} else if  ( parent != false && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^} else if  (  nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.removeChild (  )  )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 2 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "sed vnused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + "at lat line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "ffects and can't bmay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( toRemove.getChildCount (  )  == 1 >>> 1 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>own";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "side effects and can't be remove" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var  var" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removedec" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^if  ( toRemove.getChildCount (  )  < 1 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( toRemove .hasChildren (  )   == 2 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknow";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unu" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removedfects and can't be re" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, parent.removeChild (  )  )  ) ;^285^286^^^^270^300^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  ( parent.getType (  )  == Token.VAR ) {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "ed nused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removedve side effects " ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "unknownunknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "ay h" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "unknown";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var v" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removedd" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  (  toRemove.getChildCount (  )  > 2 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^nameNode .getChildCount (  )   && NodeUtil.mayHaveSideEffects ( toRemove.getFirstChild (  )  )  )  {^268^269^^^^253^283^nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "d" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "have " ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + "t" + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "ay have side efmay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( toRemove.removeChild (  )  == 1 / 0 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "varnused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "c" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed ha" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>nk";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "and may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( parent.getChildCount (  )  == 0 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " decl" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " c" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<u";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "red " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "nusenused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "ed " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "an't be rmay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "wunknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "e" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "may have side effects and can't be rmay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( toRemove.getChildCount (  )  == 1 / 2 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^} else if  ( toRemove.getType (  )  == Token.null && toRemove.getChildCount (  )  > 1 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>ow";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "u" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in la" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line e" + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removeday have si" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < numRemoved_ )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  ( toRemove.getType (  )  == Token.VAR ) {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>unkn";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "and ca" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "n";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "d ideclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removedects and can't " ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^if  ( toRemove.getChildCount (  )  == -6 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 0 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^} else if  ( toRemove.getType (  )  == Token.this && toRemove.getChildCount (  )  > 1 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "ed" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in  in" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "ay have side effects and can't be remomay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "knounknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "ay havemay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in declare" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed ef" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^parent.replaceChild ( nameNode, new Node ( Token.EXPR_RESULT, nameNode .getFirstChild (  )   )  ) ;^285^286^^^^270^300^parent.replaceChild ( toRemove, new Node ( Token.EXPR_RESULT, nameNode.removeFirstChild (  )  )  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "ecldeclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " " ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^Node parent = toRemove .getString (  )  ;^243^^^^^228^258^Node parent = toRemove.getParent (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>o";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^compiler_.addToDebugLog ( "Unreferenced var: "  <=  var.name ) ;^240^^^^^225^255^compiler_.addToDebugLog ( "Unreferenced var: " + var.name ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^compiler_.addToDebugLog ( "cednreferenced var: " + var.name ) ;^240^^^^^225^255^compiler_.addToDebugLog ( "Unreferenced var: " + var.name ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^Preconditions.checkState ( toRemove.getType (  )  > Token.VAR || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP &&^245^246^247^248^^230^260^Preconditions.checkState ( toRemove.getType (  )  == Token.VAR || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP &&^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^Preconditions.checkState ( toRemove.getType (  )  <= Token.VAR || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP &&^245^246^247^248^^230^260^Preconditions.checkState ( toRemove.getType (  )  == Token.VAR || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP &&^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declare" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "remove" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  ( toRemove.removeChild (  )  == Token.FUNCTION ) {^256^257^^^^241^271^} else if  ( toRemove.getType (  )  == Token.FUNCTION && NodeUtil.isFunctionAnonymous ( toRemove )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  (  parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "de effect" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "ve side " ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Un" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "ay have side effects may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "un";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var ed v" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + "t linat line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "'may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^} else if  ( toRemove .getString (  )   == Token.VAR ) {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "nown";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in  decla" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed may h" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "e" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "y ha" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "nounknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "sid" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( toRemove.removeChild (  )  == 4 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^} else if  (  toRemove.getChildCount (  )  > 1 << 2 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unkno";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 0 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>w";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "nuse" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "fects " ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "cdeclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removedmay hav" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "nkn";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var nused var" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "fects and can't be re" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknown><unkno";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "ed varnused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in eclare" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + "lin" + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "ay have side may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "e side effects and c" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( toRemove.getChildCount (  )  == 1 - 0 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "dnused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "red declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "s and ca" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "eclared ideclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removedbe" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 7 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unkunknown>";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var used var" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "y have side ef" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 13 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  (  nameNode .getChildCount (  )   && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^267^268^269^^^252^282^} else if  ( toRemove.getType (  )  == Token.VAR && nameNode.hasChildren (  )  && NodeUtil.mayHaveSideEffects ( nameNode.getFirstChild (  )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  ( toRemove.removeChild (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 >> 4 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "sed varnused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in re" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " effmay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^if  ( toRemove.getChildCount (  )  == -3 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( toRemove.getChildCount (  )  == 1 - 4 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused vnused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removede eff" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "k";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( " var" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "decladeclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "side effects and can't be" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( parent.removeChild (  )  == 0 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var nu" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in red i" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removede side effects" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " mmay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "eclare" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "movmay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>nown";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + "eclaredeclared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removedcan'" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^if  ( toRemove.getChildCount (  )  == 1 >>> 3 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^} else if  ( toRemove.removeChild (  )  == Token.VAR && toRemove.getChildCount (  )  > 3 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "ide effects and can't bemay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 1 )  {^263^264^265^^^248^278^} else if  ( parent != null && parent.getType (  )  == Token.FOR && parent.getChildCount (  )  < 4 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^}  if  (  toRemove .hasChildren (  )   > 1L )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "n't be remo" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "<unknown><unknown";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "nus" + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "ffectmay have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^String inputName = var.input != null ? var.input.getName (  ) : "unk";^272^273^274^^^257^287^String inputName = var.input != null ? var.input.getName (  ) : "<unknown>";^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " have si" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "e effects a" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + "n" + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^if  ( toRemove.getChildCount (  )  == 10 )  {^284^^^^^269^299^if  ( toRemove.getChildCount (  )  == 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "cts and can't be remove" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "vanused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "de effe" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > -1 )  {^289^290^^^^274^304^} else if  ( toRemove.getType (  )  == Token.VAR && toRemove.getChildCount (  )  > 1 )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^Var var = 4 .hasNext (  )  ;^235^^^^^220^250^Var var = it.next (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^Var var = it .hasNext (  )  ;^235^^^^^220^250^Var var = it.next (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^235^^^^^220^250^Var var = it.next (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P13_Insert_Block]^if  ( referenced.contains ( var )  )  {     return ; }^237^^^^^222^252^[Delete]^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^238^239^240^^^223^253^( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {  compiler_.addToDebugLog ( "Unreferenced var: " + var.name ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^( var.isLocal (  )  || !convention .setString ( inputName )   )  )  {^238^^^^^223^253^( var.isLocal (  )  || !convention.isExported ( var.name )  )  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^compiler_.addToDebugLog ( "nre" + var.name ) ;^240^^^^^225^255^compiler_.addToDebugLog ( "Unreferenced var: " + var.name ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^compiler_ .reportCodeChange (  )  ;^240^^^^^225^255^compiler_.addToDebugLog ( "Unreferenced var: " + var.name ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^Preconditions.checkState ( toRemove.getType (  )  >= Token.VAR || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP &&^245^246^247^248^^230^260^Preconditions.checkState ( toRemove.getType (  )  == Token.VAR || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP &&^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^Preconditions.checkState ( parent.getType (  )  == Token.VAR || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP &&^245^246^247^248^^230^260^Preconditions.checkState ( toRemove.getType (  )  == Token.VAR || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP &&^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^Preconditions.checkState ( toRemove.getType (  )  == Token.VAR || toRemove.getType (  )  == Token.1 || toRemove.getType (  )  == Token.LP &&^245^246^247^248^^230^260^Preconditions.checkState ( toRemove.getType (  )  == Token.VAR || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP &&^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^Preconditions.checkState ( toRemove.getType (  )  == Token.VAR || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.3 &&^245^246^247^248^^230^260^Preconditions.checkState ( toRemove.getType (  )  == Token.VAR || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP &&^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in clare" + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + "ay " ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^Node parent = nameNode .getString (  )  ;^243^^^^^228^258^Node parent = toRemove.getParent (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^for  ( Iterator<Var> 0 = scope.getVars (  ) ; it.hasNext (  ) ;  )  {^234^^^^^219^249^for  ( Iterator<Var> it = scope.getVars (  ) ; it.hasNext (  ) ;  )  {^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P2_Replace_Operator]^compiler_.addToDebugLog ( "Unreferenced var: "  >>  var.name ) ;^240^^^^^225^255^compiler_.addToDebugLog ( "Unreferenced var: " + var.name ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^compiler_.addToDebugLog ( "ere" + var.name ) ;^240^^^^^225^255^compiler_.addToDebugLog ( "Unreferenced var: " + var.name ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^240^^^^^225^255^compiler_.addToDebugLog ( "Unreferenced var: " + var.name ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P14_Delete_Statement]^^242^^^^^227^257^Node toRemove = nameNode.getParent (  ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P5_Replace_Variable]^Preconditions.checkState ( toRemove.getType (  )  == Token.4 || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP &&^245^246^247^248^^230^260^Preconditions.checkState ( toRemove.getType (  )  == Token.VAR || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP &&^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P7_Replace_Invocation]^toRemove .getString (  )   == Token.VAR || toRemove^246^247^248^249^^231^261^toRemove.getType (  )  == Token.VAR || toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION,^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P8_Replace_Mix]^toRemove.removeChild (  )  == Token.FUNCTION || parent.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION, "We should only declare vars and functions and function args" ) ;^247^248^249^250^^232^262^toRemove.getType (  )  == Token.FUNCTION || toRemove.getType (  )  == Token.LP && parent.getType (  )  == Token.FUNCTION, "We should only declare vars and functions and function args" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
[P3_Replace_Literal]^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removedve " ) ;^275^276^277^278^^260^290^logger_.info ( "Unused var " + var.name + " declared in " + inputName + " at line " + toRemove.getLineno (  )  + " may have side effects and can't be removed" ) ;^[CLASS] RemoveUnusedVars  [METHOD] removeUnreferencedVars [RETURN_TYPE] void   Scope scope [VARIABLES] AbstractCompiler  compiler  compiler_  boolean  preserveAnonymousFunctionNames  removeGlobals  Set  referenced  warnedVars_  Scope  scope  Var  var  CodingConvention  convention  Node  nameNode  parent  toRemove  Iterator  it  String  inputName  Logger  logger_  int  MAX_ITERATIONS  i  numRemoved_  type  
