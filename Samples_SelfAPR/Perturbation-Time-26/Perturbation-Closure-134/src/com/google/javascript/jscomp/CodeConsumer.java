[P3_Replace_Literal]^boolean statementNeedsEnded = true;^33^^^^^28^38^boolean statementNeedsEnded = false;^[CLASS] CodeConsumer   [VARIABLES] 
[P8_Replace_Mix]^boolean statementNeedsEnded ;^33^^^^^28^38^boolean statementNeedsEnded = false;^[CLASS] CodeConsumer   [VARIABLES] 
[P12_Insert_Condition]^if  ( statementNeedsEnded )  { boolean statementNeedsEnded = false; }^33^^^^^28^38^boolean statementNeedsEnded = false;^[CLASS] CodeConsumer   [VARIABLES] 
[P3_Replace_Literal]^boolean statementStarted = true;^34^^^^^29^39^boolean statementStarted = false;^[CLASS] CodeConsumer   [VARIABLES] 
[P8_Replace_Mix]^boolean statementStarted ;^34^^^^^29^39^boolean statementStarted = false;^[CLASS] CodeConsumer   [VARIABLES] 
[P3_Replace_Literal]^boolean sawFunction = true;^35^^^^^30^40^boolean sawFunction = false;^[CLASS] CodeConsumer   [VARIABLES] 
[P8_Replace_Mix]^boolean sawFunction  = null ;^35^^^^^30^40^boolean sawFunction = false;^[CLASS] CodeConsumer   [VARIABLES] 
[P3_Replace_Literal]^return false;^82^^^^^81^83^return true;^[CLASS] CodeConsumer  [METHOD] continueProcessing [RETURN_TYPE] boolean   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P7_Replace_Invocation]^append ( identifier ) ;^91^^^^^90^92^add ( identifier ) ;^[CLASS] CodeConsumer  [METHOD] addIdentifier [RETURN_TYPE] void   String identifier [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  String  identifier  
[P14_Delete_Statement]^^91^92^^^^90^92^add ( identifier ) ; }^[CLASS] CodeConsumer  [METHOD] addIdentifier [RETURN_TYPE] void   String identifier [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  String  identifier  
[P3_Replace_Literal]^append ( "" ) ;^106^^^^^105^107^append ( "{" ) ;^[CLASS] CodeConsumer  [METHOD] appendBlockStart [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P7_Replace_Invocation]^add ( "{" ) ;^106^^^^^105^107^append ( "{" ) ;^[CLASS] CodeConsumer  [METHOD] appendBlockStart [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^106^^^^^105^107^append ( "{" ) ;^[CLASS] CodeConsumer  [METHOD] appendBlockStart [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( " " ) ;append ( "{" ) ;^106^^^^^105^107^append ( "{" ) ;^[CLASS] CodeConsumer  [METHOD] appendBlockStart [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( "}" ) ;append ( "{" ) ;^106^^^^^105^107^append ( "{" ) ;^[CLASS] CodeConsumer  [METHOD] appendBlockStart [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( ";" ) ;append ( "{" ) ;^106^^^^^105^107^append ( "{" ) ;^[CLASS] CodeConsumer  [METHOD] appendBlockStart [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( op ) ;append ( "{" ) ;^106^^^^^105^107^append ( "{" ) ;^[CLASS] CodeConsumer  [METHOD] appendBlockStart [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^add ( " " ) ;append ( "{" ) ;^106^^^^^105^107^append ( "{" ) ;^[CLASS] CodeConsumer  [METHOD] appendBlockStart [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^appendOp ( op, binOp ) ;append ( "{" ) ;^106^^^^^105^107^append ( "{" ) ;^[CLASS] CodeConsumer  [METHOD] appendBlockStart [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( newcode ) ;append ( "{" ) ;^106^^^^^105^107^append ( "{" ) ;^[CLASS] CodeConsumer  [METHOD] appendBlockStart [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( ":" ) ;append ( "{" ) ;^106^^^^^105^107^append ( "{" ) ;^[CLASS] CodeConsumer  [METHOD] appendBlockStart [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^add ( "," ) ;append ( "{" ) ;^106^^^^^105^107^append ( "{" ) ;^[CLASS] CodeConsumer  [METHOD] appendBlockStart [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P3_Replace_Literal]^append ( "" ) ;^110^^^^^109^111^append ( "}" ) ;^[CLASS] CodeConsumer  [METHOD] appendBlockEnd [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P7_Replace_Invocation]^add ( "}" ) ;^110^^^^^109^111^append ( "}" ) ;^[CLASS] CodeConsumer  [METHOD] appendBlockEnd [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^110^^^^^109^111^append ( "}" ) ;^[CLASS] CodeConsumer  [METHOD] appendBlockEnd [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( " " ) ;append ( "}" ) ;^110^^^^^109^111^append ( "}" ) ;^[CLASS] CodeConsumer  [METHOD] appendBlockEnd [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( ";" ) ;append ( "}" ) ;^110^^^^^109^111^append ( "}" ) ;^[CLASS] CodeConsumer  [METHOD] appendBlockEnd [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( op ) ;append ( "}" ) ;^110^^^^^109^111^append ( "}" ) ;^[CLASS] CodeConsumer  [METHOD] appendBlockEnd [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^add ( " " ) ;append ( "}" ) ;^110^^^^^109^111^append ( "}" ) ;^[CLASS] CodeConsumer  [METHOD] appendBlockEnd [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^appendOp ( op, binOp ) ;append ( "}" ) ;^110^^^^^109^111^append ( "}" ) ;^[CLASS] CodeConsumer  [METHOD] appendBlockEnd [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( newcode ) ;append ( "}" ) ;^110^^^^^109^111^append ( "}" ) ;^[CLASS] CodeConsumer  [METHOD] appendBlockEnd [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( ":" ) ;append ( "}" ) ;^110^^^^^109^111^append ( "}" ) ;^[CLASS] CodeConsumer  [METHOD] appendBlockEnd [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^add ( "," ) ;append ( "}" ) ;^110^^^^^109^111^append ( "}" ) ;^[CLASS] CodeConsumer  [METHOD] appendBlockEnd [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( "{" ) ;append ( "}" ) ;^110^^^^^109^111^append ( "}" ) ;^[CLASS] CodeConsumer  [METHOD] appendBlockEnd [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P7_Replace_Invocation]^endLine (  ) ;^117^^^^^116^118^maybeCutLine (  ) ;^[CLASS] CodeConsumer  [METHOD] maybeLineBreak [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^117^^^^^116^118^maybeCutLine (  ) ;^[CLASS] CodeConsumer  [METHOD] maybeLineBreak [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^maybeEndStatement (  ) ;maybeCutLine (  ) ;^117^^^^^116^118^maybeCutLine (  ) ;^[CLASS] CodeConsumer  [METHOD] maybeLineBreak [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^endLine (  ) ;maybeCutLine (  ) ;^117^^^^^116^118^maybeCutLine (  ) ;^[CLASS] CodeConsumer  [METHOD] maybeLineBreak [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^maybeLineBreak (  ) ;maybeCutLine (  ) ;^117^^^^^116^118^maybeCutLine (  ) ;^[CLASS] CodeConsumer  [METHOD] maybeLineBreak [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P5_Replace_Variable]^if  ( statementStarted )  {^130^^^^^129^138^if  ( statementNeedsEnded )  {^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P9_Replace_Statement]^if  ( statementContext )  {^130^^^^^129^138^if  ( statementNeedsEnded )  {^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P15_Unwrap_Block]^append(";"); maybeLineBreak();^130^131^132^133^^129^138^if  ( statementNeedsEnded )  { append ( ";" ) ; maybeLineBreak (  ) ; }^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P16_Remove_Block]^^130^131^132^133^^129^138^if  ( statementNeedsEnded )  { append ( ";" ) ; maybeLineBreak (  ) ; }^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P13_Insert_Block]^if  ( statementContext )  {     endLine (  ) ; }^130^^^^^129^138^[Delete]^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P13_Insert_Block]^if  ( statementNeedsEnded )  {     append ( ";" ) ;     maybeLineBreak (  ) ;     endLine (  ) ;     statementNeedsEnded = false; }^130^^^^^129^138^[Delete]^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P3_Replace_Literal]^append ( "" ) ;^131^^^^^129^138^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P7_Replace_Invocation]^add ( ";" ) ;^131^^^^^129^138^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^131^^^^^129^138^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( " " ) ;append ( ";" ) ;^131^^^^^129^138^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( "}" ) ;append ( ";" ) ;^131^^^^^129^138^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( op ) ;append ( ";" ) ;^131^^^^^129^138^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^add ( " " ) ;append ( ";" ) ;^131^^^^^129^138^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^appendOp ( op, binOp ) ;append ( ";" ) ;^131^^^^^129^138^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( newcode ) ;append ( ";" ) ;^131^^^^^129^138^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( ":" ) ;append ( ";" ) ;^131^^^^^129^138^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^add ( "," ) ;append ( ";" ) ;^131^^^^^129^138^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( "{" ) ;append ( ";" ) ;^131^^^^^129^138^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P7_Replace_Invocation]^maybeCutLine (  ) ;^132^^^^^129^138^maybeLineBreak (  ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^132^^^^^129^138^maybeLineBreak (  ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^maybeCutLine (  ) ;maybeLineBreak (  ) ;^132^^^^^129^138^maybeLineBreak (  ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^maybeEndStatement (  ) ;maybeLineBreak (  ) ;^132^^^^^129^138^maybeLineBreak (  ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^endLine (  ) ;maybeLineBreak (  ) ;^132^^^^^129^138^maybeLineBreak (  ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^131^132^^^^129^138^append ( ";" ) ; maybeLineBreak (  ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P7_Replace_Invocation]^appendBlockEnd (  ) ;^134^^^^^129^138^appendBlockStart (  ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^134^^^^^129^138^appendBlockStart (  ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^appendBlockEnd (  ) ;appendBlockStart (  ) ;^134^^^^^129^138^appendBlockStart (  ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^endBlock ( false ) ;appendBlockStart (  ) ;^134^^^^^129^138^appendBlockStart (  ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P7_Replace_Invocation]^maybeCutLine (  ) ;^136^^^^^129^138^endLine (  ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^136^^^^^129^138^endLine (  ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^maybeCutLine (  ) ;endLine (  ) ;^136^^^^^129^138^endLine (  ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^appendBlockEnd (  ) ;endLine (  ) ;^136^^^^^129^138^endLine (  ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^maybeLineBreak (  ) ;endLine (  ) ;^136^^^^^129^138^endLine (  ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^endBlock ( false ) ;endLine (  ) ;^136^^^^^129^138^endLine (  ) ;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P3_Replace_Literal]^statementNeedsEnded = true;^137^^^^^129^138^statementNeedsEnded = false;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^statementStarted = true;statementNeedsEnded = false;^137^^^^^129^138^statementNeedsEnded = false;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^statementNeedsEnded = true;statementNeedsEnded = false;^137^^^^^129^138^statementNeedsEnded = false;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P12_Insert_Condition]^if  ( statementNeedsEnded )  { statementNeedsEnded = false; }^137^^^^^129^138^statementNeedsEnded = false;^[CLASS] CodeConsumer  [METHOD] beginBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P3_Replace_Literal]^endBlock ( true ) ;^141^^^^^140^142^endBlock ( false ) ;^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P7_Replace_Invocation]^endFunction ( false ) ;^141^^^^^140^142^endBlock ( false ) ;^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^141^^^^^140^142^endBlock ( false ) ;^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^appendBlockStart (  ) ;endBlock ( false ) ;^141^^^^^140^142^endBlock ( false ) ;^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^endFunction ( false ) ;endBlock ( false ) ;^141^^^^^140^142^endBlock ( false ) ;^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^endStatement ( false ) ;endBlock ( false ) ;^141^^^^^140^142^endBlock ( false ) ;^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^endLine (  ) ;endBlock ( false ) ;^141^^^^^140^142^endBlock ( false ) ;^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementNeedsEnded  statementStarted  
[P7_Replace_Invocation]^appendBlockStart (  ) ;^145^^^^^144^150^appendBlockEnd (  ) ;^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^145^^^^^144^150^appendBlockEnd (  ) ;^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( " " ) ;appendBlockEnd (  ) ;^145^^^^^144^150^appendBlockEnd (  ) ;^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^maybeEndStatement (  ) ;appendBlockEnd (  ) ;^145^^^^^144^150^appendBlockEnd (  ) ;^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^appendBlockStart (  ) ;appendBlockEnd (  ) ;^145^^^^^144^150^appendBlockEnd (  ) ;^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( op ) ;appendBlockEnd (  ) ;^145^^^^^144^150^appendBlockEnd (  ) ;^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( newcode ) ;appendBlockEnd (  ) ;^145^^^^^144^150^appendBlockEnd (  ) ;^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^endLine (  ) ;appendBlockEnd (  ) ;^145^^^^^144^150^appendBlockEnd (  ) ;^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P5_Replace_Variable]^if  ( statementStarted )  {^146^^^^^144^150^if  ( statementContext )  {^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P9_Replace_Statement]^if  ( statementNeedsEnded )  {^146^^^^^144^150^if  ( statementContext )  {^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P15_Unwrap_Block]^endLine();^146^147^148^^^144^150^if  ( statementContext )  { endLine (  ) ; }^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P16_Remove_Block]^^146^147^148^^^144^150^if  ( statementContext )  { endLine (  ) ; }^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P13_Insert_Block]^if  ( statementStarted )  {     statementNeedsEnded = true; }^146^^^^^144^150^[Delete]^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P13_Insert_Block]^if  ( statementNeedsEnded )  {     append ( ";" ) ;     maybeLineBreak (  ) ; }^146^^^^^144^150^[Delete]^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P7_Replace_Invocation]^maybeCutLine (  ) ;^147^^^^^144^150^endLine (  ) ;^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^147^^^^^144^150^endLine (  ) ;^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^maybeCutLine (  ) ;endLine (  ) ;^147^^^^^144^150^endLine (  ) ;^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^appendBlockEnd (  ) ;endLine (  ) ;^147^^^^^144^150^endLine (  ) ;^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^maybeLineBreak (  ) ;endLine (  ) ;^147^^^^^144^150^endLine (  ) ;^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^endBlock ( false ) ;endLine (  ) ;^147^^^^^144^150^endLine (  ) ;^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P3_Replace_Literal]^statementNeedsEnded = true;^149^^^^^144^150^statementNeedsEnded = false;^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^statementStarted = true;statementNeedsEnded = false;^149^^^^^144^150^statementNeedsEnded = false;^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^statementNeedsEnded = true;statementNeedsEnded = false;^149^^^^^144^150^statementNeedsEnded = false;^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P12_Insert_Condition]^if  ( statementNeedsEnded )  { statementNeedsEnded = false; }^149^^^^^144^150^statementNeedsEnded = false;^[CLASS] CodeConsumer  [METHOD] endBlock [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P7_Replace_Invocation]^append ( "," ) ;^153^^^^^152^155^add ( "," ) ;^[CLASS] CodeConsumer  [METHOD] listSeparator [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^153^154^^^^152^155^add ( "," ) ; maybeLineBreak (  ) ;^[CLASS] CodeConsumer  [METHOD] listSeparator [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( " " ) ;add ( "," ) ;^153^^^^^152^155^add ( "," ) ;^[CLASS] CodeConsumer  [METHOD] listSeparator [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( "}" ) ;add ( "," ) ;^153^^^^^152^155^add ( "," ) ;^[CLASS] CodeConsumer  [METHOD] listSeparator [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( ";" ) ;add ( "," ) ;^153^^^^^152^155^add ( "," ) ;^[CLASS] CodeConsumer  [METHOD] listSeparator [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( op ) ;add ( "," ) ;^153^^^^^152^155^add ( "," ) ;^[CLASS] CodeConsumer  [METHOD] listSeparator [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^add ( " " ) ;add ( "," ) ;^153^^^^^152^155^add ( "," ) ;^[CLASS] CodeConsumer  [METHOD] listSeparator [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( ":" ) ;add ( "," ) ;^153^^^^^152^155^add ( "," ) ;^[CLASS] CodeConsumer  [METHOD] listSeparator [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( "{" ) ;add ( "," ) ;^153^^^^^152^155^add ( "," ) ;^[CLASS] CodeConsumer  [METHOD] listSeparator [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P7_Replace_Invocation]^maybeCutLine (  ) ;^154^^^^^152^155^maybeLineBreak (  ) ;^[CLASS] CodeConsumer  [METHOD] listSeparator [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^154^^^^^152^155^maybeLineBreak (  ) ;^[CLASS] CodeConsumer  [METHOD] listSeparator [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^maybeCutLine (  ) ;maybeLineBreak (  ) ;^154^^^^^152^155^maybeLineBreak (  ) ;^[CLASS] CodeConsumer  [METHOD] listSeparator [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^maybeEndStatement (  ) ;maybeLineBreak (  ) ;^154^^^^^152^155^maybeLineBreak (  ) ;^[CLASS] CodeConsumer  [METHOD] listSeparator [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^endLine (  ) ;maybeLineBreak (  ) ;^154^^^^^152^155^maybeLineBreak (  ) ;^[CLASS] CodeConsumer  [METHOD] listSeparator [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P3_Replace_Literal]^endStatement ( true ) ;^164^^^^^163^165^endStatement ( false ) ;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P7_Replace_Invocation]^endFunction ( false ) ;^164^^^^^163^165^endStatement ( false ) ;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^164^^^^^163^165^endStatement ( false ) ;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^maybeEndStatement (  ) ;endStatement ( false ) ;^164^^^^^163^165^endStatement ( false ) ;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^endFunction ( false ) ;endStatement ( false ) ;^164^^^^^163^165^endStatement ( false ) ;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^endBlock ( false ) ;endStatement ( false ) ;^164^^^^^163^165^endStatement ( false ) ;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   [VARIABLES] boolean  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P5_Replace_Variable]^if  ( statementNeedsEnded )  {^168^^^^^167^175^if  ( needSemiColon )  {^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P13_Insert_Block]^if  ( statementNeedsEnded )  {     append ( ";" ) ;     maybeLineBreak (  ) ;     endLine (  ) ;     statementNeedsEnded = false; }^168^^^^^167^175^[Delete]^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P5_Replace_Variable]^} else if  ( statementContext )  {^172^^^^^167^175^} else if  ( statementStarted )  {^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P6_Replace_Expression]^} else {^172^^^^^167^175^} else if  ( statementStarted )  {^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P15_Unwrap_Block]^statementNeedsEnded = true;^172^173^174^^^167^175^} else if  ( statementStarted )  { statementNeedsEnded = true; }^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P16_Remove_Block]^^172^173^174^^^167^175^} else if  ( statementStarted )  { statementNeedsEnded = true; }^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P13_Insert_Block]^if  ( statementContext )  {     endLine (  ) ; }^172^^^^^167^175^[Delete]^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P3_Replace_Literal]^statementNeedsEnded = false;^173^^^^^167^175^statementNeedsEnded = true;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^statementStarted = true;statementNeedsEnded = true;^173^^^^^167^175^statementNeedsEnded = true;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^statementNeedsEnded = false;statementNeedsEnded = true;^173^^^^^167^175^statementNeedsEnded = true;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P12_Insert_Condition]^if  ( statementNeedsEnded )  { statementNeedsEnded = true; }^173^^^^^167^175^statementNeedsEnded = true;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P3_Replace_Literal]^statementNeedsEnded = true;^171^^^^^167^175^statementNeedsEnded = false;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^statementStarted = true;statementNeedsEnded = false;^171^^^^^167^175^statementNeedsEnded = false;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^statementNeedsEnded = true;statementNeedsEnded = false;^171^^^^^167^175^statementNeedsEnded = false;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P12_Insert_Condition]^if  ( statementNeedsEnded )  { statementNeedsEnded = false; }^171^^^^^167^175^statementNeedsEnded = false;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P7_Replace_Invocation]^add ( ";" ) ;^169^^^^^167^175^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^169^170^^^^167^175^append ( ";" ) ; maybeLineBreak (  ) ;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( " " ) ;append ( ";" ) ;^169^^^^^167^175^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( "}" ) ;append ( ";" ) ;^169^^^^^167^175^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( op ) ;append ( ";" ) ;^169^^^^^167^175^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^add ( " " ) ;append ( ";" ) ;^169^^^^^167^175^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^appendOp ( op, binOp ) ;append ( ";" ) ;^169^^^^^167^175^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( newcode ) ;append ( ";" ) ;^169^^^^^167^175^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( ":" ) ;append ( ";" ) ;^169^^^^^167^175^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^add ( "," ) ;append ( ";" ) ;^169^^^^^167^175^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( "{" ) ;append ( ";" ) ;^169^^^^^167^175^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P7_Replace_Invocation]^maybeCutLine (  ) ;^170^^^^^167^175^maybeLineBreak (  ) ;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^170^^^^^167^175^maybeLineBreak (  ) ;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^maybeCutLine (  ) ;maybeLineBreak (  ) ;^170^^^^^167^175^maybeLineBreak (  ) ;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^maybeEndStatement (  ) ;maybeLineBreak (  ) ;^170^^^^^167^175^maybeLineBreak (  ) ;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^endLine (  ) ;maybeLineBreak (  ) ;^170^^^^^167^175^maybeLineBreak (  ) ;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P3_Replace_Literal]^append ( "" ) ;^169^^^^^167^175^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^169^^^^^167^175^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^170^171^^^^167^175^maybeLineBreak (  ) ; statementNeedsEnded = false;^[CLASS] CodeConsumer  [METHOD] endStatement [RETURN_TYPE] void   boolean needSemiColon [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P5_Replace_Variable]^if  ( statementStarted )  {^183^^^^^181^190^if  ( statementNeedsEnded )  {^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P8_Replace_Mix]^if  ( statementContext )  {^183^^^^^181^190^if  ( statementNeedsEnded )  {^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P15_Unwrap_Block]^append(";"); maybeLineBreak(); endLine(); statementNeedsEnded = false;^183^184^185^186^187^181^190^if  ( statementNeedsEnded )  { append ( ";" ) ; maybeLineBreak (  ) ; endLine (  ) ; statementNeedsEnded = false; }^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P16_Remove_Block]^^183^184^185^186^187^181^190^if  ( statementNeedsEnded )  { append ( ";" ) ; maybeLineBreak (  ) ; endLine (  ) ; statementNeedsEnded = false; }^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P3_Replace_Literal]^statementNeedsEnded = true;^187^^^^^181^190^statementNeedsEnded = false;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^statementStarted = true;statementNeedsEnded = false;^187^^^^^181^190^statementNeedsEnded = false;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^statementNeedsEnded = true;statementNeedsEnded = false;^187^^^^^181^190^statementNeedsEnded = false;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P12_Insert_Condition]^if  ( statementNeedsEnded )  { statementNeedsEnded = false; }^187^^^^^181^190^statementNeedsEnded = false;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P3_Replace_Literal]^append ( "" ) ;^184^^^^^181^190^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P7_Replace_Invocation]^add ( ";" ) ;^184^^^^^181^190^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^184^185^^^^181^190^append ( ";" ) ; maybeLineBreak (  ) ;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( " " ) ;append ( ";" ) ;^184^^^^^181^190^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( "}" ) ;append ( ";" ) ;^184^^^^^181^190^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( op ) ;append ( ";" ) ;^184^^^^^181^190^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^add ( " " ) ;append ( ";" ) ;^184^^^^^181^190^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^appendOp ( op, binOp ) ;append ( ";" ) ;^184^^^^^181^190^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( newcode ) ;append ( ";" ) ;^184^^^^^181^190^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( ":" ) ;append ( ";" ) ;^184^^^^^181^190^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^add ( "," ) ;append ( ";" ) ;^184^^^^^181^190^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( "{" ) ;append ( ";" ) ;^184^^^^^181^190^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P7_Replace_Invocation]^maybeCutLine (  ) ;^185^^^^^181^190^maybeLineBreak (  ) ;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^185^^^^^181^190^maybeLineBreak (  ) ;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^maybeCutLine (  ) ;maybeLineBreak (  ) ;^185^^^^^181^190^maybeLineBreak (  ) ;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^maybeEndStatement (  ) ;maybeLineBreak (  ) ;^185^^^^^181^190^maybeLineBreak (  ) ;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^endLine (  ) ;maybeLineBreak (  ) ;^185^^^^^181^190^maybeLineBreak (  ) ;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P7_Replace_Invocation]^maybeCutLine (  ) ;^186^^^^^181^190^endLine (  ) ;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^186^187^^^^181^190^endLine (  ) ; statementNeedsEnded = false;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^maybeCutLine (  ) ;endLine (  ) ;^186^^^^^181^190^endLine (  ) ;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^appendBlockEnd (  ) ;endLine (  ) ;^186^^^^^181^190^endLine (  ) ;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^maybeLineBreak (  ) ;endLine (  ) ;^186^^^^^181^190^endLine (  ) ;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^endBlock ( false ) ;endLine (  ) ;^186^^^^^181^190^endLine (  ) ;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P12_Insert_Condition]^if  ( statementNeedsEnded )  { endLine (  ) ; statementNeedsEnded = false; }^186^187^^^^181^190^endLine (  ) ; statementNeedsEnded = false;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^184^^^^^181^190^append ( ";" ) ;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^185^186^^^^181^190^maybeLineBreak (  ) ; endLine (  ) ;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^186^^^^^181^190^endLine (  ) ;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P3_Replace_Literal]^statementStarted = false;^189^^^^^181^190^statementStarted = true;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^statementNeedsEnded = false;statementStarted = true;^189^^^^^181^190^statementStarted = true;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^statementNeedsEnded = true;statementStarted = true;^189^^^^^181^190^statementStarted = true;^[CLASS] CodeConsumer  [METHOD] maybeEndStatement [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P3_Replace_Literal]^endFunction ( true ) ;^193^^^^^192^194^endFunction ( false ) ;^[CLASS] CodeConsumer  [METHOD] endFunction [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P7_Replace_Invocation]^endBlock ( false ) ;^193^^^^^192^194^endFunction ( false ) ;^[CLASS] CodeConsumer  [METHOD] endFunction [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^193^^^^^192^194^endFunction ( false ) ;^[CLASS] CodeConsumer  [METHOD] endFunction [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^endStatement ( false ) ;endFunction ( false ) ;^193^^^^^192^194^endFunction ( false ) ;^[CLASS] CodeConsumer  [METHOD] endFunction [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^endBlock ( false ) ;endFunction ( false ) ;^193^^^^^192^194^endFunction ( false ) ;^[CLASS] CodeConsumer  [METHOD] endFunction [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P3_Replace_Literal]^sawFunction = false;^197^^^^^196^201^sawFunction = true;^[CLASS] CodeConsumer  [METHOD] endFunction [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P5_Replace_Variable]^if  ( statementStarted )  {^198^^^^^196^201^if  ( statementContext )  {^[CLASS] CodeConsumer  [METHOD] endFunction [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P9_Replace_Statement]^if  ( statementNeedsEnded )  {^198^^^^^196^201^if  ( statementContext )  {^[CLASS] CodeConsumer  [METHOD] endFunction [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P15_Unwrap_Block]^endLine();^198^199^200^^^196^201^if  ( statementContext )  { endLine (  ) ; }^[CLASS] CodeConsumer  [METHOD] endFunction [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P16_Remove_Block]^^198^199^200^^^196^201^if  ( statementContext )  { endLine (  ) ; }^[CLASS] CodeConsumer  [METHOD] endFunction [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P13_Insert_Block]^if  ( statementStarted )  {     statementNeedsEnded = true; }^198^^^^^196^201^[Delete]^[CLASS] CodeConsumer  [METHOD] endFunction [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P13_Insert_Block]^if  ( statementNeedsEnded )  {     append ( ";" ) ;     maybeLineBreak (  ) ; }^198^^^^^196^201^[Delete]^[CLASS] CodeConsumer  [METHOD] endFunction [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P7_Replace_Invocation]^maybeCutLine (  ) ;^199^^^^^196^201^endLine (  ) ;^[CLASS] CodeConsumer  [METHOD] endFunction [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^199^^^^^196^201^endLine (  ) ;^[CLASS] CodeConsumer  [METHOD] endFunction [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^maybeCutLine (  ) ;endLine (  ) ;^199^^^^^196^201^endLine (  ) ;^[CLASS] CodeConsumer  [METHOD] endFunction [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^appendBlockEnd (  ) ;endLine (  ) ;^199^^^^^196^201^endLine (  ) ;^[CLASS] CodeConsumer  [METHOD] endFunction [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^maybeLineBreak (  ) ;endLine (  ) ;^199^^^^^196^201^endLine (  ) ;^[CLASS] CodeConsumer  [METHOD] endFunction [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^endBlock ( false ) ;endLine (  ) ;^199^^^^^196^201^endLine (  ) ;^[CLASS] CodeConsumer  [METHOD] endFunction [RETURN_TYPE] void   boolean statementContext [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P3_Replace_Literal]^append ( "" ) ;^204^^^^^203^205^append ( ":" ) ;^[CLASS] CodeConsumer  [METHOD] beginCaseBody [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P7_Replace_Invocation]^add ( ":" ) ;^204^^^^^203^205^append ( ":" ) ;^[CLASS] CodeConsumer  [METHOD] beginCaseBody [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^204^^^^^203^205^append ( ":" ) ;^[CLASS] CodeConsumer  [METHOD] beginCaseBody [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( " " ) ;append ( ":" ) ;^204^^^^^203^205^append ( ":" ) ;^[CLASS] CodeConsumer  [METHOD] beginCaseBody [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( "}" ) ;append ( ":" ) ;^204^^^^^203^205^append ( ":" ) ;^[CLASS] CodeConsumer  [METHOD] beginCaseBody [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( ";" ) ;append ( ":" ) ;^204^^^^^203^205^append ( ":" ) ;^[CLASS] CodeConsumer  [METHOD] beginCaseBody [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( op ) ;append ( ":" ) ;^204^^^^^203^205^append ( ":" ) ;^[CLASS] CodeConsumer  [METHOD] beginCaseBody [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^add ( " " ) ;append ( ":" ) ;^204^^^^^203^205^append ( ":" ) ;^[CLASS] CodeConsumer  [METHOD] beginCaseBody [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^appendOp ( op, binOp ) ;append ( ":" ) ;^204^^^^^203^205^append ( ":" ) ;^[CLASS] CodeConsumer  [METHOD] beginCaseBody [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( newcode ) ;append ( ":" ) ;^204^^^^^203^205^append ( ":" ) ;^[CLASS] CodeConsumer  [METHOD] beginCaseBody [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^add ( "," ) ;append ( ":" ) ;^204^^^^^203^205^append ( ":" ) ;^[CLASS] CodeConsumer  [METHOD] beginCaseBody [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P11_Insert_Donor_Statement]^append ( "{" ) ;append ( ":" ) ;^204^^^^^203^205^append ( ":" ) ;^[CLASS] CodeConsumer  [METHOD] beginCaseBody [RETURN_TYPE] void   [VARIABLES] boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P7_Replace_Invocation]^maybeCutLine (  ) ;^211^^^^^210^226^maybeEndStatement (  ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P14_Delete_Statement]^^211^^^^^210^226^maybeEndStatement (  ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P11_Insert_Donor_Statement]^maybeCutLine (  ) ;maybeEndStatement (  ) ;^211^^^^^210^226^maybeEndStatement (  ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P11_Insert_Donor_Statement]^appendBlockEnd (  ) ;maybeEndStatement (  ) ;^211^^^^^210^226^maybeEndStatement (  ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P11_Insert_Donor_Statement]^endStatement ( false ) ;maybeEndStatement (  ) ;^211^^^^^210^226^maybeEndStatement (  ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P11_Insert_Donor_Statement]^maybeLineBreak (  ) ;maybeEndStatement (  ) ;^211^^^^^210^226^maybeEndStatement (  ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P2_Replace_Operator]^if  ( newcode.length (  )  >= 0 )  {^213^^^^^210^226^if  ( newcode.length (  )  == 0 )  {^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P3_Replace_Literal]^if  ( newcode.length (  )  == -6 )  {^213^^^^^210^226^if  ( newcode.length (  )  == 0 )  {^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P3_Replace_Literal]^if  ( newcode.length() - 9  == 0 )  {^213^^^^^210^226^if  ( newcode.length (  )  == 0 )  {^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P7_Replace_Invocation]^if  ( newcode.charAt (  )  == 0 )  {^213^^^^^210^226^if  ( newcode.length (  )  == 0 )  {^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P8_Replace_Mix]^if  ( newcode.length (  )  == 0  )  {^213^^^^^210^226^if  ( newcode.length (  )  == 0 )  {^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P15_Unwrap_Block]^return ;^213^214^215^^^210^226^if  ( newcode.length (  )  == 0 )  { return; }^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P16_Remove_Block]^^213^214^215^^^210^226^if  ( newcode.length (  )  == 0 )  { return; }^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P3_Replace_Literal]^if  ( newcode.length() + 8  == 0 )  {^213^^^^^210^226^if  ( newcode.length (  )  == 0 )  {^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P1_Replace_Type]^int c = newcode.charAt ( 0 ) ;^217^^^^^210^226^char c = newcode.charAt ( 0 ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P3_Replace_Literal]^char c = newcode.charAt ( -6 ) ;^217^^^^^210^226^char c = newcode.charAt ( 0 ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P11_Insert_Donor_Statement]^char first = op.charAt ( 0 ) ;char c = newcode.charAt ( 0 ) ;^217^^^^^210^226^char c = newcode.charAt ( 0 ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P11_Insert_Donor_Statement]^char prev = getLastChar (  ) ;char c = newcode.charAt ( 0 ) ;^217^^^^^210^226^char c = newcode.charAt ( 0 ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P3_Replace_Literal]^char c = newcode.charAt ( 2 ) ;^217^^^^^210^226^char c = newcode.charAt ( 0 ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P14_Delete_Statement]^^217^^^^^210^226^char c = newcode.charAt ( 0 ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P2_Replace_Operator]^if  (  ( isWordChar ( c )  || c == '\\' )  || isWordChar ( getLastChar (  )  )  )  {^218^219^^^^210^226^if  (  ( isWordChar ( c )  || c == '\\' )  && isWordChar ( getLastChar (  )  )  )  {^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P2_Replace_Operator]^if  (  ( isWordChar ( c )  && c == '\\' )  && isWordChar ( getLastChar (  )  )  )  {^218^219^^^^210^226^if  (  ( isWordChar ( c )  || c == '\\' )  && isWordChar ( getLastChar (  )  )  )  {^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P2_Replace_Operator]^if  (  ( isWordChar ( c )  || c != '\\' )  && isWordChar ( getLastChar (  )  )  )  {^218^219^^^^210^226^if  (  ( isWordChar ( c )  || c == '\\' )  && isWordChar ( getLastChar (  )  )  )  {^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P6_Replace_Expression]^if  (  ( isWordChar ( c )  ) {^218^219^^^^210^226^if  (  ( isWordChar ( c )  || c == '\\' )  && isWordChar ( getLastChar (  )  )  )  {^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P6_Replace_Expression]^if  (  c == '\\' )  && isWordChar ( getLastChar (  )  )  )  {^218^219^^^^210^226^if  (  ( isWordChar ( c )  || c == '\\' )  && isWordChar ( getLastChar (  )  )  )  {^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P6_Replace_Expression]^if  ( isWordChar(c || c == '\\') )  {^218^219^^^^210^226^if  (  ( isWordChar ( c )  || c == '\\' )  && isWordChar ( getLastChar (  )  )  )  {^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P6_Replace_Expression]^if  ( c == '\\' )  {^218^219^^^^210^226^if  (  ( isWordChar ( c )  || c == '\\' )  && isWordChar ( getLastChar (  )  )  )  {^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P7_Replace_Invocation]^if  (  ( endBlock ( c )  || c == '\\' )  && isWordChar ( getLastChar (  )  )  )  {^218^219^^^^210^226^if  (  ( isWordChar ( c )  || c == '\\' )  && isWordChar ( getLastChar (  )  )  )  {^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P7_Replace_Invocation]^if  (  ( getLastChar ( c )  || c == '\\' )  && isWordChar ( getLastChar (  )  )  )  {^218^219^^^^210^226^if  (  ( isWordChar ( c )  || c == '\\' )  && isWordChar ( getLastChar (  )  )  )  {^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P7_Replace_Invocation]^if  (  ( isWordChar ( c )  || c == '\\' )  && isWordChar ( endLine (  )  )  )  {^218^219^^^^210^226^if  (  ( isWordChar ( c )  || c == '\\' )  && isWordChar ( getLastChar (  )  )  )  {^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P15_Unwrap_Block]^append(" ");^218^219^^^222^210^226^if  (  ( isWordChar ( c )  || c == '\\' )  && isWordChar ( getLastChar (  )  )  )  { append ( " " ) ; }^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P16_Remove_Block]^^218^219^^^222^210^226^if  (  ( isWordChar ( c )  || c == '\\' )  && isWordChar ( getLastChar (  )  )  )  { append ( " " ) ; }^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P7_Replace_Invocation]^add ( " " ) ;^222^^^^^210^226^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P14_Delete_Statement]^^222^^^^^210^226^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P11_Insert_Donor_Statement]^append ( "}" ) ;append ( " " ) ;^222^^^^^210^226^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P11_Insert_Donor_Statement]^append ( ";" ) ;append ( " " ) ;^222^^^^^210^226^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P11_Insert_Donor_Statement]^append ( op ) ;append ( " " ) ;^222^^^^^210^226^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P11_Insert_Donor_Statement]^add ( " " ) ;append ( " " ) ;^222^^^^^210^226^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P11_Insert_Donor_Statement]^appendOp ( op, binOp ) ;append ( " " ) ;^222^^^^^210^226^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P11_Insert_Donor_Statement]^append ( newcode ) ;append ( " " ) ;^222^^^^^210^226^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P11_Insert_Donor_Statement]^appendBlockEnd (  ) ;append ( " " ) ;^222^^^^^210^226^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P11_Insert_Donor_Statement]^append ( ":" ) ;append ( " " ) ;^222^^^^^210^226^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P11_Insert_Donor_Statement]^add ( "," ) ;append ( " " ) ;^222^^^^^210^226^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P11_Insert_Donor_Statement]^append ( "{" ) ;append ( " " ) ;^222^^^^^210^226^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P7_Replace_Invocation]^getLastChar ( getLastChar (  )  )  )  {^219^^^^^210^226^isWordChar ( getLastChar (  )  )  )  {^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P7_Replace_Invocation]^isWordChar ( endLine (  )  )  )  {^219^^^^^210^226^isWordChar ( getLastChar (  )  )  )  {^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P3_Replace_Literal]^append ( "" ) ;^222^^^^^210^226^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P7_Replace_Invocation]^add ( newcode ) ;^225^^^^^210^226^append ( newcode ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P14_Delete_Statement]^^225^^^^^210^226^append ( newcode ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P11_Insert_Donor_Statement]^append ( " " ) ;append ( newcode ) ;^225^^^^^210^226^append ( newcode ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P11_Insert_Donor_Statement]^append ( "}" ) ;append ( newcode ) ;^225^^^^^210^226^append ( newcode ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P11_Insert_Donor_Statement]^append ( ";" ) ;append ( newcode ) ;^225^^^^^210^226^append ( newcode ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P11_Insert_Donor_Statement]^append ( op ) ;append ( newcode ) ;^225^^^^^210^226^append ( newcode ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P11_Insert_Donor_Statement]^appendOp ( op, binOp ) ;append ( newcode ) ;^225^^^^^210^226^append ( newcode ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P11_Insert_Donor_Statement]^appendBlockEnd (  ) ;append ( newcode ) ;^225^^^^^210^226^append ( newcode ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P11_Insert_Donor_Statement]^append ( ":" ) ;append ( newcode ) ;^225^^^^^210^226^append ( newcode ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P11_Insert_Donor_Statement]^append ( "{" ) ;append ( newcode ) ;^225^^^^^210^226^append ( newcode ) ;^[CLASS] CodeConsumer  [METHOD] add [RETURN_TYPE] void   String newcode [VARIABLES] char  c  boolean  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  newcode  
[P7_Replace_Invocation]^add ( op ) ;^229^^^^^228^230^append ( op ) ;^[CLASS] CodeConsumer  [METHOD] appendOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P14_Delete_Statement]^^229^^^^^228^230^append ( op ) ;^[CLASS] CodeConsumer  [METHOD] appendOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( " " ) ;append ( op ) ;^229^^^^^228^230^append ( op ) ;^[CLASS] CodeConsumer  [METHOD] appendOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( "}" ) ;append ( op ) ;^229^^^^^228^230^append ( op ) ;^[CLASS] CodeConsumer  [METHOD] appendOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( ";" ) ;append ( op ) ;^229^^^^^228^230^append ( op ) ;^[CLASS] CodeConsumer  [METHOD] appendOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^add ( " " ) ;append ( op ) ;^229^^^^^228^230^append ( op ) ;^[CLASS] CodeConsumer  [METHOD] appendOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^appendOp ( op, binOp ) ;append ( op ) ;^229^^^^^228^230^append ( op ) ;^[CLASS] CodeConsumer  [METHOD] appendOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( newcode ) ;append ( op ) ;^229^^^^^228^230^append ( op ) ;^[CLASS] CodeConsumer  [METHOD] appendOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^appendBlockEnd (  ) ;append ( op ) ;^229^^^^^228^230^append ( op ) ;^[CLASS] CodeConsumer  [METHOD] appendOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( ":" ) ;append ( op ) ;^229^^^^^228^230^append ( op ) ;^[CLASS] CodeConsumer  [METHOD] appendOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^add ( "," ) ;append ( op ) ;^229^^^^^228^230^append ( op ) ;^[CLASS] CodeConsumer  [METHOD] appendOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( "{" ) ;append ( op ) ;^229^^^^^228^230^append ( op ) ;^[CLASS] CodeConsumer  [METHOD] appendOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P7_Replace_Invocation]^maybeCutLine (  ) ;^233^^^^^232^260^maybeEndStatement (  ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P14_Delete_Statement]^^233^^^^^232^260^maybeEndStatement (  ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^maybeCutLine (  ) ;maybeEndStatement (  ) ;^233^^^^^232^260^maybeEndStatement (  ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^appendBlockEnd (  ) ;maybeEndStatement (  ) ;^233^^^^^232^260^maybeEndStatement (  ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^endStatement ( false ) ;maybeEndStatement (  ) ;^233^^^^^232^260^maybeEndStatement (  ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^maybeLineBreak (  ) ;maybeEndStatement (  ) ;^233^^^^^232^260^maybeEndStatement (  ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P1_Replace_Type]^String first = op.charAt ( 0 ) ;^235^^^^^232^260^char first = op.charAt ( 0 ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P3_Replace_Literal]^char first = op.charAt ( -1 ) ;^235^^^^^232^260^char first = op.charAt ( 0 ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^char prev = getLastChar (  ) ;char first = op.charAt ( 0 ) ;^235^^^^^232^260^char first = op.charAt ( 0 ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^char c = newcode.charAt ( 0 ) ;char first = op.charAt ( 0 ) ;^235^^^^^232^260^char first = op.charAt ( 0 ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P3_Replace_Literal]^char first = op.charAt ( -3 ) ;^235^^^^^232^260^char first = op.charAt ( 0 ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P14_Delete_Statement]^^235^236^^^^232^260^char first = op.charAt ( 0 ) ; char prev = getLastChar (  ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P1_Replace_Type]^int prev = getLastChar (  ) ;^236^^^^^232^260^char prev = getLastChar (  ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P7_Replace_Invocation]^char prev = endLine (  ) ;^236^^^^^232^260^char prev = getLastChar (  ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^char first = op.charAt ( 0 ) ;char prev = getLastChar (  ) ;^236^^^^^232^260^char prev = getLastChar (  ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^char c = newcode.charAt ( 0 ) ;char prev = getLastChar (  ) ;^236^^^^^232^260^char prev = getLastChar (  ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P14_Delete_Statement]^^236^^^^^232^260^char prev = getLastChar (  ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P2_Replace_Operator]^if  (  ( first == '+' || first == '-' )  || prev == first )  {^238^^^^^232^260^if  (  ( first == '+' || first == '-' )  && prev == first )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P2_Replace_Operator]^if  (  ( first == '+' && first == '-' )  && prev == first )  {^238^^^^^232^260^if  (  ( first == '+' || first == '-' )  && prev == first )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P2_Replace_Operator]^if  (  ( first != '+' || first == '-' )  && prev == first )  {^238^^^^^232^260^if  (  ( first == '+' || first == '-' )  && prev == first )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P2_Replace_Operator]^if  (  ( first == '+' || first <= '-' )  && prev == first )  {^238^^^^^232^260^if  (  ( first == '+' || first == '-' )  && prev == first )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P2_Replace_Operator]^if  (  ( first == '+' || first == '-' )  && prev != first )  {^238^^^^^232^260^if  (  ( first == '+' || first == '-' )  && prev == first )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P2_Replace_Operator]^if  (  ( first >= '+' || first == '-' )  && prev == first )  {^238^^^^^232^260^if  (  ( first == '+' || first == '-' )  && prev == first )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P5_Replace_Variable]^if  (  ( prev == '+' || first == '-' )  && first == first )  {^238^^^^^232^260^if  (  ( first == '+' || first == '-' )  && prev == first )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P6_Replace_Expression]^if  (  ( first == '+' ) {^238^^^^^232^260^if  (  ( first == '+' || first == '-' )  && prev == first )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P6_Replace_Expression]^if  (  first == '-' )  && prev == first )  {^238^^^^^232^260^if  (  ( first == '+' || first == '-' )  && prev == first )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P6_Replace_Expression]^if  ( (first == '+' || first == '-') )  {^238^^^^^232^260^if  (  ( first == '+' || first == '-' )  && prev == first )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P6_Replace_Expression]^if  ( first == '+' )  {^238^^^^^232^260^if  (  ( first == '+' || first == '-' )  && prev == first )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P6_Replace_Expression]^if  ( first == '-' )  {^238^^^^^232^260^if  (  ( first == '+' || first == '-' )  && prev == first )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P6_Replace_Expression]^if  ( prev == first )  {^238^^^^^232^260^if  (  ( first == '+' || first == '-' )  && prev == first )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P6_Replace_Expression]^if  ( isLetter(first) && isWordChar(prev) )  {^238^^^^^232^260^if  (  ( first == '+' || first == '-' )  && prev == first )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P6_Replace_Expression]^if  ( prev == '-' && first == '>' )  {^238^^^^^232^260^if  (  ( first == '+' || first == '-' )  && prev == first )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P6_Replace_Expression]^if  ( prev == '-' )  {^238^^^^^232^260^if  (  ( first == '+' || first == '-' )  && prev == first )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P6_Replace_Expression]^if  ( first == '>' )  {^238^^^^^232^260^if  (  ( first == '+' || first == '-' )  && prev == first )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P13_Insert_Block]^if  (  ( isLetter ( first )  )  &&  ( isWordChar ( prev )  )  )  {     append ( " " ) ; }else     if  (  ( prev == '-' )  &&  ( first == '>' )  )  {         append ( " " ) ;     }^238^^^^^232^260^[Delete]^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P2_Replace_Operator]^} else if  ( Character.isLetter ( first )  || isWordChar ( prev )  )  {^242^243^^^^232^260^} else if  ( Character.isLetter ( first )  && isWordChar ( prev )  )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P5_Replace_Variable]^} else if  ( Character.isLetter ( prev )  && isWordChar ( first )  )  {^242^243^^^^232^260^} else if  ( Character.isLetter ( first )  && isWordChar ( prev )  )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P6_Replace_Expression]^} else if  ( Character.isLetter ( first )  ) {^242^243^^^^232^260^} else if  ( Character.isLetter ( first )  && isWordChar ( prev )  )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P6_Replace_Expression]^} else if  (  isWordChar ( prev )  )  {^242^243^^^^232^260^} else if  ( Character.isLetter ( first )  && isWordChar ( prev )  )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P6_Replace_Expression]^} else if  ( prev == '-' && first == '>' )  {^242^243^^^^232^260^} else if  ( Character.isLetter ( first )  && isWordChar ( prev )  )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P6_Replace_Expression]^} else if  ( prev == '-' )  {^242^243^^^^232^260^} else if  ( Character.isLetter ( first )  && isWordChar ( prev )  )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P6_Replace_Expression]^} else if  ( first == '>' )  {^242^243^^^^232^260^} else if  ( Character.isLetter ( first )  && isWordChar ( prev )  )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P6_Replace_Expression]^} else {^242^243^^^^232^260^} else if  ( Character.isLetter ( first )  && isWordChar ( prev )  )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P7_Replace_Invocation]^} else if  ( Character.isLetterOrDigit ( first )  && isWordChar ( prev )  )  {^242^243^^^^232^260^} else if  ( Character.isLetter ( first )  && isWordChar ( prev )  )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P7_Replace_Invocation]^} else if  ( Character.isLetter ( first )  && endBlock ( prev )  )  {^242^243^^^^232^260^} else if  ( Character.isLetter ( first )  && isWordChar ( prev )  )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P2_Replace_Operator]^} else if  ( prev == '-' || first == '>' )  {^246^^^^^232^260^} else if  ( prev == '-' && first == '>' )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P2_Replace_Operator]^} else if  ( prev >= '-' && first == '>' )  {^246^^^^^232^260^} else if  ( prev == '-' && first == '>' )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P2_Replace_Operator]^} else if  ( prev == '-' && first < '>' )  {^246^^^^^232^260^} else if  ( prev == '-' && first == '>' )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P5_Replace_Variable]^} else if  ( first == '-' && prev == '>' )  {^246^^^^^232^260^} else if  ( prev == '-' && first == '>' )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P6_Replace_Expression]^} else if  ( prev == '-' ) {^246^^^^^232^260^} else if  ( prev == '-' && first == '>' )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P6_Replace_Expression]^} else if  (  first == '>' )  {^246^^^^^232^260^} else if  ( prev == '-' && first == '>' )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P6_Replace_Expression]^} else {^246^^^^^232^260^} else if  ( prev == '-' && first == '>' )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P15_Unwrap_Block]^append(" ");^246^247^248^249^^232^260^} else if  ( prev == '-' && first == '>' )  {  append ( " " ) ; }^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P16_Remove_Block]^^246^247^248^249^^232^260^} else if  ( prev == '-' && first == '>' )  {  append ( " " ) ; }^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P13_Insert_Block]^if  (  ( x < 0 )  &&  ( prev == '-' )  )  {     add ( " " ) ; }^246^^^^^232^260^[Delete]^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P3_Replace_Literal]^append ( "" ) ;^248^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P7_Replace_Invocation]^add ( " " ) ;^248^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P14_Delete_Statement]^^248^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( "}" ) ;append ( " " ) ;^248^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( ";" ) ;append ( " " ) ;^248^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( op ) ;append ( " " ) ;^248^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^add ( " " ) ;append ( " " ) ;^248^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^appendOp ( op, binOp ) ;append ( " " ) ;^248^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( newcode ) ;append ( " " ) ;^248^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^appendBlockEnd (  ) ;append ( " " ) ;^248^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( ":" ) ;append ( " " ) ;^248^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^add ( "," ) ;append ( " " ) ;^248^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( "{" ) ;append ( " " ) ;^248^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P3_Replace_Literal]^append ( "" ) ;^245^^^^^242^249^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P7_Replace_Invocation]^add ( " " ) ;^245^^^^^242^249^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P14_Delete_Statement]^^245^^^^^242^249^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( "}" ) ;append ( " " ) ;^245^^^^^242^249^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( ";" ) ;append ( " " ) ;^245^^^^^242^249^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( op ) ;append ( " " ) ;^245^^^^^242^249^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^add ( " " ) ;append ( " " ) ;^245^^^^^242^249^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^appendOp ( op, binOp ) ;append ( " " ) ;^245^^^^^242^249^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( newcode ) ;append ( " " ) ;^245^^^^^242^249^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^appendBlockEnd (  ) ;append ( " " ) ;^245^^^^^242^249^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( ":" ) ;append ( " " ) ;^245^^^^^242^249^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^add ( "," ) ;append ( " " ) ;^245^^^^^242^249^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( "{" ) ;append ( " " ) ;^245^^^^^242^249^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P2_Replace_Operator]^} else if  ( prev != '-' && first == '>' )  {^246^^^^^232^260^} else if  ( prev == '-' && first == '>' )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P2_Replace_Operator]^} else if  ( prev == '-' && first <= '>' )  {^246^^^^^232^260^} else if  ( prev == '-' && first == '>' )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P5_Replace_Variable]^} else if  ( Character.isLetter ( prev )  && isWordChar ( prev )  )  {^242^243^^^^232^260^} else if  ( Character.isLetter ( first )  && isWordChar ( prev )  )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P5_Replace_Variable]^isWordChar ( first )  )  {^243^^^^^232^260^isWordChar ( prev )  )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P7_Replace_Invocation]^endBlock ( prev )  )  {^243^^^^^232^260^isWordChar ( prev )  )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P14_Delete_Statement]^^243^244^245^^^232^260^isWordChar ( prev )  )  {  append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P3_Replace_Literal]^append ( "" ) ;^245^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P7_Replace_Invocation]^add ( " " ) ;^245^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P14_Delete_Statement]^^245^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( "}" ) ;append ( " " ) ;^245^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( ";" ) ;append ( " " ) ;^245^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( op ) ;append ( " " ) ;^245^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^add ( " " ) ;append ( " " ) ;^245^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^appendOp ( op, binOp ) ;append ( " " ) ;^245^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( newcode ) ;append ( " " ) ;^245^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^appendBlockEnd (  ) ;append ( " " ) ;^245^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( ":" ) ;append ( " " ) ;^245^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^add ( "," ) ;append ( " " ) ;^245^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( "{" ) ;append ( " " ) ;^245^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P3_Replace_Literal]^append ( "" ) ;^241^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P7_Replace_Invocation]^add ( " " ) ;^241^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P14_Delete_Statement]^^241^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( "}" ) ;append ( " " ) ;^241^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( ";" ) ;append ( " " ) ;^241^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( op ) ;append ( " " ) ;^241^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^add ( " " ) ;append ( " " ) ;^241^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^appendOp ( op, binOp ) ;append ( " " ) ;^241^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( newcode ) ;append ( " " ) ;^241^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^appendBlockEnd (  ) ;append ( " " ) ;^241^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( ":" ) ;append ( " " ) ;^241^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^add ( "," ) ;append ( " " ) ;^241^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( "{" ) ;append ( " " ) ;^241^^^^^232^260^append ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P8_Replace_Mix]^} else if  ( Character .isLetterOrDigit ( first )   ) {^242^243^^^^232^260^} else if  ( Character.isLetter ( first )  && isWordChar ( prev )  )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P2_Replace_Operator]^} else if  ( prev == '-' && first >= '>' )  {^246^^^^^232^260^} else if  ( prev == '-' && first == '>' )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P8_Replace_Mix]^}  if  ( prev == '-' ) {^246^^^^^232^260^} else if  ( prev == '-' && first == '>' )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P2_Replace_Operator]^} else if  ( prev < '-' && first == '>' )  {^246^^^^^232^260^} else if  ( prev == '-' && first == '>' )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P8_Replace_Mix]^}  if  ( prev == '-' && first == '>' )  {^246^^^^^232^260^} else if  ( prev == '-' && first == '>' )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P5_Replace_Variable]^appendOp ( op, statementNeedsEnded ) ;^252^^^^^232^260^appendOp ( op, binOp ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P5_Replace_Variable]^appendOp (  binOp ) ;^252^^^^^232^260^appendOp ( op, binOp ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P5_Replace_Variable]^appendOp ( op ) ;^252^^^^^232^260^appendOp ( op, binOp ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P5_Replace_Variable]^appendOp ( binOp, op ) ;^252^^^^^232^260^appendOp ( op, binOp ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P7_Replace_Invocation]^addOp ( op, binOp ) ;^252^^^^^232^260^appendOp ( op, binOp ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P14_Delete_Statement]^^252^^^^^232^260^appendOp ( op, binOp ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( " " ) ;appendOp ( op, binOp ) ;^252^^^^^232^260^appendOp ( op, binOp ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( "}" ) ;appendOp ( op, binOp ) ;^252^^^^^232^260^appendOp ( op, binOp ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( ";" ) ;appendOp ( op, binOp ) ;^252^^^^^232^260^appendOp ( op, binOp ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( op ) ;appendOp ( op, binOp ) ;^252^^^^^232^260^appendOp ( op, binOp ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( newcode ) ;appendOp ( op, binOp ) ;^252^^^^^232^260^appendOp ( op, binOp ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( ":" ) ;appendOp ( op, binOp ) ;^252^^^^^232^260^appendOp ( op, binOp ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^append ( "{" ) ;appendOp ( op, binOp ) ;^252^^^^^232^260^appendOp ( op, binOp ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P5_Replace_Variable]^if  ( statementStarted )  {^257^^^^^232^260^if  ( binOp )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P8_Replace_Mix]^if  ( statementNeedsEnded )  {^257^^^^^232^260^if  ( binOp )  {^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P15_Unwrap_Block]^maybeCutLine();^257^258^259^^^232^260^if  ( binOp )  { maybeCutLine (  ) ; }^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P16_Remove_Block]^^257^258^259^^^232^260^if  ( binOp )  { maybeCutLine (  ) ; }^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P7_Replace_Invocation]^endLine (  ) ;^258^^^^^232^260^maybeCutLine (  ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P14_Delete_Statement]^^258^^^^^232^260^maybeCutLine (  ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^maybeEndStatement (  ) ;maybeCutLine (  ) ;^258^^^^^232^260^maybeCutLine (  ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^endLine (  ) ;maybeCutLine (  ) ;^258^^^^^232^260^maybeCutLine (  ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P11_Insert_Donor_Statement]^maybeLineBreak (  ) ;maybeCutLine (  ) ;^258^^^^^232^260^maybeCutLine (  ) ;^[CLASS] CodeConsumer  [METHOD] addOp [RETURN_TYPE] void   String op boolean binOp [VARIABLES] char  first  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  String  op  
[P1_Replace_Type]^int prev = getLastChar (  ) ;^265^^^^^262^288^char prev = getLastChar (  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P7_Replace_Invocation]^char prev = endLine (  ) ;^265^^^^^262^288^char prev = getLastChar (  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P11_Insert_Donor_Statement]^char first = op.charAt ( 0 ) ;char prev = getLastChar (  ) ;^265^^^^^262^288^char prev = getLastChar (  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P11_Insert_Donor_Statement]^char c = newcode.charAt ( 0 ) ;char prev = getLastChar (  ) ;^265^^^^^262^288^char prev = getLastChar (  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P14_Delete_Statement]^^265^^^^^262^288^char prev = getLastChar (  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^if  ( x < 0 || prev == '-' )  {^266^^^^^262^288^if  ( x < 0 && prev == '-' )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^if  ( x > 0 && prev == '-' )  {^266^^^^^262^288^if  ( x < 0 && prev == '-' )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^if  ( x < 0 && prev < '-' )  {^266^^^^^262^288^if  ( x < 0 && prev == '-' )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P3_Replace_Literal]^if  ( x < 1 && prev == '-' )  {^266^^^^^262^288^if  ( x < 0 && prev == '-' )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P5_Replace_Variable]^if  ( prev < 0 && x == '-' )  {^266^^^^^262^288^if  ( x < 0 && prev == '-' )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P6_Replace_Expression]^if  ( x < 0 ) {^266^^^^^262^288^if  ( x < 0 && prev == '-' )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P6_Replace_Expression]^if  (  prev == '-' )  {^266^^^^^262^288^if  ( x < 0 && prev == '-' )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P8_Replace_Mix]^if  ( x < 3 && prev == '-' )  {^266^^^^^262^288^if  ( x < 0 && prev == '-' )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P15_Unwrap_Block]^add(" ");^266^267^268^^^262^288^if  ( x < 0 && prev == '-' )  { add ( " " ) ; }^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P16_Remove_Block]^^266^267^268^^^262^288^if  ( x < 0 && prev == '-' )  { add ( " " ) ; }^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P13_Insert_Block]^if  (  ( prev == '-' )  &&  ( first == '>' )  )  {     append ( " " ) ; }^266^^^^^262^288^[Delete]^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P7_Replace_Invocation]^append ( " " ) ;^267^^^^^262^288^add ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P14_Delete_Statement]^^267^^^^^262^288^add ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P11_Insert_Donor_Statement]^append ( " " ) ;add ( " " ) ;^267^^^^^262^288^add ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P11_Insert_Donor_Statement]^append ( "}" ) ;add ( " " ) ;^267^^^^^262^288^add ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P11_Insert_Donor_Statement]^append ( ";" ) ;add ( " " ) ;^267^^^^^262^288^add ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P11_Insert_Donor_Statement]^append ( op ) ;add ( " " ) ;^267^^^^^262^288^add ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P11_Insert_Donor_Statement]^append ( ":" ) ;add ( " " ) ;^267^^^^^262^288^add ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P11_Insert_Donor_Statement]^add ( "," ) ;add ( " " ) ;^267^^^^^262^288^add ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P11_Insert_Donor_Statement]^append ( "{" ) ;add ( " " ) ;^267^^^^^262^288^add ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P3_Replace_Literal]^add ( "" ) ;^267^^^^^262^288^add ( " " ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  != value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^while - ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^while  ( mantissa + 10 * Math.pow ( 10, exp + 1 )  == value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^while  ( mantissa / 10 * Math.pow ( 10, exp  ||  1 )  == value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P3_Replace_Literal]^while  ( mantissa / exp * Math.pow ( exp, exp + 1 )  == value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P3_Replace_Literal]^while  ( mantissa / 10 * Math.pow ( 10, exp  )  == value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P3_Replace_Literal]^while  ( mantissa / 16 * Math.pow ( 16, exp + 1 )  == value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P5_Replace_Variable]^while  ( value / 10 * Math.pow ( 10, exp + 1 )  == value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P5_Replace_Variable]^while  ( mantissa / 10 * Math.pow ( 10 + 1 )  == value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P5_Replace_Variable]^while  ( exp / 10 * Math.pow ( 10, mantissa + 1 )  == value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P5_Replace_Variable]^while  ( value / 10 * Math.pow ( 10, exp + 1 )  == mantissa )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P13_Insert_Block]^if  ( x >= 100 )  {     while  (  (  ( mantissa / 10 )  *  ( pow ( 10,  ( exp + 1 )  )  )  )  == value )  {         mantissa /= 10;         exp++;     }  }^275^^^^^262^288^[Delete]^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P3_Replace_Literal]^mantissa /= ;^276^^^^^262^288^mantissa /= 10;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P8_Replace_Mix]^mantissa /= 10 / 2;^276^^^^^262^288^mantissa /= 10;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^if  (  ( long )  x >= x )  {^270^^^^^262^288^if  (  ( long )  x == x )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^if  (  ( long )  x <= x )  {^270^^^^^262^288^if  (  ( long )  x == x )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P6_Replace_Expression]^if  ( x >= 100 )  {^270^^^^^262^288^if  (  ( long )  x == x )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P6_Replace_Expression]^if  ( (mantissa / 10) * pow(10, (exp + 1))) == value )  {^270^^^^^262^288^if  (  ( long )  x == x )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P6_Replace_Expression]^if  ( mantissa / 10 * pow ( 10,  ( exp + 1 )  ) )  {^270^^^^^262^288^if  (  ( long )  x == x )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P6_Replace_Expression]^if  ( mantissa / 10 )  {^270^^^^^262^288^if  (  ( long )  x == x )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P6_Replace_Expression]^if  ( exp + 1 )  {^270^^^^^262^288^if  (  ( long )  x == x )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P6_Replace_Expression]^if  ( exp > 2 )  {^270^^^^^262^288^if  (  ( long )  x == x )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P6_Replace_Expression]^if  (  ( toString ( mantissa )  )  + "E" + toString ( exp ) )  {^270^^^^^262^288^if  (  ( long )  x == x )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P6_Replace_Expression]^if  ( toString ( mantissa )  + "E" )  {^270^^^^^262^288^if  (  ( long )  x == x )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P7_Replace_Invocation]^append ( String.valueOf ( x )  ) ;^286^^^^^270^287^add ( String.valueOf ( x )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P7_Replace_Invocation]^add ( String.charAt ( x )  ) ;^286^^^^^270^287^add ( String.valueOf ( x )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P14_Delete_Statement]^^286^^^^^270^287^add ( String.valueOf ( x )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P11_Insert_Donor_Statement]^add ( Long.toString ( value )  ) ;add ( String.valueOf ( x )  ) ;^286^^^^^270^287^add ( String.valueOf ( x )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  >= value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^while  ( mantissa / 10 * Math.pow ( 10, exp  <=  1 )  == value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P3_Replace_Literal]^while  ( mantissa / 1 * Math.pow ( 1, exp + 1 )  == value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P3_Replace_Literal]^while  ( mantissa / 15 * Math.pow ( 15, exp + 1 )  == value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P8_Replace_Mix]^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == mantissa )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P3_Replace_Literal]^mantissa /= 4;^276^^^^^262^288^mantissa /= 10;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P8_Replace_Mix]^mantissa /= 3;^276^^^^^262^288^mantissa /= 10;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^if  ( x > 100 )  {^274^^^^^262^288^if  ( x >= 100 )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P3_Replace_Literal]^if  ( x >= exp )  {^274^^^^^262^288^if  ( x >= 100 )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P3_Replace_Literal]^if  ( x >= exp0 )  {^274^^^^^262^288^if  ( x >= 100 )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P3_Replace_Literal]^if  ( x >= 60 )  {^274^^^^^262^288^if  ( x >= 100 )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P3_Replace_Literal]^if  ( x >= exp00 )  {^274^^^^^262^288^if  ( x >= 100 )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P6_Replace_Expression]^if  ( (mantissa / 10) * pow(10, (exp + 1))) == value )  {^274^^^^^262^288^if  ( x >= 100 )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P6_Replace_Expression]^if  ( mantissa / 10 * pow ( 10,  ( exp + 1 )  ) )  {^274^^^^^262^288^if  ( x >= 100 )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P6_Replace_Expression]^if  ( mantissa / 10 )  {^274^^^^^262^288^if  ( x >= 100 )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P6_Replace_Expression]^if  ( exp + 1 )  {^274^^^^^262^288^if  ( x >= 100 )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P8_Replace_Mix]^if  ( x >= 100 / 2 )  {^274^^^^^262^288^if  ( x >= 100 )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P9_Replace_Statement]^if  ( exp > 2 )  {^274^^^^^262^288^if  ( x >= 100 )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P15_Unwrap_Block]^while (((mantissa / 10) * (java.lang.Math.pow(10, (exp + 1)))) == value) {    mantissa /= 10;    exp++;} ;^274^275^276^277^278^262^288^if  ( x >= 100 )  { while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  { mantissa /= 10; exp++; }^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P16_Remove_Block]^^274^275^276^277^278^262^288^if  ( x >= 100 )  { while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  { mantissa /= 10; exp++; }^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  > value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^while + ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^while  ( mantissa * 10 * Math.pow ( 10, exp + 1 )  == value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^while  ( mantissa / 10 * Math.pow ( 10, exp  >>  1 )  == value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P3_Replace_Literal]^while  ( mantissa / exp0 * Math.pow ( exp0, exp + exp )  == value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P3_Replace_Literal]^mantissa /= exp;^276^^^^^262^288^mantissa /= 10;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P8_Replace_Mix]^mantissa /= 10 * 0;^276^^^^^262^288^mantissa /= 10;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^while  ( mantissa / 10 * Math.pow ( 10, exp   instanceof   1 )  == value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P3_Replace_Literal]^while  ( mantissa / 12 * Math.pow ( 12, exp + 1 )  == value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P14_Delete_Statement]^^275^276^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  { mantissa /= 10;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^if  ( exp >= 2 )  {^280^^^^^262^288^if  ( exp > 2 )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P3_Replace_Literal]^if  ( exp > exp )  {^280^^^^^262^288^if  ( exp > 2 )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P6_Replace_Expression]^if  (  ( toString ( mantissa )  )  + "E" + toString ( exp ) )  {^280^^^^^262^288^if  ( exp > 2 )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P6_Replace_Expression]^if  ( toString ( mantissa )  + "E" )  {^280^^^^^262^288^if  ( exp > 2 )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P8_Replace_Mix]^if  ( exp > 5 )  {^280^^^^^262^288^if  ( exp > 2 )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P9_Replace_Statement]^if  ( x >= 100 )  {^280^^^^^262^288^if  ( exp > 2 )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P15_Unwrap_Block]^add((((java.lang.Long.toString(mantissa)) + "E") + (java.lang.Integer.toString(exp))));^280^281^282^283^284^262^288^if  ( exp > 2 )  { add ( Long.toString ( mantissa )  + "E" + Integer.toString ( exp )  ) ; } else { add ( Long.toString ( value )  ) ; }^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P16_Remove_Block]^^280^281^282^283^284^262^288^if  ( exp > 2 )  { add ( Long.toString ( mantissa )  + "E" + Integer.toString ( exp )  ) ; } else { add ( Long.toString ( value )  ) ; }^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P5_Replace_Variable]^add ( Long.toString ( mantissa )  ) ;^283^^^^^280^284^add ( Long.toString ( value )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P7_Replace_Invocation]^append ( Long.toString ( value )  ) ;^283^^^^^280^284^add ( Long.toString ( value )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P14_Delete_Statement]^^283^^^^^280^284^add ( Long.toString ( value )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P11_Insert_Donor_Statement]^add ( String.valueOf ( x )  ) ;add ( Long.toString ( value )  ) ;^283^^^^^280^284^add ( Long.toString ( value )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^add ( Long.toString ( mantissa )  |  + "E" + Integer.toString ( exp )  ) ;^281^^^^^262^288^add ( Long.toString ( mantissa )  + "E" + Integer.toString ( exp )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^add ( Long.toString ( mantissa )   ^  "E" + Integer.toString ( exp )  ) ;^281^^^^^262^288^add ( Long.toString ( mantissa )  + "E" + Integer.toString ( exp )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P5_Replace_Variable]^add ( Long.toString ( value )  + "E" + Integer.toString ( exp )  ) ;^281^^^^^262^288^add ( Long.toString ( mantissa )  + "E" + Integer.toString ( exp )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P5_Replace_Variable]^add ( Long.toString ( exp )  + "E" + Integer.toString ( mantissa )  ) ;^281^^^^^262^288^add ( Long.toString ( mantissa )  + "E" + Integer.toString ( exp )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P14_Delete_Statement]^^281^^^^^262^288^add ( Long.toString ( mantissa )  + "E" + Integer.toString ( exp )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P13_Insert_Block]^if  ( exp > 2 )  {     add (  (  (  ( toString ( mantissa )  )  + "E" )  +  ( toString ( exp )  )  )  ) ; }else {     add ( toString ( value )  ) ; }^281^^^^^262^288^[Delete]^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P1_Replace_Type]^short  value =  (  short  )  x;^271^^^^^262^288^long value =  ( long )  x;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P1_Replace_Type]^int  mantissa = value;^272^^^^^262^288^long mantissa = value;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P1_Replace_Type]^short  exp = 0;^273^^^^^262^288^int exp = 0;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P3_Replace_Literal]^int exp = exp;^273^^^^^262^288^int exp = 0;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^while  ( mantissa / 10 * Math.pow ( 10, exp  |  1 )  == value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^add ( Long.toString ( mantissa )  ||  + "E" + Integer.toString ( exp )  ) ;^281^^^^^262^288^add ( Long.toString ( mantissa )  + "E" + Integer.toString ( exp )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^add ( Long.toString ( mantissa )   &  "E" + Integer.toString ( exp )  ) ;^281^^^^^262^288^add ( Long.toString ( mantissa )  + "E" + Integer.toString ( exp )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P5_Replace_Variable]^add ( Long.toString ( mantissa )  ) ;^283^^^^^262^288^add ( Long.toString ( value )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P7_Replace_Invocation]^append ( Long.toString ( value )  ) ;^283^^^^^262^288^add ( Long.toString ( value )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P8_Replace_Mix]^append ( Long.toString ( mantissa )  ) ;^283^^^^^262^288^add ( Long.toString ( value )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P14_Delete_Statement]^^283^^^^^262^288^add ( Long.toString ( value )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P11_Insert_Donor_Statement]^add ( String.valueOf ( x )  ) ;add ( Long.toString ( value )  ) ;^283^^^^^262^288^add ( Long.toString ( value )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^if  ( x < 100 )  {^274^^^^^262^288^if  ( x >= 100 )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P3_Replace_Literal]^if  ( x >= 96 )  {^274^^^^^262^288^if  ( x >= 100 )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P3_Replace_Literal]^if  ( x >= 120 )  {^274^^^^^262^288^if  ( x >= 100 )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P3_Replace_Literal]^if  ( x >= 000 )  {^274^^^^^262^288^if  ( x >= 100 )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P8_Replace_Mix]^if  ( x >= 7 )  {^274^^^^^262^288^if  ( x >= 100 )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  <= value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P3_Replace_Literal]^while  ( mantissa / 2 * Math.pow ( 2, exp + 1 )  == value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P5_Replace_Variable]^while  ( mantissa / 10 * Math.pow ( 10, value + 1 )  == exp )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P8_Replace_Mix]^mantissa /= 8;^276^^^^^262^288^mantissa /= 10;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P3_Replace_Literal]^mantissa /= 7;^276^^^^^262^288^mantissa /= 10;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P8_Replace_Mix]^mantissa /= 10 / 4;^276^^^^^262^288^mantissa /= 10;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P8_Replace_Mix]^if  ( exp > 0 )  {^280^^^^^262^288^if  ( exp > 2 )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^add ( Long.toString ( mantissa )  <=  + "E" + Integer.toString ( exp )  ) ;^281^^^^^262^288^add ( Long.toString ( mantissa )  + "E" + Integer.toString ( exp )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^add ( Long.toString ( mantissa )   <  "E" + Integer.toString ( exp )  ) ;^281^^^^^262^288^add ( Long.toString ( mantissa )  + "E" + Integer.toString ( exp )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P8_Replace_Mix]^mantissa /= 1;^276^^^^^262^288^mantissa /= 10;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P1_Replace_Type]^int  value =  (  int  )  x;^271^^^^^262^288^long value =  ( long )  x;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P1_Replace_Type]^short  mantissa = value;^272^^^^^262^288^long mantissa = value;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P3_Replace_Literal]^int exp = 4;^273^^^^^262^288^int exp = 0;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^while  ( mantissa / 10 * Math.pow ( 10, exp  >=  1 )  == value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P3_Replace_Literal]^while  ( mantissa / 19 * Math.pow ( 19, exp + 1 )  == value )  {^275^^^^^262^288^while  ( mantissa / 10 * Math.pow ( 10, exp + 1 )  == value )  {^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^add ( Long.toString ( mantissa )   ==  "E" + Integer.toString ( exp )  ) ;^281^^^^^262^288^add ( Long.toString ( mantissa )  + "E" + Integer.toString ( exp )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P7_Replace_Invocation]^append ( String.valueOf ( x )  ) ;^286^^^^^262^288^add ( String.valueOf ( x )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P7_Replace_Invocation]^add ( String.charAt ( x )  ) ;^286^^^^^262^288^add ( String.valueOf ( x )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P14_Delete_Statement]^^286^^^^^262^288^add ( String.valueOf ( x )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P11_Insert_Donor_Statement]^add ( Long.toString ( value )  ) ;add ( String.valueOf ( x )  ) ;^286^^^^^262^288^add ( String.valueOf ( x )  ) ;^[CLASS] CodeConsumer  [METHOD] addNumber [RETURN_TYPE] void   double x [VARIABLES] char  prev  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  double  x  long  mantissa  value  int  exp  
[P2_Replace_Operator]^return  ( ch == '_' && ch == '$' || Character.isLetterOrDigit ( ch )  ) ;^291^292^293^^^290^294^return  ( ch == '_' || ch == '$' || Character.isLetterOrDigit ( ch )  ) ;^[CLASS] CodeConsumer  [METHOD] isWordChar [RETURN_TYPE] boolean   char ch [VARIABLES] char  ch  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P2_Replace_Operator]^return  ( ch != '_' || ch == '$' || Character.isLetterOrDigit ( ch )  ) ;^291^292^293^^^290^294^return  ( ch == '_' || ch == '$' || Character.isLetterOrDigit ( ch )  ) ;^[CLASS] CodeConsumer  [METHOD] isWordChar [RETURN_TYPE] boolean   char ch [VARIABLES] char  ch  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P2_Replace_Operator]^return  ( ch == '_' || ch != '$' || Character.isLetterOrDigit ( ch )  ) ;^291^292^293^^^290^294^return  ( ch == '_' || ch == '$' || Character.isLetterOrDigit ( ch )  ) ;^[CLASS] CodeConsumer  [METHOD] isWordChar [RETURN_TYPE] boolean   char ch [VARIABLES] char  ch  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P7_Replace_Invocation]^return  ( ch == '_' || ch == '$' || Character.isLetter ( ch )  ) ;^291^292^293^^^290^294^return  ( ch == '_' || ch == '$' || Character.isLetterOrDigit ( ch )  ) ;^[CLASS] CodeConsumer  [METHOD] isWordChar [RETURN_TYPE] boolean   char ch [VARIABLES] char  ch  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P7_Replace_Invocation]^Character.isLetter ( ch )  ) ;^293^^^^^290^294^Character.isLetterOrDigit ( ch )  ) ;^[CLASS] CodeConsumer  [METHOD] isWordChar [RETURN_TYPE] boolean   char ch [VARIABLES] char  ch  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
[P14_Delete_Statement]^^293^^^^^290^294^Character.isLetterOrDigit ( ch )  ) ;^[CLASS] CodeConsumer  [METHOD] isWordChar [RETURN_TYPE] boolean   char ch [VARIABLES] char  ch  boolean  binOp  needSemiColon  sawFunction  statementContext  statementNeedsEnded  statementStarted  
