[P8_Replace_Mix]^final Set<String> externMethods ;^40^^^^^35^45^final Set<String> externMethods = Sets.newHashSet (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures   [VARIABLES] 
[P8_Replace_Mix]^final Set<String> externMethodsWithoutSignatures ;^43^^^^^38^48^final Set<String> externMethodsWithoutSignatures = Sets.newHashSet (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures   [VARIABLES] 
[P12_Insert_Condition]^if  ( externMethodsWithoutSignatures.contains ( name )  )  { final Set<String> externMethodsWithoutSignatures = Sets.newHashSet (  ) ; }^43^^^^^38^48^final Set<String> externMethodsWithoutSignatures = Sets.newHashSet (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures   [VARIABLES] 
[P8_Replace_Mix]^Set<String> nonMethodProperties = Sets.newHashSet (  ) ;^46^^^^^41^51^final Set<String> nonMethodProperties = Sets.newHashSet (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures   [VARIABLES] 
[P8_Replace_Mix]^Multimap<String, Node> methodDefinitions = HashMultimap.create (  ) ;^48^49^^^^48^49^final Multimap<String, Node> methodDefinitions = HashMultimap.create (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures   [VARIABLES] 
[P8_Replace_Mix]^AbstractCompiler compiler;^51^^^^^46^56^final AbstractCompiler compiler;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures   [VARIABLES] 
[P8_Replace_Mix]^this.compiler =  null;^64^^^^^63^65^this.compiler = compiler;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  
[P14_Delete_Statement]^^68^^^^^67^83^externMethods.clear (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P11_Insert_Donor_Statement]^externMethods.add ( name ) ;externMethods.clear (  ) ;^68^^^^^67^83^externMethods.clear (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P11_Insert_Donor_Statement]^methodDefinitions.clear (  ) ;externMethods.clear (  ) ;^68^^^^^67^83^externMethods.clear (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P11_Insert_Donor_Statement]^externMethodsWithoutSignatures.clear (  ) ;externMethods.clear (  ) ;^68^^^^^67^83^externMethods.clear (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P14_Delete_Statement]^^69^^^^^67^83^externMethodsWithoutSignatures.clear (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P7_Replace_Invocation]^getActingCallback (  ) .reset (  ) ;^70^^^^^67^83^getSignatureStore (  ) .reset (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P14_Delete_Statement]^^70^71^^^^67^83^getSignatureStore (  ) .reset (  ) ; methodDefinitions.clear (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P11_Insert_Donor_Statement]^getSignatureStore (  ) .removeSignature ( name ) ;getSignatureStore (  ) .reset (  ) ;^70^^^^^67^83^getSignatureStore (  ) .reset (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P14_Delete_Statement]^^71^^^^^67^83^methodDefinitions.clear (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P11_Insert_Donor_Statement]^externMethods.clear (  ) ;methodDefinitions.clear (  ) ;^71^^^^^67^83^methodDefinitions.clear (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P11_Insert_Donor_Statement]^externMethodsWithoutSignatures.clear (  ) ;methodDefinitions.clear (  ) ;^71^^^^^67^83^methodDefinitions.clear (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P11_Insert_Donor_Statement]^methodDefinitions.put ( name, function ) ;methodDefinitions.clear (  ) ;^71^^^^^67^83^methodDefinitions.clear (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P2_Replace_Operator]^if  ( externs == null )  {^73^^^^^67^83^if  ( externs != null )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P5_Replace_Variable]^if  ( root != null )  {^73^^^^^67^83^if  ( externs != null )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P8_Replace_Mix]^if  ( externs != false )  {^73^^^^^67^83^if  ( externs != null )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P9_Replace_Statement]^if  ( v == null )  {^73^^^^^67^83^if  ( externs != null )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P15_Unwrap_Block]^com.google.javascript.jscomp.NodeTraversal.traverse(compiler, externs, new com.google.javascript.jscomp.MethodCompilerPass.GetExternMethods());^73^74^75^^^67^83^if  ( externs != null )  { NodeTraversal.traverse ( compiler, externs, new GetExternMethods (  )  ) ; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P16_Remove_Block]^^73^74^75^^^67^83^if  ( externs != null )  { NodeTraversal.traverse ( compiler, externs, new GetExternMethods (  )  ) ; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P4_Replace_Constructor]^NodeTraversal.traverse ( compiler, externs, NodeTraversal.traverse ( compiler, externs,  new GatherSignatures (  )   ) ;^74^^^^^67^83^NodeTraversal.traverse ( compiler, externs, new GetExternMethods (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler, root, new GetExternMethods (  )  ) ;^74^^^^^67^83^NodeTraversal.traverse ( compiler, externs, new GetExternMethods (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler,  new GetExternMethods (  )  ) ;^74^^^^^67^83^NodeTraversal.traverse ( compiler, externs, new GetExternMethods (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverse (  externs, new GetExternMethods (  )  ) ;^74^^^^^67^83^NodeTraversal.traverse ( compiler, externs, new GetExternMethods (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverse ( externs, compiler, new GetExternMethods (  )  ) ;^74^^^^^67^83^NodeTraversal.traverse ( compiler, externs, new GetExternMethods (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P14_Delete_Statement]^^74^^^^^67^83^NodeTraversal.traverse ( compiler, externs, new GetExternMethods (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P11_Insert_Donor_Statement]^NodeTraversal.traverseRoots ( compiler, externsAndJs, getActingCallback (  )  ) ;NodeTraversal.traverse ( compiler, externs, new GetExternMethods (  )  ) ;^74^^^^^67^83^NodeTraversal.traverse ( compiler, externs, new GetExternMethods (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P13_Insert_Block]^if  ( externs != null )  {     traverse ( compiler, externs, new GetExternMethods (  )  ) ; }^74^^^^^67^83^[Delete]^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P5_Replace_Variable]^List<Node> rootAndJs = Lists.newArrayList ( externs, root ) ;^78^^^^^67^83^List<Node> externsAndJs = Lists.newArrayList ( externs, root ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P5_Replace_Variable]^List<Node> externsAndJs = Lists.newArrayList ( externs, externs ) ;^78^^^^^67^83^List<Node> externsAndJs = Lists.newArrayList ( externs, root ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P5_Replace_Variable]^List<Node> externsAndJs = Lists.newArrayList (  root ) ;^78^^^^^67^83^List<Node> externsAndJs = Lists.newArrayList ( externs, root ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P5_Replace_Variable]^List<Node> externsAndJs = Lists.newArrayList ( externs ) ;^78^^^^^67^83^List<Node> externsAndJs = Lists.newArrayList ( externs, root ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P5_Replace_Variable]^List<Node> rootAndJs = Lists.newArrayList ( externs, externs ) ;^78^^^^^67^83^List<Node> externsAndJs = Lists.newArrayList ( externs, root ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P14_Delete_Statement]^^78^^^^^67^83^List<Node> externsAndJs = Lists.newArrayList ( externs, root ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P4_Replace_Constructor]^compiler, Lists.compiler, Lists.ArrayList ( externs, root ) ,  new GetExternMethods (  )   ) ;^80^^^^^67^83^compiler, Lists.newArrayList ( externs, root ) , new GatherSignatures (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P4_Replace_Constructor]^NodeTraversal.traverseRoots ( compiler, Lists.NodeTraversal.traverseRoots ( compiler, Lists.ArrayList ( externs, root ) ,  new GetExternMethods (  )   ) ;^79^80^^^^67^83^NodeTraversal.traverseRoots ( compiler, Lists.newArrayList ( externs, root ) , new GatherSignatures (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P4_Replace_Constructor]^NodeTraversal.traverseRoots ( compiler, Lists.newArrayList (  root ) , new GatherSignatures (  )  ) ;^79^80^^^^67^83^NodeTraversal.traverseRoots ( compiler, Lists.newArrayList ( externs, root ) , new GatherSignatures (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P4_Replace_Constructor]^NodeTraversal.traverseRoots ( compiler, Lists.newArrayList ( externs ) , new GatherSignatures (  )  ) ;^79^80^^^^67^83^NodeTraversal.traverseRoots ( compiler, Lists.newArrayList ( externs, root ) , new GatherSignatures (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverseRoots ( compiler, Lists.newArrayList ( externs, externs ) , new GatherSignatures (  )  ) ;^79^80^^^^67^83^NodeTraversal.traverseRoots ( compiler, Lists.newArrayList ( externs, root ) , new GatherSignatures (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverseRoots (  Lists.newArrayList ( externs, root ) , new GatherSignatures (  )  ) ;^79^80^^^^67^83^NodeTraversal.traverseRoots ( compiler, Lists.newArrayList ( externs, root ) , new GatherSignatures (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverseRoots ( compiler, Lists.newArrayList ( root, externs ) , new GatherSignatures (  )  ) ;^79^80^^^^67^83^NodeTraversal.traverseRoots ( compiler, Lists.newArrayList ( externs, root ) , new GatherSignatures (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverseRoots ( root, Lists.newArrayList ( externs, compiler ) , new GatherSignatures (  )  ) ;^79^80^^^^67^83^NodeTraversal.traverseRoots ( compiler, Lists.newArrayList ( externs, root ) , new GatherSignatures (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P14_Delete_Statement]^^79^80^^^^67^83^NodeTraversal.traverseRoots ( compiler, Lists.newArrayList ( externs, root ) , new GatherSignatures (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P11_Insert_Donor_Statement]^compiler, Lists.newArrayList ( externs, root ) , new GatherSignatures (  )  ) ;NodeTraversal.traverseRoots ( compiler, Lists.newArrayList ( externs, root ) , new GatherSignatures (  )  ) ;^79^80^^^^67^83^NodeTraversal.traverseRoots ( compiler, Lists.newArrayList ( externs, root ) , new GatherSignatures (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P11_Insert_Donor_Statement]^NodeTraversal.traverseRoots ( compiler, externsAndJs, getActingCallback (  )  ) ;NodeTraversal.traverseRoots ( compiler, Lists.newArrayList ( externs, root ) , new GatherSignatures (  )  ) ;^79^80^^^^67^83^NodeTraversal.traverseRoots ( compiler, Lists.newArrayList ( externs, root ) , new GatherSignatures (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P5_Replace_Variable]^compiler, Lists.newArrayList (  root ) , new GatherSignatures (  )  ) ;^80^^^^^67^83^compiler, Lists.newArrayList ( externs, root ) , new GatherSignatures (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P5_Replace_Variable]^compiler, Lists.newArrayList ( externs ) , new GatherSignatures (  )  ) ;^80^^^^^67^83^compiler, Lists.newArrayList ( externs, root ) , new GatherSignatures (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P5_Replace_Variable]^compiler, Lists.newArrayList ( root, externs ) , new GatherSignatures (  )  ) ;^80^^^^^67^83^compiler, Lists.newArrayList ( externs, root ) , new GatherSignatures (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P14_Delete_Statement]^^80^^^^^67^83^compiler, Lists.newArrayList ( externs, root ) , new GatherSignatures (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverseRoots ( compiler, 0, getActingCallback (  )  ) ;^81^82^^^^67^83^NodeTraversal.traverseRoots ( compiler, externsAndJs, getActingCallback (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverseRoots ( compiler,  getActingCallback (  )  ) ;^81^82^^^^67^83^NodeTraversal.traverseRoots ( compiler, externsAndJs, getActingCallback (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverseRoots (  externsAndJs, getActingCallback (  )  ) ;^81^82^^^^67^83^NodeTraversal.traverseRoots ( compiler, externsAndJs, getActingCallback (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverseRoots ( externsAndJs, compiler, getActingCallback (  )  ) ;^81^82^^^^67^83^NodeTraversal.traverseRoots ( compiler, externsAndJs, getActingCallback (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P7_Replace_Invocation]^NodeTraversal.traverseRoots ( compiler, externsAndJs, getSignatureStore (  )  ) ;^81^82^^^^67^83^NodeTraversal.traverseRoots ( compiler, externsAndJs, getActingCallback (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P8_Replace_Mix]^NodeTraversal.traverseRoots ( compiler, null, getSignatureStore (  )  ) ;^81^82^^^^67^83^NodeTraversal.traverseRoots ( compiler, externsAndJs, getActingCallback (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P14_Delete_Statement]^^81^82^^^^67^83^NodeTraversal.traverseRoots ( compiler, externsAndJs, getActingCallback (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P11_Insert_Donor_Statement]^compiler, externsAndJs, getActingCallback (  )  ) ;NodeTraversal.traverseRoots ( compiler, externsAndJs, getActingCallback (  )  ) ;^81^82^^^^67^83^NodeTraversal.traverseRoots ( compiler, externsAndJs, getActingCallback (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P7_Replace_Invocation]^compiler, externsAndJs, getSignatureStore (  )  ) ;^82^^^^^67^83^compiler, externsAndJs, getActingCallback (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P14_Delete_Statement]^^82^^^^^67^83^compiler, externsAndJs, getActingCallback (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P11_Insert_Donor_Statement]^NodeTraversal.traverseRoots ( compiler, externsAndJs, getActingCallback (  )  ) ;compiler, externsAndJs, getActingCallback (  )  ) ;^82^^^^^67^83^compiler, externsAndJs, getActingCallback (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  List  externsAndJs  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  Node  externs  root  
[P3_Replace_Literal]^boolean signatureAdded = true;^102^^^^^87^117^boolean signatureAdded = false;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P12_Insert_Condition]^if  ( !signatureAdded )  { boolean signatureAdded = false; }^102^^^^^87^117^boolean signatureAdded = false;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P2_Replace_Operator]^if  ( node.getType (  )  <= Token.FUNCTION )  {^104^^^^^89^119^if  ( node.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P2_Replace_Operator]^if  ( node.getType (  )  != Token.FUNCTION )  {^104^^^^^89^119^if  ( node.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P2_Replace_Operator]^if  ( node.getType (  )  >= Token.FUNCTION )  {^104^^^^^89^119^if  ( node.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P2_Replace_Operator]^if  ( node.getType (  )  < Token.FUNCTION )  {^104^^^^^89^119^if  ( node.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^if  ( function.getType (  )  == Token.FUNCTION )  {^104^^^^^89^119^if  ( node.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P6_Replace_Expression]^if  ( node.getType() == NAME )  {^104^^^^^89^119^if  ( node.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P6_Replace_Expression]^if  ( v == null )  {^104^^^^^89^119^if  ( node.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P6_Replace_Expression]^if  ( function != null && function.getType() == FUNCTION )  {^104^^^^^89^119^if  ( node.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P6_Replace_Expression]^if  ( function != null )  {^104^^^^^89^119^if  ( node.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P6_Replace_Expression]^if  ( function.getType (  )  == FUNCTION )  {^104^^^^^89^119^if  ( node.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P7_Replace_Invocation]^if  ( node .getString (  )   == Token.FUNCTION )  {^104^^^^^89^119^if  ( node.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P8_Replace_Mix]^if  ( function .getString (  )   == Token.FUNCTION )  {^104^^^^^89^119^if  ( node.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P2_Replace_Operator]^} else if  ( node.getType (  )  != Token.NAME )  {^108^^^^^93^123^} else if  ( node.getType (  )  == Token.NAME )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P2_Replace_Operator]^} else if  ( node.getType (  )  <= Token.NAME )  {^108^^^^^93^123^} else if  ( node.getType (  )  == Token.NAME )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^} else if  ( function.getType (  )  == Token.NAME )  {^108^^^^^93^123^} else if  ( node.getType (  )  == Token.NAME )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P6_Replace_Expression]^} else if  ( v == null )  {^108^^^^^93^123^} else if  ( node.getType (  )  == Token.NAME )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P6_Replace_Expression]^} else if  ( function != null && function.getType() == FUNCTION )  {^108^^^^^93^123^} else if  ( node.getType (  )  == Token.NAME )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P6_Replace_Expression]^} else if  ( function != null )  {^108^^^^^93^123^} else if  ( node.getType (  )  == Token.NAME )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P6_Replace_Expression]^} else if  ( function.getType (  )  == FUNCTION )  {^108^^^^^93^123^} else if  ( node.getType (  )  == Token.NAME )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P6_Replace_Expression]^} else {^108^^^^^93^123^} else if  ( node.getType (  )  == Token.NAME )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P7_Replace_Invocation]^} else if  ( node .getString (  )   == Token.NAME )  {^108^^^^^93^123^} else if  ( node.getType (  )  == Token.NAME )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P2_Replace_Operator]^if  ( v != null )  {^114^^^^^99^129^if  ( v == null )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P8_Replace_Mix]^if  ( v == this )  {^114^^^^^99^129^if  ( v == null )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P9_Replace_Statement]^if  ( externs != null )  {^114^^^^^99^129^if  ( v == null )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P15_Unwrap_Block]^return ;^115^116^117^118^119^100^130^if  ( compiler.isIdeMode (  )  )  { return; } else { throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P16_Remove_Block]^^115^116^117^118^119^100^130^if  ( compiler.isIdeMode (  )  )  { return; } else { throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P13_Insert_Block]^if  ( v == null )  {     if  ( compiler.isIdeMode (  )  )  {         return ;     }else {         throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;     } }^115^^^^^100^130^[Delete]^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "VarCheck should have caught this undefined function should have caught this" ) ;^118^119^^^^115^120^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P13_Insert_Block]^if  ( compiler.isIdeMode (  )  )  {     return ; }else {     throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ; }^118^^^^^115^120^[Delete]^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( " should have caught thi" ) ;^118^119^^^^115^120^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P13_Insert_Block]^if  ( v == null )  {     if  ( compiler.isIdeMode (  )  )  {         return ;     }else {         throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;     } }^118^^^^^115^120^[Delete]^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "ckarCheck should have caught this undefined function" ) ;^118^119^^^^103^133^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P13_Insert_Block]^if  ( compiler.isIdeMode (  )  )  {     return ; }else {     throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ; }^118^^^^^103^133^[Delete]^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "ould arCheck should have caught this undefined function" ) ;^118^119^^^^103^133^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P13_Insert_Block]^if  ( v == null )  {     if  ( compiler.isIdeMode (  )  )  {         return ;     }else {         throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;     } }^118^^^^^103^133^[Delete]^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "ned f" ) ;^118^119^^^^115^120^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "VarCheck should have caught this undefined functionis undefined " ) ;^118^119^^^^115^120^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P8_Replace_Mix]^return ;^118^119^^^^115^120^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P2_Replace_Operator]^if  ( function != null || function.getType (  )  == Token.FUNCTION )  {^124^125^^^^109^139^if  ( function != null && function.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P2_Replace_Operator]^if  ( function == null && function.getType (  )  == Token.FUNCTION )  {^124^125^^^^109^139^if  ( function != null && function.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P2_Replace_Operator]^if  ( function != null && function.getType (  )  != Token.FUNCTION )  {^124^125^^^^109^139^if  ( function != null && function.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^if  ( node != null && function.getType (  )  == Token.FUNCTION )  {^124^125^^^^109^139^if  ( function != null && function.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P6_Replace_Expression]^if  ( function != null ) {^124^125^^^^109^139^if  ( function != null && function.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P6_Replace_Expression]^if  (  function.getType (  )  == Token.FUNCTION )  {^124^125^^^^109^139^if  ( function != null && function.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P6_Replace_Expression]^if  ( function.getType (  )  == FUNCTION )  {^124^125^^^^109^139^if  ( function != null && function.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P7_Replace_Invocation]^if  ( function != null && function .getString (  )   == Token.FUNCTION )  {^124^125^^^^109^139^if  ( function != null && function.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P8_Replace_Mix]^if  ( function != this && function.getType (  )  == Token.FUNCTION )  {^124^125^^^^109^139^if  ( function != null && function.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P15_Unwrap_Block]^addSignature(name, function, v.getInputName()); signatureAdded = true;^124^125^126^127^128^109^139^if  ( function != null && function.getType (  )  == Token.FUNCTION )  { addSignature ( name, function, v.getInputName (  )  ) ; signatureAdded = true; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P16_Remove_Block]^^124^125^126^127^128^109^139^if  ( function != null && function.getType (  )  == Token.FUNCTION )  { addSignature ( name, function, v.getInputName (  )  ) ; signatureAdded = true; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^signatureAdded = false;^127^^^^^124^128^signatureAdded = true;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^addSignature ( functionName, function, v.getInputName (  )  ) ;^126^^^^^124^128^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^addSignature ( name, node, v.getInputName (  )  ) ;^126^^^^^124^128^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^addSignature (  function, v.getInputName (  )  ) ;^126^^^^^124^128^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^addSignature ( name,  v.getInputName (  )  ) ;^126^^^^^124^128^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^addSignature ( name, function.getInputName (  )  ) ;^126^^^^^124^128^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^addSignature ( v, function, name.getInputName (  )  ) ;^126^^^^^124^128^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^addSignature ( name, v, function.getInputName (  )  ) ;^126^^^^^124^128^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P7_Replace_Invocation]^addPossibleSignature ( name, function, v.getInputName (  )  ) ;^126^^^^^124^128^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P7_Replace_Invocation]^addSignature ( name, function, v .getInitialValue (  )   ) ;^126^^^^^124^128^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P14_Delete_Statement]^^126^127^^^^124^128^addSignature ( name, function, v.getInputName (  )  ) ; signatureAdded = true;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P11_Insert_Donor_Statement]^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;addSignature ( name, function, v.getInputName (  )  ) ;^126^^^^^124^128^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P11_Insert_Donor_Statement]^function.getType (  )  == Token.FUNCTION )  { addSignature ( name, function, v.getInputName (  )  ) ;addSignature ( name, function, v.getInputName (  )  ) ;^126^^^^^124^128^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P11_Insert_Donor_Statement]^addSignature ( name, node, t.getSourceName (  )  ) ;addSignature ( name, function, v.getInputName (  )  ) ;^126^^^^^124^128^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P11_Insert_Donor_Statement]^addSignature ( name, value, t.getSourceName (  )  ) ;addSignature ( name, function, v.getInputName (  )  ) ;^126^^^^^124^128^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^signatureAdded = false;^127^^^^^112^142^signatureAdded = true;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "V" ) ;^118^119^^^^103^133^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P1_Replace_Type]^char functionName = node.getchar (  ) ;^111^^^^^96^126^String functionName = node.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^String functionName = function.getString (  ) ;^111^^^^^96^126^String functionName = node.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P11_Insert_Donor_Statement]^String name = key.getString (  ) ;String functionName = node.getString (  ) ;^111^^^^^96^126^String functionName = node.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P11_Insert_Donor_Statement]^String name = dest.getString (  ) ;String functionName = node.getString (  ) ;^111^^^^^96^126^String functionName = node.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^Scope.Var v = t.getScope (  ) .getVar ( name ) ;^112^^^^^97^127^Scope.Var v = t.getScope (  ) .getVar ( functionName ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^Scope.Var v = functionName.getScope (  ) .getVar ( t ) ;^112^^^^^97^127^Scope.Var v = t.getScope (  ) .getVar ( functionName ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P7_Replace_Invocation]^Scope.Var v = t .getSourceName (  )  .getVar ( functionName ) ;^112^^^^^97^127^Scope.Var v = t.getScope (  ) .getVar ( functionName ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P7_Replace_Invocation]^Node function = v .getInputName (  )  ;^123^^^^^108^138^Node function = v.getInitialValue (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "efined functioarCheck should have caught this undefined function" ) ;^118^119^^^^103^133^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P8_Replace_Mix]^String functionName = function .getParent (  )  ;^111^^^^^96^126^String functionName = node.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P14_Delete_Statement]^^111^^^^^96^126^String functionName = node.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P7_Replace_Invocation]^Scope.Var v = t.getScope (  )  .getParent (  )  ;^112^^^^^97^127^Scope.Var v = t.getScope (  ) .getVar ( functionName ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P14_Delete_Statement]^^112^^^^^97^127^Scope.Var v = t.getScope (  ) .getVar ( functionName ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^Node function = null.getInitialValue (  ) ;^123^^^^^108^138^Node function = v.getInitialValue (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P14_Delete_Statement]^^123^^^^^108^138^Node function = v.getInitialValue (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P14_Delete_Statement]^^125^126^^^^110^140^function.getType (  )  == Token.FUNCTION )  { addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^addSignature ( functionName, function, v.getInputName (  )  ) ;^126^^^^^111^141^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^addSignature ( name, node, v.getInputName (  )  ) ;^126^^^^^111^141^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^addSignature (  function, v.getInputName (  )  ) ;^126^^^^^111^141^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^addSignature ( name,  v.getInputName (  )  ) ;^126^^^^^111^141^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^addSignature ( name, function.getInputName (  )  ) ;^126^^^^^111^141^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^addSignature ( function, name, v.getInputName (  )  ) ;^126^^^^^111^141^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^addSignature ( name, v, function.getInputName (  )  ) ;^126^^^^^111^141^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P7_Replace_Invocation]^addPossibleSignature ( name, function, v.getInputName (  )  ) ;^126^^^^^111^141^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P14_Delete_Statement]^^126^^^^^111^141^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P11_Insert_Donor_Statement]^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;addSignature ( name, function, v.getInputName (  )  ) ;^126^^^^^111^141^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P11_Insert_Donor_Statement]^function.getType (  )  == Token.FUNCTION )  { addSignature ( name, function, v.getInputName (  )  ) ;addSignature ( name, function, v.getInputName (  )  ) ;^126^^^^^111^141^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P11_Insert_Donor_Statement]^addSignature ( name, node, t.getSourceName (  )  ) ;addSignature ( name, function, v.getInputName (  )  ) ;^126^^^^^111^141^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P11_Insert_Donor_Statement]^addSignature ( name, value, t.getSourceName (  )  ) ;addSignature ( name, function, v.getInputName (  )  ) ;^126^^^^^111^141^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P14_Delete_Statement]^^126^127^^^^111^141^addSignature ( name, function, v.getInputName (  )  ) ; signatureAdded = true;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P8_Replace_Mix]^if  ( v == true )  {^114^^^^^99^129^if  ( v == null )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "houldarCheck should have caught this undefined function" ) ;^118^119^^^^115^120^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "VarCheck should have caught this undefined functioneck s" ) ;^118^119^^^^115^120^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "VarCheck should have caught this undefined functiond f" ) ;^118^119^^^^103^133^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "e caught this arCheck should have caught this undefined function" ) ;^118^119^^^^103^133^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P8_Replace_Mix]^return ;^118^119^^^^103^133^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "VarCheck should have caught this undefined functionght this undefin" ) ;^118^119^^^^115^120^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "heck should have caught this undefined fuarCheck should have caught this undefined function" ) ;^118^119^^^^115^120^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^addSignature ( function, name, v.getInputName (  )  ) ;^126^^^^^124^128^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "VarCheck should have caught this undefined functionVarCheck should have caught this undefine" ) ;^118^119^^^^103^133^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P7_Replace_Invocation]^String functionName = node .getParent (  )  ;^111^^^^^96^126^String functionName = node.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "VarCheck should have caught this undefined functions" ) ;^118^119^^^^103^133^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^addSignature ( v, function, name.getInputName (  )  ) ;^126^^^^^111^141^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^signatureAdded = false;^107^^^^^92^122^signatureAdded = true;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^addSignature ( functionName, node, t.getSourceName (  )  ) ;^106^^^^^91^121^addSignature ( name, node, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^addSignature ( name, function, t.getSourceName (  )  ) ;^106^^^^^91^121^addSignature ( name, node, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^addSignature (  node, t.getSourceName (  )  ) ;^106^^^^^91^121^addSignature ( name, node, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^addSignature ( name,  t.getSourceName (  )  ) ;^106^^^^^91^121^addSignature ( name, node, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^addSignature ( name, node.getSourceName (  )  ) ;^106^^^^^91^121^addSignature ( name, node, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^addSignature ( node, name, t.getSourceName (  )  ) ;^106^^^^^91^121^addSignature ( name, node, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^addSignature ( name, t, node.getSourceName (  )  ) ;^106^^^^^91^121^addSignature ( name, node, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P7_Replace_Invocation]^addPossibleSignature ( name, node, t.getSourceName (  )  ) ;^106^^^^^91^121^addSignature ( name, node, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P14_Delete_Statement]^^106^107^^^^91^121^addSignature ( name, node, t.getSourceName (  )  ) ; signatureAdded = true;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P11_Insert_Donor_Statement]^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;addSignature ( name, node, t.getSourceName (  )  ) ;^106^^^^^91^121^addSignature ( name, node, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P11_Insert_Donor_Statement]^addSignature ( name, value, t.getSourceName (  )  ) ;addSignature ( name, node, t.getSourceName (  )  ) ;^106^^^^^91^121^addSignature ( name, node, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P11_Insert_Donor_Statement]^addSignature ( name, function, v.getInputName (  )  ) ;addSignature ( name, node, t.getSourceName (  )  ) ;^106^^^^^91^121^addSignature ( name, node, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P7_Replace_Invocation]^addSignature ( name, node, t .getScope (  )   ) ;^106^^^^^91^121^addSignature ( name, node, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P14_Delete_Statement]^^106^^^^^91^121^addSignature ( name, node, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P2_Replace_Operator]^} else if  ( node.getType (  )  < Token.NAME )  {^108^^^^^93^123^} else if  ( node.getType (  )  == Token.NAME )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P2_Replace_Operator]^} else if  ( node.getType (  )  >= Token.NAME )  {^108^^^^^93^123^} else if  ( node.getType (  )  == Token.NAME )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P8_Replace_Mix]^}  if  ( function.getType (  )  == Token.NAME )  {^108^^^^^93^123^} else if  ( node.getType (  )  == Token.NAME )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P8_Replace_Mix]^if  ( v == false )  {^114^^^^^99^129^if  ( v == null )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "V" ) ;^118^119^^^^115^120^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "have caught this arCheck should have caught this undefined function" ) ;^118^119^^^^103^133^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "VarCheck should have caught this undefined functionaught this und" ) ;^118^119^^^^103^133^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( " arCheck should have caught this undefined function" ) ;^118^119^^^^115^120^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "ld have caught this undefinarCheck should have caught this undefined function" ) ;^118^119^^^^115^120^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P8_Replace_Mix]^addSignature ( name, function, 0.getInputName (  )  ) ;^126^^^^^124^128^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( " should have caught this" ) ;^118^119^^^^103^133^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "ght this undefinearCheck should have caught this undefined function" ) ;^118^119^^^^103^133^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P14_Delete_Statement]^^111^112^^^^96^126^String functionName = node.getString (  ) ; Scope.Var v = t.getScope (  ) .getVar ( functionName ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P8_Replace_Mix]^function .getString (  )   == Token.FUNCTION )  {^125^^^^^110^140^function.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P8_Replace_Mix]^addSignature ( name, function, 3.getInputName (  )  ) ;^126^^^^^111^141^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "VarCheck should have caught this undefined functionVarC" ) ;^118^119^^^^115^120^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "VarCheck should have caught this undefined functioned functi" ) ;^118^119^^^^115^120^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "hecarCheck should have caught this undefined function" ) ;^118^119^^^^103^133^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( " shouldarCheck should have caught this undefined function" ) ;^118^119^^^^103^133^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "caught tarCheck should have caught this undefined function" ) ;^118^119^^^^115^120^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "VarCheck should have caught this undefined functionVar" ) ;^118^119^^^^115^120^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P8_Replace_Mix]^return 0;^118^119^^^^115^120^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P14_Delete_Statement]^^126^^^^^124^128^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "VarCheck should have caught this undefined functiond have caught this" ) ;^118^119^^^^103^133^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P8_Replace_Mix]^Node function = 3 .getInputName (  )  ;^123^^^^^108^138^Node function = v.getInitialValue (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P3_Replace_Literal]^throw new IllegalStateException ( "ned arCheck should have caught this undefined function" ) ;^118^119^^^^103^133^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P8_Replace_Mix]^return 0;^118^119^^^^103^133^throw new IllegalStateException ( "VarCheck should have caught this undefined function" ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^addSignature ( t, node, name.getSourceName (  )  ) ;^106^^^^^91^121^addSignature ( name, node, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P8_Replace_Mix]^addSignature ( name, function, v .getInitialValue (  )   ) ;^126^^^^^111^141^addSignature ( name, function, v.getInputName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P8_Replace_Mix]^if  ( signatureAdded )  {^131^^^^^116^146^if  ( !signatureAdded )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P15_Unwrap_Block]^nonMethodProperties.add(name);^131^132^133^^^116^146^if  ( !signatureAdded )  { nonMethodProperties.add ( name ) ; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P16_Remove_Block]^^131^132^133^^^116^146^if  ( !signatureAdded )  { nonMethodProperties.add ( name ) ; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^nonMethodProperties.add ( functionName ) ;^132^^^^^117^147^nonMethodProperties.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P7_Replace_Invocation]^nonMethodProperties.contains ( name ) ;^132^^^^^117^147^nonMethodProperties.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P14_Delete_Statement]^^132^^^^^117^147^nonMethodProperties.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P11_Insert_Donor_Statement]^externMethods.add ( name ) ;nonMethodProperties.add ( name ) ;^132^^^^^117^147^nonMethodProperties.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P11_Insert_Donor_Statement]^externMethodsWithoutSignatures.add ( name ) ;nonMethodProperties.add ( name ) ;^132^^^^^117^147^nonMethodProperties.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addPossibleSignature [RETURN_TYPE] void   String name Node node NodeTraversal t [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  signatureAdded  NodeTraversal  t  Var  v  Node  function  node  String  functionName  name  
[P5_Replace_Variable]^if  ( externMethodsWithoutSignatures.contains ( fnSourceName )  )  {^137^^^^^136^143^if  ( externMethodsWithoutSignatures.contains ( name )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[P5_Replace_Variable]^if  ( name.contains ( externMethodsWithoutSignatures )  )  {^137^^^^^136^143^if  ( externMethodsWithoutSignatures.contains ( name )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[P7_Replace_Invocation]^if  ( externMethodsWithoutSignatures.add ( name )  )  {^137^^^^^136^143^if  ( externMethodsWithoutSignatures.contains ( name )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[P7_Replace_Invocation]^if  ( externMethodsWithoutSignatures .clear (  )   )  {^137^^^^^136^143^if  ( externMethodsWithoutSignatures.contains ( name )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[P15_Unwrap_Block]^return ;^137^138^139^^^136^143^if  ( externMethodsWithoutSignatures.contains ( name )  )  { return; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[P16_Remove_Block]^^137^138^139^^^136^143^if  ( externMethodsWithoutSignatures.contains ( name )  )  { return; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[P13_Insert_Block]^if  ( externMethodsWithoutSignatures.contains ( name )  )  {     return ; }^137^^^^^136^143^[Delete]^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[P5_Replace_Variable]^getSignatureStore (  ) .addSignature ( name, function, name ) ;^141^^^^^136^143^getSignatureStore (  ) .addSignature ( name, function, fnSourceName ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[P5_Replace_Variable]^getSignatureStore (  ) .addSignature (  function, fnSourceName ) ;^141^^^^^136^143^getSignatureStore (  ) .addSignature ( name, function, fnSourceName ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[P5_Replace_Variable]^getSignatureStore (  ) .addSignature ( name,  fnSourceName ) ;^141^^^^^136^143^getSignatureStore (  ) .addSignature ( name, function, fnSourceName ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[P5_Replace_Variable]^getSignatureStore (  ) .addSignature ( name, function ) ;^141^^^^^136^143^getSignatureStore (  ) .addSignature ( name, function, fnSourceName ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[P5_Replace_Variable]^getSignatureStore (  ) .addSignature ( function, name, fnSourceName ) ;^141^^^^^136^143^getSignatureStore (  ) .addSignature ( name, function, fnSourceName ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[P5_Replace_Variable]^getSignatureStore (  ) .addSignature ( fnSourceName, function, name ) ;^141^^^^^136^143^getSignatureStore (  ) .addSignature ( name, function, fnSourceName ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[P7_Replace_Invocation]^getActingCallback (  ) .addSignature ( name, function, fnSourceName ) ;^141^^^^^136^143^getSignatureStore (  ) .addSignature ( name, function, fnSourceName ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[P14_Delete_Statement]^^141^^^^^136^143^getSignatureStore (  ) .addSignature ( name, function, fnSourceName ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[P11_Insert_Donor_Statement]^getSignatureStore (  ) .removeSignature ( name ) ;getSignatureStore (  ) .addSignature ( name, function, fnSourceName ) ;^141^^^^^136^143^getSignatureStore (  ) .addSignature ( name, function, fnSourceName ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[P5_Replace_Variable]^methodDefinitions.put ( fnSourceName, function ) ;^142^^^^^136^143^methodDefinitions.put ( name, function ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[P5_Replace_Variable]^methodDefinitions.put (  function ) ;^142^^^^^136^143^methodDefinitions.put ( name, function ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[P5_Replace_Variable]^methodDefinitions.put ( name ) ;^142^^^^^136^143^methodDefinitions.put ( name, function ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[P5_Replace_Variable]^methodDefinitions.put ( function, name ) ;^142^^^^^136^143^methodDefinitions.put ( name, function ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[P14_Delete_Statement]^^142^^^^^136^143^methodDefinitions.put ( name, function ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[P11_Insert_Donor_Statement]^methodDefinitions.clear (  ) ;methodDefinitions.put ( name, function ) ;^142^^^^^136^143^methodDefinitions.put ( name, function ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] addSignature [RETURN_TYPE] void   String name Node function String fnSourceName [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  String  fnSourceName  name  boolean  Node  function  
[P2_Replace_Operator]^if  ( dest.getType (  )  == Token.STRING )  {^158^^^^^143^173^if  ( dest.getType (  )  != Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( value.getType (  )  != Token.STRING )  {^158^^^^^143^173^if  ( dest.getType (  )  != Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^if  ( dest.getType (  )  = Token.STRING )  {^158^^^^^143^173^if  ( dest.getType (  )  != Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P9_Replace_Statement]^if  ( node.getType (  )  == Token.FUNCTION )  {^158^^^^^143^173^if  ( dest.getType (  )  != Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P9_Replace_Statement]^if  ( value.getType (  )  == Token.FUNCTION )  {^158^^^^^143^173^if  ( dest.getType (  )  != Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P9_Replace_Statement]^if  ( key.getType (  )  == Token.STRING )  {^158^^^^^143^173^if  ( dest.getType (  )  != Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P15_Unwrap_Block]^return ;^158^159^160^^^143^173^if  ( dest.getType (  )  != Token.STRING )  { return; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P16_Remove_Block]^^158^159^160^^^143^173^if  ( dest.getType (  )  != Token.STRING )  { return; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P2_Replace_Operator]^if  ( parent.getType (  )  == Token.ASSIGN || parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P2_Replace_Operator]^if  ( parent.getType (  )  != Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P2_Replace_Operator]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  != n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P2_Replace_Operator]^if  ( parent.getType (  )  >= Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( n.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == value && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( n.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == parent && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P6_Replace_Expression]^if  ( parent.getType (  )  == Token.ASSIGN ) {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P6_Replace_Expression]^if  (  parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P6_Replace_Expression]^if  ( (parent.getType() == ASSIGN && parent.getFirstChild() == n) )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P6_Replace_Expression]^if  ( parent.getType (  )  == ASSIGN )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P6_Replace_Expression]^if  ( parent.getFirstChild (  )  == n )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P6_Replace_Expression]^if  ( n.getNext (  ) .getType (  )  == FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^if  ( parent.getType (  )  == Token.ASSIGN && parent .getString (  )   == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^if  ( parent.getVar (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^if  ( parent .getString (  )   == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  )^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n .getParent (  )  .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^getActingCallback (  ) .removeSignature ( name ) ;^175^^^^^170^177^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^175^176^^^^170^177^getSignatureStore (  ) .removeSignature ( name ) ; externMethodsWithoutSignatures.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^getSignatureStore (  ) .reset (  ) ;getSignatureStore (  ) .removeSignature ( name ) ;^175^^^^^170^177^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^getSignatureStore (  ) .addSignature ( name, function, fnSourceName ) ;getSignatureStore (  ) .removeSignature ( name ) ;^175^^^^^170^177^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^175^^^^^170^177^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^externMethodsWithoutSignatures.contains ( name ) ;^176^^^^^170^177^externMethodsWithoutSignatures.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^176^^^^^170^177^externMethodsWithoutSignatures.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P12_Insert_Condition]^if  ( externMethodsWithoutSignatures.contains ( name )  )  { externMethodsWithoutSignatures.add ( name ) ; }^176^^^^^170^177^externMethodsWithoutSignatures.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( valueame, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature (  n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name, n.getNext (  ) .getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( t, n.getNext (  ) , name.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( tame, n.getNext (  ) , n.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^addPossibleSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^addSignature ( name, n .getParent (  )  , t.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^addSignature ( name, node, t.getSourceName (  )  ) ;addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^addSignature ( name, value, t.getSourceName (  )  ) ;addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^addSignature ( name, function, v.getInputName (  )  ) ;addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^n.getNext (  ) .getType (  )  == Token.FUNCTION )  { addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^addSignature ( name, n.getNext (  ) , t .getScope (  )   ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P2_Replace_Operator]^if  ( key.getType (  )  <= Token.STRING )  {^187^^^^^172^202^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P2_Replace_Operator]^if  ( key.getType (  )  != Token.STRING )  {^187^^^^^172^202^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.STRING )  {^187^^^^^172^202^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P6_Replace_Expression]^if  ( value.getType() == FUNCTION )  {^187^^^^^172^202^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^if  ( key .getString (  )   == Token.STRING )  {^187^^^^^172^202^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P13_Insert_Block]^if  (  (  (  ( parent.getType (  )  )  ==  ( ASSIGN )  )  &&  (  ( parent.getFirstChild (  )  )  == n )  )  &&  (  ( n.getNext (  ) .getType (  )  )  ==  ( FUNCTION )  )  )  {     addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ; }else {     getSignatureStore (  ) .removeSignature ( name ) ;     externMethodsWithoutSignatures.add ( name ) ; }^187^^^^^172^202^[Delete]^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P2_Replace_Operator]^if  ( value.getType (  )  != Token.FUNCTION )  {^190^^^^^175^205^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( n.getType (  )  == Token.FUNCTION )  {^190^^^^^175^205^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( value.getType (  )  == Token.0 )  {^190^^^^^175^205^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^if  ( parent.getType (  )  == Token.FUNCTION )  {^190^^^^^175^205^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P9_Replace_Statement]^if  ( node.getType (  )  == Token.FUNCTION )  {^190^^^^^175^205^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P9_Replace_Statement]^if  ( dest.getType (  )  != Token.STRING )  {^190^^^^^175^205^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P9_Replace_Statement]^if  ( key.getType (  )  == Token.STRING )  {^190^^^^^175^205^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P9_Replace_Statement]^if  ( dest.getType (  )  == Token.STRING )  {^190^^^^^175^205^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P15_Unwrap_Block]^addSignature(name, value, t.getSourceName());^190^191^192^193^194^175^205^if  ( value.getType (  )  == Token.FUNCTION )  { addSignature ( name, value, t.getSourceName (  )  ) ; } else { getSignatureStore (  ) .removeSignature ( name ) ; externMethodsWithoutSignatures.add ( name ) ; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P16_Remove_Block]^^190^191^192^193^194^175^205^if  ( value.getType (  )  == Token.FUNCTION )  { addSignature ( name, value, t.getSourceName (  )  ) ; } else { getSignatureStore (  ) .removeSignature ( name ) ; externMethodsWithoutSignatures.add ( name ) ; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P13_Insert_Block]^if  (  (  (  ( parent.getType (  )  )  ==  ( ASSIGN )  )  &&  (  ( parent.getFirstChild (  )  )  == n )  )  &&  (  ( n.getNext (  ) .getType (  )  )  ==  ( FUNCTION )  )  )  {     addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ; }else {     getSignatureStore (  ) .removeSignature ( name ) ;     externMethodsWithoutSignatures.add ( name ) ; }^190^^^^^175^205^[Delete]^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^getActingCallback (  ) .removeSignature ( name ) ;^193^^^^^190^195^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^193^^^^^190^195^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^getSignatureStore (  ) .reset (  ) ;getSignatureStore (  ) .removeSignature ( name ) ;^193^^^^^190^195^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^getSignatureStore (  ) .addSignature ( name, function, fnSourceName ) ;getSignatureStore (  ) .removeSignature ( name ) ;^193^^^^^190^195^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^externMethodsWithoutSignatures.contains ( name ) ;^194^^^^^190^195^externMethodsWithoutSignatures.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^194^^^^^190^195^externMethodsWithoutSignatures.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P12_Insert_Condition]^if  ( externMethodsWithoutSignatures.contains ( name )  )  { externMethodsWithoutSignatures.add ( name ) ; }^194^^^^^190^195^externMethodsWithoutSignatures.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name, n, t.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature (  value, t.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name,  t.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name, value.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( t, value, name.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( value, name, t.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^addPossibleSignature ( name, value, t.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^addSignature ( name, value, t .getScope (  )   ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^addSignature ( name, parent, t.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^Node value = parent.getNext (  ) ;^188^^^^^173^203^Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^String name = key.getString (  ) ;Node value = key.getNext (  ) ;^188^^^^^173^203^Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P1_Replace_Type]^char name = key.getchar (  ) ;^189^^^^^174^204^String name = key.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^String name = key .getParent (  )  ;^189^^^^^174^204^String name = key.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^String name = value.getString (  ) ;^189^^^^^174^204^String name = key.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^String name = dest.getString (  ) ;String name = key.getString (  ) ;^189^^^^^174^204^String name = key.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^String functionName = node.getString (  ) ;String name = key.getString (  ) ;^189^^^^^174^204^String name = key.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^Node value = key.getNext (  ) ;String name = key.getString (  ) ;^189^^^^^174^204^String name = key.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^Node value = value.getNext (  ) ;^188^^^^^173^203^Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^188^189^^^^173^203^Node value = key.getNext (  ) ; String name = key.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^String name = parent.getString (  ) ;^189^^^^^174^204^String name = key.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^189^^^^^174^204^String name = key.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name, t, value.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^getActingCallback (  ) .removeSignature ( name ) ;^193^^^^^178^208^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^193^194^^^^178^208^getSignatureStore (  ) .removeSignature ( name ) ; externMethodsWithoutSignatures.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^getSignatureStore (  ) .reset (  ) ;getSignatureStore (  ) .removeSignature ( name ) ;^193^^^^^178^208^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^getSignatureStore (  ) .addSignature ( name, function, fnSourceName ) ;getSignatureStore (  ) .removeSignature ( name ) ;^193^^^^^178^208^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^193^^^^^178^208^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^externMethodsWithoutSignatures.contains ( name ) ;^194^^^^^179^209^externMethodsWithoutSignatures.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^194^^^^^179^209^externMethodsWithoutSignatures.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P12_Insert_Condition]^if  ( externMethodsWithoutSignatures.contains ( name )  )  { externMethodsWithoutSignatures.add ( name ) ; }^194^^^^^179^209^externMethodsWithoutSignatures.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^externMethods.contains ( name ) ;^196^^^^^181^211^externMethods.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^196^^^^^181^211^externMethods.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^externMethods.clear (  ) ;externMethods.add ( name ) ;^196^^^^^181^211^externMethods.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^nonMethodProperties.add ( name ) ;externMethods.add ( name ) ;^196^^^^^181^211^externMethods.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^externMethodsWithoutSignatures.add ( name ) ;externMethods.add ( name ) ;^196^^^^^181^211^externMethods.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P2_Replace_Operator]^if  ( value.getType (  )  <= Token.FUNCTION )  {^190^^^^^175^205^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^if  ( value .getString (  )   == Token.FUNCTION )  {^190^^^^^175^205^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^193^194^^^^190^195^getSignatureStore (  ) .removeSignature ( name ) ; externMethodsWithoutSignatures.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^addSignature ( name, parent, t .getScope (  )   ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^for  ( Node value = n.getFirstChild (  ) ;^185^^^^^170^200^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P2_Replace_Operator]^if  ( key.getType (  )  != Token.STRING )  {^187^^^^^185^198^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.STRING )  {^187^^^^^185^198^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P6_Replace_Expression]^if  ( value.getType() == FUNCTION )  {^187^^^^^185^198^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^if  ( key .getString (  )   == Token.STRING )  {^187^^^^^185^198^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P13_Insert_Block]^if  (  (  (  ( parent.getType (  )  )  ==  ( ASSIGN )  )  &&  (  ( parent.getFirstChild (  )  )  == n )  )  &&  (  ( n.getNext (  ) .getType (  )  )  ==  ( FUNCTION )  )  )  {     addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ; }else {     getSignatureStore (  ) .removeSignature ( name ) ;     externMethodsWithoutSignatures.add ( name ) ; }^187^^^^^185^198^[Delete]^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P2_Replace_Operator]^if  ( value.getType (  )  <= Token.FUNCTION )  {^190^^^^^185^198^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.FUNCTION )  {^190^^^^^185^198^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( value.getType (  )  == Token.null )  {^190^^^^^185^198^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^if  ( value .getString (  )   == Token.FUNCTION )  {^190^^^^^185^198^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P9_Replace_Statement]^if  ( node.getType (  )  == Token.FUNCTION )  {^190^^^^^185^198^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P9_Replace_Statement]^if  ( dest.getType (  )  != Token.STRING )  {^190^^^^^185^198^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P9_Replace_Statement]^if  ( key.getType (  )  == Token.STRING )  {^190^^^^^185^198^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P9_Replace_Statement]^if  ( dest.getType (  )  == Token.STRING )  {^190^^^^^185^198^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P15_Unwrap_Block]^addSignature(name, value, t.getSourceName());^190^191^192^193^194^185^198^if  ( value.getType (  )  == Token.FUNCTION )  { addSignature ( name, value, t.getSourceName (  )  ) ; } else { getSignatureStore (  ) .removeSignature ( name ) ; externMethodsWithoutSignatures.add ( name ) ; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P16_Remove_Block]^^190^191^192^193^194^185^198^if  ( value.getType (  )  == Token.FUNCTION )  { addSignature ( name, value, t.getSourceName (  )  ) ; } else { getSignatureStore (  ) .removeSignature ( name ) ; externMethodsWithoutSignatures.add ( name ) ; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P13_Insert_Block]^if  (  (  (  ( parent.getType (  )  )  ==  ( ASSIGN )  )  &&  (  ( parent.getFirstChild (  )  )  == n )  )  &&  (  ( n.getNext (  ) .getType (  )  )  ==  ( FUNCTION )  )  )  {     addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ; }else {     getSignatureStore (  ) .removeSignature ( name ) ;     externMethodsWithoutSignatures.add ( name ) ; }^190^^^^^185^198^[Delete]^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^getSignatureStore (  )  .addSignature ( name , key , name )  ;^193^^^^^185^198^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^getActingCallback (  ) .removeSignature ( name ) ;^193^^^^^185^198^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^193^194^^^^185^198^getSignatureStore (  ) .removeSignature ( name ) ; externMethodsWithoutSignatures.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^getSignatureStore (  ) .reset (  ) ;getSignatureStore (  ) .removeSignature ( name ) ;^193^^^^^185^198^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^getSignatureStore (  ) .addSignature ( name, function, fnSourceName ) ;getSignatureStore (  ) .removeSignature ( name ) ;^193^^^^^185^198^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^externMethodsWithoutSignatures.contains ( name ) ;^194^^^^^185^198^externMethodsWithoutSignatures.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^194^^^^^185^198^externMethodsWithoutSignatures.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P12_Insert_Condition]^if  ( externMethodsWithoutSignatures.contains ( name )  )  { externMethodsWithoutSignatures.add ( name ) ; }^194^^^^^185^198^externMethodsWithoutSignatures.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name, parent, t.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature (  value, t.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name,  t.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name, value.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( value, name, t.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name, t, value.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^addPossibleSignature ( name, value, t.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^addSignature ( name, value, t .getScope (  )   ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^Node value = parent.getNext (  ) ;^188^^^^^185^198^Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^String name = key.getString (  ) ;Node value = key.getNext (  ) ;^188^^^^^185^198^Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P1_Replace_Type]^char name = key.getchar (  ) ;^189^^^^^185^198^String name = key.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^String name = value.getString (  ) ;^189^^^^^185^198^String name = key.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^String name = key .getParent (  )  ;^189^^^^^185^198^String name = key.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^String name = parent.getString (  ) ;^189^^^^^185^198^String name = key.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^String name = dest.getString (  ) ;String name = key.getString (  ) ;^189^^^^^185^198^String name = key.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^String functionName = node.getString (  ) ;String name = key.getString (  ) ;^189^^^^^185^198^String name = key.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^Node value = key.getNext (  ) ;String name = key.getString (  ) ;^189^^^^^185^198^String name = key.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^Node value = value.getNext (  ) ;^188^^^^^185^198^Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^188^^^^^185^198^Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^189^^^^^185^198^String name = key.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name, n, t.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^getSignatureStore (  )  .addSignature ( name , value , name )  ;^193^^^^^185^198^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^getSignatureStore (  )  .addSignature ( name , n , name )  ;^193^^^^^185^198^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^193^^^^^185^198^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^externMethods.contains ( name ) ;^196^^^^^185^198^externMethods.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^196^^^^^185^198^externMethods.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^externMethods.clear (  ) ;externMethods.add ( name ) ;^196^^^^^185^198^externMethods.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^nonMethodProperties.add ( name ) ;externMethods.add ( name ) ;^196^^^^^185^198^externMethods.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^externMethodsWithoutSignatures.add ( name ) ;externMethods.add ( name ) ;^196^^^^^185^198^externMethods.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( t, value, name.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^addPossibleSignature ( name, parent, t.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( value.getType (  )  == Token.STRING )  {^187^^^^^185^198^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^Node value = value .getParent (  )  ;^188^^^^^185^198^Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^getSignatureStore (  )  .addSignature ( name , dest , name )  ;^193^^^^^185^198^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^key != null; value = key.getNext (  ) .getNext (  )  )  {^186^^^^^171^201^key != null; key = key.getNext (  ) .getNext (  )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^key != null; key = key.getVar (  ) .getNext (  )  )  {^186^^^^^171^201^key != null; key = key.getNext (  ) .getNext (  )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^key !=  null; null^186^^^^^171^201^key != null; key = key.getNext (  ) .getNext (  )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^Node dest = value.getFirstChild (  ) .getNext (  ) ;^156^^^^^141^171^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^Node dest = n.getFirstChild (  ) .getVar (  ) ;^156^^^^^141^171^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^Node dest = value.getFirstChild (  ) .getVar (  ) ;^156^^^^^141^171^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^Node parent = n.getParent (  ) .getParent (  ) ;Node dest = n.getFirstChild (  ) .getNext (  ) ;^156^^^^^141^171^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^Node assignee = parent.getFirstChild (  ) .getNext (  ) ;Node dest = n.getFirstChild (  ) .getNext (  ) ;^156^^^^^141^171^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P1_Replace_Type]^char name = dest.getchar (  ) ;^162^^^^^147^177^String name = dest.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^String name = parent.getString (  ) ;^162^^^^^147^177^String name = dest.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^String name = dest .getParent (  )  ;^162^^^^^147^177^String name = dest.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^String name = value.getString (  ) ;^162^^^^^147^177^String name = dest.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^String name = key.getString (  ) ;String name = dest.getString (  ) ;^162^^^^^147^177^String name = dest.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^String functionName = node.getString (  ) ;String name = dest.getString (  ) ;^162^^^^^147^177^String name = dest.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^for  ( Node key = value.getFirstChild (  ) ;^185^^^^^170^200^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^for  ( Node key = n .getString (  )  ;^185^^^^^170^200^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^switch  ( parent.getType (  )  )  {^153^^^^^138^168^switch  ( n.getType (  )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^switch  ( value.getType (  )  )  {^153^^^^^138^168^switch  ( n.getType (  )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^156^^^^^141^171^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^Node dest = value .getString (  )  .getNext (  ) ;^156^^^^^141^171^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( parent.getType (  )  != Token.STRING )  {^158^^^^^143^173^if  ( dest.getType (  )  != Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^162^^^^^147^177^String name = dest.getString (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( value.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^parent .getString (  )   == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^171^172^^^^156^186^parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^171^172^173^^^156^186^parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  { addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^n.getNext (  ) .getVar (  )  == Token.FUNCTION )  {^172^^^^^157^187^n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^n.getNext (  )  .getString (  )   == Token.FUNCTION )  {^172^^^^^157^187^n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^n .getParent (  )  .getType (  )  == Token.FUNCTION )  {^172^^^^^157^187^n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^172^173^^^^157^187^n.getNext (  ) .getType (  )  == Token.FUNCTION )  { addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( valueame, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature (  n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name, n.getNext (  ) .getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( t, n.getNext (  ) , name.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( nameame, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( tame, n.getNext (  ) , n.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^addPossibleSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^addSignature ( name, n .getParent (  )  , t.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^addSignature ( parentame, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^addSignature ( name, node, t.getSourceName (  )  ) ;addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^addSignature ( name, value, t.getSourceName (  )  ) ;addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^addSignature ( name, function, v.getInputName (  )  ) ;addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^n.getNext (  ) .getType (  )  == Token.FUNCTION )  { addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^addSignature ( name, n.getNext (  ) , t .getScope (  )   ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^getSignatureStore (  )  .addSignature ( name , parent , name )  ;^175^^^^^160^190^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^getActingCallback (  ) .removeSignature ( name ) ;^175^^^^^160^190^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^175^^^^^160^190^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^getSignatureStore (  ) .reset (  ) ;getSignatureStore (  ) .removeSignature ( name ) ;^175^^^^^160^190^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^getSignatureStore (  ) .addSignature ( name, function, fnSourceName ) ;getSignatureStore (  ) .removeSignature ( name ) ;^175^^^^^160^190^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^175^176^^^^160^190^getSignatureStore (  ) .removeSignature ( name ) ; externMethodsWithoutSignatures.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^externMethodsWithoutSignatures.contains ( name ) ;^176^^^^^161^191^externMethodsWithoutSignatures.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^176^^^^^161^191^externMethodsWithoutSignatures.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P12_Insert_Condition]^if  ( externMethodsWithoutSignatures.contains ( name )  )  { externMethodsWithoutSignatures.add ( name ) ; }^176^^^^^161^191^externMethodsWithoutSignatures.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^externMethods.contains ( name ) ;^179^^^^^164^194^externMethods.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^179^^^^^164^194^externMethods.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^externMethods.clear (  ) ;externMethods.add ( name ) ;^179^^^^^164^194^externMethods.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^nonMethodProperties.add ( name ) ;externMethods.add ( name ) ;^179^^^^^164^194^externMethods.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^externMethodsWithoutSignatures.add ( name ) ;externMethods.add ( name ) ;^179^^^^^164^194^externMethods.add ( name ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^key != null; key = key .getParent (  )^186^^^^^171^201^key != null; key = key.getNext (  ) .getNext (  )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^186^187^188^^^171^201^key != null; key = key.getNext (  ) .getNext (  )  )  { if  ( key.getType (  )  == Token.STRING )  { Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^key != null; parent = key.getNext (  ) .getNext (  )  )  {^186^^^^^171^201^key != null; key = key.getNext (  ) .getNext (  )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( value.getType (  )  == Token.STRING )  {^187^^^^^172^202^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P2_Replace_Operator]^if  ( dest.getType (  )  >= Token.STRING )  {^215^^^^^200^230^if  ( dest.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( dest.getType (  )  != Token.STRING )  {^215^^^^^200^230^if  ( dest.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( dest.getType (  )  < Token.STRING )  {^215^^^^^200^230^if  ( dest.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P6_Replace_Expression]^if  ( parent.getType() == ASSIGN && parent.getFirstChild() == n )  {^215^^^^^200^230^if  ( dest.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P6_Replace_Expression]^if  ( parent.getType (  )  == ASSIGN )  {^215^^^^^200^230^if  ( dest.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P6_Replace_Expression]^if  ( parent.getFirstChild (  )  == n )  {^215^^^^^200^230^if  ( dest.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^if  ( dest .getString (  )   == Token.STRING )  {^215^^^^^200^230^if  ( dest.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^if  ( value.getType (  )  == Token.STRING )  {^215^^^^^200^230^if  ( dest.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P3_Replace_Literal]^if  ( dest.getString (  ) .equals ( "prrototype" )  )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^if  ( value.getString (  ) .equals ( "prototype" )  )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P6_Replace_Expression]^if  ( parent.getType (  )  == ASSIGN )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P6_Replace_Expression]^if  ( parent.getFirstChild (  )  == n )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^if  ( dest.getString (  )  .getParent (  )   )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^if  ( dest .getParent (  )  .equals ( "prototype" )  )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P13_Insert_Block]^if  (  (  ( parent.getType (  )  )  ==  ( ASSIGN )  )  &&  (  ( parent.getFirstChild (  )  )  == n )  )  {     addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ; }^216^^^^^201^231^[Delete]^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P13_Insert_Block]^if  (  ( dest.getType (  )  )  ==  ( STRING )  )  {     if  ( dest.getString (  ) .equals ( "prototype" )  )  {         processPrototypeParent ( t, parent ) ;     }else {         if  (  (  ( parent.getType (  )  )  ==  ( ASSIGN )  )  &&  (  ( parent.getFirstChild (  )  )  == n )  )  {             addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;         }     } }^216^^^^^201^231^[Delete]^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( parent.getType (  )  == Token.ASSIGN || parent.getFirstChild (  )  == n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( parent.getType (  )  != Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  != n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^if  ( value.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == value )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P6_Replace_Expression]^if  ( parent.getType (  )  == Token.ASSIGN ) {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P6_Replace_Expression]^if  (  parent.getFirstChild (  )  == n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P6_Replace_Expression]^if  ( parent.getType (  )  == ASSIGN )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^if  ( parent .getString (  )   == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^if  ( parent.getType (  )  == Token.null ) {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P9_Replace_Statement]^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P15_Unwrap_Block]^addPossibleSignature(dest.getString(), n.getNext(), t);^227^228^229^230^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  { addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P16_Remove_Block]^^227^228^229^230^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  { addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( value.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , value.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) .getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , n.getNext (  )  ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( t.getString (  ) , n.getNext (  ) , dest ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( n.getString (  ) , dest.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^addSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^addPossibleSignature ( dest .getParent (  )  , n.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^addPossibleSignature ( dest.getString (  ) , n .getParent (  )  , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^addSignature ( dest.getString (  ) , value.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^parent.getFirstChild (  )  == n )  { addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^addPossibleSignature ( key.getString (  ) , value, t ) ;addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( parent.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^if  ( n.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^if  ( value .getString (  )   == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^parent .getString (  )   == n )  {^228^^^^^216^231^parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^228^229^^^^216^231^parent.getFirstChild (  )  == n )  { addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^processPrototypeParent ( t, value ) ;^217^^^^^202^232^processPrototypeParent ( t, parent ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^processPrototypeParent (  parent ) ;^217^^^^^202^232^processPrototypeParent ( t, parent ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^processPrototypeParent ( t ) ;^217^^^^^202^232^processPrototypeParent ( t, parent ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^processPrototypeParent ( parent, t ) ;^217^^^^^202^232^processPrototypeParent ( t, parent ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^217^^^^^202^232^processPrototypeParent ( t, parent ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( parent.getType (  )  == Token.ASSIGN || parent.getFirstChild (  )  == n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( parent.getType (  )  < Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  != n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^if  ( value.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == value )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P6_Replace_Expression]^if  ( parent.getType (  )  == Token.ASSIGN ) {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P6_Replace_Expression]^if  (  parent.getFirstChild (  )  == n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P6_Replace_Expression]^if  ( parent.getType (  )  == ASSIGN )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^if  ( parent .getString (  )   == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^if  ( parent.getType (  )  == Token.ASSIGN && parent .getString (  )   == n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P9_Replace_Statement]^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P15_Unwrap_Block]^addPossibleSignature(dest.getString(), n.getNext(), t);^227^228^229^230^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  { addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P16_Remove_Block]^^227^228^229^230^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  { addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( value.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , value.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) .getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , n.getNext (  )  ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( t.getString (  ) , n.getNext (  ) , dest ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( n.getString (  ) , dest.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , t.getNext (  ) , n ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^addSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^addPossibleSignature ( dest .getParent (  )  , n.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^addPossibleSignature ( value .getParent (  )  , n.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^parent.getFirstChild (  )  == n )  { addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^addPossibleSignature ( key.getString (  ) , value, t ) ;addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( parent.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , parent.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P3_Replace_Literal]^if  ( dest.getString (  ) .equals ( "y" )  )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^if  ( value.getString (  )  .getParent (  )   )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^if  ( parent.getString (  ) .equals ( "prototype" )  )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^processPrototypeParent ( t, n ) ;^217^^^^^202^232^processPrototypeParent ( t, parent ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^parent .getString (  )   == n )  {^228^^^^^213^243^parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^228^229^^^^213^243^parent.getFirstChild (  )  == n )  { addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , value.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) .getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , n.getNext (  )  ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( n.getString (  ) , dest.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , t.getNext (  ) , n ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^addSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^addPossibleSignature ( dest.getString (  ) , n .getParent (  )  , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^parent.getFirstChild (  )  == n )  { addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^addPossibleSignature ( key.getString (  ) , value, t ) ;addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( value.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^addPossibleSignature ( dest .getParent (  )  , n.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , parent.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^addPossibleSignature ( dest.getString (  ) , value .getParent (  )  , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P3_Replace_Literal]^if  ( dest.getString (  ) .equals ( "prototypep" )  )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( parent.getType (  )  <= Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.1 && parent.getFirstChild (  )  == n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^if  ( parent.getType (  )  == Token.ASSIGN && parent .getString (  )   == n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , t.getNext (  ) , n ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^addSignature ( value.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( parent.getType (  )  != Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  <= n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^if  ( n.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( key.getType (  )  > Token.STRING )  {^240^^^^^225^255^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.STRING )  {^240^^^^^225^255^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P15_Unwrap_Block]^com.google.javascript.rhino.Node value = key.getNext(); addPossibleSignature(key.getString(), value, t);^240^241^242^243^^225^255^if  ( key.getType (  )  == Token.STRING )  { Node value = key.getNext (  ) ; addPossibleSignature ( key.getString (  ) , value, t ) ; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P16_Remove_Block]^^240^241^242^243^^225^255^if  ( key.getType (  )  == Token.STRING )  { Node value = key.getNext (  ) ; addPossibleSignature ( key.getString (  ) , value, t ) ; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P13_Insert_Block]^if  (  (  ( parent.getType (  )  )  ==  ( ASSIGN )  )  &&  (  ( parent.getFirstChild (  )  )  == n )  )  {     addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ; }^240^^^^^225^255^[Delete]^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P13_Insert_Block]^if  (  (  ( dest.getType (  )  )  ==  ( STRING )  )  &&  (  ( parent.getType (  )  )  ==  ( ASSIGN )  )  )  {     Node assignee = parent.getFirstChild (  ) .getNext (  ) ;     addPossibleSignature ( dest.getString (  ) , assignee, t ) ; }^240^^^^^225^255^[Delete]^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^Node value = parent.getNext (  ) ;^241^^^^^226^256^Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^Node value = key .getParent (  )  ;^241^^^^^226^256^Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^String name = key.getString (  ) ;Node value = key.getNext (  ) ;^241^^^^^226^256^Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^Node value = value.getNext (  ) ;^241^^^^^226^256^Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^241^^^^^226^256^Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( parent.getString (  ) , value, t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( key.getString (  ) , parent, t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( key.getString (  ) ,  t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( key.getString (  ) , value ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( value.getString (  ) , key, t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( key.getString (  ) , t, value ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^addSignature ( key.getString (  ) , value, t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^addPossibleSignature ( key .getParent (  )  , value, t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^addPossibleSignature ( parent .getParent (  )  , value, t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;addPossibleSignature ( key.getString (  ) , value, t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;addPossibleSignature ( key.getString (  ) , value, t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( value.getString (  ) , value, t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^for  ( Node key = value.getFirstChild (  ) ;^238^^^^^223^253^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( key.getType (  )  != Token.STRING )  {^240^^^^^238^244^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^if  ( key .getString (  )   == Token.STRING )  {^240^^^^^238^244^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^if  ( parent.getType (  )  == Token.STRING )  {^240^^^^^238^244^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P15_Unwrap_Block]^com.google.javascript.rhino.Node value = key.getNext(); addPossibleSignature(key.getString(), value, t);^240^241^242^243^^238^244^if  ( key.getType (  )  == Token.STRING )  { Node value = key.getNext (  ) ; addPossibleSignature ( key.getString (  ) , value, t ) ; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P16_Remove_Block]^^240^241^242^243^^238^244^if  ( key.getType (  )  == Token.STRING )  { Node value = key.getNext (  ) ; addPossibleSignature ( key.getString (  ) , value, t ) ; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P13_Insert_Block]^if  (  (  ( parent.getType (  )  )  ==  ( ASSIGN )  )  &&  (  ( parent.getFirstChild (  )  )  == n )  )  {     addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ; }^240^^^^^238^244^[Delete]^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P13_Insert_Block]^if  (  (  ( dest.getType (  )  )  ==  ( STRING )  )  &&  (  ( parent.getType (  )  )  ==  ( ASSIGN )  )  )  {     Node assignee = parent.getFirstChild (  ) .getNext (  ) ;     addPossibleSignature ( dest.getString (  ) , assignee, t ) ; }^240^^^^^238^244^[Delete]^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^Node value = parent.getNext (  ) ;^241^^^^^238^244^Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^String name = key.getString (  ) ;Node value = key.getNext (  ) ;^241^^^^^238^244^Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^Node value = value.getNext (  ) ;^241^^^^^238^244^Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^241^^^^^238^244^Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( parent.getString (  ) , value, t ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( key.getString (  ) , parent, t ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( key.getString (  ) ,  t ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( key.getString (  ) , value ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( t.getString (  ) , value, key ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( value.getString (  ) , key, t ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( key.getString (  ) , t, value ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^addSignature ( key.getString (  ) , value, t ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^addPossibleSignature ( key .getParent (  )  , value, t ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;addPossibleSignature ( key.getString (  ) , value, t ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;addPossibleSignature ( key.getString (  ) , value, t ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^addPossibleSignature ( value.getString (  ) , value, t ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^if  ( value.getType (  )  == Token.STRING )  {^240^^^^^238^244^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^Node value = key .getParent (  )  ;^241^^^^^238^244^Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^241^242^^^^238^244^Node value = key.getNext (  ) ; addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^addSignature ( value.getString (  ) , value, t ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^key != null; value = key.getNext (  ) .getNext (  )  )  {^239^^^^^224^254^key != null; key = key.getNext (  ) .getNext (  )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^key != null; key = key.getVar (  ) .getNext (  )  )  {^239^^^^^224^254^key != null; key = key.getNext (  ) .getNext (  )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^key != null; key = key .getParent (  )^239^^^^^224^254^key != null; key = key.getNext (  ) .getNext (  )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^key !=  null; value^239^^^^^224^254^key != null; key = key.getNext (  ) .getNext (  )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^Node dest = value.getFirstChild (  ) .getNext (  ) ;^213^^^^^198^228^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^Node dest = n.getFirstChild (  ) .getVar (  ) ;^213^^^^^198^228^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^Node parent = n.getParent (  ) .getParent (  ) ;Node dest = n.getFirstChild (  ) .getNext (  ) ;^213^^^^^198^228^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^Node assignee = parent.getFirstChild (  ) .getNext (  ) ;Node dest = n.getFirstChild (  ) .getNext (  ) ;^213^^^^^198^228^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^for  ( Node key = n .getString (  )  ;^238^^^^^223^253^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^switch  ( value.getType (  )  )  {^210^^^^^195^225^switch  ( n.getType (  )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^switch  ( n .getString (  )   )  {^210^^^^^195^225^switch  ( n.getType (  )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^Node dest = parent.getFirstChild (  )  .getParent (  )  ;^213^^^^^198^228^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^213^^^^^198^228^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^Node dest = parent.getFirstChild (  ) .getNext (  ) ;^213^^^^^198^228^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.STRING )  {^215^^^^^200^230^if  ( dest.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( t.getString (  ) , n.getNext (  ) , dest ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^for  ( Node key = parent.getFirstChild (  ) ;^238^^^^^223^253^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^238^239^240^241^242^223^253^for  ( Node key = n.getFirstChild (  ) ; key != null; key = key.getNext (  ) .getNext (  )  )  { if  ( key.getType (  )  == Token.STRING )  { Node value = key.getNext (  ) ; addPossibleSignature ( key.getString (  ) , value, t ) ; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^239^240^241^^^224^254^key != null; key = key.getNext (  ) .getNext (  )  )  { if  ( key.getType (  )  == Token.STRING )  { Node value = key.getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^if  ( value.getType (  )  == Token.STRING )  {^240^^^^^225^255^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^241^242^^^^226^256^Node value = key.getNext (  ) ; addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( t.getString (  ) , value, key ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( dest.getType (  )  == Token.STRING || parent.getType (  )  == Token.ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P2_Replace_Operator]^if  ( dest.getType (  )  != Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P2_Replace_Operator]^if  ( dest.getType (  )  <= Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^if  ( dest.getType (  )  == Token.STRING && n.getType (  )  == Token.ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.4 )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.STRING && dest.getType (  )  == Token.ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P6_Replace_Expression]^if  ( dest.getType (  )  == Token.STRING ) {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P6_Replace_Expression]^if  (  parent.getType (  )  == Token.ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P6_Replace_Expression]^if  ( dest.getType (  )  == STRING )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P6_Replace_Expression]^if  ( parent.getType (  )  == ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P7_Replace_Invocation]^if  ( dest .getString (  )   == Token.STRING && parent^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P9_Replace_Statement]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P15_Unwrap_Block]^com.google.javascript.rhino.Node assignee = parent.getFirstChild().getNext(); addPossibleSignature(dest.getString(), assignee, t);^271^272^273^^275^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  { Node assignee = parent.getFirstChild (  ) .getNext (  ) ; addPossibleSignature ( dest.getString (  ) , assignee, t ) ; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P16_Remove_Block]^^271^272^273^^275^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  { Node assignee = parent.getFirstChild (  ) .getNext (  ) ; addPossibleSignature ( dest.getString (  ) , assignee, t ) ; }^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^Node assignee = n.getFirstChild (  ) .getNext (  ) ;^273^^^^^254^279^Node assignee = parent.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P7_Replace_Invocation]^Node assignee = parent.getFirstChild (  ) .getVar (  ) ;^273^^^^^254^279^Node assignee = parent.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P11_Insert_Donor_Statement]^Node parent = n.getParent (  ) .getParent (  ) ;Node assignee = parent.getFirstChild (  ) .getNext (  ) ;^273^^^^^254^279^Node assignee = parent.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P11_Insert_Donor_Statement]^Node dest = n.getFirstChild (  ) .getNext (  ) ;Node assignee = parent.getFirstChild (  ) .getNext (  ) ;^273^^^^^254^279^Node assignee = parent.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P7_Replace_Invocation]^Node assignee = parent .getString (  )  .getNext (  ) ;^273^^^^^254^279^Node assignee = parent.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P14_Delete_Statement]^^273^^^^^254^279^Node assignee = parent.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P11_Insert_Donor_Statement]^parent.getType (  )  == Token.ASSIGN )  { Node assignee = parent.getFirstChild (  ) .getNext (  ) ;Node assignee = parent.getFirstChild (  ) .getNext (  ) ;^273^^^^^254^279^Node assignee = parent.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^addPossibleSignature ( parent.getString (  ) , assignee, t ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) ,  t ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , assignee ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^addPossibleSignature ( t.getString (  ) , assignee, dest ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , t, assignee ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P7_Replace_Invocation]^addSignature ( dest.getString (  ) , assignee, t ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P7_Replace_Invocation]^addPossibleSignature ( dest .getParent (  )  , assignee, t ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P8_Replace_Mix]^addPossibleSignature ( dest.getString (  ) , parent, t ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P14_Delete_Statement]^^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P11_Insert_Donor_Statement]^parent.getFirstChild (  )  == n )  { addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P11_Insert_Donor_Statement]^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P11_Insert_Donor_Statement]^addPossibleSignature ( key.getString (  ) , value, t ) ;addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^Node dest = parent.getFirstChild (  ) .getNext (  ) ;^268^^^^^254^279^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P7_Replace_Invocation]^Node dest = n.getFirstChild (  ) .getVar (  ) ;^268^^^^^254^279^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P11_Insert_Donor_Statement]^Node parent = n.getParent (  ) .getParent (  ) ;Node dest = n.getFirstChild (  ) .getNext (  ) ;^268^^^^^254^279^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P11_Insert_Donor_Statement]^Node assignee = parent.getFirstChild (  ) .getNext (  ) ;Node dest = n.getFirstChild (  ) .getNext (  ) ;^268^^^^^254^279^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^Node parent = dest.getParent (  ) .getParent (  ) ;^269^^^^^254^279^Node parent = n.getParent (  ) .getParent (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P7_Replace_Invocation]^Node parent = n.getVar (  ) .getParent (  ) ;^269^^^^^254^279^Node parent = n.getParent (  ) .getParent (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P11_Insert_Donor_Statement]^Node dest = n.getFirstChild (  ) .getNext (  ) ;Node parent = n.getParent (  ) .getParent (  ) ;^269^^^^^254^279^Node parent = n.getParent (  ) .getParent (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P11_Insert_Donor_Statement]^Node assignee = parent.getFirstChild (  ) .getNext (  ) ;Node parent = n.getParent (  ) .getParent (  ) ;^269^^^^^254^279^Node parent = n.getParent (  ) .getParent (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^switch  ( parent.getType (  )  )  {^255^^^^^254^279^switch  ( n.getType (  )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P7_Replace_Invocation]^switch  ( n .getString (  )   )  {^255^^^^^254^279^switch  ( n.getType (  )  )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P7_Replace_Invocation]^Node dest = n .getString (  )  .getNext (  ) ;^268^^^^^254^279^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P14_Delete_Statement]^^268^269^^^^254^279^Node dest = n.getFirstChild (  ) .getNext (  ) ; Node parent = n.getParent (  ) .getParent (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^Node parent = parent.getParent (  ) .getParent (  ) ;^269^^^^^254^279^Node parent = n.getParent (  ) .getParent (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P7_Replace_Invocation]^Node parent = n .getString (  )^269^^^^^254^279^Node parent = n.getParent (  ) .getParent (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P14_Delete_Statement]^^269^^^^^254^279^Node parent = n.getParent (  ) .getParent (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P8_Replace_Mix]^parent .getString (  )   == Token.ASSIGN )  {^272^^^^^254^279^parent.getType (  )  == Token.ASSIGN )  {^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P14_Delete_Statement]^^272^273^^^^254^279^parent.getType (  )  == Token.ASSIGN )  { Node assignee = parent.getFirstChild (  ) .getNext (  ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^addPossibleSignature ( assignee.getString (  ) , dest, t ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P8_Replace_Mix]^addPossibleSignature ( parent .getParent (  )  , assignee, t ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] MethodCompilerPass GetExternMethods GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] Multimap  methodDefinitions  AbstractCompiler  compiler  Set  externMethods  externMethodsWithoutSignatures  nonMethodProperties  boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P2_Replace_Operator]^if  ( dest.getType (  )  > Token.STRING )  {^158^^^^^143^173^if  ( dest.getType (  )  != Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( value.getType (  )  != Token.STRING )  {^158^^^^^143^173^if  ( dest.getType (  )  != Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^if  ( dest .getString (  )   != Token.STRING )  {^158^^^^^143^173^if  ( dest.getType (  )  != Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P9_Replace_Statement]^if  ( value.getType (  )  == Token.FUNCTION )  {^158^^^^^143^173^if  ( dest.getType (  )  != Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P9_Replace_Statement]^if  ( key.getType (  )  == Token.STRING )  {^158^^^^^143^173^if  ( dest.getType (  )  != Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P15_Unwrap_Block]^return ;^158^159^160^^^143^173^if  ( dest.getType (  )  != Token.STRING )  { return; }^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P16_Remove_Block]^^158^159^160^^^143^173^if  ( dest.getType (  )  != Token.STRING )  { return; }^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P2_Replace_Operator]^if  ( parent.getType (  )  == Token.ASSIGN || parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P2_Replace_Operator]^if  ( parent.getType (  )  != Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P2_Replace_Operator]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  <= n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P2_Replace_Operator]^if  ( parent.getType (  )  >= Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( value.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == value && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.null )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( n.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == parent && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P6_Replace_Expression]^if  ( parent.getType (  )  == Token.ASSIGN ) {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P6_Replace_Expression]^if  (  parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P6_Replace_Expression]^if  ( (parent.getType() == ASSIGN && parent.getFirstChild() == n) )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P6_Replace_Expression]^if  ( parent.getType (  )  == ASSIGN )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P6_Replace_Expression]^if  ( parent.getFirstChild (  )  == n )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P6_Replace_Expression]^if  ( n.getNext (  ) .getType (  )  == FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^if  ( parent.getType (  )  == Token.ASSIGN && parent .getString (  )   == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^if  ( parent .getString (  )   == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  )^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n .getType (  )  .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^if  (  parent.getFirstChild (  )  == value && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^170^171^172^^^155^185^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^175^^^^^170^177^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^175^176^^^^170^177^getSignatureStore (  ) .removeSignature ( name ) ; externMethodsWithoutSignatures.add ( name ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^176^^^^^170^177^externMethodsWithoutSignatures.add ( name ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^externMethods.add ( name ) ;externMethodsWithoutSignatures.add ( name ) ;^176^^^^^170^177^externMethodsWithoutSignatures.add ( name ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( parentame, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature (  n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name, n.getNext (  ) .getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( n, name.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( tame, n.getNext (  ) , n.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( t, n.getNext (  ) , name.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^addSignature ( name, n .getType (  )  , t.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^addSignature ( name, value, t.getSourceName (  )  ) ;addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^n.getNext (  ) .getType (  )  == Token.FUNCTION )  { addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( valueame, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^170^177^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P2_Replace_Operator]^if  ( key.getType (  )  != Token.STRING )  {^187^^^^^172^202^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P2_Replace_Operator]^if  ( key.getType (  )  >= Token.STRING )  {^187^^^^^172^202^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.STRING )  {^187^^^^^172^202^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P6_Replace_Expression]^if  ( value.getType() == FUNCTION )  {^187^^^^^172^202^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^if  ( key .getString (  )   == Token.STRING )  {^187^^^^^172^202^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P9_Replace_Statement]^if  ( dest.getType (  )  != Token.STRING )  {^187^^^^^172^202^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P9_Replace_Statement]^if  ( value.getType (  )  == Token.FUNCTION )  {^187^^^^^172^202^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P13_Insert_Block]^if  (  (  (  ( parent.getType (  )  )  ==  ( ASSIGN )  )  &&  (  ( parent.getFirstChild (  )  )  == n )  )  &&  (  ( n.getNext (  ) .getType (  )  )  ==  ( FUNCTION )  )  )  {     addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ; }else {     getSignatureStore (  ) .removeSignature ( name ) ;     externMethodsWithoutSignatures.add ( name ) ; }^187^^^^^172^202^[Delete]^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P2_Replace_Operator]^if  ( value.getType (  )  != Token.FUNCTION )  {^190^^^^^175^205^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.FUNCTION )  {^190^^^^^175^205^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P9_Replace_Statement]^if  ( dest.getType (  )  != Token.STRING )  {^190^^^^^175^205^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P9_Replace_Statement]^if  ( key.getType (  )  == Token.STRING )  {^190^^^^^175^205^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P15_Unwrap_Block]^addSignature(name, value, t.getSourceName());^190^191^192^193^194^175^205^if  ( value.getType (  )  == Token.FUNCTION )  { addSignature ( name, value, t.getSourceName (  )  ) ; } else { getSignatureStore (  ) .removeSignature ( name ) ; externMethodsWithoutSignatures.add ( name ) ; }^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P16_Remove_Block]^^190^191^192^193^194^175^205^if  ( value.getType (  )  == Token.FUNCTION )  { addSignature ( name, value, t.getSourceName (  )  ) ; } else { getSignatureStore (  ) .removeSignature ( name ) ; externMethodsWithoutSignatures.add ( name ) ; }^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P13_Insert_Block]^if  (  (  (  ( parent.getType (  )  )  ==  ( ASSIGN )  )  &&  (  ( parent.getFirstChild (  )  )  == n )  )  &&  (  ( n.getNext (  ) .getType (  )  )  ==  ( FUNCTION )  )  )  {     addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ; }else {     getSignatureStore (  ) .removeSignature ( name ) ;     externMethodsWithoutSignatures.add ( name ) ; }^190^^^^^175^205^[Delete]^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^193^194^^^^190^195^getSignatureStore (  ) .removeSignature ( name ) ; externMethodsWithoutSignatures.add ( name ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^193^^^^^190^195^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^194^^^^^190^195^externMethodsWithoutSignatures.add ( name ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^externMethods.add ( name ) ;externMethodsWithoutSignatures.add ( name ) ;^194^^^^^190^195^externMethodsWithoutSignatures.add ( name ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name, n, t.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature (  value, t.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name,  t.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name, value.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( t, value, name.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( value, name, t.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name, t, value.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^addSignature ( name, parent, t.getSourceName (  )  ) ;^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^191^^^^^176^206^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^Node value = key .getType (  )  ;^188^^^^^173^203^Node value = key.getNext (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^Node value = parent.getNext (  ) ;^188^^^^^173^203^Node value = key.getNext (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^String name = key.getString (  ) ;Node value = key.getNext (  ) ;^188^^^^^173^203^Node value = key.getNext (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P1_Replace_Type]^char name = key.getchar (  ) ;^189^^^^^174^204^String name = key.getString (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^String name = parent.getString (  ) ;^189^^^^^174^204^String name = key.getString (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^String name = dest.getString (  ) ;String name = key.getString (  ) ;^189^^^^^174^204^String name = key.getString (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^Node value = key.getNext (  ) ;String name = key.getString (  ) ;^189^^^^^174^204^String name = key.getString (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^Node value = value.getNext (  ) ;^188^^^^^173^203^Node value = key.getNext (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^188^^^^^173^203^Node value = key.getNext (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^String name = value.getString (  ) ;^189^^^^^174^204^String name = key.getString (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^189^^^^^174^204^String name = key.getString (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( n.getType (  )  == Token.FUNCTION )  {^190^^^^^175^205^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^if  ( value .getString (  )   == Token.FUNCTION )  {^190^^^^^175^205^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^193^^^^^178^208^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^193^194^^^^178^208^getSignatureStore (  ) .removeSignature ( name ) ; externMethodsWithoutSignatures.add ( name ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^194^^^^^179^209^externMethodsWithoutSignatures.add ( name ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^externMethods.add ( name ) ;externMethodsWithoutSignatures.add ( name ) ;^194^^^^^179^209^externMethodsWithoutSignatures.add ( name ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^196^^^^^181^211^externMethods.add ( name ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^externMethodsWithoutSignatures.add ( name ) ;externMethods.add ( name ) ;^196^^^^^181^211^externMethods.add ( name ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P2_Replace_Operator]^if  ( value.getType (  )  >= Token.FUNCTION )  {^190^^^^^175^205^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^for  ( Node key = value.getFirstChild (  ) ;^185^^^^^170^200^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^for  ( Node n = key.getFirstChild (  ) ;^185^^^^^170^200^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P2_Replace_Operator]^if  ( key.getType (  )  <= Token.STRING )  {^187^^^^^185^198^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P2_Replace_Operator]^if  ( key.getType (  )  != Token.STRING )  {^187^^^^^185^198^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.STRING )  {^187^^^^^185^198^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( key.getType (  )  == Token.this )  {^187^^^^^185^198^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P6_Replace_Expression]^if  ( value.getType() == FUNCTION )  {^187^^^^^185^198^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^if  ( key .getString (  )   == Token.STRING )  {^187^^^^^185^198^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P9_Replace_Statement]^if  ( dest.getType (  )  != Token.STRING )  {^187^^^^^185^198^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P9_Replace_Statement]^if  ( value.getType (  )  == Token.FUNCTION )  {^187^^^^^185^198^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P13_Insert_Block]^if  (  (  (  ( parent.getType (  )  )  ==  ( ASSIGN )  )  &&  (  ( parent.getFirstChild (  )  )  == n )  )  &&  (  ( n.getNext (  ) .getType (  )  )  ==  ( FUNCTION )  )  )  {     addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ; }else {     getSignatureStore (  ) .removeSignature ( name ) ;     externMethodsWithoutSignatures.add ( name ) ; }^187^^^^^185^198^[Delete]^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P2_Replace_Operator]^if  ( value.getType (  )  != Token.FUNCTION )  {^190^^^^^185^198^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^if  ( parent.getType (  )  == Token.FUNCTION )  {^190^^^^^185^198^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P9_Replace_Statement]^if  ( dest.getType (  )  != Token.STRING )  {^190^^^^^185^198^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P9_Replace_Statement]^if  ( key.getType (  )  == Token.STRING )  {^190^^^^^185^198^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P15_Unwrap_Block]^addSignature(name, value, t.getSourceName());^190^191^192^193^194^185^198^if  ( value.getType (  )  == Token.FUNCTION )  { addSignature ( name, value, t.getSourceName (  )  ) ; } else { getSignatureStore (  ) .removeSignature ( name ) ; externMethodsWithoutSignatures.add ( name ) ; }^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P16_Remove_Block]^^190^191^192^193^194^185^198^if  ( value.getType (  )  == Token.FUNCTION )  { addSignature ( name, value, t.getSourceName (  )  ) ; } else { getSignatureStore (  ) .removeSignature ( name ) ; externMethodsWithoutSignatures.add ( name ) ; }^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P13_Insert_Block]^if  (  (  (  ( parent.getType (  )  )  ==  ( ASSIGN )  )  &&  (  ( parent.getFirstChild (  )  )  == n )  )  &&  (  ( n.getNext (  ) .getType (  )  )  ==  ( FUNCTION )  )  )  {     addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ; }else {     getSignatureStore (  ) .removeSignature ( name ) ;     externMethodsWithoutSignatures.add ( name ) ; }^190^^^^^185^198^[Delete]^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^193^^^^^185^198^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^193^194^^^^185^198^getSignatureStore (  ) .removeSignature ( name ) ; externMethodsWithoutSignatures.add ( name ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^194^^^^^185^198^externMethodsWithoutSignatures.add ( name ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^externMethods.add ( name ) ;externMethodsWithoutSignatures.add ( name ) ;^194^^^^^185^198^externMethodsWithoutSignatures.add ( name ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name, parent, t.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature (  value, t.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name,  t.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name, value.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( t, value, name.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( value, name, t.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^Node value = parent.getNext (  ) ;^188^^^^^185^198^Node value = key.getNext (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^String name = key.getString (  ) ;Node value = key.getNext (  ) ;^188^^^^^185^198^Node value = key.getNext (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P1_Replace_Type]^char name = key.getchar (  ) ;^189^^^^^185^198^String name = key.getString (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^String name = value.getString (  ) ;^189^^^^^185^198^String name = key.getString (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^String name = key .getFirstChild (  )  ;^189^^^^^185^198^String name = key.getString (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^String name = dest.getString (  ) ;String name = key.getString (  ) ;^189^^^^^185^198^String name = key.getString (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^Node value = key.getNext (  ) ;String name = key.getString (  ) ;^189^^^^^185^198^String name = key.getString (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^Node value = value .getType (  )  ;^188^^^^^185^198^Node value = key.getNext (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^188^^^^^185^198^Node value = key.getNext (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^String name = parent.getString (  ) ;^189^^^^^185^198^String name = key.getString (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^189^^^^^185^198^String name = key.getString (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( n.getType (  )  == Token.FUNCTION )  {^190^^^^^185^198^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name, n, t.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name, t, value.getSourceName (  )  ) ;^191^^^^^185^198^addSignature ( name, value, t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^196^^^^^185^198^externMethods.add ( name ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^externMethodsWithoutSignatures.add ( name ) ;externMethods.add ( name ) ;^196^^^^^185^198^externMethods.add ( name ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P2_Replace_Operator]^if  ( value.getType (  )  < Token.FUNCTION )  {^190^^^^^185^198^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^if  ( value .getString (  )   == Token.FUNCTION )  {^190^^^^^185^198^if  ( value.getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^if  ( value.getType (  )  == Token.STRING )  {^187^^^^^185^198^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^Node value = value.getNext (  ) ;^188^^^^^185^198^Node value = key.getNext (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^188^189^^^^185^198^Node value = key.getNext (  ) ; String name = key.getString (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^key != null; parent = key.getNext (  ) .getNext (  )  )  {^186^^^^^171^201^key != null; key = key.getNext (  ) .getNext (  )  )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^key != null; key = key .getType (  )^186^^^^^171^201^key != null; key = key.getNext (  ) .getNext (  )  )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^key !=  null; value^186^^^^^171^201^key != null; key = key.getNext (  ) .getNext (  )  )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^Node dest = value.getFirstChild (  ) .getNext (  ) ;^156^^^^^141^171^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^Node dest = value.getFirstChild (  )  .getType (  )  ;^156^^^^^141^171^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P1_Replace_Type]^char name = dest.getchar (  ) ;^162^^^^^147^177^String name = dest.getString (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^String name = parent.getString (  ) ;^162^^^^^147^177^String name = dest.getString (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^String name = key.getString (  ) ;String name = dest.getString (  ) ;^162^^^^^147^177^String name = dest.getString (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^String name = key .getFirstChild (  )  ;^189^^^^^174^204^String name = key.getString (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^switch  ( value.getType (  )  )  {^153^^^^^138^168^switch  ( n.getType (  )  )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^Node dest = n .getString (  )  .getNext (  ) ;^156^^^^^141^171^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^Node dest = parent.getFirstChild (  )  .getType (  )  ;^156^^^^^141^171^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^156^^^^^141^171^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^String name = value.getString (  ) ;^162^^^^^147^177^String name = dest.getString (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^162^^^^^147^177^String name = dest.getString (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^171^172^173^^^156^186^parent.getFirstChild (  )  == n && n.getNext (  ) .getType (  )  == Token.FUNCTION )  { addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^n .getType (  )  .getType (  )  == Token.FUNCTION )  {^172^^^^^157^187^n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P8_Replace_Mix]^n.getNext (  )  .getString (  )   == Token.FUNCTION )  {^172^^^^^157^187^n.getNext (  ) .getType (  )  == Token.FUNCTION )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^172^173^^^^157^187^n.getNext (  ) .getType (  )  == Token.FUNCTION )  { addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( valueame, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature (  n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( name, n.getNext (  ) .getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( t, n.getNext (  ) , name.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( tame, n.getNext (  ) , n.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^addSignature ( name, value, t.getSourceName (  )  ) ;addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^n.getNext (  ) .getType (  )  == Token.FUNCTION )  { addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^addSignature ( parentame, n.getNext (  ) , t.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P7_Replace_Invocation]^addSignature ( name, n .getType (  )  , t.getSourceName (  )  ) ;^173^^^^^158^188^addSignature ( name, n.getNext (  ) , t.getSourceName (  )  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^175^^^^^160^190^getSignatureStore (  ) .removeSignature ( name ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^176^^^^^161^191^externMethodsWithoutSignatures.add ( name ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^externMethods.add ( name ) ;externMethodsWithoutSignatures.add ( name ) ;^176^^^^^161^191^externMethodsWithoutSignatures.add ( name ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^179^^^^^164^194^externMethods.add ( name ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P11_Insert_Donor_Statement]^externMethodsWithoutSignatures.add ( name ) ;externMethods.add ( name ) ;^179^^^^^164^194^externMethods.add ( name ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P5_Replace_Variable]^key != null; value = key.getNext (  ) .getNext (  )  )  {^186^^^^^171^201^key != null; key = key.getNext (  ) .getNext (  )  )  {^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P14_Delete_Statement]^^186^187^188^^^171^201^key != null; key = key.getNext (  ) .getNext (  )  )  { if  ( key.getType (  )  == Token.STRING )  { Node value = key.getNext (  ) ;^[CLASS] GetExternMethods  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  String  name  
[P2_Replace_Operator]^if  ( dest.getType (  )  != Token.STRING )  {^215^^^^^200^230^if  ( dest.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( dest.getType (  )  >= Token.STRING )  {^215^^^^^200^230^if  ( dest.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^if  ( value.getType (  )  == Token.STRING )  {^215^^^^^200^230^if  ( dest.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P6_Replace_Expression]^if  ( parent.getType() == ASSIGN && parent.getFirstChild() == n )  {^215^^^^^200^230^if  ( dest.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P6_Replace_Expression]^if  ( parent.getType (  )  == ASSIGN )  {^215^^^^^200^230^if  ( dest.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P6_Replace_Expression]^if  ( parent.getFirstChild (  )  == n )  {^215^^^^^200^230^if  ( dest.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P9_Replace_Statement]^if  ( key.getType (  )  == Token.STRING )  {^215^^^^^200^230^if  ( dest.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P3_Replace_Literal]^if  ( dest.getString (  ) .equals ( "ototyrototype" )  )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^if  ( value.getString (  ) .equals ( "prototype" )  )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P6_Replace_Expression]^if  ( parent.getType (  )  == ASSIGN )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P6_Replace_Expression]^if  ( parent.getFirstChild (  )  == n )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^if  ( dest .getParent (  )  .equals ( "prototype" )  )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P13_Insert_Block]^if  (  (  ( parent.getType (  )  )  ==  ( ASSIGN )  )  &&  (  ( parent.getFirstChild (  )  )  == n )  )  {     addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ; }^216^^^^^201^231^[Delete]^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P13_Insert_Block]^if  (  ( dest.getType (  )  )  ==  ( STRING )  )  {     if  ( dest.getString (  ) .equals ( "prototype" )  )  {         processPrototypeParent ( t, parent ) ;     }else {         if  (  (  ( parent.getType (  )  )  ==  ( ASSIGN )  )  &&  (  ( parent.getFirstChild (  )  )  == n )  )  {             addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;         }     } }^216^^^^^201^231^[Delete]^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( parent.getType (  )  == Token.ASSIGN || parent.getFirstChild (  )  == n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( parent.getType (  )  != Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  <= n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^if  ( value.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == value )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^if  ( n.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == parent )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P6_Replace_Expression]^if  ( parent.getType (  )  == Token.ASSIGN ) {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P6_Replace_Expression]^if  (  parent.getFirstChild (  )  == n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P6_Replace_Expression]^if  ( parent.getType (  )  == ASSIGN )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P9_Replace_Statement]^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P15_Unwrap_Block]^addPossibleSignature(dest.getString(), n.getNext(), t);^227^228^229^230^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  { addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ; }^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P16_Remove_Block]^^227^228^229^230^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  { addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ; }^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( value.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , value.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) .getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , n.getNext (  )  ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( n.getString (  ) , dest.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , t.getNext (  ) , n ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^addPossibleSignature ( dest.getString (  ) , value .getParent (  )  , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^parent.getFirstChild (  )  == n )  { addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^addPossibleSignature ( key.getString (  ) , value, t ) ;addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( parent.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^addPossibleSignature ( dest .getParent (  )  , n.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^addPossibleSignature ( value .getParent (  )  , n.getNext (  ) , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^228^229^^^^216^231^parent.getFirstChild (  )  == n )  { addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( t.getString (  ) , n.getNext (  ) , dest ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^addPossibleSignature ( dest.getString (  ) , n .getParent (  )  , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^processPrototypeParent ( t, n ) ;^217^^^^^202^232^processPrototypeParent ( t, parent ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^processPrototypeParent (  parent ) ;^217^^^^^202^232^processPrototypeParent ( t, parent ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^processPrototypeParent ( t ) ;^217^^^^^202^232^processPrototypeParent ( t, parent ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^processPrototypeParent ( parent, t ) ;^217^^^^^202^232^processPrototypeParent ( t, parent ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^217^^^^^202^232^processPrototypeParent ( t, parent ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( parent.getType (  )  == Token.ASSIGN || parent.getFirstChild (  )  == n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( parent.getType (  )  > Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  <= n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^if  ( value.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == value )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^if  ( n.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == parent )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P6_Replace_Expression]^if  ( parent.getType (  )  == Token.ASSIGN ) {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P6_Replace_Expression]^if  (  parent.getFirstChild (  )  == n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P6_Replace_Expression]^if  ( parent.getType (  )  == ASSIGN )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^if  ( parent.getType (  )  == Token.ASSIGN && parent .getString (  )   == n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P9_Replace_Statement]^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P15_Unwrap_Block]^addPossibleSignature(dest.getString(), n.getNext(), t);^227^228^229^230^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  { addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ; }^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P16_Remove_Block]^^227^228^229^230^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  { addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ; }^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , value.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) .getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , n.getNext (  )  ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( n.getString (  ) , dest.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , t.getNext (  ) , n ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^addPossibleSignature ( value.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^parent.getFirstChild (  )  == n )  { addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^addPossibleSignature ( key.getString (  ) , value, t ) ;addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P3_Replace_Literal]^if  ( dest.getString (  ) .equals ( "rrototype" )  )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^if  ( value.getString (  )  .getParent (  )   )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^processPrototypeParent ( t, value ) ;^217^^^^^202^232^processPrototypeParent ( t, parent ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^if  ( n.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^if  ( parent .getString (  )   == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^if  ( value .getString (  )   == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^parent .getString (  )   == n )  {^228^^^^^213^243^parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^228^229^^^^213^243^parent.getFirstChild (  )  == n )  { addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( parent.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , value.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) .getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , n.getNext (  )  ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( t.getString (  ) , n.getNext (  ) , dest ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( n.getString (  ) , dest.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , t.getNext (  ) , n ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^addPossibleSignature ( dest .getParent (  )  , n.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^addPossibleSignature ( dest.getString (  ) , n .getParent (  )  , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^addPossibleSignature ( value.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^parent.getFirstChild (  )  == n )  { addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^addPossibleSignature ( key.getString (  ) , value, t ) ;addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P3_Replace_Literal]^if  ( dest.getString (  ) .equals ( "prototyperototy" )  )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^if  ( value .getParent (  )  .equals ( "prototype" )  )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  != n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^if  ( parent.getType (  )  == Token.ASSIGN && parent .getString (  )   == n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^if  ( parent .getString (  )   == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^if  ( n.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^216^231^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^addPossibleSignature ( dest.getString (  ) , parent .getParent (  )  , t ) ;^229^^^^^216^231^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( parent.getType (  )  >= Token.ASSIGN && parent.getFirstChild (  )  == n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  >= n )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^if  (  parent.getFirstChild (  )  == value )  {^227^228^^^^212^242^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( t.getString (  ) , n.getNext (  ) , dest ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^addPossibleSignature ( dest .getParent (  )  , n.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , parent.getNext (  ) , t ) ;^229^^^^^227^230^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( key.getType (  )  >= Token.STRING )  {^240^^^^^225^255^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.STRING )  {^240^^^^^225^255^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P9_Replace_Statement]^if  ( dest.getType (  )  == Token.STRING )  {^240^^^^^225^255^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P15_Unwrap_Block]^com.google.javascript.rhino.Node value = key.getNext(); addPossibleSignature(key.getString(), value, t);^240^241^242^243^^225^255^if  ( key.getType (  )  == Token.STRING )  { Node value = key.getNext (  ) ; addPossibleSignature ( key.getString (  ) , value, t ) ; }^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P16_Remove_Block]^^240^241^242^243^^225^255^if  ( key.getType (  )  == Token.STRING )  { Node value = key.getNext (  ) ; addPossibleSignature ( key.getString (  ) , value, t ) ; }^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P13_Insert_Block]^if  (  (  ( parent.getType (  )  )  ==  ( ASSIGN )  )  &&  (  ( parent.getFirstChild (  )  )  == n )  )  {     addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ; }^240^^^^^225^255^[Delete]^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P13_Insert_Block]^if  (  (  ( dest.getType (  )  )  ==  ( STRING )  )  &&  (  ( parent.getType (  )  )  ==  ( ASSIGN )  )  )  {     Node assignee = parent.getFirstChild (  ) .getNext (  ) ;     addPossibleSignature ( dest.getString (  ) , assignee, t ) ; }^240^^^^^225^255^[Delete]^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^Node value = parent.getNext (  ) ;^241^^^^^226^256^Node value = key.getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^Node value = value.getNext (  ) ;^241^^^^^226^256^Node value = key.getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^241^242^^^^226^256^Node value = key.getNext (  ) ; addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( value.getString (  ) , value, t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( key.getString (  ) , parent, t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( key.getString (  ) ,  t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( key.getString (  ) , value ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( t.getString (  ) , value, key ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( value.getString (  ) , key, t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^addPossibleSignature ( key .getParent (  )  , value, t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^addPossibleSignature ( parent.getString (  ) , value, t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;addPossibleSignature ( key.getString (  ) , value, t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;addPossibleSignature ( key.getString (  ) , value, t ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^for  ( Node key = value.getFirstChild (  ) ;^238^^^^^223^253^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^for  ( Node value = n.getFirstChild (  ) ;^238^^^^^223^253^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^for  ( Node n = key.getFirstChild (  ) ;^238^^^^^223^253^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( key.getType (  )  != Token.STRING )  {^240^^^^^238^244^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.STRING )  {^240^^^^^238^244^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^if  ( key .getString (  )   == Token.STRING )  {^240^^^^^238^244^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P9_Replace_Statement]^if  ( dest.getType (  )  == Token.STRING )  {^240^^^^^238^244^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P15_Unwrap_Block]^com.google.javascript.rhino.Node value = key.getNext(); addPossibleSignature(key.getString(), value, t);^240^241^242^243^^238^244^if  ( key.getType (  )  == Token.STRING )  { Node value = key.getNext (  ) ; addPossibleSignature ( key.getString (  ) , value, t ) ; }^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P16_Remove_Block]^^240^241^242^243^^238^244^if  ( key.getType (  )  == Token.STRING )  { Node value = key.getNext (  ) ; addPossibleSignature ( key.getString (  ) , value, t ) ; }^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P13_Insert_Block]^if  (  (  ( parent.getType (  )  )  ==  ( ASSIGN )  )  &&  (  ( parent.getFirstChild (  )  )  == n )  )  {     addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ; }^240^^^^^238^244^[Delete]^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P13_Insert_Block]^if  (  (  ( dest.getType (  )  )  ==  ( STRING )  )  &&  (  ( parent.getType (  )  )  ==  ( ASSIGN )  )  )  {     Node assignee = parent.getFirstChild (  ) .getNext (  ) ;     addPossibleSignature ( dest.getString (  ) , assignee, t ) ; }^240^^^^^238^244^[Delete]^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^Node value = parent.getNext (  ) ;^241^^^^^238^244^Node value = key.getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^Node value = key .getParent (  )  ;^241^^^^^238^244^Node value = key.getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^241^242^^^^238^244^Node value = key.getNext (  ) ; addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( parent.getString (  ) , value, t ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( key.getString (  ) , parent, t ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( key.getString (  ) ,  t ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( key.getString (  ) , value ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( t.getString (  ) , value, key ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( value.getString (  ) , key, t ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( key.getString (  ) , t, value ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^addPossibleSignature ( key .getParent (  )  , value, t ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^addPossibleSignature ( value.getString (  ) , value, t ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;addPossibleSignature ( key.getString (  ) , value, t ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;addPossibleSignature ( key.getString (  ) , value, t ) ;^242^^^^^238^244^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^if  ( value.getType (  )  == Token.STRING )  {^240^^^^^238^244^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^if  ( value .getString (  )   == Token.STRING )  {^240^^^^^238^244^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^Node value = value.getNext (  ) ;^241^^^^^238^244^Node value = key.getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^241^^^^^238^244^Node value = key.getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^key != null; value = key.getNext (  ) .getNext (  )  )  {^239^^^^^224^254^key != null; key = key.getNext (  ) .getNext (  )  )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^key != null; key = key .getParent (  )^239^^^^^224^254^key != null; key = key.getNext (  ) .getNext (  )  )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^key !=  null; value^239^^^^^224^254^key != null; key = key.getNext (  ) .getNext (  )  )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^Node dest = value.getFirstChild (  ) .getNext (  ) ;^213^^^^^198^228^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^Node parent = n.getParent (  ) .getParent (  ) ;Node dest = n.getFirstChild (  ) .getNext (  ) ;^213^^^^^198^228^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P11_Insert_Donor_Statement]^Node assignee = parent.getFirstChild (  ) .getNext (  ) ;Node dest = n.getFirstChild (  ) .getNext (  ) ;^213^^^^^198^228^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^switch  ( value.getType (  )  )  {^210^^^^^195^225^switch  ( n.getType (  )  )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^Node dest = n .getString (  )  .getNext (  ) ;^213^^^^^198^228^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^213^^^^^198^228^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^Node dest = value .getString (  )  .getNext (  ) ;^213^^^^^198^228^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P3_Replace_Literal]^if  ( dest.getString (  ) .equals ( "protorototype" )  )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^if  ( dest.getString (  )  .getParent (  )   )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^if  ( parent.getString (  ) .equals ( "prototype" )  )  {^216^^^^^201^231^if  ( dest.getString (  ) .equals ( "prototype" )  )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^addPossibleSignature ( dest.getString (  ) , parent.getNext (  ) , t ) ;^229^^^^^214^244^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^for  ( Node key = value .getString (  )  ;^238^^^^^223^253^for  ( Node key = n.getFirstChild (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^238^239^240^241^242^223^253^for  ( Node key = n.getFirstChild (  ) ; key != null; key = key.getNext (  ) .getNext (  )  )  { if  ( key.getType (  )  == Token.STRING )  { Node value = key.getNext (  ) ; addPossibleSignature ( key.getString (  ) , value, t ) ; }^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P14_Delete_Statement]^^239^240^241^^^224^254^key != null; key = key.getNext (  ) .getNext (  )  )  { if  ( key.getType (  )  == Token.STRING )  { Node value = key.getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P8_Replace_Mix]^key != null; value = key .getParent (  )^239^^^^^224^254^key != null; key = key.getNext (  ) .getNext (  )  )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^if  ( value.getType (  )  == Token.STRING )  {^240^^^^^225^255^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^if  ( key .getString (  )   == Token.STRING )  {^240^^^^^225^255^if  ( key.getType (  )  == Token.STRING )  {^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P7_Replace_Invocation]^Node value = key .getParent (  )  ;^241^^^^^226^256^Node value = key.getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P5_Replace_Variable]^addPossibleSignature ( key.getString (  ) , t, value ) ;^242^^^^^227^257^addPossibleSignature ( key.getString (  ) , value, t ) ;^[CLASS] GatherSignatures  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  dest  key  n  parent  value  
[P2_Replace_Operator]^if  ( dest.getType (  )  == Token.STRING || parent.getType (  )  == Token.ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P2_Replace_Operator]^if  ( dest.getType (  )  != Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^if  ( dest.getType (  )  == Token.STRING && n.getType (  )  == Token.ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^if  ( parent.getType (  )  == Token.STRING && dest.getType (  )  == Token.ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P6_Replace_Expression]^if  ( dest.getType (  )  == Token.STRING ) {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P6_Replace_Expression]^if  (  parent.getType (  )  == Token.ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P6_Replace_Expression]^if  ( dest.getType (  )  == STRING )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P6_Replace_Expression]^if  ( parent.getType (  )  == ASSIGN )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P7_Replace_Invocation]^if  ( dest .getString (  )   == Token.STRING && parent^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P8_Replace_Mix]^if  ( dest .getString (  )   == Token.STRING && n^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P9_Replace_Statement]^if  ( parent.getType (  )  == Token.ASSIGN && parent.getFirstChild (  )  == n )  {^271^272^^^^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  {^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P15_Unwrap_Block]^com.google.javascript.rhino.Node assignee = parent.getFirstChild().getNext(); addPossibleSignature(dest.getString(), assignee, t);^271^272^273^^275^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  { Node assignee = parent.getFirstChild (  ) .getNext (  ) ; addPossibleSignature ( dest.getString (  ) , assignee, t ) ; }^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P16_Remove_Block]^^271^272^273^^275^254^279^if  ( dest.getType (  )  == Token.STRING && parent.getType (  )  == Token.ASSIGN )  { Node assignee = parent.getFirstChild (  ) .getNext (  ) ; addPossibleSignature ( dest.getString (  ) , assignee, t ) ; }^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^Node assignee = n.getFirstChild (  ) .getNext (  ) ;^273^^^^^254^279^Node assignee = parent.getFirstChild (  ) .getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P11_Insert_Donor_Statement]^Node parent = n.getParent (  ) .getParent (  ) ;Node assignee = parent.getFirstChild (  ) .getNext (  ) ;^273^^^^^254^279^Node assignee = parent.getFirstChild (  ) .getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P11_Insert_Donor_Statement]^Node dest = n.getFirstChild (  ) .getNext (  ) ;Node assignee = parent.getFirstChild (  ) .getNext (  ) ;^273^^^^^254^279^Node assignee = parent.getFirstChild (  ) .getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P7_Replace_Invocation]^Node assignee = parent .getString (  )  .getNext (  ) ;^273^^^^^254^279^Node assignee = parent.getFirstChild (  ) .getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P14_Delete_Statement]^^273^^^^^254^279^Node assignee = parent.getFirstChild (  ) .getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P11_Insert_Donor_Statement]^parent.getType (  )  == Token.ASSIGN )  { Node assignee = parent.getFirstChild (  ) .getNext (  ) ;Node assignee = parent.getFirstChild (  ) .getNext (  ) ;^273^^^^^254^279^Node assignee = parent.getFirstChild (  ) .getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^addPossibleSignature ( parent.getString (  ) , assignee, t ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , parent, t ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) ,  t ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , assignee ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^addPossibleSignature ( assignee.getString (  ) , dest, t ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^addPossibleSignature ( dest.getString (  ) , t, assignee ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P14_Delete_Statement]^^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P11_Insert_Donor_Statement]^parent.getFirstChild (  )  == n )  { addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P11_Insert_Donor_Statement]^addPossibleSignature ( dest.getString (  ) , n.getNext (  ) , t ) ;addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P11_Insert_Donor_Statement]^addPossibleSignature ( key.getString (  ) , value, t ) ;addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P7_Replace_Invocation]^addPossibleSignature ( dest .getParent (  )  , assignee, t ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^Node dest = parent.getFirstChild (  ) .getNext (  ) ;^268^^^^^254^279^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P11_Insert_Donor_Statement]^Node parent = n.getParent (  ) .getParent (  ) ;Node dest = n.getFirstChild (  ) .getNext (  ) ;^268^^^^^254^279^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P11_Insert_Donor_Statement]^Node assignee = parent.getFirstChild (  ) .getNext (  ) ;Node dest = n.getFirstChild (  ) .getNext (  ) ;^268^^^^^254^279^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^Node parent = dest.getParent (  ) .getParent (  ) ;^269^^^^^254^279^Node parent = n.getParent (  ) .getParent (  ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P11_Insert_Donor_Statement]^Node dest = n.getFirstChild (  ) .getNext (  ) ;Node parent = n.getParent (  ) .getParent (  ) ;^269^^^^^254^279^Node parent = n.getParent (  ) .getParent (  ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P11_Insert_Donor_Statement]^Node assignee = parent.getFirstChild (  ) .getNext (  ) ;Node parent = n.getParent (  ) .getParent (  ) ;^269^^^^^254^279^Node parent = n.getParent (  ) .getParent (  ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^switch  ( parent.getType (  )  )  {^255^^^^^254^279^switch  ( n.getType (  )  )  {^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P7_Replace_Invocation]^Node dest = n.getFirstChild (  )  .getParent (  )  ;^268^^^^^254^279^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P7_Replace_Invocation]^Node dest = n .getString (  )  .getNext (  ) ;^268^^^^^254^279^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P8_Replace_Mix]^Node dest = parent .getString (  )  .getNext (  ) ;^268^^^^^254^279^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P14_Delete_Statement]^^268^269^^^^254^279^Node dest = n.getFirstChild (  ) .getNext (  ) ; Node parent = n.getParent (  ) .getParent (  ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P14_Delete_Statement]^^268^^^^^254^279^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^Node parent = parent.getParent (  ) .getParent (  ) ;^269^^^^^254^279^Node parent = n.getParent (  ) .getParent (  ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P7_Replace_Invocation]^Node parent = n .getString (  )^269^^^^^254^279^Node parent = n.getParent (  ) .getParent (  ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P14_Delete_Statement]^^269^^^^^254^279^Node parent = n.getParent (  ) .getParent (  ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P14_Delete_Statement]^^272^273^^^^254^279^parent.getType (  )  == Token.ASSIGN )  { Node assignee = parent.getFirstChild (  ) .getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P7_Replace_Invocation]^Node assignee = parent.getFirstChild (  )  .getParent (  )  ;^273^^^^^254^279^Node assignee = parent.getFirstChild (  ) .getNext (  ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
[P5_Replace_Variable]^addPossibleSignature ( t.getString (  ) , assignee, dest ) ;^275^^^^^254^279^addPossibleSignature ( dest.getString (  ) , assignee, t ) ;^[CLASS] GatherSignatures  [METHOD] processPrototypeParent [RETURN_TYPE] void   NodeTraversal t Node n [VARIABLES] boolean  NodeTraversal  t  Node  assignee  dest  n  parent  
