[P3_Replace_Literal]^static final DiagnosticType INVALID_NO_SIDE_EFFECT_ANNOTATION = DiagnosticType.error ( "INVALID_NO_SIDE_EFFE", "@nosideeffects may only appear in externs files." ) ;^42^43^44^45^^42^45^static final DiagnosticType INVALID_NO_SIDE_EFFECT_ANNOTATION = DiagnosticType.error ( "JSC_INVALID_NO_SIDE_EFFECT_ANNOTATION", "@nosideeffects may only appear in externs files." ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType INVALID_NO_SIDE_EFFECT_ANNOTATION = DiagnosticType.error ( "JSC_INVALID_NO_SIDE_EFFECT_ANNOTATION", "@nosideeffects may only appear in externs files.s may only " ) ;^42^43^44^45^^42^45^static final DiagnosticType INVALID_NO_SIDE_EFFECT_ANNOTATION = DiagnosticType.error ( "JSC_INVALID_NO_SIDE_EFFECT_ANNOTATION", "@nosideeffects may only appear in externs files." ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty   [VARIABLES] 
[P8_Replace_Mix]^static  DiagnosticType INVALID_NO_SIDE_EFFECT_ANNOTATION = DiagnosticType.error ( "JSC_INVALID_NO_SIDE_EFFECT_ANNOTATION", "@nosideeffects may only appear in externs files." ) ;^42^43^44^45^^42^45^static final DiagnosticType INVALID_NO_SIDE_EFFECT_ANNOTATION = DiagnosticType.error ( "JSC_INVALID_NO_SIDE_EFFECT_ANNOTATION", "@nosideeffects may only appear in externs files." ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty   [VARIABLES] 
[P8_Replace_Mix]^private  AbstractCompiler compiler;^47^^^^^42^52^private final AbstractCompiler compiler;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty   [VARIABLES] 
[P8_Replace_Mix]^private  SimpleDefinitionFinder defFinder;^170^^^^^165^175^private final SimpleDefinitionFinder defFinder;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty   [VARIABLES] 
[P8_Replace_Mix]^this.compiler =  null;^54^^^^^53^56^this.compiler = compiler;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  
[P11_Insert_Donor_Statement]^this.defFinder = defFinder;this.compiler = compiler;^54^^^^^53^56^this.compiler = compiler;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  
[P8_Replace_Mix]^this.noSideEffectFunctionNames  =  this.noSideEffectFunctionNames ;^55^^^^^53^56^this.noSideEffectFunctionNames = Sets.newHashSet (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  
[P14_Delete_Statement]^^55^^^^^53^56^this.noSideEffectFunctionNames = Sets.newHashSet (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  
[P11_Insert_Donor_Statement]^noSideEffectFunctionNames.add ( node ) ;this.noSideEffectFunctionNames = Sets.newHashSet (  ) ;^55^^^^^53^56^this.noSideEffectFunctionNames = Sets.newHashSet (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  
[P11_Insert_Donor_Statement]^noSideEffectFunctionNames.addAll ( nameNodes ) ;this.noSideEffectFunctionNames = Sets.newHashSet (  ) ;^55^^^^^53^56^this.noSideEffectFunctionNames = Sets.newHashSet (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] <init> [RETURN_TYPE] AbstractCompiler)   AbstractCompiler compiler [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  
[P8_Replace_Mix]^this.inExterns =  null;^117^^^^^116^118^this.inExterns = inExterns;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] <init> [RETURN_TYPE] MarkNoSideEffectCalls$GatherNoSideEffectFunctions(boolean)   boolean inExterns [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  
[P8_Replace_Mix]^this.defFinder =  null;^173^^^^^172^174^this.defFinder = defFinder;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] <init> [RETURN_TYPE] SimpleDefinitionFinder)   SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  
[P11_Insert_Donor_Statement]^this.compiler = compiler;this.defFinder = defFinder;^173^^^^^172^174^this.defFinder = defFinder;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] <init> [RETURN_TYPE] SimpleDefinitionFinder)   SimpleDefinitionFinder defFinder [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  
[P5_Replace_Variable]^defFinder.process ( root, root ) ;^61^^^^^59^72^defFinder.process ( externs, root ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P5_Replace_Variable]^defFinder.process (  root ) ;^61^^^^^59^72^defFinder.process ( externs, root ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P5_Replace_Variable]^defFinder.process ( externs ) ;^61^^^^^59^72^defFinder.process ( externs, root ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P5_Replace_Variable]^defFinder.process ( root, externs ) ;^61^^^^^59^72^defFinder.process ( externs, root ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P14_Delete_Statement]^^61^^^^^59^72^defFinder.process ( externs, root ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P3_Replace_Literal]^compiler, externs, new GatherNoSideEffectFunctions ( false )  ) ;^66^^^^^59^72^compiler, externs, new GatherNoSideEffectFunctions ( true )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P4_Replace_Constructor]^compiler, externs, compiler, externs,  new SetNoSideEffectCallProperty ( defFinder )   ) ;^66^^^^^59^72^compiler, externs, new GatherNoSideEffectFunctions ( true )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P12_Insert_Condition]^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  { compiler, externs, new GatherNoSideEffectFunctions ( true )  ) ; }^66^^^^^59^72^compiler, externs, new GatherNoSideEffectFunctions ( true )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P3_Replace_Literal]^NodeTraversal.traverse ( compiler, externs, new GatherNoSideEffectFunctions ( false )  ) ;^65^66^^^^59^72^NodeTraversal.traverse ( compiler, externs, new GatherNoSideEffectFunctions ( true )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P4_Replace_Constructor]^NodeTraversal.traverse ( compiler, externs, NodeTraversal.traverse ( compiler, externs,  new SetNoSideEffectCallProperty ( defFinder )   ) ;^65^66^^^^59^72^NodeTraversal.traverse ( compiler, externs, new GatherNoSideEffectFunctions ( true )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler, root, new GatherNoSideEffectFunctions ( true )  ) ;^65^66^^^^59^72^NodeTraversal.traverse ( compiler, externs, new GatherNoSideEffectFunctions ( true )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler,  new GatherNoSideEffectFunctions ( true )  ) ;^65^66^^^^59^72^NodeTraversal.traverse ( compiler, externs, new GatherNoSideEffectFunctions ( true )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverse (  externs, new GatherNoSideEffectFunctions ( true )  ) ;^65^66^^^^59^72^NodeTraversal.traverse ( compiler, externs, new GatherNoSideEffectFunctions ( true )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverse ( externs, compiler, new GatherNoSideEffectFunctions ( true )  ) ;^65^66^^^^59^72^NodeTraversal.traverse ( compiler, externs, new GatherNoSideEffectFunctions ( true )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P7_Replace_Invocation]^NodeTraversal.report ( compiler, externs, new GatherNoSideEffectFunctions ( true )  ) ;^65^66^^^^59^72^NodeTraversal.traverse ( compiler, externs, new GatherNoSideEffectFunctions ( true )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P14_Delete_Statement]^^65^66^^^^59^72^NodeTraversal.traverse ( compiler, externs, new GatherNoSideEffectFunctions ( true )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P3_Replace_Literal]^compiler, root, new GatherNoSideEffectFunctions ( true )  ) ;^68^^^^^59^72^compiler, root, new GatherNoSideEffectFunctions ( false )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P4_Replace_Constructor]^compiler, root, compiler, root,  new GatherNoSideEffectFunctions ( true )   ) ;^68^^^^^59^72^compiler, root, new GatherNoSideEffectFunctions ( false )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P3_Replace_Literal]^NodeTraversal.traverse ( compiler, root, new GatherNoSideEffectFunctions ( true )  ) ;^67^68^^^^59^72^NodeTraversal.traverse ( compiler, root, new GatherNoSideEffectFunctions ( false )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P4_Replace_Constructor]^NodeTraversal.traverse ( compiler, root, NodeTraversal.traverse ( compiler, root,  new GatherNoSideEffectFunctions ( true )   ) ;^67^68^^^^59^72^NodeTraversal.traverse ( compiler, root, new GatherNoSideEffectFunctions ( false )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler, externs, new GatherNoSideEffectFunctions ( false )  ) ;^67^68^^^^59^72^NodeTraversal.traverse ( compiler, root, new GatherNoSideEffectFunctions ( false )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler,  new GatherNoSideEffectFunctions ( false )  ) ;^67^68^^^^59^72^NodeTraversal.traverse ( compiler, root, new GatherNoSideEffectFunctions ( false )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverse (  root, new GatherNoSideEffectFunctions ( false )  ) ;^67^68^^^^59^72^NodeTraversal.traverse ( compiler, root, new GatherNoSideEffectFunctions ( false )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverse ( root, compiler, new GatherNoSideEffectFunctions ( false )  ) ;^67^68^^^^59^72^NodeTraversal.traverse ( compiler, root, new GatherNoSideEffectFunctions ( false )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P7_Replace_Invocation]^NodeTraversal.report ( compiler, root, new GatherNoSideEffectFunctions ( false )  ) ;^67^68^^^^59^72^NodeTraversal.traverse ( compiler, root, new GatherNoSideEffectFunctions ( false )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P14_Delete_Statement]^^67^68^^^^59^72^NodeTraversal.traverse ( compiler, root, new GatherNoSideEffectFunctions ( false )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P4_Replace_Constructor]^new GatherNoSideEffectFunctions ( true )   ) ;^71^^^^^59^72^new SetNoSideEffectCallProperty ( defFinder )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P4_Replace_Constructor]^NodeTraversal.traverse ( compiler, root, NodeTraversal.traverse ( compiler, root,  new GatherNoSideEffectFunctions ( true )   ) ;^70^71^^^^59^72^NodeTraversal.traverse ( compiler, root, new SetNoSideEffectCallProperty ( defFinder )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P4_Replace_Constructor]^NodeTraversal.traverse ( compiler,  new SetNoSideEffectCallProperty ( defFinder )  ) ;^70^71^^^^59^72^NodeTraversal.traverse ( compiler, root, new SetNoSideEffectCallProperty ( defFinder )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverse (  root, new SetNoSideEffectCallProperty ( defFinder )  ) ;^70^71^^^^59^72^NodeTraversal.traverse ( compiler, root, new SetNoSideEffectCallProperty ( defFinder )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverse ( root, compiler, new SetNoSideEffectCallProperty ( defFinder )  ) ;^70^71^^^^59^72^NodeTraversal.traverse ( compiler, root, new SetNoSideEffectCallProperty ( defFinder )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler, defFinder, new SetNoSideEffectCallProperty ( root )  ) ;^70^71^^^^59^72^NodeTraversal.traverse ( compiler, root, new SetNoSideEffectCallProperty ( defFinder )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P5_Replace_Variable]^NodeTraversal.traverse ( defFinder, root, new SetNoSideEffectCallProperty ( compiler )  ) ;^70^71^^^^59^72^NodeTraversal.traverse ( compiler, root, new SetNoSideEffectCallProperty ( defFinder )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P7_Replace_Invocation]^NodeTraversal.report ( compiler, root, new SetNoSideEffectCallProperty ( defFinder )  ) ;^70^71^^^^59^72^NodeTraversal.traverse ( compiler, root, new SetNoSideEffectCallProperty ( defFinder )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P7_Replace_Invocation]^NodeTraversal .traverse ( compiler , root , null )  ;^70^71^^^^59^72^NodeTraversal.traverse ( compiler, root, new SetNoSideEffectCallProperty ( defFinder )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P14_Delete_Statement]^^70^71^^^^59^72^NodeTraversal.traverse ( compiler, root, new SetNoSideEffectCallProperty ( defFinder )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  SimpleDefinitionFinder  defFinder  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  externs  root  
[P7_Replace_Invocation]^Node rhs = def .getLValue (  )  ;^79^^^^^78^99^Node rhs = def.getRValue (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] definitionTypeContainsFunctionType [RETURN_TYPE] boolean   Definition def [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  rhs  Definition  def  SimpleDefinitionFinder  defFinder  
[P11_Insert_Donor_Statement]^Node gramp = parent.getParent (  ) ;Node rhs = def.getRValue (  ) ;^79^^^^^78^99^Node rhs = def.getRValue (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] definitionTypeContainsFunctionType [RETURN_TYPE] boolean   Definition def [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  rhs  Definition  def  SimpleDefinitionFinder  defFinder  
[P11_Insert_Donor_Statement]^Node lValue = def.getLValue (  ) ;Node rhs = def.getRValue (  ) ;^79^^^^^78^99^Node rhs = def.getRValue (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] definitionTypeContainsFunctionType [RETURN_TYPE] boolean   Definition def [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  rhs  Definition  def  SimpleDefinitionFinder  defFinder  
[P14_Delete_Statement]^^79^^^^^78^99^Node rhs = def.getRValue (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] definitionTypeContainsFunctionType [RETURN_TYPE] boolean   Definition def [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  rhs  Definition  def  SimpleDefinitionFinder  defFinder  
[P2_Replace_Operator]^if  ( rhs != null )  {^80^^^^^78^99^if  ( rhs == null )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] definitionTypeContainsFunctionType [RETURN_TYPE] boolean   Definition def [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  rhs  Definition  def  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^if  ( rhs == true )  {^80^^^^^78^99^if  ( rhs == null )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] definitionTypeContainsFunctionType [RETURN_TYPE] boolean   Definition def [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  rhs  Definition  def  SimpleDefinitionFinder  defFinder  
[P9_Replace_Statement]^if  ( definitions == null )  {^80^^^^^78^99^if  ( rhs == null )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] definitionTypeContainsFunctionType [RETURN_TYPE] boolean   Definition def [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  rhs  Definition  def  SimpleDefinitionFinder  defFinder  
[P15_Unwrap_Block]^return true;^80^81^82^^^78^99^if  ( rhs == null )  { return true; }^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] definitionTypeContainsFunctionType [RETURN_TYPE] boolean   Definition def [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  rhs  Definition  def  SimpleDefinitionFinder  defFinder  
[P16_Remove_Block]^^80^81^82^^^78^99^if  ( rhs == null )  { return true; }^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] definitionTypeContainsFunctionType [RETURN_TYPE] boolean   Definition def [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  rhs  Definition  def  SimpleDefinitionFinder  defFinder  
[P13_Insert_Block]^if  ( definitions == null )  {     return ; }^80^^^^^78^99^[Delete]^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] definitionTypeContainsFunctionType [RETURN_TYPE] boolean   Definition def [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  rhs  Definition  def  SimpleDefinitionFinder  defFinder  
[P3_Replace_Literal]^return false;^81^^^^^78^99^return true;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] definitionTypeContainsFunctionType [RETURN_TYPE] boolean   Definition def [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  rhs  Definition  def  SimpleDefinitionFinder  defFinder  
[P3_Replace_Literal]^return false;^95^^^^^78^99^return true;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] definitionTypeContainsFunctionType [RETURN_TYPE] boolean   Definition def [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  rhs  Definition  def  SimpleDefinitionFinder  defFinder  
[P3_Replace_Literal]^return true;^97^^^^^78^99^return false;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] definitionTypeContainsFunctionType [RETURN_TYPE] boolean   Definition def [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  rhs  Definition  def  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^switch  ( rhs .getParent (  )   )  {^84^^^^^78^99^switch  ( rhs.getType (  )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] definitionTypeContainsFunctionType [RETURN_TYPE] boolean   Definition def [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  rhs  Definition  def  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^JSDocInfo docInfo = node .getParent (  )  ;^106^^^^^105^108^JSDocInfo docInfo = node.getJSDocInfo (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] hasNoSideEffectsAnnotation [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  node  SimpleDefinitionFinder  defFinder  JSDocInfo  docInfo  
[P14_Delete_Statement]^^106^107^^^^105^108^JSDocInfo docInfo = node.getJSDocInfo (  ) ; return docInfo != null && docInfo.isNoSideEffects (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] hasNoSideEffectsAnnotation [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  node  SimpleDefinitionFinder  defFinder  JSDocInfo  docInfo  
[P2_Replace_Operator]^return docInfo != null || docInfo.isNoSideEffects (  ) ;^107^^^^^105^108^return docInfo != null && docInfo.isNoSideEffects (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] hasNoSideEffectsAnnotation [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  node  SimpleDefinitionFinder  defFinder  JSDocInfo  docInfo  
[P2_Replace_Operator]^return docInfo == null && docInfo.isNoSideEffects (  ) ;^107^^^^^105^108^return docInfo != null && docInfo.isNoSideEffects (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] hasNoSideEffectsAnnotation [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  node  SimpleDefinitionFinder  defFinder  JSDocInfo  docInfo  
[P8_Replace_Mix]^return docInfo != null ;;^107^^^^^105^108^return docInfo != null && docInfo.isNoSideEffects (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] hasNoSideEffectsAnnotation [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  node  SimpleDefinitionFinder  defFinder  JSDocInfo  docInfo  
[P14_Delete_Statement]^^107^^^^^105^108^return docInfo != null && docInfo.isNoSideEffects (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] hasNoSideEffectsAnnotation [RETURN_TYPE] boolean   Node node [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  inExterns  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  node  SimpleDefinitionFinder  defFinder  JSDocInfo  docInfo  
[P2_Replace_Operator]^if  ( !inExterns || hasNoSideEffectsAnnotation ( node )  )  {^122^^^^^107^137^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^if  ( !inExterns && hasNoSideEffectsAnnotation ( parent )  )  {^122^^^^^107^137^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^if  ( !hasAnnotation && hasNoSideEffectsAnnotation ( node )  )  {^122^^^^^107^137^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P6_Replace_Expression]^if  ( !inExterns ) {^122^^^^^107^137^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P6_Replace_Expression]^if  (  hasNoSideEffectsAnnotation ( node )  )  {^122^^^^^107^137^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^if  ( !inExterns && definitionTypeContainsFunctionType ( node )  )  {^122^^^^^107^137^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^if  ( !hasAnnotation && definitionTypeContainsFunctionType ( node )  )  {^122^^^^^107^137^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P9_Replace_Statement]^if  ( hasNoSideEffectsAnnotation ( parent )  )  {^122^^^^^107^137^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P15_Unwrap_Block]^traversal.report(node, com.google.javascript.jscomp.MarkNoSideEffectCalls.INVALID_NO_SIDE_EFFECT_ANNOTATION);^122^123^124^^^107^137^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  { traversal.report ( node, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ; }^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P16_Remove_Block]^^122^123^124^^^107^137^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  { traversal.report ( node, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ; }^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^traversal.report ( parent, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^123^^^^^108^138^traversal.report ( node, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^traversal.report (  INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^123^^^^^108^138^traversal.report ( node, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^traversal.report ( node ) ;^123^^^^^108^138^traversal.report ( node, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P14_Delete_Statement]^^123^^^^^108^138^traversal.report ( node, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P13_Insert_Block]^if  ( hasNoSideEffectsAnnotation ( parent )  )  {     hasAnnotation = true; }^122^^^^^107^137^[Delete]^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^if  ( NodeUtil.isGetProp ( parent )  )  {^126^^^^^111^141^if  ( NodeUtil.isGetProp ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P6_Replace_Expression]^if  ( isVar(gramp) && gramp.hasOneChild() && hasNoSideEffectsAnnotation(gramp) )  {^126^^^^^111^141^if  ( NodeUtil.isGetProp ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P6_Replace_Expression]^if  ( isVar(gramp && gramp.hasOneChild()) )  {^126^^^^^111^141^if  ( NodeUtil.isGetProp ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^if  ( NodeUtil.isVar ( node )  )  {^126^^^^^111^141^if  ( NodeUtil.isGetProp ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P9_Replace_Statement]^if  ( NodeUtil.isName ( parent )  )  {^126^^^^^111^141^if  ( NodeUtil.isGetProp ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P15_Unwrap_Block]^if ((com.google.javascript.jscomp.NodeUtil.isExpressionNode(parent)) && (com.google.javascript.jscomp.MarkNoSideEffectCalls.hasNoSideEffectsAnnotation(node))) {    noSideEffectFunctionNames.add(node);};^126^127^128^129^130^111^141^if  ( NodeUtil.isGetProp ( node )  )  { if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  { noSideEffectFunctionNames.add ( node ) ; }^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P16_Remove_Block]^^126^127^128^129^130^111^141^if  ( NodeUtil.isGetProp ( node )  )  { if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  { noSideEffectFunctionNames.add ( node ) ; }^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^} else if  ( NodeUtil.isFunction ( parent )  )  {^131^^^^^116^146^} else if  ( NodeUtil.isFunction ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P6_Replace_Expression]^} else if  ( isVar(gramp && gramp.hasOneChild()) )  {^131^^^^^116^146^} else if  ( NodeUtil.isFunction ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P6_Replace_Expression]^} else {^131^^^^^116^146^} else if  ( NodeUtil.isFunction ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^} else if  ( NodeUtil.isAssign ( node )  )  {^131^^^^^116^146^} else if  ( NodeUtil.isFunction ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^}  if  ( NodeUtil.isAssign ( node )  )  {^131^^^^^116^146^} else if  ( NodeUtil.isFunction ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^if  ( NodeUtil.isName ( node )  )  {^141^^^^^126^156^if  ( NodeUtil.isName ( parent )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P6_Replace_Expression]^if  ( isVar(gramp && gramp.hasOneChild()) )  {^141^^^^^126^156^if  ( NodeUtil.isName ( parent )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^if  ( NodeUtil.isVar ( parent )  )  {^141^^^^^126^156^if  ( NodeUtil.isName ( parent )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P9_Replace_Statement]^if  ( NodeUtil.isGetProp ( node )  )  {^141^^^^^126^156^if  ( NodeUtil.isName ( parent )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^} else if  ( NodeUtil.isAssign ( node )  )  {^150^^^^^135^165^} else if  ( NodeUtil.isAssign ( parent )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P6_Replace_Expression]^} else {^150^^^^^135^165^} else if  ( NodeUtil.isAssign ( parent )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^} else if  ( NodeUtil.isFunction ( parent )  )  {^150^^^^^135^165^} else if  ( NodeUtil.isAssign ( parent )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^} else if  ( NodeUtil .isFunction ( node )   )  {^150^^^^^135^165^} else if  ( NodeUtil.isAssign ( parent )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P15_Unwrap_Block]^if (com.google.javascript.jscomp.MarkNoSideEffectCalls.hasNoSideEffectsAnnotation(parent)) {    hasAnnotation = true;}; nameNodes.add(parent.getFirstChild());^150^151^152^153^^135^165^} else if  ( NodeUtil.isAssign ( parent )  )  { if  ( hasNoSideEffectsAnnotation ( parent )  )  { hasAnnotation = true; }^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P16_Remove_Block]^^150^151^152^153^^135^165^} else if  ( NodeUtil.isAssign ( parent )  )  { if  ( hasNoSideEffectsAnnotation ( parent )  )  { hasAnnotation = true; }^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P13_Insert_Block]^if  (  ( isExpressionNode ( parent )  )  &&  ( hasNoSideEffectsAnnotation ( node )  )  )  {     noSideEffectFunctionNames.add ( node ) ; }^150^^^^^135^165^[Delete]^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P13_Insert_Block]^if  (  (  ( isVar ( gramp )  )  &&  ( gramp.hasOneChild (  )  )  )  &&  ( hasNoSideEffectsAnnotation ( gramp )  )  )  {     hasAnnotation = true; }^150^^^^^135^165^[Delete]^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P13_Insert_Block]^if  ( hasNoSideEffectsAnnotation ( parent )  )  {     hasAnnotation = true; }^150^^^^^135^165^[Delete]^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^if  ( definitionTypeContainsFunctionType ( parent )  )  {^151^^^^^136^166^if  ( hasNoSideEffectsAnnotation ( parent )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^if  ( hasNoSideEffectsAnnotation ( node )  )  {^151^^^^^136^166^if  ( hasNoSideEffectsAnnotation ( parent )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P9_Replace_Statement]^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  {^151^^^^^136^166^if  ( hasNoSideEffectsAnnotation ( parent )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P15_Unwrap_Block]^hasAnnotation = true;^151^152^153^^^136^166^if  ( hasNoSideEffectsAnnotation ( parent )  )  { hasAnnotation = true; }^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P16_Remove_Block]^^151^152^153^^^136^166^if  ( hasNoSideEffectsAnnotation ( parent )  )  { hasAnnotation = true; }^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P13_Insert_Block]^if  (  (  ( isVar ( gramp )  )  &&  ( gramp.hasOneChild (  )  )  )  &&  ( hasNoSideEffectsAnnotation ( gramp )  )  )  {     hasAnnotation = true; }^151^^^^^136^166^[Delete]^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P13_Insert_Block]^if  ( isAssign ( parent )  )  {     if  ( hasNoSideEffectsAnnotation ( parent )  )  {         hasAnnotation = true;     }     nameNodes.add ( parent.getFirstChild (  )  ) ; }^151^^^^^136^166^[Delete]^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P3_Replace_Literal]^hasAnnotation = false;^152^^^^^137^167^hasAnnotation = true;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P13_Insert_Block]^if  ( hasNoSideEffectsAnnotation ( parent )  )  {     hasAnnotation = true; }^151^^^^^136^166^[Delete]^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^nameNodes.add ( node.getFirstChild (  )  ) ;^155^^^^^140^170^nameNodes.add ( parent.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^nameNodes .add ( nameNode )  ;^155^^^^^140^170^nameNodes.add ( parent.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^nameNodes.add ( parent .hasOneChild (  )   ) ;^155^^^^^140^170^nameNodes.add ( parent.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P14_Delete_Statement]^^155^^^^^140^170^nameNodes.add ( parent.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P11_Insert_Donor_Statement]^nameNodes.add ( node.getFirstChild (  )  ) ;nameNodes.add ( parent.getFirstChild (  )  ) ;^155^^^^^140^170^nameNodes.add ( parent.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P11_Insert_Donor_Statement]^Node gramp = parent.getParent (  ) ;nameNodes.add ( parent.getFirstChild (  )  ) ;^155^^^^^140^170^nameNodes.add ( parent.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P11_Insert_Donor_Statement]^nameNodes.add ( parent ) ;nameNodes.add ( parent.getFirstChild (  )  ) ;^155^^^^^140^170^nameNodes.add ( parent.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^nameNodes .add ( parent )  ;^155^^^^^140^170^nameNodes.add ( parent.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P2_Replace_Operator]^if  ( NodeUtil.isVar ( gramp )  || gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^if  ( NodeUtil.isVar ( parent )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P6_Replace_Expression]^if  ( NodeUtil.isVar ( gramp )  ) {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P6_Replace_Expression]^if  (  gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P6_Replace_Expression]^if  ( isVar(gramp && gramp.hasOneChild()) )  {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^if  ( NodeUtil.isName ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^if  ( NodeUtil.isVar ( gramp )  && gramp .getFirstChild (  )   && hasNoSideEffectsAnnotation ( gramp )  )  {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && definitionTypeContainsFunctionType ( gramp )  )  {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^if  ( NodeUtil.isName ( parent )  ) {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P15_Unwrap_Block]^hasAnnotation = true;^143^144^145^146^147^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  { hasAnnotation = true; }^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P16_Remove_Block]^^143^144^145^146^147^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  { hasAnnotation = true; }^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P13_Insert_Block]^if  (  ( ! ( isCall ( node )  )  )  &&  ( ! ( isNew ( node )  )  )  )  {     return ; }^143^^^^^128^158^[Delete]^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P13_Insert_Block]^if  (  ( isExpressionNode ( parent )  )  &&  ( hasNoSideEffectsAnnotation ( node )  )  )  {     noSideEffectFunctionNames.add ( node ) ; }^143^^^^^128^158^[Delete]^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P13_Insert_Block]^if  ( hasNoSideEffectsAnnotation ( parent )  )  {     hasAnnotation = true; }^143^^^^^128^158^[Delete]^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P13_Insert_Block]^if  ( isAssign ( parent )  )  {     if  ( hasNoSideEffectsAnnotation ( parent )  )  {         hasAnnotation = true;     }     nameNodes.add ( parent.getFirstChild (  )  ) ; }^143^^^^^128^158^[Delete]^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P3_Replace_Literal]^hasAnnotation = false;^146^^^^^143^147^hasAnnotation = true;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P3_Replace_Literal]^hasAnnotation = false;^146^^^^^131^161^hasAnnotation = true;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^Node gramp = node.getParent (  ) ;^142^^^^^127^157^Node gramp = parent.getParent (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^Node gramp = parent .getType (  )  ;^142^^^^^127^157^Node gramp = parent.getParent (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P11_Insert_Donor_Statement]^Node rhs = def.getRValue (  ) ;Node gramp = parent.getParent (  ) ;^142^^^^^127^157^Node gramp = parent.getParent (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P11_Insert_Donor_Statement]^Node lValue = def.getLValue (  ) ;Node gramp = parent.getParent (  ) ;^142^^^^^127^157^Node gramp = parent.getParent (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P14_Delete_Statement]^^142^^^^^127^157^Node gramp = parent.getParent (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P11_Insert_Donor_Statement]^nameNodes.add ( parent.getFirstChild (  )  ) ;Node gramp = parent.getParent (  ) ;^142^^^^^127^157^Node gramp = parent.getParent (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^gramp .getFirstChild (  )   && hasNoSideEffectsAnnotation ( gramp )  )  {^144^145^^^^129^159^gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^gramp .getFirstChild (  )   && hasNoSideEffectsAnnotation ( parent )  )  {^144^145^^^^129^159^gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P14_Delete_Statement]^^144^145^146^^^129^159^gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  { hasAnnotation = true;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^hasNoSideEffectsAnnotation ( parent )  )  {^145^^^^^130^160^hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^definitionTypeContainsFunctionType ( gramp )  )  {^145^^^^^130^160^hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P14_Delete_Statement]^^145^146^^^^130^160^hasNoSideEffectsAnnotation ( gramp )  )  { hasAnnotation = true;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^nameNodes.add ( node ) ;^149^^^^^134^164^nameNodes.add ( parent ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^nameNodes .add ( nameNode )  ;^149^^^^^134^164^nameNodes.add ( parent ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P14_Delete_Statement]^^149^^^^^134^164^nameNodes.add ( parent ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P11_Insert_Donor_Statement]^nameNodes.add ( parent.getFirstChild (  )  ) ;nameNodes.add ( parent ) ;^149^^^^^134^164^nameNodes.add ( parent ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^if  ( NodeUtil .isName ( node )   && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^}  if  ( NodeUtil.isAssign ( node )  )  {^150^^^^^135^165^} else if  ( NodeUtil.isAssign ( parent )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^if  ( inExterns )  {^158^^^^^143^173^if  ( hasAnnotation )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P15_Unwrap_Block]^noSideEffectFunctionNames.addAll(nameNodes);^158^159^160^^^143^173^if  ( hasAnnotation )  { noSideEffectFunctionNames.addAll ( nameNodes ) ; }^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P16_Remove_Block]^^158^159^160^^^143^173^if  ( hasAnnotation )  { noSideEffectFunctionNames.addAll ( nameNodes ) ; }^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^noSideEffectFunctionNames.add ( nameNodes ) ;^159^^^^^144^174^noSideEffectFunctionNames.addAll ( nameNodes ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^noSideEffectFunctionNames .add ( gramp )  ;^159^^^^^144^174^noSideEffectFunctionNames.addAll ( nameNodes ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P14_Delete_Statement]^^159^^^^^144^174^noSideEffectFunctionNames.addAll ( nameNodes ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P11_Insert_Donor_Statement]^this.noSideEffectFunctionNames = Sets.newHashSet (  ) ;noSideEffectFunctionNames.addAll ( nameNodes ) ;^159^^^^^144^174^noSideEffectFunctionNames.addAll ( nameNodes ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P11_Insert_Donor_Statement]^noSideEffectFunctionNames.add ( node ) ;noSideEffectFunctionNames.addAll ( nameNodes ) ;^159^^^^^144^174^noSideEffectFunctionNames.addAll ( nameNodes ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P13_Insert_Block]^if  ( hasAnnotation )  {     noSideEffectFunctionNames.addAll ( nameNodes ) ; }^159^^^^^144^174^[Delete]^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^boolean hasAnnotation = hasNoSideEffectsAnnotation ( parent ) ;^135^^^^^120^150^boolean hasAnnotation = hasNoSideEffectsAnnotation ( node ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^boolean hasAnnotation = definitionTypeContainsFunctionType ( node ) ;^135^^^^^120^150^boolean hasAnnotation = hasNoSideEffectsAnnotation ( node ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P12_Insert_Condition]^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  { boolean hasAnnotation = hasNoSideEffectsAnnotation ( node ) ; }^135^^^^^120^150^boolean hasAnnotation = hasNoSideEffectsAnnotation ( node ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P12_Insert_Condition]^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  { boolean hasAnnotation = hasNoSideEffectsAnnotation ( node ) ; }^135^^^^^120^150^boolean hasAnnotation = hasNoSideEffectsAnnotation ( node ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P14_Delete_Statement]^^135^136^^^^120^150^boolean hasAnnotation = hasNoSideEffectsAnnotation ( node ) ; List<Node> nameNodes = Lists.newArrayList (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P14_Delete_Statement]^^136^137^^^^121^151^List<Node> nameNodes = Lists.newArrayList (  ) ; nameNodes.add ( node.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^nameNodes.add ( parent.getFirstChild (  )  ) ;^137^^^^^122^152^nameNodes.add ( node.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^nameNodes .add ( parent )  ;^137^^^^^122^152^nameNodes.add ( node.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P14_Delete_Statement]^^137^^^^^122^152^nameNodes.add ( node.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P11_Insert_Donor_Statement]^defFinder.getDefinitionsReferencedAt ( node.getFirstChild (  )  ) ;nameNodes.add ( node.getFirstChild (  )  ) ;^137^^^^^122^152^nameNodes.add ( node.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P11_Insert_Donor_Statement]^nameNodes.add ( parent.getFirstChild (  )  ) ;nameNodes.add ( node.getFirstChild (  )  ) ;^137^^^^^122^152^nameNodes.add ( node.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^if  ( NodeUtil.isName ( parent )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( parent )  )  {^144^145^^^^129^159^gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^} else if  ( NodeUtil .isFunction ( gramp )   )  {^150^^^^^135^165^} else if  ( NodeUtil.isAssign ( parent )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^noSideEffectFunctionNames.addAll ( 2 ) ;^159^^^^^144^174^noSideEffectFunctionNames.addAll ( nameNodes ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^noSideEffectFunctionNames .add ( nameNode )  ;^159^^^^^144^174^noSideEffectFunctionNames.addAll ( nameNodes ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^noSideEffectFunctionNames.addAll ( this ) ;^159^^^^^144^174^noSideEffectFunctionNames.addAll ( nameNodes ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^if  ( NodeUtil .isVar ( gramp )   )  {^141^^^^^126^156^if  ( NodeUtil.isName ( parent )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^nameNodes .add ( node )  ;^155^^^^^140^170^nameNodes.add ( parent.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^if  ( definitionTypeContainsFunctionType ( node )  )  {^151^^^^^136^166^if  ( hasNoSideEffectsAnnotation ( parent )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^if  ( NodeUtil.isVar ( parent )  ) {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^if  ( NodeUtil.isName ( gramp )  ) {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^} else if  ( NodeUtil .isFunction ( nameNode )   )  {^150^^^^^135^165^} else if  ( NodeUtil.isAssign ( parent )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^noSideEffectFunctionNames.addAll ( null ) ;^159^^^^^144^174^noSideEffectFunctionNames.addAll ( nameNodes ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P14_Delete_Statement]^^136^^^^^121^151^List<Node> nameNodes = Lists.newArrayList (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^Node gramp = node .getType (  )  ;^142^^^^^127^157^Node gramp = parent.getParent (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^noSideEffectFunctionNames .add ( parent )  ;^159^^^^^144^174^noSideEffectFunctionNames.addAll ( nameNodes ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P2_Replace_Operator]^if  ( NodeUtil.isExpressionNode ( parent )  || hasNoSideEffectsAnnotation ( node )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^if  ( NodeUtil.isExpressionNode ( node )  && hasNoSideEffectsAnnotation ( node )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( nameNode )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^if  ( NodeUtil.isExpressionNode ( node )  && hasNoSideEffectsAnnotation ( parent )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P6_Replace_Expression]^if  ( NodeUtil.isExpressionNode ( parent )  ) {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P6_Replace_Expression]^if  (  hasNoSideEffectsAnnotation ( node )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^if  ( NodeUtil.isAssign ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^if  ( NodeUtil.isExpressionNode ( parent )  && definitionTypeContainsFunctionType ( node )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P15_Unwrap_Block]^noSideEffectFunctionNames.add(node);^127^128^129^130^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  { noSideEffectFunctionNames.add ( node ) ; }^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P16_Remove_Block]^^127^128^129^130^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  { noSideEffectFunctionNames.add ( node ) ; }^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P13_Insert_Block]^if  (  ( ! ( isCall ( node )  )  )  &&  ( ! ( isNew ( node )  )  )  )  {     return ; }^127^^^^^112^142^[Delete]^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P13_Insert_Block]^if  (  (  ( isVar ( gramp )  )  &&  ( gramp.hasOneChild (  )  )  )  &&  ( hasNoSideEffectsAnnotation ( gramp )  )  )  {     hasAnnotation = true; }^127^^^^^112^142^[Delete]^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P13_Insert_Block]^if  ( isAssign ( parent )  )  {     if  ( hasNoSideEffectsAnnotation ( parent )  )  {         hasAnnotation = true;     }     nameNodes.add ( parent.getFirstChild (  )  ) ; }^127^^^^^112^142^[Delete]^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^noSideEffectFunctionNames.contains ( node ) ;^129^^^^^127^130^noSideEffectFunctionNames.add ( node ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^noSideEffectFunctionNames.add ( parent ) ;^129^^^^^127^130^noSideEffectFunctionNames.add ( node ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P14_Delete_Statement]^^129^^^^^127^130^noSideEffectFunctionNames.add ( node ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P11_Insert_Donor_Statement]^this.noSideEffectFunctionNames = Sets.newHashSet (  ) ;noSideEffectFunctionNames.add ( node ) ;^129^^^^^127^130^noSideEffectFunctionNames.add ( node ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P11_Insert_Donor_Statement]^noSideEffectFunctionNames.addAll ( nameNodes ) ;noSideEffectFunctionNames.add ( node ) ;^129^^^^^127^130^noSideEffectFunctionNames.add ( node ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^hasNoSideEffectsAnnotation ( parent )  )  {^128^^^^^113^143^hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^definitionTypeContainsFunctionType ( node )  )  {^128^^^^^113^143^hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P14_Delete_Statement]^^128^129^^^^113^143^hasNoSideEffectsAnnotation ( node )  )  { noSideEffectFunctionNames.add ( node ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P13_Insert_Block]^if  ( hasNoSideEffectsAnnotation ( parent )  )  {     hasAnnotation = true; }^128^^^^^113^143^[Delete]^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^noSideEffectFunctionNames.add ( parent ) ;^129^^^^^114^144^noSideEffectFunctionNames.add ( node ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^noSideEffectFunctionNames.contains ( node ) ;^129^^^^^114^144^noSideEffectFunctionNames.add ( node ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^noSideEffectFunctionNames.contains ( parent ) ;^129^^^^^114^144^noSideEffectFunctionNames.add ( node ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P14_Delete_Statement]^^129^^^^^114^144^noSideEffectFunctionNames.add ( node ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P11_Insert_Donor_Statement]^this.noSideEffectFunctionNames = Sets.newHashSet (  ) ;noSideEffectFunctionNames.add ( node ) ;^129^^^^^114^144^noSideEffectFunctionNames.add ( node ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P11_Insert_Donor_Statement]^noSideEffectFunctionNames.addAll ( nameNodes ) ;noSideEffectFunctionNames.add ( node ) ;^129^^^^^114^144^noSideEffectFunctionNames.add ( node ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^boolean hasAnnotation = definitionTypeContainsFunctionType ( parent ) ;^135^^^^^120^150^boolean hasAnnotation = hasNoSideEffectsAnnotation ( node ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P14_Delete_Statement]^^135^^^^^120^150^boolean hasAnnotation = hasNoSideEffectsAnnotation ( node ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^nameNodes.add ( node .hasOneChild (  )   ) ;^137^^^^^122^152^nameNodes.add ( node.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^if  ( NodeUtil .isVar ( node )   )  {^141^^^^^126^156^if  ( NodeUtil.isName ( parent )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^}  if  ( NodeUtil.isFunction ( node )  )  {^150^^^^^135^165^} else if  ( NodeUtil.isAssign ( parent )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^if  ( NodeUtil .isName ( nameNode )   && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^definitionTypeContainsFunctionType ( parent )  )  {^145^^^^^130^160^hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^if  ( NodeUtil.isAssign ( node )  && hasNoSideEffectsAnnotation ( node )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^} else if  ( NodeUtil .isAssign ( nameNode )   )  {^131^^^^^116^146^} else if  ( NodeUtil.isFunction ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  gramp  nameNode  node  parent  List  nameNodes  SimpleDefinitionFinder  defFinder  
[P2_Replace_Operator]^if  ( !NodeUtil.isCall ( node )  || !NodeUtil.isNew ( node )  )  {^178^^^^^177^198^if  ( !NodeUtil.isCall ( node )  && !NodeUtil.isNew ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P6_Replace_Expression]^if  ( !NodeUtil.isCall ( node )  ) {^178^^^^^177^198^if  ( !NodeUtil.isCall ( node )  && !NodeUtil.isNew ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P6_Replace_Expression]^if  (  !NodeUtil.isNew ( node )  )  {^178^^^^^177^198^if  ( !NodeUtil.isCall ( node )  && !NodeUtil.isNew ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^if  ( !NodeUtil.isName ( node )  && !NodeUtil.isNew ( node )  )  {^178^^^^^177^198^if  ( !NodeUtil.isCall ( node )  && !NodeUtil.isNew ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^if  ( !NodeUtil.isCall ( node )  && !NodeUtil.isName ( node )  )  {^178^^^^^177^198^if  ( !NodeUtil.isCall ( node )  && !NodeUtil.isNew ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^if  ( !NodeUtil.isCall ( node )  && !NodeUtil .isName ( lValue )   )  {^178^^^^^177^198^if  ( !NodeUtil.isCall ( node )  && !NodeUtil.isNew ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^if  ( !NodeUtil.isCall ( parent )  && !NodeUtil.isNew ( node )  )  {^178^^^^^177^198^if  ( !NodeUtil.isCall ( node )  && !NodeUtil.isNew ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P15_Unwrap_Block]^return ;^178^179^180^^^177^198^if  ( !NodeUtil.isCall ( node )  && !NodeUtil.isNew ( node )  )  { return; }^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P16_Remove_Block]^^178^179^180^^^177^198^if  ( !NodeUtil.isCall ( node )  && !NodeUtil.isNew ( node )  )  { return; }^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P13_Insert_Block]^if  (  ( isExpressionNode ( parent )  )  &&  ( hasNoSideEffectsAnnotation ( node )  )  )  {     noSideEffectFunctionNames.add ( node ) ; }^178^^^^^177^198^[Delete]^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P13_Insert_Block]^if  (  (  ( isVar ( gramp )  )  &&  ( gramp.hasOneChild (  )  )  )  &&  ( hasNoSideEffectsAnnotation ( gramp )  )  )  {     hasAnnotation = true; }^178^^^^^177^198^[Delete]^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^if  ( !NodeUtil.isCall ( node )  && !NodeUtil .isName ( parent )   )  {^178^^^^^177^198^if  ( !NodeUtil.isCall ( node )  && !NodeUtil.isNew ( node )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( parent.getFirstChild (  )  ) ;^182^183^^^^177^198^Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( node.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^Collection<Definition> definitions = node.getDefinitionsReferencedAt ( defFinder.getFirstChild (  )  ) ;^182^183^^^^177^198^Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( node.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^Collection<Definition> definitions = defFinder .process ( parent , node )  ;^182^183^^^^177^198^Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( node.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^defFinder.getDefinitionsReferencedAt ( parent.getFirstChild (  )  ) ;^183^^^^^177^198^defFinder.getDefinitionsReferencedAt ( node.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^defFinder .process ( lValue , lValue )  ;^183^^^^^177^198^defFinder.getDefinitionsReferencedAt ( node.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P14_Delete_Statement]^^183^^^^^177^198^defFinder.getDefinitionsReferencedAt ( node.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P11_Insert_Donor_Statement]^nameNodes.add ( node.getFirstChild (  )  ) ;defFinder.getDefinitionsReferencedAt ( node.getFirstChild (  )  ) ;^183^^^^^177^198^defFinder.getDefinitionsReferencedAt ( node.getFirstChild (  )  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P2_Replace_Operator]^if  ( definitions != null )  {^184^^^^^177^198^if  ( definitions == null )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^if  ( definitions == false )  {^184^^^^^177^198^if  ( definitions == null )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P9_Replace_Statement]^if  ( rhs == null )  {^184^^^^^177^198^if  ( definitions == null )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P15_Unwrap_Block]^return ;^184^185^186^^^177^198^if  ( definitions == null )  { return; }^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P16_Remove_Block]^^184^185^186^^^177^198^if  ( definitions == null )  { return; }^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P13_Insert_Block]^if  ( rhs == null )  {     return true; }^184^^^^^177^198^[Delete]^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P2_Replace_Operator]^if  ( !noSideEffectFunctionNames.contains ( lValue )  || definitionTypeContainsFunctionType ( def )  )  {^191^192^^^^177^198^if  ( !noSideEffectFunctionNames.contains ( lValue )  && definitionTypeContainsFunctionType ( def )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^if  ( !noSideEffectFunctionNames.contains ( parent )  && definitionTypeContainsFunctionType ( def )  )  {^191^192^^^^177^198^if  ( !noSideEffectFunctionNames.contains ( lValue )  && definitionTypeContainsFunctionType ( def )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^if  ( !noSideEffectFunctionNames.contains ( def )  && lValueinitionTypeContainsFunctionType ( def )  )  {^191^192^^^^177^198^if  ( !noSideEffectFunctionNames.contains ( lValue )  && definitionTypeContainsFunctionType ( def )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P6_Replace_Expression]^if  ( !noSideEffectFunctionNames.contains ( lValue )  ) {^191^192^^^^177^198^if  ( !noSideEffectFunctionNames.contains ( lValue )  && definitionTypeContainsFunctionType ( def )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P6_Replace_Expression]^if  (  definitionTypeContainsFunctionType ( def )  )  {^191^192^^^^177^198^if  ( !noSideEffectFunctionNames.contains ( lValue )  && definitionTypeContainsFunctionType ( def )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^if  ( !noSideEffectFunctionNames.add ( lValue )  && definitionTypeContainsFunctionType ( def )  )  {^191^192^^^^177^198^if  ( !noSideEffectFunctionNames.contains ( lValue )  && definitionTypeContainsFunctionType ( def )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^if  ( !noSideEffectFunctionNames.contains ( lValue )  && hasNoSideEffectsAnnotation ( def )  )  {^191^192^^^^177^198^if  ( !noSideEffectFunctionNames.contains ( lValue )  && definitionTypeContainsFunctionType ( def )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^if  ( !noSideEffectFunctionNames.contains ( parent )  ) {^191^192^^^^177^198^if  ( !noSideEffectFunctionNames.contains ( lValue )  && definitionTypeContainsFunctionType ( def )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P15_Unwrap_Block]^return ;^191^192^193^194^^177^198^if  ( !noSideEffectFunctionNames.contains ( lValue )  && definitionTypeContainsFunctionType ( def )  )  { return; }^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P16_Remove_Block]^^191^192^193^194^^177^198^if  ( !noSideEffectFunctionNames.contains ( lValue )  && definitionTypeContainsFunctionType ( def )  )  { return; }^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^Node lValue = def .getRValue (  )  ;^189^^^^^177^198^Node lValue = def.getLValue (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P11_Insert_Donor_Statement]^Node gramp = parent.getParent (  ) ;Node lValue = def.getLValue (  ) ;^189^^^^^177^198^Node lValue = def.getLValue (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P11_Insert_Donor_Statement]^Node rhs = def.getRValue (  ) ;Node lValue = def.getLValue (  ) ;^189^^^^^177^198^Node lValue = def.getLValue (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P14_Delete_Statement]^^189^190^^^^177^198^Node lValue = def.getLValue (  ) ; Preconditions.checkNotNull ( lValue ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P5_Replace_Variable]^Preconditions.checkNotNull ( parent ) ;^190^^^^^177^198^Preconditions.checkNotNull ( lValue ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P14_Delete_Statement]^^190^^^^^177^198^Preconditions.checkNotNull ( lValue ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^hasNoSideEffectsAnnotation ( def )  )  {^192^^^^^177^198^definitionTypeContainsFunctionType ( def )  )  {^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P14_Delete_Statement]^^192^193^^^^177^198^definitionTypeContainsFunctionType ( def )  )  { return;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P13_Insert_Block]^if  (  ( ! ( noSideEffectFunctionNames.contains ( lValue )  )  )  &&  ( definitionTypeContainsFunctionType ( def )  )  )  {     return ; }^192^^^^^177^198^[Delete]^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P13_Insert_Block]^if  ( hasNoSideEffectsAnnotation ( parent )  )  {     hasAnnotation = true; }^192^^^^^177^198^[Delete]^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P7_Replace_Invocation]^node .getJSDocInfo (  )  ;^197^^^^^177^198^node.setIsNoSideEffectsCall (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P14_Delete_Statement]^^197^^^^^177^198^node.setIsNoSideEffectsCall (  ) ;^[CLASS] MarkNoSideEffectCalls GatherNoSideEffectFunctions SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^private  boolean inExterns;^114^^^^^109^119^private final boolean inExterns;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] AbstractCompiler  compiler  Set  noSideEffectFunctionNames  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  DiagnosticType  INVALID_NO_SIDE_EFFECT_ANNOTATION  Node  lValue  node  parent  Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  
[P8_Replace_Mix]^this.inExterns =  null;^117^^^^^116^118^this.inExterns = inExterns;^[CLASS] GatherNoSideEffectFunctions  [METHOD] <init> [RETURN_TYPE] MarkNoSideEffectCalls$GatherNoSideEffectFunctions(boolean)   boolean inExterns [VARIABLES] boolean  inExterns  
[P2_Replace_Operator]^if  ( !inExterns || hasNoSideEffectsAnnotation ( node )  )  {^122^^^^^107^137^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P5_Replace_Variable]^if  ( !inExterns && hasNoSideEffectsAnnotation ( parent )  )  {^122^^^^^107^137^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P5_Replace_Variable]^if  ( !hasAnnotation && hasNoSideEffectsAnnotation ( node )  )  {^122^^^^^107^137^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P6_Replace_Expression]^if  ( !inExterns ) {^122^^^^^107^137^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P6_Replace_Expression]^if  (  hasNoSideEffectsAnnotation ( node )  )  {^122^^^^^107^137^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P8_Replace_Mix]^if  ( !hasAnnotation ) {^122^^^^^107^137^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P9_Replace_Statement]^if  ( hasNoSideEffectsAnnotation ( parent )  )  {^122^^^^^107^137^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P15_Unwrap_Block]^traversal.report(node, com.google.javascript.jscomp.MarkNoSideEffectCalls.INVALID_NO_SIDE_EFFECT_ANNOTATION);^122^123^124^^^107^137^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  { traversal.report ( node, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ; }^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P16_Remove_Block]^^122^123^124^^^107^137^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  { traversal.report ( node, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ; }^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P5_Replace_Variable]^traversal.report ( parent, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^123^^^^^108^138^traversal.report ( node, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P5_Replace_Variable]^traversal.report (  INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^123^^^^^108^138^traversal.report ( node, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P5_Replace_Variable]^traversal.report ( node ) ;^123^^^^^108^138^traversal.report ( node, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P14_Delete_Statement]^^123^^^^^108^138^traversal.report ( node, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P13_Insert_Block]^if  ( hasNoSideEffectsAnnotation ( parent )  )  {     hasAnnotation = true; }^122^^^^^107^137^[Delete]^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P5_Replace_Variable]^traversal.report ( INVALID_NO_SIDE_EFFECT_ANNOTATION, node ) ;^123^^^^^108^138^traversal.report ( node, INVALID_NO_SIDE_EFFECT_ANNOTATION ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P5_Replace_Variable]^if  ( NodeUtil.isGetProp ( parent )  )  {^126^^^^^111^141^if  ( NodeUtil.isGetProp ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P6_Replace_Expression]^if  ( isVar(gramp) && gramp.hasOneChild() && hasNoSideEffectsAnnotation(gramp) )  {^126^^^^^111^141^if  ( NodeUtil.isGetProp ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P6_Replace_Expression]^if  ( isVar(gramp && gramp.hasOneChild()) )  {^126^^^^^111^141^if  ( NodeUtil.isGetProp ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P7_Replace_Invocation]^if  ( NodeUtil.isVar ( node )  )  {^126^^^^^111^141^if  ( NodeUtil.isGetProp ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P7_Replace_Invocation]^if  ( NodeUtil .isVar ( nameNode )   )  {^126^^^^^111^141^if  ( NodeUtil.isGetProp ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P8_Replace_Mix]^if  ( NodeUtil .isVar ( parent )   )  {^126^^^^^111^141^if  ( NodeUtil.isGetProp ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P9_Replace_Statement]^if  ( NodeUtil.isName ( parent )  )  {^126^^^^^111^141^if  ( NodeUtil.isGetProp ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P15_Unwrap_Block]^if ((com.google.javascript.jscomp.NodeUtil.isExpressionNode(parent)) && (com.google.javascript.jscomp.MarkNoSideEffectCalls.hasNoSideEffectsAnnotation(node))) {    noSideEffectFunctionNames.add(node);};^126^127^128^129^130^111^141^if  ( NodeUtil.isGetProp ( node )  )  { if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  { noSideEffectFunctionNames.add ( node ) ; }^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P16_Remove_Block]^^126^127^128^129^130^111^141^if  ( NodeUtil.isGetProp ( node )  )  { if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  { noSideEffectFunctionNames.add ( node ) ; }^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P5_Replace_Variable]^} else if  ( NodeUtil.isFunction ( parent )  )  {^131^^^^^116^146^} else if  ( NodeUtil.isFunction ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P6_Replace_Expression]^} else if  ( isVar(gramp && gramp.hasOneChild()) )  {^131^^^^^116^146^} else if  ( NodeUtil.isFunction ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P6_Replace_Expression]^} else {^131^^^^^116^146^} else if  ( NodeUtil.isFunction ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P7_Replace_Invocation]^} else if  ( NodeUtil.isAssign ( node )  )  {^131^^^^^116^146^} else if  ( NodeUtil.isFunction ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P6_Replace_Expression]^if  ( isVar(gramp && gramp.hasOneChild()) )  {^141^^^^^126^156^if  ( NodeUtil.isName ( parent )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P7_Replace_Invocation]^if  ( NodeUtil.isVar ( parent )  )  {^141^^^^^126^156^if  ( NodeUtil.isName ( parent )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P8_Replace_Mix]^if  ( NodeUtil.isVar ( node )  )  {^141^^^^^126^156^if  ( NodeUtil.isName ( parent )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P9_Replace_Statement]^if  ( NodeUtil.isGetProp ( node )  )  {^141^^^^^126^156^if  ( NodeUtil.isName ( parent )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P5_Replace_Variable]^} else if  ( NodeUtil.isAssign ( node )  )  {^150^^^^^135^165^} else if  ( NodeUtil.isAssign ( parent )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P6_Replace_Expression]^} else {^150^^^^^135^165^} else if  ( NodeUtil.isAssign ( parent )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P7_Replace_Invocation]^} else if  ( NodeUtil.isFunction ( parent )  )  {^150^^^^^135^165^} else if  ( NodeUtil.isAssign ( parent )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P8_Replace_Mix]^}  if  ( NodeUtil .isFunction ( nameNode )   )  {^150^^^^^135^165^} else if  ( NodeUtil.isAssign ( parent )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P15_Unwrap_Block]^if (com.google.javascript.jscomp.MarkNoSideEffectCalls.hasNoSideEffectsAnnotation(parent)) {    hasAnnotation = true;}; nameNodes.add(parent.getFirstChild());^150^151^152^153^^135^165^} else if  ( NodeUtil.isAssign ( parent )  )  { if  ( hasNoSideEffectsAnnotation ( parent )  )  { hasAnnotation = true; }^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P16_Remove_Block]^^150^151^152^153^^135^165^} else if  ( NodeUtil.isAssign ( parent )  )  { if  ( hasNoSideEffectsAnnotation ( parent )  )  { hasAnnotation = true; }^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P13_Insert_Block]^if  (  ( isExpressionNode ( parent )  )  &&  ( hasNoSideEffectsAnnotation ( node )  )  )  {     noSideEffectFunctionNames.add ( node ) ; }^150^^^^^135^165^[Delete]^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P13_Insert_Block]^if  (  (  ( isVar ( gramp )  )  &&  ( gramp.hasOneChild (  )  )  )  &&  ( hasNoSideEffectsAnnotation ( gramp )  )  )  {     hasAnnotation = true; }^150^^^^^135^165^[Delete]^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P13_Insert_Block]^if  ( hasNoSideEffectsAnnotation ( parent )  )  {     hasAnnotation = true; }^150^^^^^135^165^[Delete]^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P5_Replace_Variable]^if  ( hasNoSideEffectsAnnotation ( node )  )  {^151^^^^^136^166^if  ( hasNoSideEffectsAnnotation ( parent )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P9_Replace_Statement]^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  {^151^^^^^136^166^if  ( hasNoSideEffectsAnnotation ( parent )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P15_Unwrap_Block]^hasAnnotation = true;^151^152^153^^^136^166^if  ( hasNoSideEffectsAnnotation ( parent )  )  { hasAnnotation = true; }^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P16_Remove_Block]^^151^152^153^^^136^166^if  ( hasNoSideEffectsAnnotation ( parent )  )  { hasAnnotation = true; }^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P13_Insert_Block]^if  (  (  ( isVar ( gramp )  )  &&  ( gramp.hasOneChild (  )  )  )  &&  ( hasNoSideEffectsAnnotation ( gramp )  )  )  {     hasAnnotation = true; }^151^^^^^136^166^[Delete]^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P13_Insert_Block]^if  ( isAssign ( parent )  )  {     if  ( hasNoSideEffectsAnnotation ( parent )  )  {         hasAnnotation = true;     }     nameNodes.add ( parent.getFirstChild (  )  ) ; }^151^^^^^136^166^[Delete]^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P3_Replace_Literal]^hasAnnotation = false;^152^^^^^137^167^hasAnnotation = true;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P13_Insert_Block]^if  ( hasNoSideEffectsAnnotation ( parent )  )  {     hasAnnotation = true; }^151^^^^^136^166^[Delete]^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P8_Replace_Mix]^nameNodes.add ( node.getFirstChild (  )  ) ;^155^^^^^140^170^nameNodes.add ( parent.getFirstChild (  )  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P14_Delete_Statement]^^155^^^^^140^170^nameNodes.add ( parent.getFirstChild (  )  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P11_Insert_Donor_Statement]^nameNodes.add ( node.getFirstChild (  )  ) ;nameNodes.add ( parent.getFirstChild (  )  ) ;^155^^^^^140^170^nameNodes.add ( parent.getFirstChild (  )  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P11_Insert_Donor_Statement]^Node gramp = parent.getParent (  ) ;nameNodes.add ( parent.getFirstChild (  )  ) ;^155^^^^^140^170^nameNodes.add ( parent.getFirstChild (  )  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P11_Insert_Donor_Statement]^nameNodes.add ( parent ) ;nameNodes.add ( parent.getFirstChild (  )  ) ;^155^^^^^140^170^nameNodes.add ( parent.getFirstChild (  )  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P7_Replace_Invocation]^nameNodes.add ( parent .hasOneChild (  )   ) ;^155^^^^^140^170^nameNodes.add ( parent.getFirstChild (  )  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P2_Replace_Operator]^if  ( NodeUtil.isVar ( gramp )  || gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P6_Replace_Expression]^if  ( NodeUtil.isVar ( gramp )  ) {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P6_Replace_Expression]^if  (  gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P6_Replace_Expression]^if  ( isVar(gramp && gramp.hasOneChild()) )  {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P7_Replace_Invocation]^if  ( NodeUtil.isName ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P7_Replace_Invocation]^if  ( NodeUtil .isName ( node )   && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P7_Replace_Invocation]^if  ( NodeUtil.isVar ( gramp )  && gramp .getFirstChild (  )   && hasNoSideEffectsAnnotation ( gramp )  )  {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P8_Replace_Mix]^if  ( NodeUtil.isVar ( parent )  ) {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P15_Unwrap_Block]^hasAnnotation = true;^143^144^145^146^147^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  { hasAnnotation = true; }^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P16_Remove_Block]^^143^144^145^146^147^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  { hasAnnotation = true; }^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P13_Insert_Block]^if  (  ( isExpressionNode ( parent )  )  &&  ( hasNoSideEffectsAnnotation ( node )  )  )  {     noSideEffectFunctionNames.add ( node ) ; }^143^^^^^128^158^[Delete]^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P13_Insert_Block]^if  ( hasNoSideEffectsAnnotation ( parent )  )  {     hasAnnotation = true; }^143^^^^^128^158^[Delete]^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P13_Insert_Block]^if  ( isAssign ( parent )  )  {     if  ( hasNoSideEffectsAnnotation ( parent )  )  {         hasAnnotation = true;     }     nameNodes.add ( parent.getFirstChild (  )  ) ; }^143^^^^^128^158^[Delete]^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P3_Replace_Literal]^hasAnnotation = false;^146^^^^^143^147^hasAnnotation = true;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P3_Replace_Literal]^hasAnnotation = false;^146^^^^^131^161^hasAnnotation = true;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P5_Replace_Variable]^Node gramp = node.getParent (  ) ;^142^^^^^127^157^Node gramp = parent.getParent (  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P7_Replace_Invocation]^Node gramp = parent .getFirstChild (  )  ;^142^^^^^127^157^Node gramp = parent.getParent (  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P14_Delete_Statement]^^142^^^^^127^157^Node gramp = parent.getParent (  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P11_Insert_Donor_Statement]^nameNodes.add ( parent.getFirstChild (  )  ) ;Node gramp = parent.getParent (  ) ;^142^^^^^127^157^Node gramp = parent.getParent (  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P5_Replace_Variable]^if  ( NodeUtil.isVar ( parent )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P5_Replace_Variable]^gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( parent )  )  {^144^145^^^^129^159^gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P14_Delete_Statement]^^144^145^146^^^129^159^gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  { hasAnnotation = true;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P5_Replace_Variable]^hasNoSideEffectsAnnotation ( parent )  )  {^145^^^^^130^160^hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P14_Delete_Statement]^^145^146^^^^130^160^hasNoSideEffectsAnnotation ( gramp )  )  { hasAnnotation = true;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P5_Replace_Variable]^nameNodes.add ( node ) ;^149^^^^^134^164^nameNodes.add ( parent ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P7_Replace_Invocation]^nameNodes .add ( gramp )  ;^149^^^^^134^164^nameNodes.add ( parent ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P14_Delete_Statement]^^149^^^^^134^164^nameNodes.add ( parent ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P11_Insert_Donor_Statement]^nameNodes.add ( parent.getFirstChild (  )  ) ;nameNodes.add ( parent ) ;^149^^^^^134^164^nameNodes.add ( parent ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P8_Replace_Mix]^nameNodes.add ( node .hasOneChild (  )   ) ;^155^^^^^140^170^nameNodes.add ( parent.getFirstChild (  )  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P5_Replace_Variable]^if  ( inExterns )  {^158^^^^^143^173^if  ( hasAnnotation )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P15_Unwrap_Block]^noSideEffectFunctionNames.addAll(nameNodes);^158^159^160^^^143^173^if  ( hasAnnotation )  { noSideEffectFunctionNames.addAll ( nameNodes ) ; }^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P16_Remove_Block]^^158^159^160^^^143^173^if  ( hasAnnotation )  { noSideEffectFunctionNames.addAll ( nameNodes ) ; }^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P7_Replace_Invocation]^noSideEffectFunctionNames.add ( nameNodes ) ;^159^^^^^144^174^noSideEffectFunctionNames.addAll ( nameNodes ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P7_Replace_Invocation]^noSideEffectFunctionNames .add ( gramp )  ;^159^^^^^144^174^noSideEffectFunctionNames.addAll ( nameNodes ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P14_Delete_Statement]^^159^^^^^144^174^noSideEffectFunctionNames.addAll ( nameNodes ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P11_Insert_Donor_Statement]^noSideEffectFunctionNames.add ( node ) ;noSideEffectFunctionNames.addAll ( nameNodes ) ;^159^^^^^144^174^noSideEffectFunctionNames.addAll ( nameNodes ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P13_Insert_Block]^if  ( hasAnnotation )  {     noSideEffectFunctionNames.addAll ( nameNodes ) ; }^159^^^^^144^174^[Delete]^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P5_Replace_Variable]^boolean hasAnnotation = hasNoSideEffectsAnnotation ( parent ) ;^135^^^^^120^150^boolean hasAnnotation = hasNoSideEffectsAnnotation ( node ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P14_Delete_Statement]^^135^136^^^^120^150^boolean hasAnnotation = hasNoSideEffectsAnnotation ( node ) ; List<Node> nameNodes = Lists.newArrayList (  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P12_Insert_Condition]^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  { boolean hasAnnotation = hasNoSideEffectsAnnotation ( node ) ; }^135^^^^^120^150^boolean hasAnnotation = hasNoSideEffectsAnnotation ( node ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P12_Insert_Condition]^if  ( !inExterns && hasNoSideEffectsAnnotation ( node )  )  { boolean hasAnnotation = hasNoSideEffectsAnnotation ( node ) ; }^135^^^^^120^150^boolean hasAnnotation = hasNoSideEffectsAnnotation ( node ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P14_Delete_Statement]^^136^137^^^^121^151^List<Node> nameNodes = Lists.newArrayList (  ) ; nameNodes.add ( node.getFirstChild (  )  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P5_Replace_Variable]^nameNodes.add ( parent.getFirstChild (  )  ) ;^137^^^^^122^152^nameNodes.add ( node.getFirstChild (  )  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P14_Delete_Statement]^^137^^^^^122^152^nameNodes.add ( node.getFirstChild (  )  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P11_Insert_Donor_Statement]^nameNodes.add ( parent.getFirstChild (  )  ) ;nameNodes.add ( node.getFirstChild (  )  ) ;^137^^^^^122^152^nameNodes.add ( node.getFirstChild (  )  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P5_Replace_Variable]^if  ( NodeUtil.isName ( node )  )  {^141^^^^^126^156^if  ( NodeUtil.isName ( parent )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P8_Replace_Mix]^Node gramp = node .getFirstChild (  )  ;^142^^^^^127^157^Node gramp = parent.getParent (  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P7_Replace_Invocation]^if  ( NodeUtil .isName ( parent )   && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P8_Replace_Mix]^nameNodes .add ( nameNode )  ;^149^^^^^134^164^nameNodes.add ( parent ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P7_Replace_Invocation]^} else if  ( NodeUtil .isFunction ( nameNode )   )  {^150^^^^^135^165^} else if  ( NodeUtil.isAssign ( parent )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P8_Replace_Mix]^}  if  ( NodeUtil.isAssign ( node )  )  {^150^^^^^135^165^} else if  ( NodeUtil.isAssign ( parent )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P8_Replace_Mix]^nameNodes .add ( nameNode )  ;^155^^^^^140^170^nameNodes.add ( parent.getFirstChild (  )  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P7_Replace_Invocation]^nameNodes .add ( parent )  ;^155^^^^^140^170^nameNodes.add ( parent.getFirstChild (  )  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P7_Replace_Invocation]^} else if  ( NodeUtil .isFunction ( node )   )  {^150^^^^^135^165^} else if  ( NodeUtil.isAssign ( parent )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P14_Delete_Statement]^^136^^^^^121^151^List<Node> nameNodes = Lists.newArrayList (  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P7_Replace_Invocation]^nameNodes.add ( node .hasOneChild (  )   ) ;^137^^^^^122^152^nameNodes.add ( node.getFirstChild (  )  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P2_Replace_Operator]^if  ( NodeUtil.isExpressionNode ( parent )  || hasNoSideEffectsAnnotation ( node )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P5_Replace_Variable]^if  ( NodeUtil.isExpressionNode ( nameNode )  && hasNoSideEffectsAnnotation ( node )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P5_Replace_Variable]^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( nameNode )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P5_Replace_Variable]^if  ( NodeUtil.isExpressionNode ( node )  && hasNoSideEffectsAnnotation ( parent )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P6_Replace_Expression]^if  ( NodeUtil.isExpressionNode ( parent )  ) {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P6_Replace_Expression]^if  (  hasNoSideEffectsAnnotation ( node )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P7_Replace_Invocation]^if  ( NodeUtil.isAssign ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P8_Replace_Mix]^if  ( NodeUtil.isExpressionNode ( node )  && hasNoSideEffectsAnnotation ( node )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P15_Unwrap_Block]^noSideEffectFunctionNames.add(node);^127^128^129^130^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  { noSideEffectFunctionNames.add ( node ) ; }^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P16_Remove_Block]^^127^128^129^130^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  { noSideEffectFunctionNames.add ( node ) ; }^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P13_Insert_Block]^if  (  (  ( isVar ( gramp )  )  &&  ( gramp.hasOneChild (  )  )  )  &&  ( hasNoSideEffectsAnnotation ( gramp )  )  )  {     hasAnnotation = true; }^127^^^^^112^142^[Delete]^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P13_Insert_Block]^if  ( isAssign ( parent )  )  {     if  ( hasNoSideEffectsAnnotation ( parent )  )  {         hasAnnotation = true;     }     nameNodes.add ( parent.getFirstChild (  )  ) ; }^127^^^^^112^142^[Delete]^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P7_Replace_Invocation]^noSideEffectFunctionNames.addAll ( node ) ;^129^^^^^127^130^noSideEffectFunctionNames.add ( node ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P8_Replace_Mix]^noSideEffectFunctionNames.add ( parent ) ;^129^^^^^127^130^noSideEffectFunctionNames.add ( node ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P14_Delete_Statement]^^129^^^^^127^130^noSideEffectFunctionNames.add ( node ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P11_Insert_Donor_Statement]^noSideEffectFunctionNames.addAll ( nameNodes ) ;noSideEffectFunctionNames.add ( node ) ;^129^^^^^127^130^noSideEffectFunctionNames.add ( node ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P7_Replace_Invocation]^if  ( NodeUtil .isAssign ( gramp )   && hasNoSideEffectsAnnotation ( node )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P5_Replace_Variable]^hasNoSideEffectsAnnotation ( parent )  )  {^128^^^^^113^143^hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P14_Delete_Statement]^^128^129^^^^113^143^hasNoSideEffectsAnnotation ( node )  )  { noSideEffectFunctionNames.add ( node ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P13_Insert_Block]^if  ( hasNoSideEffectsAnnotation ( parent )  )  {     hasAnnotation = true; }^128^^^^^113^143^[Delete]^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P5_Replace_Variable]^noSideEffectFunctionNames.add ( parent ) ;^129^^^^^114^144^noSideEffectFunctionNames.add ( node ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P7_Replace_Invocation]^noSideEffectFunctionNames.addAll ( node ) ;^129^^^^^114^144^noSideEffectFunctionNames.add ( node ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P14_Delete_Statement]^^129^^^^^114^144^noSideEffectFunctionNames.add ( node ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P11_Insert_Donor_Statement]^noSideEffectFunctionNames.addAll ( nameNodes ) ;noSideEffectFunctionNames.add ( node ) ;^129^^^^^114^144^noSideEffectFunctionNames.add ( node ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P8_Replace_Mix]^}  if  ( NodeUtil.isFunction ( parent )  )  {^131^^^^^116^146^} else if  ( NodeUtil.isFunction ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P5_Replace_Variable]^noSideEffectFunctionNames.addAll ( 3 ) ;^159^^^^^144^174^noSideEffectFunctionNames.addAll ( nameNodes ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P8_Replace_Mix]^noSideEffectFunctionNames .add ( parent )  ;^159^^^^^144^174^noSideEffectFunctionNames.addAll ( nameNodes ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P7_Replace_Invocation]^gramp .getFirstChild (  )   && hasNoSideEffectsAnnotation ( gramp )  )  {^144^145^^^^129^159^gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P8_Replace_Mix]^if  ( NodeUtil.isVar ( parent )  && gramp .getFirstChild (  )   && hasNoSideEffectsAnnotation ( gramp )  )  {^143^144^145^^^128^158^if  ( NodeUtil.isVar ( gramp )  && gramp.hasOneChild (  )  && hasNoSideEffectsAnnotation ( gramp )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P7_Replace_Invocation]^nameNodes .add ( node )  ;^155^^^^^140^170^nameNodes.add ( parent.getFirstChild (  )  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P8_Replace_Mix]^noSideEffectFunctionNames .add ( node )  ;^159^^^^^144^174^noSideEffectFunctionNames.addAll ( nameNodes ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P8_Replace_Mix]^if  ( NodeUtil.isAssign ( node )  && hasNoSideEffectsAnnotation ( node )  )  {^127^128^^^^112^142^if  ( NodeUtil.isExpressionNode ( parent )  && hasNoSideEffectsAnnotation ( node )  )  {^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P7_Replace_Invocation]^nameNodes .add ( gramp )  ;^137^^^^^122^152^nameNodes.add ( node.getFirstChild (  )  ) ;^[CLASS] GatherNoSideEffectFunctions  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P8_Replace_Mix]^private  SimpleDefinitionFinder defFinder;^170^^^^^165^175^private final SimpleDefinitionFinder defFinder;^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] List  nameNodes  boolean  hasAnnotation  inExterns  NodeTraversal  traversal  Node  gramp  nameNode  node  parent  
[P8_Replace_Mix]^this.defFinder =  null;^173^^^^^172^174^this.defFinder = defFinder;^[CLASS] SetNoSideEffectCallProperty  [METHOD] <init> [RETURN_TYPE] SimpleDefinitionFinder)   SimpleDefinitionFinder defFinder [VARIABLES] SimpleDefinitionFinder  defFinder  boolean  
[P2_Replace_Operator]^if  ( !NodeUtil.isCall ( node )  || !NodeUtil.isNew ( node )  )  {^178^^^^^177^198^if  ( !NodeUtil.isCall ( node )  && !NodeUtil.isNew ( node )  )  {^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P5_Replace_Variable]^if  ( !NodeUtil.isCall ( parent )  && !NodeUtil.isNew ( node )  )  {^178^^^^^177^198^if  ( !NodeUtil.isCall ( node )  && !NodeUtil.isNew ( node )  )  {^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P6_Replace_Expression]^if  ( !NodeUtil.isCall ( node )  ) {^178^^^^^177^198^if  ( !NodeUtil.isCall ( node )  && !NodeUtil.isNew ( node )  )  {^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P6_Replace_Expression]^if  (  !NodeUtil.isNew ( node )  )  {^178^^^^^177^198^if  ( !NodeUtil.isCall ( node )  && !NodeUtil.isNew ( node )  )  {^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P7_Replace_Invocation]^if  ( !NodeUtil.isNew ( node )  && !NodeUtil.isNew ( node )  )  {^178^^^^^177^198^if  ( !NodeUtil.isCall ( node )  && !NodeUtil.isNew ( node )  )  {^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P7_Replace_Invocation]^if  ( !NodeUtil.isCall ( node )  && !NodeUtil.isCall ( node )  )  {^178^^^^^177^198^if  ( !NodeUtil.isCall ( node )  && !NodeUtil.isNew ( node )  )  {^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P15_Unwrap_Block]^return ;^178^179^180^^^177^198^if  ( !NodeUtil.isCall ( node )  && !NodeUtil.isNew ( node )  )  { return; }^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P16_Remove_Block]^^178^179^180^^^177^198^if  ( !NodeUtil.isCall ( node )  && !NodeUtil.isNew ( node )  )  { return; }^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P7_Replace_Invocation]^if  ( !NodeUtil .isNew ( lValue )   && !NodeUtil.isNew ( node )  )  {^178^^^^^177^198^if  ( !NodeUtil.isCall ( node )  && !NodeUtil.isNew ( node )  )  {^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P5_Replace_Variable]^Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( parent.getFirstChild (  )  ) ;^182^183^^^^177^198^Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( node.getFirstChild (  )  ) ;^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P5_Replace_Variable]^Collection<Definition> definitions = node.getDefinitionsReferencedAt ( defFinder.getFirstChild (  )  ) ;^182^183^^^^177^198^Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( node.getFirstChild (  )  ) ;^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P7_Replace_Invocation]^Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( node .setIsNoSideEffectsCall (  )   ) ;^182^183^^^^177^198^Collection<Definition> definitions = defFinder.getDefinitionsReferencedAt ( node.getFirstChild (  )  ) ;^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P5_Replace_Variable]^defFinder.getDefinitionsReferencedAt ( parent.getFirstChild (  )  ) ;^183^^^^^177^198^defFinder.getDefinitionsReferencedAt ( node.getFirstChild (  )  ) ;^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P7_Replace_Invocation]^defFinder.getDefinitionsReferencedAt ( node .setIsNoSideEffectsCall (  )   ) ;^183^^^^^177^198^defFinder.getDefinitionsReferencedAt ( node.getFirstChild (  )  ) ;^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P8_Replace_Mix]^defFinder.getDefinitionsReferencedAt ( parent .setIsNoSideEffectsCall (  )   ) ;^183^^^^^177^198^defFinder.getDefinitionsReferencedAt ( node.getFirstChild (  )  ) ;^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P14_Delete_Statement]^^183^^^^^177^198^defFinder.getDefinitionsReferencedAt ( node.getFirstChild (  )  ) ;^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P2_Replace_Operator]^if  ( definitions != null )  {^184^^^^^177^198^if  ( definitions == null )  {^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P8_Replace_Mix]^if  ( definitions == this )  {^184^^^^^177^198^if  ( definitions == null )  {^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P15_Unwrap_Block]^return ;^184^185^186^^^177^198^if  ( definitions == null )  { return; }^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P16_Remove_Block]^^184^185^186^^^177^198^if  ( definitions == null )  { return; }^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P2_Replace_Operator]^if  ( !noSideEffectFunctionNames.contains ( lValue )  || definitionTypeContainsFunctionType ( def )  )  {^191^192^^^^177^198^if  ( !noSideEffectFunctionNames.contains ( lValue )  && definitionTypeContainsFunctionType ( def )  )  {^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P5_Replace_Variable]^if  ( !noSideEffectFunctionNames.contains ( parent )  && definitionTypeContainsFunctionType ( def )  )  {^191^192^^^^177^198^if  ( !noSideEffectFunctionNames.contains ( lValue )  && definitionTypeContainsFunctionType ( def )  )  {^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P5_Replace_Variable]^if  ( !noSideEffectFunctionNames.contains ( def )  && lValueinitionTypeContainsFunctionType ( def )  )  {^191^192^^^^177^198^if  ( !noSideEffectFunctionNames.contains ( lValue )  && definitionTypeContainsFunctionType ( def )  )  {^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P6_Replace_Expression]^if  ( !noSideEffectFunctionNames.contains ( lValue )  ) {^191^192^^^^177^198^if  ( !noSideEffectFunctionNames.contains ( lValue )  && definitionTypeContainsFunctionType ( def )  )  {^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P6_Replace_Expression]^if  (  definitionTypeContainsFunctionType ( def )  )  {^191^192^^^^177^198^if  ( !noSideEffectFunctionNames.contains ( lValue )  && definitionTypeContainsFunctionType ( def )  )  {^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P8_Replace_Mix]^if  ( !noSideEffectFunctionNames.contains ( parent )  ) {^191^192^^^^177^198^if  ( !noSideEffectFunctionNames.contains ( lValue )  && definitionTypeContainsFunctionType ( def )  )  {^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P15_Unwrap_Block]^return ;^191^192^193^194^^177^198^if  ( !noSideEffectFunctionNames.contains ( lValue )  && definitionTypeContainsFunctionType ( def )  )  { return; }^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P16_Remove_Block]^^191^192^193^194^^177^198^if  ( !noSideEffectFunctionNames.contains ( lValue )  && definitionTypeContainsFunctionType ( def )  )  { return; }^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P14_Delete_Statement]^^189^190^^^^177^198^Node lValue = def.getLValue (  ) ; Preconditions.checkNotNull ( lValue ) ;^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P5_Replace_Variable]^Preconditions.checkNotNull ( parent ) ;^190^^^^^177^198^Preconditions.checkNotNull ( lValue ) ;^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P14_Delete_Statement]^^190^^^^^177^198^Preconditions.checkNotNull ( lValue ) ;^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P14_Delete_Statement]^^192^193^^^^177^198^definitionTypeContainsFunctionType ( def )  )  { return;^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P13_Insert_Block]^if  (  ( ! ( noSideEffectFunctionNames.contains ( lValue )  )  )  &&  ( definitionTypeContainsFunctionType ( def )  )  )  {     return ; }^192^^^^^177^198^[Delete]^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P7_Replace_Invocation]^node .getFirstChild (  )  ;^197^^^^^177^198^node.setIsNoSideEffectsCall (  ) ;^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
[P14_Delete_Statement]^^197^^^^^177^198^node.setIsNoSideEffectsCall (  ) ;^[CLASS] SetNoSideEffectCallProperty  [METHOD] visit [RETURN_TYPE] void   NodeTraversal traversal Node node Node parent [VARIABLES] Definition  def  Collection  definitions  SimpleDefinitionFinder  defFinder  boolean  NodeTraversal  traversal  Node  lValue  node  parent  
