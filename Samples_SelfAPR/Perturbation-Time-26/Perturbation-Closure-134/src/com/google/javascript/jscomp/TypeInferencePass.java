[P3_Replace_Literal]^static final DiagnosticType DATAFLOW_ERROR = DiagnosticType.warning ( "TERNA", "non-monotonic data-flow analysis" ) ;^31^32^33^^^31^33^static final DiagnosticType DATAFLOW_ERROR = DiagnosticType.warning ( "JSC_INTERNAL_ERROR_DATAFLOW", "non-monotonic data-flow analysis" ) ;^[CLASS] TypeInferencePass TypeInferringCallback   [VARIABLES] 
[P3_Replace_Literal]^static final DiagnosticType DATAFLOW_ERROR = DiagnosticType.warning ( "JSC_INTERNAL_ERROR_DATAFLOW", "non-mon-monotonic data-flow analysis" ) ;^31^32^33^^^31^33^static final DiagnosticType DATAFLOW_ERROR = DiagnosticType.warning ( "JSC_INTERNAL_ERROR_DATAFLOW", "non-monotonic data-flow analysis" ) ;^[CLASS] TypeInferencePass TypeInferringCallback   [VARIABLES] 
[P8_Replace_Mix]^static  DiagnosticType DATAFLOW_ERROR = DiagnosticType.warning ( "JSC_INTERNAL_ERROR_DATAFLOW", "non-monotonic data-flow analysis" ) ;^31^32^33^^^31^33^static final DiagnosticType DATAFLOW_ERROR = DiagnosticType.warning ( "JSC_INTERNAL_ERROR_DATAFLOW", "non-monotonic data-flow analysis" ) ;^[CLASS] TypeInferencePass TypeInferringCallback   [VARIABLES] 
[P8_Replace_Mix]^private  ReverseAbstractInterpreter reverseInterpreter;^36^^^^^31^41^private final ReverseAbstractInterpreter reverseInterpreter;^[CLASS] TypeInferencePass TypeInferringCallback   [VARIABLES] 
[P8_Replace_Mix]^this.compiler =  null;^43^^^^^40^47^this.compiler = compiler;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] <init> [RETURN_TYPE] ScopeCreator)   AbstractCompiler compiler ReverseAbstractInterpreter reverseInterpreter Scope topScope ScopeCreator scopeCreator [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  ScopeCreator  scopeCreator  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  
[P11_Insert_Donor_Statement]^this.scopeCreator = scopeCreator;this.compiler = compiler;^43^^^^^40^47^this.compiler = compiler;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] <init> [RETURN_TYPE] ScopeCreator)   AbstractCompiler compiler ReverseAbstractInterpreter reverseInterpreter Scope topScope ScopeCreator scopeCreator [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  ScopeCreator  scopeCreator  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  
[P8_Replace_Mix]^this.reverseInterpreter =  null;^44^^^^^40^47^this.reverseInterpreter = reverseInterpreter;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] <init> [RETURN_TYPE] ScopeCreator)   AbstractCompiler compiler ReverseAbstractInterpreter reverseInterpreter Scope topScope ScopeCreator scopeCreator [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  ScopeCreator  scopeCreator  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  
[P8_Replace_Mix]^this.topScope =  null;^45^^^^^40^47^this.topScope = topScope;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] <init> [RETURN_TYPE] ScopeCreator)   AbstractCompiler compiler ReverseAbstractInterpreter reverseInterpreter Scope topScope ScopeCreator scopeCreator [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  ScopeCreator  scopeCreator  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  
[P8_Replace_Mix]^this.scopeCreator =  null;^46^^^^^40^47^this.scopeCreator = scopeCreator;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] <init> [RETURN_TYPE] ScopeCreator)   AbstractCompiler compiler ReverseAbstractInterpreter reverseInterpreter Scope topScope ScopeCreator scopeCreator [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  ScopeCreator  scopeCreator  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  
[P11_Insert_Donor_Statement]^this.compiler = compiler;this.scopeCreator = scopeCreator;^46^^^^^40^47^this.scopeCreator = scopeCreator;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] <init> [RETURN_TYPE] ScopeCreator)   AbstractCompiler compiler ReverseAbstractInterpreter reverseInterpreter Scope topScope ScopeCreator scopeCreator [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  ScopeCreator  scopeCreator  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  
[P5_Replace_Variable]^Node externsAndJs = externsRoot.getParent (  ) ;^56^^^^^55^62^Node externsAndJs = jsRoot.getParent (  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[P14_Delete_Statement]^^56^^^^^55^62^Node externsAndJs = jsRoot.getParent (  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[P2_Replace_Operator]^Preconditions.checkState ( externsAndJs == null ) ;^57^^^^^55^62^Preconditions.checkState ( externsAndJs != null ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[P14_Delete_Statement]^^57^^^^^55^62^Preconditions.checkState ( externsAndJs != null ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[P2_Replace_Operator]^Preconditions.checkState ( externsRoot == null && externsAndJs.hasChild ( externsRoot )  ) ;^58^59^^^^55^62^Preconditions.checkState ( externsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[P2_Replace_Operator]^Preconditions.checkState ( externsRoot != null || externsAndJs.hasChild ( externsRoot )  ) ;^58^59^^^^55^62^Preconditions.checkState ( externsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^Preconditions.checkState ( jsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;^58^59^^^^55^62^Preconditions.checkState ( externsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^Preconditions.checkState ( externsRoot == null || jsRoot.hasChild ( externsRoot )  ) ;^58^59^^^^55^62^Preconditions.checkState ( externsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^Preconditions.checkState ( externsAndJs == null || externsRoot.hasChild ( externsRoot )  ) ;^58^59^^^^55^62^Preconditions.checkState ( externsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[P14_Delete_Statement]^^58^59^^^^55^62^Preconditions.checkState ( externsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[P11_Insert_Donor_Statement]^externsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;Preconditions.checkState ( externsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;^58^59^^^^55^62^Preconditions.checkState ( externsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^externsRoot == null || jsRoot.hasChild ( externsRoot )  ) ;^59^^^^^55^62^externsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^externsRoot == null || externsAndJs.hasChild ( jsRoot )  ) ;^59^^^^^55^62^externsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^externsRoot == null || externsRoot.hasChild ( externsAndJs )  ) ;^59^^^^^55^62^externsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[P14_Delete_Statement]^^59^^^^^55^62^externsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[P11_Insert_Donor_Statement]^Preconditions.checkState ( externsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;externsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;^59^^^^^55^62^externsRoot == null || externsAndJs.hasChild ( externsRoot )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^inferTypes ( jsRoot ) ;^61^^^^^55^62^inferTypes ( externsAndJs ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[P7_Replace_Invocation]^computeCfg ( externsAndJs ) ;^61^^^^^55^62^inferTypes ( externsAndJs ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[P14_Delete_Statement]^^61^^^^^55^62^inferTypes ( externsAndJs ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[P11_Insert_Donor_Statement]^inferTypes ( t, node, scope ) ;inferTypes ( externsAndJs ) ;^61^^^^^55^62^inferTypes ( externsAndJs ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] process [RETURN_TYPE] void   Node externsRoot Node jsRoot [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  externsAndJs  externsRoot  jsRoot  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^NodeTraversal inferTypes = new NodeTraversal (  new TypeInferringCallback (  ) , scopeCreator ) ;^66^67^^^^65^69^NodeTraversal inferTypes = new NodeTraversal ( compiler, new TypeInferringCallback (  ) , scopeCreator ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   Node node [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  NodeTraversal  inferTypes  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^NodeTraversal inferTypes = new NodeTraversal ( compiler, new TypeInferringCallback (  )  ) ;^66^67^^^^65^69^NodeTraversal inferTypes = new NodeTraversal ( compiler, new TypeInferringCallback (  ) , scopeCreator ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   Node node [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  NodeTraversal  inferTypes  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^NodeTraversal inferTypes = new NodeTraversal ( scopeCreator, new TypeInferringCallback (  ) , compiler ) ;^66^67^^^^65^69^NodeTraversal inferTypes = new NodeTraversal ( compiler, new TypeInferringCallback (  ) , scopeCreator ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   Node node [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  NodeTraversal  inferTypes  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^inferTypes.traverseWithScope (  topScope ) ;^68^^^^^65^69^inferTypes.traverseWithScope ( node, topScope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   Node node [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  NodeTraversal  inferTypes  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^inferTypes.traverseWithScope ( node ) ;^68^^^^^65^69^inferTypes.traverseWithScope ( node, topScope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   Node node [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  NodeTraversal  inferTypes  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^inferTypes.traverseWithScope ( topScope, node ) ;^68^^^^^65^69^inferTypes.traverseWithScope ( node, topScope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   Node node [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  NodeTraversal  inferTypes  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[P7_Replace_Invocation]^inferTypes .getScope (  )  ;^68^^^^^65^69^inferTypes.traverseWithScope ( node, topScope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   Node node [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  NodeTraversal  inferTypes  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[P14_Delete_Statement]^^68^^^^^65^69^inferTypes.traverseWithScope ( node, topScope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   Node node [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  NodeTraversal  inferTypes  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[P11_Insert_Donor_Statement]^inferTypes ( t, node, scope ) ;inferTypes.traverseWithScope ( node, topScope ) ;^68^^^^^65^69^inferTypes.traverseWithScope ( node, topScope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   Node node [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  topScope  NodeTraversal  inferTypes  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[P4_Replace_Constructor]^new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter ) ;^73^^^^^71^83^new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, topScope ) ;^73^^^^^71^83^new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^new TypeInference (  computeCfg ( n ) , reverseInterpreter, scope ) ;^73^^^^^71^83^new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^new TypeInference ( compiler, computeCfg ( n ) ,  scope ) ;^73^^^^^71^83^new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^new TypeInference ( n, computeCfg ( compiler ) , reverseInterpreter, scope ) ;^73^^^^^71^83^new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^new TypeInference ( scope, computeCfg ( n ) , reverseInterpreter, compiler ) ;^73^^^^^71^83^new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^new TypeInference ( reverseInterpreter, computeCfg ( n ) , compiler, scope ) ;^73^^^^^71^83^new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P7_Replace_Invocation]^new TypeInference ( compiler, inferTypes ( n ) , reverseInterpreter, scope ) ;^73^^^^^71^83^new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P8_Replace_Mix]^new TypeInference ( compiler, inferTypes ( n ) , reverseInterpreter, topScope ) ;^73^^^^^71^83^new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P4_Replace_Constructor]^TypeInference typeInference = new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter ) ;^72^73^^^^71^83^TypeInference typeInference = new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^TypeInference typeInference = new TypeInference (  computeCfg ( n ) , reverseInterpreter, scope ) ;^72^73^^^^71^83^TypeInference typeInference = new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^TypeInference typeInference = new TypeInference ( compiler, computeCfg ( n ) ,  scope ) ;^72^73^^^^71^83^TypeInference typeInference = new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^TypeInference typeInference = reverseInterpreterew TypeInference ( compiler, computeCfg ( n ) , n, scope ) ;^72^73^^^^71^83^TypeInference typeInference = new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^TypeInference typeInference = scopeew TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, n ) ;^72^73^^^^71^83^TypeInference typeInference = new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^TypeInference typeInference = compilerew TypeInference ( n, computeCfg ( n ) , reverseInterpreter, scope ) ;^72^73^^^^71^83^TypeInference typeInference = new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^TypeInference typeInference = new TypeInference ( reverseInterpreter, computeCfg ( n ) , compiler, scope ) ;^72^73^^^^71^83^TypeInference typeInference = new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P7_Replace_Invocation]^TypeInference typeInference = new TypeInference ( compiler, inferTypes ( n ) , reverseInterpreter, scope ) ;^72^73^^^^71^83^TypeInference typeInference = new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P8_Replace_Mix]^TypeInference typeInference = new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, topScope ) ;^72^73^^^^71^83^TypeInference typeInference = new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P14_Delete_Statement]^^73^^^^^71^83^new TypeInference ( compiler, computeCfg ( n ) , reverseInterpreter, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P14_Delete_Statement]^^75^^^^^71^83^typeInference.analyze (  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P7_Replace_Invocation]^compiler.report (  ) .resolveTypesInScope ( scope ) ;^78^^^^^71^83^compiler.getTypeRegistry (  ) .resolveTypesInScope ( scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P8_Replace_Mix]^compiler.report (  ) .resolveTypesInScope ( topScope ) ;^78^^^^^71^83^compiler.getTypeRegistry (  ) .resolveTypesInScope ( scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P14_Delete_Statement]^^78^^^^^71^83^compiler.getTypeRegistry (  ) .resolveTypesInScope ( scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^compiler.getTypeRegistry (  ) .resolveTypesInScope ( topScope ) ;^78^^^^^71^83^compiler.getTypeRegistry (  ) .resolveTypesInScope ( scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^compiler.report ( JSError.make (  n, DATAFLOW_ERROR )  ) ;^81^^^^^71^83^compiler.report ( JSError.make ( t, n, DATAFLOW_ERROR )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t,  DATAFLOW_ERROR )  ) ;^81^^^^^71^83^compiler.report ( JSError.make ( t, n, DATAFLOW_ERROR )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, n )  ) ;^81^^^^^71^83^compiler.report ( JSError.make ( t, n, DATAFLOW_ERROR )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^compiler.report ( JSError.make ( n, t, DATAFLOW_ERROR )  ) ;^81^^^^^71^83^compiler.report ( JSError.make ( t, n, DATAFLOW_ERROR )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P7_Replace_Invocation]^compiler .getTypeRegistry (  )  ;^81^^^^^71^83^compiler.report ( JSError.make ( t, n, DATAFLOW_ERROR )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P14_Delete_Statement]^^81^^^^^71^83^compiler.report ( JSError.make ( t, n, DATAFLOW_ERROR )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^compiler.report ( JSError.make ( DATAFLOW_ERROR, n, t )  ) ;^81^^^^^71^83^compiler.report ( JSError.make ( t, n, DATAFLOW_ERROR )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^compiler.report ( JSError.make ( t, DATAFLOW_ERROR, n )  ) ;^81^^^^^71^83^compiler.report ( JSError.make ( t, n, DATAFLOW_ERROR )  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] inferTypes [RETURN_TYPE] void   NodeTraversal t Node n Scope scope [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  TypeInference  typeInference  DataFlowAnalysis  e  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P8_Replace_Mix]^Scope scope = t .traverseWithScope ( node , topScope )  ;^87^^^^^86^90^Scope scope = t.getScope (  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[P11_Insert_Donor_Statement]^Node node = t.getCurrentNode (  ) ;Scope scope = t.getScope (  ) ;^87^^^^^86^90^Scope scope = t.getScope (  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[P14_Delete_Statement]^^87^^^^^86^90^Scope scope = t.getScope (  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[P8_Replace_Mix]^Node node = t .getScope (  )  ;^88^^^^^86^90^Node node = t.getCurrentNode (  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[P11_Insert_Donor_Statement]^Scope scope = t.getScope (  ) ;Node node = t.getCurrentNode (  ) ;^88^^^^^86^90^Node node = t.getCurrentNode (  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[P14_Delete_Statement]^^88^^^^^86^90^Node node = t.getCurrentNode (  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^inferTypes ( t, node, topScope ) ;^89^^^^^86^90^inferTypes ( t, node, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^inferTypes (  node, scope ) ;^89^^^^^86^90^inferTypes ( t, node, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^inferTypes ( t,  scope ) ;^89^^^^^86^90^inferTypes ( t, node, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^inferTypes ( t, node ) ;^89^^^^^86^90^inferTypes ( t, node, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^inferTypes ( scope, node, t ) ;^89^^^^^86^90^inferTypes ( t, node, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^inferTypes ( t, scope, node ) ;^89^^^^^86^90^inferTypes ( t, node, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[P14_Delete_Statement]^^89^^^^^86^90^inferTypes ( t, node, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[P11_Insert_Donor_Statement]^inferTypes ( externsAndJs ) ;inferTypes ( t, node, scope ) ;^89^^^^^86^90^inferTypes ( t, node, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[P11_Insert_Donor_Statement]^inferTypes.traverseWithScope ( node, topScope ) ;inferTypes ( t, node, scope ) ;^89^^^^^86^90^inferTypes ( t, node, scope ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  node  ScopeCreator  scopeCreator  
[P3_Replace_Literal]^return false;^95^^^^^94^96^return true;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  boolean  Scope  scope  topScope  NodeTraversal  t  DiagnosticType  DATAFLOW_ERROR  Node  n  parent  ScopeCreator  scopeCreator  
[P3_Replace_Literal]^ControlFlowAnalysis cfa = new ControlFlowAnalysis ( compiler, true ) ;^104^^^^^103^107^ControlFlowAnalysis cfa = new ControlFlowAnalysis ( compiler, false ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] computeCfg [RETURN_TYPE] ControlFlowGraph   Node n [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  Scope  scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P5_Replace_Variable]^cfa.process ( null ) ;^105^^^^^103^107^cfa.process ( null, n ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] computeCfg [RETURN_TYPE] ControlFlowGraph   Node n [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  Scope  scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P7_Replace_Invocation]^cfa .process ( n , n )  ;^105^^^^^103^107^cfa.process ( null, n ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] computeCfg [RETURN_TYPE] ControlFlowGraph   Node n [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  Scope  scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P14_Delete_Statement]^^105^^^^^103^107^cfa.process ( null, n ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] computeCfg [RETURN_TYPE] ControlFlowGraph   Node n [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  Scope  scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P7_Replace_Invocation]^return cfa .process ( n , n )  ;^106^^^^^103^107^return cfa.getCfg (  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] computeCfg [RETURN_TYPE] ControlFlowGraph   Node n [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  Scope  scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P14_Delete_Statement]^^106^^^^^103^107^return cfa.getCfg (  ) ;^[CLASS] TypeInferencePass TypeInferringCallback  [METHOD] computeCfg [RETURN_TYPE] ControlFlowGraph   Node n [VARIABLES] ReverseAbstractInterpreter  reverseInterpreter  AbstractCompiler  compiler  ControlFlowAnalysis  cfa  boolean  Scope  scope  topScope  DiagnosticType  DATAFLOW_ERROR  Node  n  ScopeCreator  scopeCreator  
[P8_Replace_Mix]^Scope scope = t .getCurrentNode (  )  ;^87^^^^^86^90^Scope scope = t.getScope (  ) ;^[CLASS] TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  Scope  scope  NodeTraversal  t  Node  node  
[P11_Insert_Donor_Statement]^Node node = t.getCurrentNode (  ) ;Scope scope = t.getScope (  ) ;^87^^^^^86^90^Scope scope = t.getScope (  ) ;^[CLASS] TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  Scope  scope  NodeTraversal  t  Node  node  
[P14_Delete_Statement]^^87^88^^^^86^90^Scope scope = t.getScope (  ) ; Node node = t.getCurrentNode (  ) ;^[CLASS] TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  Scope  scope  NodeTraversal  t  Node  node  
[P11_Insert_Donor_Statement]^Scope scope = t.getScope (  ) ;Node node = t.getCurrentNode (  ) ;^88^^^^^86^90^Node node = t.getCurrentNode (  ) ;^[CLASS] TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  Scope  scope  NodeTraversal  t  Node  node  
[P8_Replace_Mix]^Node node = t .getScope (  )  ;^88^^^^^86^90^Node node = t.getCurrentNode (  ) ;^[CLASS] TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  Scope  scope  NodeTraversal  t  Node  node  
[P14_Delete_Statement]^^88^89^^^^86^90^Node node = t.getCurrentNode (  ) ; inferTypes ( t, node, scope ) ;^[CLASS] TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  Scope  scope  NodeTraversal  t  Node  node  
[P5_Replace_Variable]^inferTypes (  node, scope ) ;^89^^^^^86^90^inferTypes ( t, node, scope ) ;^[CLASS] TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  Scope  scope  NodeTraversal  t  Node  node  
[P5_Replace_Variable]^inferTypes ( t,  scope ) ;^89^^^^^86^90^inferTypes ( t, node, scope ) ;^[CLASS] TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  Scope  scope  NodeTraversal  t  Node  node  
[P5_Replace_Variable]^inferTypes ( t, node ) ;^89^^^^^86^90^inferTypes ( t, node, scope ) ;^[CLASS] TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  Scope  scope  NodeTraversal  t  Node  node  
[P5_Replace_Variable]^inferTypes ( node, t, scope ) ;^89^^^^^86^90^inferTypes ( t, node, scope ) ;^[CLASS] TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  Scope  scope  NodeTraversal  t  Node  node  
[P5_Replace_Variable]^inferTypes ( t, scope, node ) ;^89^^^^^86^90^inferTypes ( t, node, scope ) ;^[CLASS] TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  Scope  scope  NodeTraversal  t  Node  node  
[P14_Delete_Statement]^^89^^^^^86^90^inferTypes ( t, node, scope ) ;^[CLASS] TypeInferringCallback  [METHOD] enterScope [RETURN_TYPE] void   NodeTraversal t [VARIABLES] boolean  Scope  scope  NodeTraversal  t  Node  node  
[P3_Replace_Literal]^return false;^95^^^^^94^96^return true;^[CLASS] TypeInferringCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  
