[P8_Replace_Mix]^private  AbstractCompiler compiler;^60^^^^^55^65^private final AbstractCompiler compiler;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback   [VARIABLES] 
[P8_Replace_Mix]^private  FunctionNames functionNames;^61^^^^^56^66^private final FunctionNames functionNames;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback   [VARIABLES] 
[P1_Replace_Type]^private final char templateFilename;^62^^^^^57^67^private final String templateFilename;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback   [VARIABLES] 
[P8_Replace_Mix]^private  char templateFilename;^62^^^^^57^67^private final String templateFilename;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback   [VARIABLES] 
[P1_Replace_Type]^private final char appNameStr;^63^^^^^58^68^private final String appNameStr;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback   [VARIABLES] 
[P1_Replace_Type]^private final char initCodeSource;^64^^^^^59^69^private final String initCodeSource;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback   [VARIABLES] 
[P1_Replace_Type]^private final char definedFunctionName;^65^^^^^60^70^private final String definedFunctionName;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback   [VARIABLES] 
[P1_Replace_Type]^private final char reportFunctionName;^66^^^^^61^71^private final String reportFunctionName;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback   [VARIABLES] 
[P1_Replace_Type]^private final char reportFunctionExitName;^67^^^^^62^72^private final String reportFunctionExitName;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback   [VARIABLES] 
[P1_Replace_Type]^private final char appNameSetter;^68^^^^^63^73^private final String appNameSetter;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback   [VARIABLES] 
[P1_Replace_Type]^private final  short  functionId;^213^^^^^208^218^private final int functionId;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback   [VARIABLES] 
[P8_Replace_Mix]^private   long  functionId;^213^^^^^208^218^private final int functionId;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback   [VARIABLES] 
[P8_Replace_Mix]^this.compiler =  null;^86^^^^^71^101^this.compiler = compiler;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^this.functionNames =  null;^87^^^^^72^102^this.functionNames = functionNames;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.functionId = functionId;this.functionNames = functionNames;^87^^^^^72^102^this.functionNames = functionNames;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^this.templateFilename =  reportFunctionName;^88^^^^^73^103^this.templateFilename = templateFilename;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^this.appNameStr = reportFunctionName;^89^^^^^74^104^this.appNameStr = appNameStr;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^this.appNameStr =  templateFilename;^89^^^^^74^104^this.appNameStr = appNameStr;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.appNameSetter = "";this.appNameStr = appNameStr;^89^^^^^74^104^this.appNameStr = appNameStr;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.appNameSetter = template.getAppNameSetter (  ) ;this.appNameStr = appNameStr;^89^^^^^74^104^this.appNameStr = appNameStr;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^Instrumentation.Builder builder = Instrumentation.getInitList (  ) ;^91^^^^^76^106^Instrumentation.Builder builder = Instrumentation.newBuilder (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Instrumentation template = builder.build (  ) ;Instrumentation.Builder builder = Instrumentation.newBuilder (  ) ;^91^^^^^76^106^Instrumentation.Builder builder = Instrumentation.newBuilder (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^91^^^^^76^106^Instrumentation.Builder builder = Instrumentation.newBuilder (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^TextFormat.merge (  builder ) ;^93^^^^^78^108^TextFormat.merge ( readable, builder ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^TextFormat.merge ( readable ) ;^93^^^^^78^108^TextFormat.merge ( readable, builder ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^TextFormat.merge ( builder, readable ) ;^93^^^^^78^108^TextFormat.merge ( readable, builder ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^93^^^^^78^108^TextFormat.merge ( readable, builder ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^this.initCodeSource  = null ;^98^^^^^83^113^this.initCodeSource = "";^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.appNameSetter = "";this.initCodeSource = "";^98^^^^^83^113^this.initCodeSource = "";^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^this.definedFunctionName  =  this.definedFunctionName ;^99^^^^^84^114^this.definedFunctionName = "";^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.reportFunctionName = "";this.definedFunctionName = "";^99^^^^^84^114^this.definedFunctionName = "";^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.reportFunctionExitName = "";this.definedFunctionName = "";^99^^^^^84^114^this.definedFunctionName = "";^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^this.reportFunctionName  =  this.reportFunctionName ;^100^^^^^85^115^this.reportFunctionName = "";^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.definedFunctionName = "";this.reportFunctionName = "";^100^^^^^85^115^this.reportFunctionName = "";^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.reportFunctionExitName = "";this.reportFunctionName = "";^100^^^^^85^115^this.reportFunctionName = "";^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^this.reportFunctionExitName  = null ;^101^^^^^86^116^this.reportFunctionExitName = "";^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.reportFunctionExitName = template.getReportExit (  ) ;this.reportFunctionExitName = "";^101^^^^^86^116^this.reportFunctionExitName = "";^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.reportFunctionName = "";this.reportFunctionExitName = "";^101^^^^^86^116^this.reportFunctionExitName = "";^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.definedFunctionName = "";this.reportFunctionExitName = "";^101^^^^^86^116^this.reportFunctionExitName = "";^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^this.appNameSetter ;^102^^^^^87^117^this.appNameSetter = "";^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.initCodeSource = "";this.appNameSetter = "";^102^^^^^87^117^this.appNameSetter = "";^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.appNameStr = appNameStr;this.appNameSetter = "";^102^^^^^87^117^this.appNameSetter = "";^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^this.declarationsToRemove  =  this.declarationsToRemove ;^103^^^^^88^118^this.declarationsToRemove = Lists.newArrayList (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P2_Replace_Operator]^compiler.report ( JSError.make ( RhinoErrorReporter.PARSE_ERROR, "Error reading instrumentation template protobuf at "   instanceof   templateFilename )  ) ;^95^96^97^^^80^110^compiler.report ( JSError.make ( RhinoErrorReporter.PARSE_ERROR, "Error reading instrumentation template protobuf at " + templateFilename )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P3_Replace_Literal]^compiler.report ( JSError.make ( RhinoErrorReporter.PARSE_ERROR, "rror reading instrumentatirror reading instrumentation template protobuf at " + templateFilename )  ) ;^95^96^97^^^80^110^compiler.report ( JSError.make ( RhinoErrorReporter.PARSE_ERROR, "Error reading instrumentation template protobuf at " + templateFilename )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^compiler.report ( JSError.make ( RhinoErrorReporter.PARSE_ERROR, "Error reading instrumentation template protobuf at " + reportFunctionName )  ) ;^95^96^97^^^80^110^compiler.report ( JSError.make ( RhinoErrorReporter.PARSE_ERROR, "Error reading instrumentation template protobuf at " + templateFilename )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^compiler .reportCodeChange (  )  ;^95^96^97^^^80^110^compiler.report ( JSError.make ( RhinoErrorReporter.PARSE_ERROR, "Error reading instrumentation template protobuf at " + templateFilename )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^95^96^97^^^80^110^compiler.report ( JSError.make ( RhinoErrorReporter.PARSE_ERROR, "Error reading instrumentation template protobuf at " + templateFilename )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P2_Replace_Operator]^compiler.report ( JSError.make ( RhinoErrorReporter.PARSE_ERROR, "Error reading instrumentation template protobuf at "  ||  templateFilename )  ) ;^95^96^97^^^80^110^compiler.report ( JSError.make ( RhinoErrorReporter.PARSE_ERROR, "Error reading instrumentation template protobuf at " + templateFilename )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P3_Replace_Literal]^compiler.report ( JSError.make ( RhinoErrorReporter.PARSE_ERROR, "mentation template protobuf at" + templateFilename )  ) ;^95^96^97^^^80^110^compiler.report ( JSError.make ( RhinoErrorReporter.PARSE_ERROR, "Error reading instrumentation template protobuf at " + templateFilename )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^compiler.report ( JSError.make ( RhinoErrorReporter.PARSE_ERROR, "Error reading instrumentation template protobuf at " + reportFunctionExitName )  ) ;^95^96^97^^^80^110^compiler.report ( JSError.make ( RhinoErrorReporter.PARSE_ERROR, "Error reading instrumentation template protobuf at " + templateFilename )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^103^^^^^88^118^this.declarationsToRemove = Lists.newArrayList (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Instrumentation.Builder builder = Instrumentation.newBuilder (  ) ;Instrumentation template = builder.build (  ) ;^107^^^^^92^122^Instrumentation template = builder.build (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^107^^^^^92^122^Instrumentation template = builder.build (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P1_Replace_Type]^for  ( char line : template.getInitList (  )  )  {^110^^^^^95^125^for  ( String line : template.getInitList (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^for  ( String line : template .getReportExit (  )   )  {^110^^^^^95^125^for  ( String line : template.getInitList (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^110^111^112^^^95^125^for  ( String line : template.getInitList (  )  )  { initCodeSourceBuilder.append ( line ) .append ( "\n" ) ; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^initCodeSourceBuilder.append ( templateFilename ) .append ( "\n" ) ;^111^^^^^96^126^initCodeSourceBuilder.append ( line ) .append ( "\n" ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^111^^^^^96^126^initCodeSourceBuilder.append ( line ) .append ( "\n" ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^initCodeSourceBuilder.append ( reportFunctionExitName ) .append ( "\n" ) ;^111^^^^^96^126^initCodeSourceBuilder.append ( line ) .append ( "\n" ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P1_Replace_Type]^this.initCodeSource = initCodeSourceBuilder.tochar (  ) ;^113^^^^^98^128^this.initCodeSource = initCodeSourceBuilder.toString (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^this.initCodeSource = initCodeSourceBuilder.append (  ) ;^113^^^^^98^128^this.initCodeSource = initCodeSourceBuilder.toString (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^this.initCodeSource =  null.toString (  ) ;^113^^^^^98^128^this.initCodeSource = initCodeSourceBuilder.toString (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^initCode = initCodeRoot.removeChildren (  ) ;this.initCodeSource = initCodeSourceBuilder.toString (  ) ;^113^^^^^98^128^this.initCodeSource = initCodeSourceBuilder.toString (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^this.initCodeSource = initCodeSourceBuilder .StringBuilder (  )  ;^113^^^^^98^128^this.initCodeSource = initCodeSourceBuilder.toString (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^113^^^^^98^128^this.initCodeSource = initCodeSourceBuilder.toString (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^this.definedFunctionName = template .getReportExit (  )  ;^115^^^^^100^130^this.definedFunctionName = template.getReportDefined (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^this.definedFunctionName =  null.getReportDefined (  ) ;^115^^^^^100^130^this.definedFunctionName = template.getReportDefined (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.reportFunctionExitName = template.getReportExit (  ) ;this.definedFunctionName = template.getReportDefined (  ) ;^115^^^^^100^130^this.definedFunctionName = template.getReportDefined (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.appNameSetter = template.getAppNameSetter (  ) ;this.definedFunctionName = template.getReportDefined (  ) ;^115^^^^^100^130^this.definedFunctionName = template.getReportDefined (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.reportFunctionName = template.getReportCall (  ) ;this.definedFunctionName = template.getReportDefined (  ) ;^115^^^^^100^130^this.definedFunctionName = template.getReportDefined (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^115^^^^^100^130^this.definedFunctionName = template.getReportDefined (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^this.reportFunctionName =  null.getReportCall (  ) ;^116^^^^^101^131^this.reportFunctionName = template.getReportCall (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.reportFunctionExitName = template.getReportExit (  ) ;this.reportFunctionName = template.getReportCall (  ) ;^116^^^^^101^131^this.reportFunctionName = template.getReportCall (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.definedFunctionName = template.getReportDefined (  ) ;this.reportFunctionName = template.getReportCall (  ) ;^116^^^^^101^131^this.reportFunctionName = template.getReportCall (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^116^^^^^101^131^this.reportFunctionName = template.getReportCall (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^this.reportFunctionExitName =  null.getReportExit (  ) ;^117^^^^^102^132^this.reportFunctionExitName = template.getReportExit (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.appNameSetter = template.getAppNameSetter (  ) ;this.reportFunctionExitName = template.getReportExit (  ) ;^117^^^^^102^132^this.reportFunctionExitName = template.getReportExit (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.definedFunctionName = template.getReportDefined (  ) ;this.reportFunctionExitName = template.getReportExit (  ) ;^117^^^^^102^132^this.reportFunctionExitName = template.getReportExit (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.reportFunctionName = template.getReportCall (  ) ;this.reportFunctionExitName = template.getReportExit (  ) ;^117^^^^^102^132^this.reportFunctionExitName = template.getReportExit (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.reportFunctionExitName = "";this.reportFunctionExitName = template.getReportExit (  ) ;^117^^^^^102^132^this.reportFunctionExitName = template.getReportExit (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^117^^^^^102^132^this.reportFunctionExitName = template.getReportExit (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^this.appNameSetter = template .getReportExit (  )  ;^118^^^^^103^133^this.appNameSetter = template.getAppNameSetter (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^this.appNameSetter =  null.getAppNameSetter (  ) ;^118^^^^^103^133^this.appNameSetter = template.getAppNameSetter (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.reportFunctionExitName = template.getReportExit (  ) ;this.appNameSetter = template.getAppNameSetter (  ) ;^118^^^^^103^133^this.appNameSetter = template.getAppNameSetter (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.appNameStr = appNameStr;this.appNameSetter = template.getAppNameSetter (  ) ;^118^^^^^103^133^this.appNameSetter = template.getAppNameSetter (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.definedFunctionName = template.getReportDefined (  ) ;this.appNameSetter = template.getAppNameSetter (  ) ;^118^^^^^103^133^this.appNameSetter = template.getAppNameSetter (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^118^^^^^103^133^this.appNameSetter = template.getAppNameSetter (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^this.declarationsToRemove =  ImmutableList.copyOf ( null.getDeclarationToRemoveList (  )  ) ;^120^121^^^^105^135^this.declarationsToRemove = ImmutableList.copyOf ( template.getDeclarationToRemoveList (  )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^120^121^^^^105^135^this.declarationsToRemove = ImmutableList.copyOf ( template.getDeclarationToRemoveList (  )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^template .getInitList (  )   ) ;^121^^^^^106^136^template.getDeclarationToRemoveList (  )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^121^^^^^106^136^template.getDeclarationToRemoveList (  )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] Readable)   AbstractCompiler compiler FunctionNames functionNames String templateFilename String appNameStr Readable readable [VARIABLES] AbstractCompiler  compiler  boolean  StringBuilder  initCodeSourceBuilder  Builder  builder  Instrumentation  template  List  declarationsToRemove  removable  Readable  readable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  IOException  e  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^this.removable = null;^169^^^^^168^170^this.removable = removable;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] List)   String> removable [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^this.functionId =  null;^221^^^^^220^222^this.functionId = functionId;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] InstrumentFunctions$InstrumentReturns(int)   int functionId [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.functionNames = functionNames;this.functionId = functionId;^221^^^^^220^222^this.functionId = functionId;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] <init> [RETURN_TYPE] InstrumentFunctions$InstrumentReturns(int)   int functionId [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node addingRoot = null;Node initCode = null;^126^^^^^111^141^Node initCode = null;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P12_Insert_Condition]^if  ( initCode != null )  { Node initCode = null; }^126^^^^^111^141^Node initCode = null;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P6_Replace_Expression]^if  ( initCodeRoot != null && initCodeRoot.getFirstChild() != null )  {^127^^^^^112^142^if  ( !initCodeSource.isEmpty (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P6_Replace_Expression]^if  ( initCodeRoot != null )  {^127^^^^^112^142^if  ( !initCodeSource.isEmpty (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P6_Replace_Expression]^if  ( initCodeRoot.getFirstChild (  )  != null )  {^127^^^^^112^142^if  ( !initCodeSource.isEmpty (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^if  ( initCodeSource.isEmpty (  )  )  {^127^^^^^112^142^if  ( !initCodeSource.isEmpty (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P9_Replace_Statement]^if  ( !reportFunctionName.isEmpty (  )  )  {^127^^^^^112^142^if  ( !initCodeSource.isEmpty (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P9_Replace_Statement]^if  ( !definedFunctionName.isEmpty (  )  )  {^127^^^^^112^142^if  ( !initCodeSource.isEmpty (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P9_Replace_Statement]^if  ( !appNameSetter.isEmpty (  )  )  {^127^^^^^112^142^if  ( !initCodeSource.isEmpty (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P2_Replace_Operator]^if  ( initCodeRoot != null || initCodeRoot.getFirstChild (  )  != null )  {^130^^^^^115^145^if  ( initCodeRoot != null && initCodeRoot.getFirstChild (  )  != null )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P2_Replace_Operator]^if  ( initCodeRoot == null && initCodeRoot.getFirstChild (  )  != null )  {^130^^^^^115^145^if  ( initCodeRoot != null && initCodeRoot.getFirstChild (  )  != null )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P2_Replace_Operator]^if  ( initCodeRoot != null && initCodeRoot.getFirstChild (  )  == null )  {^130^^^^^115^145^if  ( initCodeRoot != null && initCodeRoot.getFirstChild (  )  != null )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^if  ( externs != null && initCodeRoot.getFirstChild (  )  != null )  {^130^^^^^115^145^if  ( initCodeRoot != null && initCodeRoot.getFirstChild (  )  != null )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P6_Replace_Expression]^if  ( initCodeRoot != null ) {^130^^^^^115^145^if  ( initCodeRoot != null && initCodeRoot.getFirstChild (  )  != null )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P6_Replace_Expression]^if  (  initCodeRoot.getFirstChild (  )  != null )  {^130^^^^^115^145^if  ( initCodeRoot != null && initCodeRoot.getFirstChild (  )  != null )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^if  ( initCodeRoot != null && initCodeRoot.newNumber (  )  != null )  {^130^^^^^115^145^if  ( initCodeRoot != null && initCodeRoot.getFirstChild (  )  != null )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^if  ( externs != true ) {^130^^^^^115^145^if  ( initCodeRoot != null && initCodeRoot.getFirstChild (  )  != null )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P15_Unwrap_Block]^initCode = initCodeRoot.removeChildren();^130^131^132^133^134^115^145^if  ( initCodeRoot != null && initCodeRoot.getFirstChild (  )  != null )  { initCode = initCodeRoot.removeChildren (  ) ; } else { return; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P16_Remove_Block]^^130^131^132^133^134^115^145^if  ( initCodeRoot != null && initCodeRoot.getFirstChild (  )  != null )  { initCode = initCodeRoot.removeChildren (  ) ; } else { return; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^initCode = externs.removeChildren (  ) ;^131^^^^^116^146^initCode = initCodeRoot.removeChildren (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^initCode = initCodeRoot.newNumber (  ) ;^131^^^^^116^146^initCode = initCodeRoot.removeChildren (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^initCode =  root.removeChildren (  ) ;^131^^^^^116^146^initCode = initCodeRoot.removeChildren (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^this.initCodeSource = initCodeSourceBuilder.toString (  ) ;initCode = initCodeRoot.removeChildren (  ) ;^131^^^^^116^146^initCode = initCodeRoot.removeChildren (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^initCode = initCodeRoot .removeChild ( initCode )  ;^131^^^^^116^146^initCode = initCodeRoot.removeChildren (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^131^^^^^116^146^initCode = initCodeRoot.removeChildren (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P3_Replace_Literal]^Node initCodeRoot = compiler.parseSyntheticCode ( templateFilename + ":init:", initCodeSource ) ;^128^129^^^^113^143^Node initCodeRoot = compiler.parseSyntheticCode ( templateFilename + ":init", initCodeSource ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node initCodeRoot = compiler.parseSyntheticCode ( line + ":init", initCodeSource ) ;^128^129^^^^113^143^Node initCodeRoot = compiler.parseSyntheticCode ( templateFilename + ":init", initCodeSource ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node initCodeRoot = compiler.parseSyntheticCode ( templateFilename + ":init", reportFunctionExitName ) ;^128^129^^^^113^143^Node initCodeRoot = compiler.parseSyntheticCode ( templateFilename + ":init", initCodeSource ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node initCodeRoot = compiler.parseSyntheticCode ( templateFilename + ":init" ) ;^128^129^^^^113^143^Node initCodeRoot = compiler.parseSyntheticCode ( templateFilename + ":init", initCodeSource ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node initCodeRoot = initCodeSource.parseSyntheticCode ( templateFilename + ":init", compiler ) ;^128^129^^^^113^143^Node initCodeRoot = compiler.parseSyntheticCode ( templateFilename + ":init", initCodeSource ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node initCodeRoot = templateFilename.parseSyntheticCode ( compiler + ":init", initCodeSource ) ;^128^129^^^^113^143^Node initCodeRoot = compiler.parseSyntheticCode ( templateFilename + ":init", initCodeSource ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node initCodeRoot = compiler.parseSyntheticCode ( initCodeSource + ":init", templateFilename ) ;^128^129^^^^113^143^Node initCodeRoot = compiler.parseSyntheticCode ( templateFilename + ":init", initCodeSource ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node initCodeRoot = compiler.getNodeForCodeInsertion ( templateFilename + ":init", initCodeSource ) ;^128^129^^^^113^143^Node initCodeRoot = compiler.parseSyntheticCode ( templateFilename + ":init", initCodeSource ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^Node initCodeRoot = compiler.parseSyntheticCode ( templateFilename + ":init", templateFilename ) ;^128^129^^^^113^143^Node initCodeRoot = compiler.parseSyntheticCode ( templateFilename + ":init", initCodeSource ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P3_Replace_Literal]^Node initCodeRoot = compiler.parseSyntheticCode ( templateFilename + ":iinit", initCodeSource ) ;^128^129^^^^113^143^Node initCodeRoot = compiler.parseSyntheticCode ( templateFilename + ":init", initCodeSource ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node initCodeRoot = compiler.parseSyntheticCode ( reportFunctionExitName + ":init", initCodeSource ) ;^128^129^^^^113^143^Node initCodeRoot = compiler.parseSyntheticCode ( templateFilename + ":init", initCodeSource ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^Node initCodeRoot = compiler.parseSyntheticCode ( templateFilename + ":init", reportFunctionName ) ;^128^129^^^^113^143^Node initCodeRoot = compiler.parseSyntheticCode ( templateFilename + ":init", initCodeSource ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^128^129^^^^113^143^Node initCodeRoot = compiler.parseSyntheticCode ( templateFilename + ":init", initCodeSource ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^if  ( initCode != null && initCodeRoot.getFirstChild (  )  != null )  {^130^^^^^115^145^if  ( initCodeRoot != null && initCodeRoot.getFirstChild (  )  != null )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^initCode = initCode.removeChildren (  ) ;^131^^^^^116^146^initCode = initCodeRoot.removeChildren (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^if  ( initCodeRoot != null && initCodeRoot .removeFirstChild (  )   != null )  {^130^^^^^115^145^if  ( initCodeRoot != null && initCodeRoot.getFirstChild (  )  != null )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^if  ( initCodeRoot != true && initCodeRoot.getFirstChild (  )  != true )  {^130^^^^^115^145^if  ( initCodeRoot != null && initCodeRoot.getFirstChild (  )  != null )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P3_Replace_Literal]^Node initCodeRoot = compiler.parseSyntheticCode ( templateFilename + "init", initCodeSource ) ;^128^129^^^^113^143^Node initCodeRoot = compiler.parseSyntheticCode ( templateFilename + ":init", initCodeSource ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node initCodeRoot = compiler .reportCodeChange (  )  ;^128^129^^^^113^143^Node initCodeRoot = compiler.parseSyntheticCode ( templateFilename + ":init", initCodeSource ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^new RemoveCallback ( 4 )  ) ;^138^^^^^123^153^new RemoveCallback ( declarationsToRemove )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler, externs, new RemoveCallback ( declarationsToRemove )  ) ;^137^138^^^^122^152^NodeTraversal.traverse ( compiler, root, new RemoveCallback ( declarationsToRemove )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler,  new RemoveCallback ( declarationsToRemove )  ) ;^137^138^^^^122^152^NodeTraversal.traverse ( compiler, root, new RemoveCallback ( declarationsToRemove )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^NodeTraversal.traverse (  root, new RemoveCallback ( declarationsToRemove )  ) ;^137^138^^^^122^152^NodeTraversal.traverse ( compiler, root, new RemoveCallback ( declarationsToRemove )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler, declarationsToRemove, new RemoveCallback ( root )  ) ;^137^138^^^^122^152^NodeTraversal.traverse ( compiler, root, new RemoveCallback ( declarationsToRemove )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^NodeTraversal.traverse ( declarationsToRemove, root, new RemoveCallback ( compiler )  ) ;^137^138^^^^122^152^NodeTraversal.traverse ( compiler, root, new RemoveCallback ( declarationsToRemove )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^NodeTraversal.traverse ( compiler, root, new RemoveCallback ( null )  ) ;^137^138^^^^122^152^NodeTraversal.traverse ( compiler, root, new RemoveCallback ( declarationsToRemove )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^137^138^^^^122^152^NodeTraversal.traverse ( compiler, root, new RemoveCallback ( declarationsToRemove )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P4_Replace_Constructor]^NodeTraversal.traverse ( compiler, root, NodeTraversal.traverse ( compiler, root,  new InstrumentReturns ( id )   ) ;^139^^^^^124^154^NodeTraversal.traverse ( compiler, root, new InstrumentCallback (  )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler, externs, new InstrumentCallback (  )  ) ;^139^^^^^124^154^NodeTraversal.traverse ( compiler, root, new InstrumentCallback (  )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler,  new InstrumentCallback (  )  ) ;^139^^^^^124^154^NodeTraversal.traverse ( compiler, root, new InstrumentCallback (  )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^NodeTraversal.traverse (  root, new InstrumentCallback (  )  ) ;^139^^^^^124^154^NodeTraversal.traverse ( compiler, root, new InstrumentCallback (  )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^NodeTraversal.traverse ( root, compiler, new InstrumentCallback (  )  ) ;^139^^^^^124^154^NodeTraversal.traverse ( compiler, root, new InstrumentCallback (  )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^NodeTraversal.traverse ( compiler, initCodeRoot, new InstrumentCallback (  )  ) ;^139^^^^^124^154^NodeTraversal.traverse ( compiler, root, new InstrumentCallback (  )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^139^^^^^124^154^NodeTraversal.traverse ( compiler, root, new InstrumentCallback (  )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^NodeTraversal.traverse ( compiler, body, this ) ;NodeTraversal.traverse ( compiler, root, new InstrumentCallback (  )  ) ;^139^^^^^124^154^NodeTraversal.traverse ( compiler, root, new InstrumentCallback (  )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P9_Replace_Statement]^if  ( !initCodeSource.isEmpty (  )  )  {^141^^^^^126^156^if  ( !appNameSetter.isEmpty (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, templateFilename ) , Node.newString ( appNameStr )  ) ;^142^143^144^^^127^157^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( reportFunctionName )  ) ;^142^143^144^^^127^157^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node call = new Node ( Token. Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;^142^143^144^^^127^157^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME ) , Node.newString ( appNameStr )  ) ;^142^143^144^^^127^157^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, appNameStr ) , Node.newString ( appNameSetter )  ) ;^142^143^144^^^127^157^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node call = new Node ( Token.CALL, Node.getString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;^142^143^144^^^127^157^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node call = new Node ( Token.CALL, Node .getString (  )  , Node^142^143^144^^^127^157^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^Node call = new Node ( Token.CALL, Node.getString ( Token.NAME, appNameSetter ) , Node.newString ( templateFilename )  ) ;^142^143^144^^^127^157^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node expr = new Node ( Token.EXPR_RESULT ) ;^145^^^^^130^160^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node expr = new Node ( Token. call ) ;^145^^^^^130^160^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^Node expr = new Node ( Token.EXPR_RESULT, initCode ) ;^145^^^^^130^160^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node expr = new Node ( Token.EXPR_RESULT, root ) ;^145^^^^^130^160^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node expr = NodeUtil.newExpr ( call ) ;Node expr = new Node ( Token.EXPR_RESULT, call ) ;^145^^^^^130^160^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node addingRoot = compiler .reportCodeChange (  )  ;^147^^^^^132^162^Node addingRoot = compiler.getNodeForCodeInsertion ( null ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node.newString ( Token.NAME, reportFunctionName ) , Node.newString ( appNameStr )  ) ;^143^144^^^^128^158^Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node.getString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;^143^144^^^^128^158^Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^143^144^^^^128^158^Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;^143^144^^^^128^158^Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;^143^144^^^^128^158^Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;^143^144^^^^128^158^Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node.getString ( appNameStr )  ) ;^144^^^^^129^159^Node.newString ( appNameStr )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^Node.newString ( templateFilename )  ) ;^144^^^^^129^159^Node.newString ( appNameStr )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^144^145^^^^129^159^Node.newString ( appNameStr )  ) ; Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node.newNumber ( id )  ) ;Node.newString ( appNameStr )  ) ;^144^^^^^129^159^Node.newString ( appNameStr )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node.newNumber ( functionId )  ) ;Node.newString ( appNameStr )  ) ;^144^^^^^129^159^Node.newString ( appNameStr )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^147^^^^^132^162^Node addingRoot = compiler.getNodeForCodeInsertion ( null ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot = compiler.getNodeForCodeInsertion ( module ) ;Node addingRoot = compiler.getNodeForCodeInsertion ( null ) ;^147^^^^^132^162^Node addingRoot = compiler.getNodeForCodeInsertion ( null ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^addingRoot.addChildrenToFront ( root ) ;^148^^^^^133^163^addingRoot.addChildrenToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^addingRoot.addChildBefore ( expr ) ;^148^^^^^133^163^addingRoot.addChildrenToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^addingRoot.addChildBefore ( initCodeRoot ) ;^148^^^^^133^163^addingRoot.addChildrenToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^148^149^^^^133^163^addingRoot.addChildrenToFront ( expr ) ; compiler.reportCodeChange (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^body.addChildToFront ( expr ) ;addingRoot.addChildrenToFront ( expr ) ;^148^^^^^133^163^addingRoot.addChildrenToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot.addChildToFront ( expr ) ;addingRoot.addChildrenToFront ( expr ) ;^148^^^^^133^163^addingRoot.addChildrenToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^n.addChildToFront ( call ) ;addingRoot.addChildrenToFront ( expr ) ;^148^^^^^133^163^addingRoot.addChildrenToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot.addChildrenToFront ( initCode ) ;addingRoot.addChildrenToFront ( expr ) ;^148^^^^^133^163^addingRoot.addChildrenToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot.addChildBefore ( expr, beforeChild ) ;addingRoot.addChildrenToFront ( expr ) ;^148^^^^^133^163^addingRoot.addChildrenToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^body.addChildToBack ( expr ) ;addingRoot.addChildrenToFront ( expr ) ;^148^^^^^133^163^addingRoot.addChildrenToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^compiler.report (  ) ;^149^^^^^134^164^compiler.reportCodeChange (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^149^^^^^134^164^compiler.reportCodeChange (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( templateFilename )  ) ;^142^143^144^^^127^157^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^Node expr = new Node ( Token.EXPR_RESULT, initCodeRoot ) ;^145^^^^^130^160^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( reportFunctionExitName )  ) ;^142^143^144^^^127^157^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^Node call = new Node ( Token.CALL, Node.getString ( Token.NAME, templateFilename ) , Node.newString ( appNameStr )  ) ;^142^143^144^^^127^157^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node.newString ( Token.NAME, templateFilename ) , Node.newString ( appNameStr )  ) ;^143^144^^^^128^158^Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^Node.getString ( Token.NAME, templateFilename ) , Node.newString ( appNameStr )  ) ;^143^144^^^^128^158^Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^Node .getString (  )   ) ;^144^^^^^129^159^Node.newString ( appNameStr )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^147^148^^^^132^162^Node addingRoot = compiler.getNodeForCodeInsertion ( null ) ; addingRoot.addChildrenToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^addingRoot .addChildToFront ( initCode )  ;^148^^^^^133^163^addingRoot.addChildrenToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^148^^^^^133^163^addingRoot.addChildrenToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P2_Replace_Operator]^if  ( initCode == null )  {^152^^^^^137^167^if  ( initCode != null )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^if  ( root != null )  {^152^^^^^137^167^if  ( initCode != null )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^if  ( initCode != false )  {^152^^^^^137^167^if  ( initCode != null )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P9_Replace_Statement]^if  ( returnRhs != null )  {^152^^^^^137^167^if  ( initCode != null )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P15_Unwrap_Block]^com.google.javascript.rhino.Node addingRoot = compiler.getNodeForCodeInsertion(null); addingRoot.addChildrenToFront(initCode); compiler.reportCodeChange();^152^153^154^155^156^137^167^if  ( initCode != null )  { Node addingRoot = compiler.getNodeForCodeInsertion ( null ) ; addingRoot.addChildrenToFront ( initCode ) ; compiler.reportCodeChange (  ) ; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P16_Remove_Block]^^152^153^154^155^156^137^167^if  ( initCode != null )  { Node addingRoot = compiler.getNodeForCodeInsertion ( null ) ; addingRoot.addChildrenToFront ( initCode ) ; compiler.reportCodeChange (  ) ; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node addingRoot = compiler .reportCodeChange (  )  ;^153^^^^^138^168^Node addingRoot = compiler.getNodeForCodeInsertion ( null ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^153^^^^^138^168^Node addingRoot = compiler.getNodeForCodeInsertion ( null ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot = compiler.getNodeForCodeInsertion ( module ) ;Node addingRoot = compiler.getNodeForCodeInsertion ( null ) ;^153^^^^^138^168^Node addingRoot = compiler.getNodeForCodeInsertion ( null ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^addingRoot.addChildrenToFront ( root ) ;^154^^^^^139^169^addingRoot.addChildrenToFront ( initCode ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^addingRoot.addChildBefore ( initCode ) ;^154^^^^^139^169^addingRoot.addChildrenToFront ( initCode ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^addingRoot .addChildToFront ( root )  ;^154^^^^^139^169^addingRoot.addChildrenToFront ( initCode ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^154^155^^^^139^169^addingRoot.addChildrenToFront ( initCode ) ; compiler.reportCodeChange (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^body.addChildToFront ( expr ) ;addingRoot.addChildrenToFront ( initCode ) ;^154^^^^^139^169^addingRoot.addChildrenToFront ( initCode ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot.addChildToFront ( expr ) ;addingRoot.addChildrenToFront ( initCode ) ;^154^^^^^139^169^addingRoot.addChildrenToFront ( initCode ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^n.addChildToFront ( call ) ;addingRoot.addChildrenToFront ( initCode ) ;^154^^^^^139^169^addingRoot.addChildrenToFront ( initCode ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot.addChildrenToFront ( expr ) ;addingRoot.addChildrenToFront ( initCode ) ;^154^^^^^139^169^addingRoot.addChildrenToFront ( initCode ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot.addChildBefore ( expr, beforeChild ) ;addingRoot.addChildrenToFront ( initCode ) ;^154^^^^^139^169^addingRoot.addChildrenToFront ( initCode ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^compiler.report (  ) ;^155^^^^^140^170^compiler.reportCodeChange (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^155^^^^^140^170^compiler.reportCodeChange (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^addingRoot .addChildToFront ( call )  ;^154^^^^^139^169^addingRoot.addChildrenToFront ( initCode ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  Node  addingRoot  call  expr  externs  initCode  initCodeRoot  root  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^if  ( NodeUtil.isFunctionDeclaration ( n )  )  {^174^^^^^173^182^if  ( NodeUtil.isVarDeclaration ( n )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P15_Unwrap_Block]^if (removable.contains(n.getString())) {    parent.removeChild(n);    if (!(parent.hasChildren())) {        parent.getParent().removeChild(parent);    }};^174^175^176^177^178^173^182^if  ( NodeUtil.isVarDeclaration ( n )  )  { if  ( removable.contains ( n.getString (  )  )  )  { parent.removeChild ( n ) ; if  ( !parent.hasChildren (  )  )  { parent.getParent (  ) .removeChild ( parent ) ; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P16_Remove_Block]^^174^175^176^177^178^173^182^if  ( NodeUtil.isVarDeclaration ( n )  )  { if  ( removable.contains ( n.getString (  )  )  )  { parent.removeChild ( n ) ; if  ( !parent.hasChildren (  )  )  { parent.getParent (  ) .removeChild ( parent ) ; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P13_Insert_Block]^if  ( removable.contains ( n.getString (  )  )  )  {     parent.removeChild ( n ) ;     if  ( ! ( parent.hasChildren (  )  )  )  {         parent.getParent (  ) .removeChild ( parent ) ;     } }^174^^^^^173^182^[Delete]^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^if  ( n.contains ( removable.getString (  )  )  )  {^175^^^^^173^182^if  ( removable.contains ( n.getString (  )  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^if  ( removable.contains ( n.newNumber (  )  )  )  {^175^^^^^173^182^if  ( removable.contains ( n.getString (  )  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P15_Unwrap_Block]^parent.removeChild(n); if (!(parent.hasChildren())) {    parent.getParent().removeChild(parent);};^175^176^177^178^179^173^182^if  ( removable.contains ( n.getString (  )  )  )  { parent.removeChild ( n ) ; if  ( !parent.hasChildren (  )  )  { parent.getParent (  ) .removeChild ( parent ) ; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P16_Remove_Block]^^175^176^177^178^179^173^182^if  ( removable.contains ( n.getString (  )  )  )  { parent.removeChild ( n ) ; if  ( !parent.hasChildren (  )  )  { parent.getParent (  ) .removeChild ( parent ) ; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P13_Insert_Block]^if  ( isVarDeclaration ( n )  )  {     if  ( removable.contains ( n.getString (  )  )  )  {         parent.removeChild ( n ) ;         if  ( ! ( parent.hasChildren (  )  )  )  {             parent.getParent (  ) .removeChild ( parent ) ;         }     } }^175^^^^^173^182^[Delete]^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^if  ( !parent.newNumber (  )  )  {^177^^^^^173^182^if  ( !parent.hasChildren (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P15_Unwrap_Block]^parent.getParent().removeChild(parent);^177^178^179^^^173^182^if  ( !parent.hasChildren (  )  )  { parent.getParent (  ) .removeChild ( parent ) ; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P16_Remove_Block]^^177^178^179^^^173^182^if  ( !parent.hasChildren (  )  )  { parent.getParent (  ) .removeChild ( parent ) ; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^parent.getParent (  ) .removeChild ( n ) ;^178^^^^^173^182^parent.getParent (  ) .removeChild ( parent ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^parent.getParent (  )  .removeChildren (  )  ;^178^^^^^173^182^parent.getParent (  ) .removeChild ( parent ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^parent.newNumber (  ) .removeChild ( parent ) ;^178^^^^^173^182^parent.getParent (  ) .removeChild ( parent ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^parent .getString (  )  .removeChild ( parent ) ;^178^^^^^173^182^parent.getParent (  ) .removeChild ( parent ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^parent .getString (  )  .removeChild ( n ) ;^178^^^^^173^182^parent.getParent (  ) .removeChild ( parent ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^178^^^^^173^182^parent.getParent (  ) .removeChild ( parent ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^parent.addChildBefore ( n ) ;^176^^^^^173^182^parent.removeChild ( n ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^176^^^^^173^182^parent.removeChild ( n ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^parent.getParent (  ) .removeChild ( parent ) ;parent.removeChild ( n ) ;^176^^^^^173^182^parent.removeChild ( n ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^if  ( !parent .removeChildren (  )   )  {^177^^^^^173^182^if  ( !parent.hasChildren (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^parent.newNumber (  ) .removeChild ( n ) ;^178^^^^^173^182^parent.getParent (  ) .removeChild ( parent ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^if  ( removable.contains ( n .newString ( reportFunctionExitName )   )  )  {^175^^^^^173^182^if  ( removable.contains ( n.getString (  )  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^if  ( removable.contains ( parent.newNumber (  )  )  )  {^175^^^^^173^182^if  ( removable.contains ( n.getString (  )  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^if  ( removable.contains ( parent.getString (  )  )  )  {^175^^^^^173^182^if  ( removable.contains ( n.getString (  )  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^parent .removeChildren (  )  ;^176^^^^^173^182^parent.removeChild ( n ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^if  ( null.contains ( n.getString (  )  )  )  {^175^^^^^173^182^if  ( removable.contains ( n.getString (  )  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^if  ( NodeUtil.isVarDeclaration ( parent )  )  {^174^^^^^173^182^if  ( NodeUtil.isVarDeclaration ( n )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^if  ( NodeUtil.isFunctionDeclaration ( parent )  )  {^174^^^^^173^182^if  ( NodeUtil.isVarDeclaration ( n )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  n  parent  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler, expr, this ) ;^228^^^^^227^236^NodeTraversal.traverse ( compiler, body, this ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler,  this ) ;^228^^^^^227^236^NodeTraversal.traverse ( compiler, body, this ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^NodeTraversal.traverse (  body, this ) ;^228^^^^^227^236^NodeTraversal.traverse ( compiler, body, this ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^NodeTraversal.traverse ( body, compiler, this ) ;^228^^^^^227^236^NodeTraversal.traverse ( compiler, body, this ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^NodeTraversal .traverse ( compiler , body , 0 )  ;^228^^^^^227^236^NodeTraversal.traverse ( compiler, body, this ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^228^^^^^227^236^NodeTraversal.traverse ( compiler, body, this ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^if  ( !allPathsReturn ( expr )  )  {^230^^^^^227^236^if  ( !allPathsReturn ( body )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^if  ( !process ( body )  )  {^230^^^^^227^236^if  ( !allPathsReturn ( body )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P15_Unwrap_Block]^com.google.javascript.rhino.Node call = newReportFunctionExitNode(); com.google.javascript.rhino.Node expr = new com.google.javascript.rhino.Node(com.google.javascript.rhino.Token.EXPR_RESULT, call); body.addChildToBack(expr); compiler.reportCodeChange();^230^231^232^233^234^227^236^if  ( !allPathsReturn ( body )  )  { Node call = newReportFunctionExitNode (  ) ; Node expr = new Node ( Token.EXPR_RESULT, call ) ; body.addChildToBack ( expr ) ; compiler.reportCodeChange (  ) ; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P16_Remove_Block]^^230^231^232^233^234^227^236^if  ( !allPathsReturn ( body )  )  { Node call = newReportFunctionExitNode (  ) ; Node expr = new Node ( Token.EXPR_RESULT, call ) ; body.addChildToBack ( expr ) ; compiler.reportCodeChange (  ) ; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node expr = new Node ( Token.EXPR_RESULT, expr ) ;^232^^^^^227^236^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node expr = new Node ( Token.EXPR_RESULT ) ;^232^^^^^227^236^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node expr = new Node ( Token. call ) ;^232^^^^^227^236^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node expr = new Node ( Token.EXPR_RESULT, body ) ;^232^^^^^227^236^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node expr = NodeUtil.newExpr ( call ) ;Node expr = new Node ( Token.EXPR_RESULT, call ) ;^232^^^^^227^236^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^231^^^^^227^236^Node call = newReportFunctionExitNode (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^body.addChildToBack ( call ) ;^233^^^^^227^236^body.addChildToBack ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^body.addChildBefore ( expr ) ;^233^^^^^227^236^body.addChildToBack ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^body .addChildToFront ( body )  ;^233^^^^^227^236^body.addChildToBack ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^body.addChildBefore ( call ) ;^233^^^^^227^236^body.addChildToBack ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^233^234^^^^227^236^body.addChildToBack ( expr ) ; compiler.reportCodeChange (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^body.addChildToFront ( expr ) ;body.addChildToBack ( expr ) ;^233^^^^^227^236^body.addChildToBack ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot.addChildToFront ( expr ) ;body.addChildToBack ( expr ) ;^233^^^^^227^236^body.addChildToBack ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^n.addChildToFront ( call ) ;body.addChildToBack ( expr ) ;^233^^^^^227^236^body.addChildToBack ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot.addChildrenToFront ( expr ) ;body.addChildToBack ( expr ) ;^233^^^^^227^236^body.addChildToBack ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^call.addChildToBack ( returnRhs ) ;body.addChildToBack ( expr ) ;^233^^^^^227^236^body.addChildToBack ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^compiler.report (  ) ;^234^^^^^227^236^compiler.reportCodeChange (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^234^^^^^227^236^compiler.reportCodeChange (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] AbstractCompiler  compiler  boolean  Node  body  call  expr  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P2_Replace_Operator]^if  ( n.getType (  )  < Token.RETURN )  {^240^^^^^239^251^if  ( n.getType (  )  != Token.RETURN )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^if  ( returnRhs.getType (  )  != Token.RETURN )  {^240^^^^^239^251^if  ( n.getType (  )  != Token.RETURN )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^if  ( n.newNumber (  )  != Token.RETURN )  {^240^^^^^239^251^if  ( n.getType (  )  != Token.RETURN )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^if  ( n .getString (  )   != Token.RETURN )  {^240^^^^^239^251^if  ( n.getType (  )  != Token.RETURN )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^if  ( n.getType (  )  != Token.null )  {^240^^^^^239^251^if  ( n.getType (  )  != Token.RETURN )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P9_Replace_Statement]^if  ( n.getType (  )  != Token.FUNCTION )  {^240^^^^^239^251^if  ( n.getType (  )  != Token.RETURN )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P15_Unwrap_Block]^return ;^240^241^242^^^239^251^if  ( n.getType (  )  != Token.RETURN )  { return; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P16_Remove_Block]^^240^241^242^^^239^251^if  ( n.getType (  )  != Token.RETURN )  { return; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P13_Insert_Block]^if  (  ( n.getType (  )  )  !=  ( RETURN )  )  {     return false; }^240^^^^^239^251^[Delete]^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P13_Insert_Block]^if  (  ( n.getType (  )  )  !=  ( FUNCTION )  )  {     return ; }^240^^^^^239^251^[Delete]^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^if  ( returnRhs.newNumber (  )  != Token.RETURN )  {^240^^^^^239^251^if  ( n.getType (  )  != Token.RETURN )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^244^245^^^^239^251^Node call = newReportFunctionExitNode (  ) ; Node returnRhs = n.removeFirstChild (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node returnRhs = parent.removeFirstChild (  ) ;^245^^^^^239^251^Node returnRhs = n.removeFirstChild (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node returnRhs = n.newNumber (  ) ;^245^^^^^239^251^Node returnRhs = n.removeFirstChild (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node returnRhs = returnRhs.removeFirstChild (  ) ;^245^^^^^239^251^Node returnRhs = n.removeFirstChild (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node returnRhs = n .getFirstChild (  )  ;^245^^^^^239^251^Node returnRhs = n.removeFirstChild (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^245^^^^^239^251^Node returnRhs = n.removeFirstChild (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P2_Replace_Operator]^if  ( returnRhs == null )  {^246^^^^^239^251^if  ( returnRhs != null )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^if  ( parent != null )  {^246^^^^^239^251^if  ( returnRhs != null )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^if  ( returnRhs != false )  {^246^^^^^239^251^if  ( returnRhs != null )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P9_Replace_Statement]^if  ( initCode != null )  {^246^^^^^239^251^if  ( returnRhs != null )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P15_Unwrap_Block]^call.addChildToBack(returnRhs);^246^247^248^^^239^251^if  ( returnRhs != null )  { call.addChildToBack ( returnRhs ) ; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P16_Remove_Block]^^246^247^248^^^239^251^if  ( returnRhs != null )  { call.addChildToBack ( returnRhs ) ; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^call.addChildToBack ( parent ) ;^247^^^^^239^251^call.addChildToBack ( returnRhs ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^call.addChildBefore ( returnRhs ) ;^247^^^^^239^251^call.addChildToBack ( returnRhs ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^247^^^^^239^251^call.addChildToBack ( returnRhs ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^n.addChildToFront ( returnRhs ) ;^249^^^^^239^251^n.addChildToFront ( call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^n.addChildBefore ( call ) ;^249^^^^^239^251^n.addChildToFront ( call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^n .addChildrenToFront ( parent )  ;^249^^^^^239^251^n.addChildToFront ( call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^n.addChildBefore ( returnRhs ) ;^249^^^^^239^251^n.addChildToFront ( call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^249^^^^^239^251^n.addChildToFront ( call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^body.addChildToFront ( expr ) ;n.addChildToFront ( call ) ;^249^^^^^239^251^n.addChildToFront ( call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot.addChildToFront ( expr ) ;n.addChildToFront ( call ) ;^249^^^^^239^251^n.addChildToFront ( call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot.addChildrenToFront ( initCode ) ;n.addChildToFront ( call ) ;^249^^^^^239^251^n.addChildToFront ( call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot.addChildrenToFront ( expr ) ;n.addChildToFront ( call ) ;^249^^^^^239^251^n.addChildToFront ( call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^body.addChildToBack ( expr ) ;n.addChildToFront ( call ) ;^249^^^^^239^251^n.addChildToFront ( call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^compiler.report (  ) ;^250^^^^^239^251^compiler.reportCodeChange (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^250^^^^^239^251^compiler.reportCodeChange (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  call  n  parent  returnRhs  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^return new Node ( Token.CALL, Node.newString ( Token.NAME, templateFilename ) , Node.newNumber ( functionId )  ) ;^254^255^256^^^253^257^return new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^return new Node ( Token. Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^254^255^256^^^253^257^return new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^return new Node ( Token.CALL, Node.newString ( Token.NAME ) , Node.newNumber ( functionId )  ) ;^254^255^256^^^253^257^return new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^return new Node ( Token.CALL, Node.newString ( Token.NAME, functionId ) , Node.newNumber ( reportFunctionExitName )  ) ;^254^255^256^^^253^257^return new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^return new Node ( Token.CALL, Node.getString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^254^255^256^^^253^257^return new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^return new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionExitName ) , Node.getString ( functionId )  ) ;^254^255^256^^^253^257^return new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^return new Node ( Token.CALL, Node.newString ( Token.NAME, line ) , Node.newNumber ( functionId )  ) ;^254^255^256^^^253^257^return new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^return new Node ( Token.CALL, Node .getString (  )  , Node.newNumber ( functionId )  ) ;^254^255^256^^^253^257^return new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^return new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionExitName ) , Node .newString ( appNameSetter )   ) ;^254^255^256^^^253^257^return new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( functionId )  ) ;^255^256^^^^253^257^Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node.getString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^255^256^^^^253^257^Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node .getString (  )  , Node.newNumber ( functionId )  ) ;^255^256^^^^253^257^Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^Node.getString ( Token.NAME, templateFilename ) , Node.newNumber ( functionId )  ) ;^255^256^^^^253^257^Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^255^256^^^^253^257^Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^255^256^^^^253^257^Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^255^256^^^^253^257^Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^255^256^^^^253^257^Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node.getString ( functionId )  ) ;^256^^^^^253^257^Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node .newString ( line )   ) ;^256^^^^^253^257^Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^Node .newString ( reportFunctionExitName )   ) ;^256^^^^^253^257^Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^256^^^^^253^257^Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node.newNumber ( id )  ) ;Node.newNumber ( functionId )  ) ;^256^^^^^253^257^Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node.newString ( appNameStr )  ) ;Node.newNumber ( functionId )  ) ;^256^^^^^253^257^Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] AbstractCompiler  compiler  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  boolean  int  functionId  FunctionNames  functionNames  
[P3_Replace_Literal]^ControlFlowAnalysis cfa = new ControlFlowAnalysis ( compiler, true ) ;^264^^^^^262^277^ControlFlowAnalysis cfa = new ControlFlowAnalysis ( compiler, false ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^cfa.process ( null, returnPathsParent ) ;^265^^^^^262^277^cfa.process ( null, block ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^cfa.process ( null ) ;^265^^^^^262^277^cfa.process ( null, block ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^265^266^^^^262^277^cfa.process ( null, block ) ; ControlFlowGraph<Node> cfg = cfa.getCfg (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^ControlFlowGraph<Node> cfg = cfa .process ( returnPathsParent , n )  ;^266^^^^^262^277^ControlFlowGraph<Node> cfg = cfa.getCfg (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^ControlFlowGraph<Node> cfg = cfa .process ( block , returnPathsParent )  ;^266^^^^^262^277^ControlFlowGraph<Node> cfg = cfa.getCfg (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^266^^^^^262^277^ControlFlowGraph<Node> cfg = cfa.getCfg (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node returnPathsParent = cfg.getImplicitReturn (  ) .removeChild (  ) ;^268^^^^^262^277^Node returnPathsParent = cfg.getImplicitReturn (  ) .getValue (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node returnPathsParent = cfg.getImplicitReturn (  )  .getNext (  )  ;^268^^^^^262^277^Node returnPathsParent = cfg.getImplicitReturn (  ) .getValue (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node returnPathsParent = cfg.getDirectedPredNodes (  ) .getValue (  ) ;^268^^^^^262^277^Node returnPathsParent = cfg.getImplicitReturn (  ) .getValue (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^Node returnPathsParent = 3.getImplicitReturn (  ) .getValue (  ) ;^268^^^^^262^277^Node returnPathsParent = cfg.getImplicitReturn (  ) .getValue (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^268^^^^^262^277^Node returnPathsParent = cfg.getImplicitReturn (  ) .getValue (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P2_Replace_Operator]^if  ( n.getType (  )  <= Token.RETURN )  {^272^^^^^262^277^if  ( n.getType (  )  != Token.RETURN )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^if  ( returnPathsParent.getType (  )  != Token.RETURN )  {^272^^^^^262^277^if  ( n.getType (  )  != Token.RETURN )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^if  ( n.newNumber (  )  != Token.RETURN )  {^272^^^^^262^277^if  ( n.getType (  )  != Token.RETURN )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P9_Replace_Statement]^if  ( n.getType (  )  != Token.FUNCTION )  {^272^^^^^262^277^if  ( n.getType (  )  != Token.RETURN )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P15_Unwrap_Block]^return false;^272^273^274^^^262^277^if  ( n.getType (  )  != Token.RETURN )  { return false; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P16_Remove_Block]^^272^273^274^^^262^277^if  ( n.getType (  )  != Token.RETURN )  { return false; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P13_Insert_Block]^if  (  ( n.getType (  )  )  !=  ( RETURN )  )  {     return ; }^272^^^^^262^277^[Delete]^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P13_Insert_Block]^if  (  ( n.getType (  )  )  !=  ( FUNCTION )  )  {     return ; }^272^^^^^262^277^[Delete]^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P3_Replace_Literal]^return true;^273^^^^^262^277^return false;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P5_Replace_Variable]^cfg.getDirectedPredNodes ( n )  )  {^270^^^^^262^277^cfg.getDirectedPredNodes ( returnPathsParent )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P8_Replace_Mix]^cfg .getImplicitReturn (  )   )  {^270^^^^^262^277^cfg.getDirectedPredNodes ( returnPathsParent )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^270^271^^^^262^277^cfg.getDirectedPredNodes ( returnPathsParent )  )  { Node n = pred.getValue (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node n = pred .getNext (  )  ;^271^^^^^262^277^Node n = pred.getValue (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P14_Delete_Statement]^^271^^^^^262^277^Node n = pred.getValue (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P3_Replace_Literal]^return false;^276^^^^^262^277^return true;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] AbstractCompiler  compiler  ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  FunctionNames  functionNames  
[P2_Replace_Operator]^if  ( n.getType (  )  <= Token.FUNCTION )  {^283^^^^^268^298^if  ( n.getType (  )  != Token.FUNCTION )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^if  ( parent.getType (  )  != Token.FUNCTION )  {^283^^^^^268^298^if  ( n.getType (  )  != Token.FUNCTION )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^if  ( n.getType (  )  != Token.null )  {^283^^^^^268^298^if  ( n.getType (  )  != Token.FUNCTION )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^if  ( n.newNumber (  )  != Token.FUNCTION )  {^283^^^^^268^298^if  ( n.getType (  )  != Token.FUNCTION )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P9_Replace_Statement]^if  ( n.getType (  )  != Token.RETURN )  {^283^^^^^268^298^if  ( n.getType (  )  != Token.FUNCTION )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P15_Unwrap_Block]^return ;^283^284^285^^^268^298^if  ( n.getType (  )  != Token.FUNCTION )  { return; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P16_Remove_Block]^^283^284^285^^^268^298^if  ( n.getType (  )  != Token.FUNCTION )  { return; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P13_Insert_Block]^if  (  ( n.getType (  )  )  !=  ( RETURN )  )  {     return ; }^283^^^^^268^298^[Delete]^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P13_Insert_Block]^if  (  ( n.getType (  )  )  !=  ( RETURN )  )  {     return false; }^283^^^^^268^298^[Delete]^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P1_Replace_Type]^long  id = functionNames.getFunctionId ( n ) ;^287^^^^^272^302^int id = functionNames.getFunctionId ( n ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^int id = functionNames.getFunctionId ( call ) ;^287^^^^^272^302^int id = functionNames.getFunctionId ( n ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^int id = n.getFunctionId ( functionNames ) ;^287^^^^^272^302^int id = functionNames.getFunctionId ( n ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^int id = functionNames.getFunctionId ( expr ) ;^287^^^^^272^302^int id = functionNames.getFunctionId ( n ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^int id = functionNames.getFunctionId ( parent ) ;^287^^^^^272^302^int id = functionNames.getFunctionId ( n ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^287^^^^^272^302^int id = functionNames.getFunctionId ( n ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P2_Replace_Operator]^if  ( id <= 0 )  {^288^^^^^273^303^if  ( id < 0 )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P3_Replace_Literal]^if  ( id < -7 )  {^288^^^^^273^303^if  ( id < 0 )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^if  ( type < 0 )  {^288^^^^^273^303^if  ( id < 0 )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^if  ( id < 2 )  {^288^^^^^273^303^if  ( id < 0 )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P15_Unwrap_Block]^return ;^288^289^290^291^^273^303^if  ( id < 0 )  {  return; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P16_Remove_Block]^^288^289^290^291^^273^303^if  ( id < 0 )  {  return; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^if  ( reportFunctionName.isEmpty (  )  )  {^293^^^^^278^308^if  ( !reportFunctionName.isEmpty (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P9_Replace_Statement]^if  ( !initCodeSource.isEmpty (  )  )  {^293^^^^^278^308^if  ( !reportFunctionName.isEmpty (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P9_Replace_Statement]^if  ( !definedFunctionName.isEmpty (  )  )  {^293^^^^^278^308^if  ( !reportFunctionName.isEmpty (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P9_Replace_Statement]^if  ( !reportFunctionExitName.isEmpty (  )  )  {^293^^^^^278^308^if  ( !reportFunctionName.isEmpty (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, line ) , Node.newNumber ( id )  ) ;^295^296^297^^^280^310^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node call = new Node ( Token. Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^295^296^297^^^280^310^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME ) , Node.newNumber ( id )  ) ;^295^296^297^^^280^310^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, id ) , Node.newNumber ( reportFunctionName )  ) ;^295^296^297^^^280^310^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node call = new Node ( Token.CALL, Node.getString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^295^296^297^^^280^310^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node.newString ( id )  ) ;^295^296^297^^^280^310^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node.newString ( type )  ) ;^295^296^297^^^280^310^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node expr = new Node ( Token.EXPR_RESULT, n ) ;^298^^^^^283^313^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node expr = new Node ( Token.EXPR_RESULT ) ;^298^^^^^283^313^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node expr = new Node ( Token. call ) ;^298^^^^^283^313^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^Node expr = new Node ( Token.EXPR_RESULT, expr ) ;^298^^^^^283^313^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node body = n.getFirstChild (  ) .removeChild (  ) .getNext (  ) ;^294^^^^^279^309^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node body = n.getFirstChild (  )  .getValue (  )^294^^^^^279^309^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node body = n.newNumber (  ) .getNext (  ) .getNext (  ) ;^294^^^^^279^309^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^Node body = parent.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^294^^^^^279^309^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( type )  ) ;^295^296^297^^^280^310^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( id )  ) ;^295^296^297^^^280^310^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node .newString ( initCodeSource )   ) ;^295^296^297^^^280^310^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^Node call = new Node ( Token.CALL, Node.getString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( id )  ) ;^295^296^297^^^280^310^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node expr = new Node ( Token.EXPR_RESULT, parent ) ;^298^^^^^283^313^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node expr = NodeUtil.newExpr ( call ) ;Node expr = new Node ( Token.EXPR_RESULT, call ) ;^298^^^^^283^313^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node body = n .removeFirstChild (  )  .getNext (  ) .getNext (  ) ;^294^^^^^279^309^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^Node body = call .removeFirstChild (  )  .getNext (  ) .getNext (  ) ;^294^^^^^279^309^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^294^^^^^279^309^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^Node body = parent.getFirstChild (  ) .removeChild (  ) .getNext (  ) ;^294^^^^^279^309^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( id )  ) ;^296^297^^^^281^311^Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node.getString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^296^297^^^^281^311^Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node .getString (  )  , Node.newNumber ( id )  ) ;^296^297^^^^281^311^Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^Node.newString ( Token.NAME, line ) , Node.newNumber ( id )  ) ;^296^297^^^^281^311^Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^296^297^^^^281^311^Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^296^297^^^^281^311^Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^296^297^^^^281^311^Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^296^297^^^^281^311^Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node.newNumber ( type )  ) ;^297^^^^^282^312^Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node.newString ( id )  ) ;^297^^^^^282^312^Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^297^298^^^^282^312^Node.newNumber ( id )  ) ; Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node.newNumber ( functionId )  ) ;Node.newNumber ( id )  ) ;^297^^^^^282^312^Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node.newString ( appNameStr )  ) ;Node.newNumber ( id )  ) ;^297^^^^^282^312^Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^body.addChildToFront ( n ) ;^299^^^^^284^314^body.addChildToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^body.addChildBefore ( expr ) ;^299^^^^^284^314^body.addChildToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^body.addChildToFront ( parent ) ;^299^^^^^284^314^body.addChildToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^299^300^^^^284^314^body.addChildToFront ( expr ) ; compiler.reportCodeChange (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot.addChildToFront ( expr ) ;body.addChildToFront ( expr ) ;^299^^^^^284^314^body.addChildToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^n.addChildToFront ( call ) ;body.addChildToFront ( expr ) ;^299^^^^^284^314^body.addChildToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot.addChildrenToFront ( initCode ) ;body.addChildToFront ( expr ) ;^299^^^^^284^314^body.addChildToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot.addChildrenToFront ( expr ) ;body.addChildToFront ( expr ) ;^299^^^^^284^314^body.addChildToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^body.addChildToBack ( expr ) ;body.addChildToFront ( expr ) ;^299^^^^^284^314^body.addChildToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^call.addChildToBack ( returnRhs ) ;body.addChildToFront ( expr ) ;^299^^^^^284^314^body.addChildToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^compiler.report (  ) ;^300^^^^^285^315^compiler.reportCodeChange (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^300^^^^^285^315^compiler.reportCodeChange (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, templateFilename ) , Node.newNumber ( id )  ) ;^295^296^297^^^280^310^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node call = new Node ( Token.CALL, Node .getString (  )  , Node.newNumber ( id )  ) ;^295^296^297^^^280^310^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node body = expr.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^294^^^^^279^309^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^Node body = call.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^294^^^^^279^309^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^Node body = expr.newNumber (  ) .getNext (  ) .getNext (  ) ;^294^^^^^279^309^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node.newString ( Token.NAME, templateFilename ) , Node.newNumber ( id )  ) ;^296^297^^^^281^311^Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node .newString ( initCodeSource )   ) ;^297^^^^^282^312^Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^Node .newString ( reportFunctionName )   ) ;^297^^^^^282^312^Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^297^^^^^282^312^Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^299^^^^^284^314^body.addChildToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^if  ( reportFunctionExitName.isEmpty (  )  )  {^303^^^^^288^318^if  ( !reportFunctionExitName.isEmpty (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P9_Replace_Statement]^if  ( !reportFunctionName.isEmpty (  )  )  {^303^^^^^288^318^if  ( !reportFunctionExitName.isEmpty (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P9_Replace_Statement]^if  ( !definedFunctionName.isEmpty (  )  )  {^303^^^^^288^318^if  ( !reportFunctionExitName.isEmpty (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P15_Unwrap_Block]^com.google.javascript.rhino.Node body = n.getFirstChild().getNext().getNext(); new com.google.javascript.jscomp.InstrumentFunctions.InstrumentReturns(id).process(body);^303^304^305^306^^288^318^if  ( !reportFunctionExitName.isEmpty (  )  )  { Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ; ( new InstrumentReturns ( id )  ) .process ( body ) ; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P16_Remove_Block]^^303^304^305^306^^288^318^if  ( !reportFunctionExitName.isEmpty (  )  )  { Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ; ( new InstrumentReturns ( id )  ) .process ( body ) ; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P4_Replace_Constructor]^( (  new InstrumentCallback (  )   ) .process ( body ) ;^305^^^^^290^320^( new InstrumentReturns ( id )  ) .process ( body ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^( new InstrumentReturns ( type )  ) .process ( body ) ;^305^^^^^290^320^( new InstrumentReturns ( id )  ) .process ( body ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node body = parent.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^304^^^^^289^319^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node body = n.getFirstChild (  ) .removeChild (  ) .getNext (  ) ;^304^^^^^289^319^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node body = n.getFirstChild (  )  .getValue (  )^304^^^^^289^319^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node body = n.newNumber (  ) .getNext (  ) .getNext (  ) ;^304^^^^^289^319^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node body = n .removeFirstChild (  )  .getNext (  ) .getNext (  ) ;^304^^^^^289^319^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^304^^^^^289^319^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node body = call.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^304^^^^^289^319^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^304^305^^^^289^319^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ; ( new InstrumentReturns ( id )  ) .process ( body ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^( new InstrumentReturns ( id )  ) .process ( parent ) ;^305^^^^^290^320^( new InstrumentReturns ( id )  ) .process ( body ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^( new InstrumentReturns ( body )  ) .process ( id ) ;^305^^^^^290^320^( new InstrumentReturns ( id )  ) .process ( body ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^305^^^^^290^320^( new InstrumentReturns ( id )  ) .process ( body ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P6_Replace_Expression]^if  ( type == BLOCK )  {^308^^^^^293^323^if  ( !definedFunctionName.isEmpty (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P6_Replace_Expression]^if  ( type == SCRIPT )  {^308^^^^^293^323^if  ( !definedFunctionName.isEmpty (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P9_Replace_Statement]^if  ( !reportFunctionName.isEmpty (  )  )  {^308^^^^^293^323^if  ( !definedFunctionName.isEmpty (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P9_Replace_Statement]^if  ( !initCodeSource.isEmpty (  )  )  {^308^^^^^293^323^if  ( !definedFunctionName.isEmpty (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P9_Replace_Statement]^if  ( !reportFunctionExitName.isEmpty (  )  )  {^308^^^^^293^323^if  ( !definedFunctionName.isEmpty (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^if  ( NodeUtil.isFunctionDeclaration ( parent )  )  {^315^^^^^300^330^if  ( NodeUtil.isFunctionDeclaration ( n )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P6_Replace_Expression]^if  ( type == BLOCK )  {^315^^^^^300^330^if  ( NodeUtil.isFunctionDeclaration ( n )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P6_Replace_Expression]^if  ( type == SCRIPT )  {^315^^^^^300^330^if  ( NodeUtil.isFunctionDeclaration ( n )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^if  ( NodeUtil.isVarDeclaration ( n )  )  {^315^^^^^300^330^if  ( NodeUtil.isFunctionDeclaration ( n )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^if  ( NodeUtil .isVarDeclaration ( ancestor )   )  {^315^^^^^300^330^if  ( NodeUtil.isFunctionDeclaration ( n )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P2_Replace_Operator]^if  ( type == Token.BLOCK && type == Token.SCRIPT )  {^323^^^^^315^330^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P2_Replace_Operator]^if  ( type >= Token.BLOCK || type == Token.SCRIPT )  {^323^^^^^315^330^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P2_Replace_Operator]^if  ( type != Token.BLOCK || type == Token.SCRIPT )  {^323^^^^^315^330^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^if  ( id == Token.BLOCK || type == Token.SCRIPT )  {^323^^^^^315^330^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P6_Replace_Expression]^if  ( type == Token.BLOCK ) {^323^^^^^315^330^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P6_Replace_Expression]^if  (  type == Token.SCRIPT )  {^323^^^^^315^330^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P6_Replace_Expression]^if  ( type == BLOCK )  {^323^^^^^315^330^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P6_Replace_Expression]^if  ( type == SCRIPT )  {^323^^^^^315^330^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^if  ( id == Token.BLOCK ) {^323^^^^^315^330^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P15_Unwrap_Block]^addingRoot = ancestor; break;^323^324^325^326^^315^330^if  ( type == Token.BLOCK || type == Token.SCRIPT )  { addingRoot = ancestor; break; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P16_Remove_Block]^^323^324^325^326^^315^330^if  ( type == Token.BLOCK || type == Token.SCRIPT )  { addingRoot = ancestor; break; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^addingRoot = expr;^324^^^^^315^330^addingRoot = ancestor;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^addingRoot =  parent;^324^^^^^315^330^addingRoot = ancestor;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^beforeChild = ancestor;addingRoot = ancestor;^324^^^^^315^330^addingRoot = ancestor;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^addingRoot =  null;^324^^^^^315^330^addingRoot = ancestor;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^beforeChild = parent;^327^^^^^315^330^beforeChild = ancestor;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot = ancestor;beforeChild = ancestor;^327^^^^^315^330^beforeChild = ancestor;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node beforeChild = parent;^320^^^^^315^330^Node beforeChild = n;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P1_Replace_Type]^short  type = ancestor.getType (  ) ;^322^^^^^315^330^int type = ancestor.getType (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^int type = parent.getType (  ) ;^322^^^^^315^330^int type = ancestor.getType (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^int type = ancestor.newNumber (  ) ;^322^^^^^315^330^int type = ancestor.getType (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^int type = ancestor .getString (  )  ;^322^^^^^315^330^int type = ancestor.getType (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^for  ( Node ancestor : parent.getAncestors (  )  )  {^321^^^^^315^330^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^for  ( Node ancestor : n.newNumber (  )  )  {^321^^^^^315^330^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^for  ( Node ancestor : call.getAncestors (  )  )  {^321^^^^^315^330^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^321^322^323^324^325^315^330^for  ( Node ancestor : n.getAncestors (  )  )  { int type = ancestor.getType (  ) ; if  ( type == Token.BLOCK || type == Token.SCRIPT )  { addingRoot = ancestor; break; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^int type = n.getType (  ) ;^322^^^^^315^330^int type = ancestor.getType (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^322^^^^^315^330^int type = ancestor.getType (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^addingRoot.addChildBefore ( parent, beforeChild ) ;^329^^^^^315^330^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^addingRoot.addChildBefore ( expr, n ) ;^329^^^^^315^330^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^addingRoot.addChildBefore (  beforeChild ) ;^329^^^^^315^330^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^addingRoot.addChildBefore ( expr ) ;^329^^^^^315^330^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^addingRoot .addChildToFront ( n )  ;^329^^^^^315^330^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^329^330^^^^315^330^addingRoot.addChildBefore ( expr, beforeChild ) ; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot.addChildToFront ( expr ) ;addingRoot.addChildBefore ( expr, beforeChild ) ;^329^^^^^315^330^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot.addChildrenToFront ( initCode ) ;addingRoot.addChildBefore ( expr, beforeChild ) ;^329^^^^^315^330^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot.addChildrenToFront ( expr ) ;addingRoot.addChildBefore ( expr, beforeChild ) ;^329^^^^^315^330^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^addingRoot = module.getNodeForCodeInsertion ( compiler ) ;^317^^^^^302^332^addingRoot = compiler.getNodeForCodeInsertion ( module ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^addingRoot =  compiler.getNodeForCodeInsertion ( null ) ;^317^^^^^302^332^addingRoot = compiler.getNodeForCodeInsertion ( module ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^316^317^^^^301^331^JSModule module = t.getModule (  ) ; addingRoot = compiler.getNodeForCodeInsertion ( module ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^addingRoot = compiler .reportCodeChange (  )  ;^317^^^^^302^332^addingRoot = compiler.getNodeForCodeInsertion ( module ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^317^^^^^302^332^addingRoot = compiler.getNodeForCodeInsertion ( module ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node addingRoot = compiler.getNodeForCodeInsertion ( null ) ;addingRoot = compiler.getNodeForCodeInsertion ( module ) ;^317^^^^^302^332^addingRoot = compiler.getNodeForCodeInsertion ( module ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^addingRoot.addChildToFront ( parent ) ;^318^^^^^303^333^addingRoot.addChildToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^addingRoot.addChildBefore ( expr ) ;^318^^^^^303^333^addingRoot.addChildToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^addingRoot .addChildrenToFront ( addingRoot )  ;^318^^^^^303^333^addingRoot.addChildToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^318^^^^^303^333^addingRoot.addChildToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^body.addChildToFront ( expr ) ;addingRoot.addChildToFront ( expr ) ;^318^^^^^303^333^addingRoot.addChildToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^n.addChildToFront ( call ) ;addingRoot.addChildToFront ( expr ) ;^318^^^^^303^333^addingRoot.addChildToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot.addChildrenToFront ( initCode ) ;addingRoot.addChildToFront ( expr ) ;^318^^^^^303^333^addingRoot.addChildToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot.addChildrenToFront ( expr ) ;addingRoot.addChildToFront ( expr ) ;^318^^^^^303^333^addingRoot.addChildToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot.addChildBefore ( expr, beforeChild ) ;addingRoot.addChildToFront ( expr ) ;^318^^^^^303^333^addingRoot.addChildToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^body.addChildToBack ( expr ) ;addingRoot.addChildToFront ( expr ) ;^318^^^^^303^333^addingRoot.addChildToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P2_Replace_Operator]^if  ( type == Token.BLOCK && type == Token.SCRIPT )  {^323^^^^^308^338^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P2_Replace_Operator]^if  ( type != Token.BLOCK || type == Token.SCRIPT )  {^323^^^^^308^338^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P2_Replace_Operator]^if  ( type <= Token.BLOCK || type == Token.SCRIPT )  {^323^^^^^308^338^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^if  ( id == Token.BLOCK || type == Token.SCRIPT )  {^323^^^^^308^338^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P6_Replace_Expression]^if  ( type == Token.BLOCK ) {^323^^^^^308^338^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P6_Replace_Expression]^if  (  type == Token.SCRIPT )  {^323^^^^^308^338^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P6_Replace_Expression]^if  ( type == BLOCK )  {^323^^^^^308^338^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P6_Replace_Expression]^if  ( type == SCRIPT )  {^323^^^^^308^338^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P15_Unwrap_Block]^addingRoot = ancestor; break;^323^324^325^326^^308^338^if  ( type == Token.BLOCK || type == Token.SCRIPT )  { addingRoot = ancestor; break; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P16_Remove_Block]^^323^324^325^326^^308^338^if  ( type == Token.BLOCK || type == Token.SCRIPT )  { addingRoot = ancestor; break; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^addingRoot = expr;^324^^^^^309^339^addingRoot = ancestor;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^addingRoot =  parent;^324^^^^^309^339^addingRoot = ancestor;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^beforeChild = ancestor;addingRoot = ancestor;^324^^^^^309^339^addingRoot = ancestor;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^addingRoot =  n;^324^^^^^309^339^addingRoot = ancestor;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^beforeChild = n;^327^^^^^312^342^beforeChild = ancestor;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot = ancestor;beforeChild = ancestor;^327^^^^^312^342^beforeChild = ancestor;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( type )  ) ;^309^310^311^^^294^324^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node call = new Node ( Token. Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^309^310^311^^^294^324^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME ) , Node.newNumber ( id )  ) ;^309^310^311^^^294^324^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, id ) , Node.newNumber ( definedFunctionName )  ) ;^309^310^311^^^294^324^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node call = new Node ( Token.CALL, Node.getString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^309^310^311^^^294^324^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node call = new Node ( Token.CALL, Node .getString (  )  , Node.newNumber ( id )  ) ;^309^310^311^^^294^324^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node.newString ( id )  ) ;^309^310^311^^^294^324^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node.newString ( type )  ) ;^309^310^311^^^294^324^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, templateFilename ) , Node.newNumber ( id )  ) ;^309^310^311^^^294^324^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node .newString ( initCodeSource )   ) ;^309^310^311^^^294^324^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^Node call = new Node ( Token.CALL, Node.getString ( Token.NAME, definedFunctionName ) , Node.newNumber ( type )  ) ;^309^310^311^^^294^324^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node expr = NodeUtil.newExpr ( parent ) ;^312^^^^^297^327^Node expr = NodeUtil.newExpr ( call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node expr = NodeUtil.isVarDeclaration ( call ) ;^312^^^^^297^327^Node expr = NodeUtil.newExpr ( call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^Node expr = NodeUtil.newExpr ( n ) ;^312^^^^^297^327^Node expr = NodeUtil.newExpr ( call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node expr = new Node ( Token.EXPR_RESULT, call ) ;Node expr = NodeUtil.newExpr ( call ) ;^312^^^^^297^327^Node expr = NodeUtil.newExpr ( call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node initCode = null;Node addingRoot = null;^314^^^^^299^329^Node addingRoot = null;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node beforeChild = parent;^320^^^^^305^335^Node beforeChild = n;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P1_Replace_Type]^short  type = ancestor.getType (  ) ;^322^^^^^307^337^int type = ancestor.getType (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^int type = parent.getType (  ) ;^322^^^^^307^337^int type = ancestor.getType (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^int type = ancestor.newNumber (  ) ;^322^^^^^307^337^int type = ancestor.getType (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^int type = ancestor .getString (  )  ;^322^^^^^307^337^int type = ancestor.getType (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^int type = n.getType (  ) ;^322^^^^^307^337^int type = ancestor.getType (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node.getString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^310^311^^^^295^325^Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^Node.getString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^310^311^^^^295^325^Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^310^311^^^^295^325^Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^310^311^^^^295^325^Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^310^311^^^^295^325^Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node.newString ( Token.NAME, appNameSetter ) , Node.newString ( appNameStr )  ) ;Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^310^311^^^^295^325^Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node.newNumber ( type )  ) ;^311^^^^^296^326^Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node.newString ( id )  ) ;^311^^^^^296^326^Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node .newString ( appNameSetter )   ) ;^311^^^^^296^326^Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^Node.newString ( type )  ) ;^311^^^^^296^326^Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^311^312^^^^296^326^Node.newNumber ( id )  ) ; Node expr = NodeUtil.newExpr ( call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node.newNumber ( functionId )  ) ;Node.newNumber ( id )  ) ;^311^^^^^296^326^Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^Node.newString ( appNameStr )  ) ;Node.newNumber ( id )  ) ;^311^^^^^296^326^Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node expr = NodeUtil.newExpr ( expr ) ;^312^^^^^297^327^Node expr = NodeUtil.newExpr ( call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^312^^^^^297^327^Node expr = NodeUtil.newExpr ( call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^if  ( NodeUtil.isFunctionDeclaration ( call )  )  {^315^^^^^300^330^if  ( NodeUtil.isFunctionDeclaration ( n )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^if  ( NodeUtil.isFunctionDeclaration ( expr )  )  {^315^^^^^300^330^if  ( NodeUtil.isFunctionDeclaration ( n )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^for  ( Node ancestor : parent.getAncestors (  )  )  {^321^^^^^306^336^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^for  ( Node ancestor : n.newNumber (  )  )  {^321^^^^^306^336^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^for  ( Node ancestor : parent.newNumber (  )  )  {^321^^^^^306^336^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^321^322^323^324^325^306^336^for  ( Node ancestor : n.getAncestors (  )  )  { int type = ancestor.getType (  ) ; if  ( type == Token.BLOCK || type == Token.SCRIPT )  { addingRoot = ancestor; break; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^int type = expr.getType (  ) ;^322^^^^^307^337^int type = ancestor.getType (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^322^^^^^307^337^int type = ancestor.getType (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^addingRoot.addChildBefore ( parent, beforeChild ) ;^329^^^^^314^344^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^addingRoot.addChildBefore ( expr, parent ) ;^329^^^^^314^344^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^addingRoot.addChildBefore (  beforeChild ) ;^329^^^^^314^344^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^addingRoot.addChildBefore ( expr ) ;^329^^^^^314^344^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^addingRoot.addChildBefore ( beforeChild, expr ) ;^329^^^^^314^344^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^addingRoot.addChildBefore ( n, beforeChild ) ;^329^^^^^314^344^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^329^330^^^^314^344^addingRoot.addChildBefore ( expr, beforeChild ) ; }^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot.addChildToFront ( expr ) ;addingRoot.addChildBefore ( expr, beforeChild ) ;^329^^^^^314^344^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot.addChildrenToFront ( initCode ) ;addingRoot.addChildBefore ( expr, beforeChild ) ;^329^^^^^314^344^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P11_Insert_Donor_Statement]^addingRoot.addChildrenToFront ( expr ) ;addingRoot.addChildBefore ( expr, beforeChild ) ;^329^^^^^314^344^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^compiler.report (  ) ;^331^^^^^316^346^compiler.reportCodeChange (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^331^^^^^316^346^compiler.reportCodeChange (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P2_Replace_Operator]^if  ( type <= Token.BLOCK || type == Token.SCRIPT )  {^323^^^^^315^330^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^addingRoot = n;^324^^^^^315^330^addingRoot = ancestor;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^beforeChild = n;^327^^^^^315^330^beforeChild = ancestor;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P1_Replace_Type]^long  type = ancestor.getType (  ) ;^322^^^^^315^330^int type = ancestor.getType (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^int type = expr.getType (  ) ;^322^^^^^315^330^int type = ancestor.getType (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^for  ( Node ancestor : expr.getAncestors (  )  )  {^321^^^^^315^330^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^for  ( Node ancestor : n .getParent (  )   )  {^321^^^^^315^330^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^addingRoot.addChildBefore ( expr, parent ) ;^329^^^^^315^330^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^addingRoot.addChildBefore ( beforeChild, expr ) ;^329^^^^^315^330^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^316^^^^^301^331^JSModule module = t.getModule (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^317^318^^^^302^332^addingRoot = compiler.getNodeForCodeInsertion ( module ) ; addingRoot.addChildToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P2_Replace_Operator]^if  ( type < Token.BLOCK || type == Token.SCRIPT )  {^323^^^^^308^338^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^if  ( type == Token.BLOCK || type == Token.null )  {^323^^^^^308^338^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^if  ( type == Token.BLOCK || type == Token.this )  {^323^^^^^308^338^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^beforeChild = expr;^327^^^^^312^342^beforeChild = ancestor;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^beforeChild =  parent;^327^^^^^312^342^beforeChild = ancestor;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^int type = parent .getString (  )  ;^322^^^^^307^337^int type = ancestor.getType (  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( id )  ) ;^310^311^^^^295^325^Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^310^311^^^^295^325^Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P14_Delete_Statement]^^311^^^^^296^326^Node.newNumber ( id )  ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^Node expr = NodeUtil .isFunctionDeclaration ( parent )  ;^312^^^^^297^327^Node expr = NodeUtil.newExpr ( call ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^addingRoot.addChildToFront ( n ) ;^318^^^^^303^333^addingRoot.addChildToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^addingRoot.addChildBefore ( parent ) ;^318^^^^^303^333^addingRoot.addChildToFront ( expr ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P7_Replace_Invocation]^for  ( Node ancestor : n .getParent (  )   )  {^321^^^^^306^336^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^for  ( Node ancestor : expr.getAncestors (  )  )  {^321^^^^^306^336^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P5_Replace_Variable]^addingRoot.addChildBefore ( expr, n ) ;^329^^^^^314^344^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^addingRoot .addChildToFront ( call )  ;^329^^^^^314^344^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentFunctions RemoveCallback InstrumentReturns InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  List  declarationsToRemove  removable  String  appNameSetter  appNameStr  definedFunctionName  initCodeSource  line  reportFunctionExitName  reportFunctionName  templateFilename  int  functionId  id  type  FunctionNames  functionNames  
[P8_Replace_Mix]^this.removable =  null;^169^^^^^168^170^this.removable = removable;^[CLASS] RemoveCallback  [METHOD] <init> [RETURN_TYPE] List)   String> removable [VARIABLES] List  removable  boolean  
[P8_Replace_Mix]^if  ( NodeUtil.isVarDeclaration ( parent )  )  {^174^^^^^173^182^if  ( NodeUtil.isVarDeclaration ( n )  )  {^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P15_Unwrap_Block]^if (removable.contains(n.getString())) {    parent.removeChild(n);    if (!(parent.hasChildren())) {        parent.getParent().removeChild(parent);    }};^174^175^176^177^178^173^182^if  ( NodeUtil.isVarDeclaration ( n )  )  { if  ( removable.contains ( n.getString (  )  )  )  { parent.removeChild ( n ) ; if  ( !parent.hasChildren (  )  )  { parent.getParent (  ) .removeChild ( parent ) ; }^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P16_Remove_Block]^^174^175^176^177^178^173^182^if  ( NodeUtil.isVarDeclaration ( n )  )  { if  ( removable.contains ( n.getString (  )  )  )  { parent.removeChild ( n ) ; if  ( !parent.hasChildren (  )  )  { parent.getParent (  ) .removeChild ( parent ) ; }^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P13_Insert_Block]^if  ( removable.contains ( n.getString (  )  )  )  {     parent.removeChild ( n ) ;     if  ( ! ( parent.hasChildren (  )  )  )  {         parent.getParent (  ) .removeChild ( parent ) ;     } }^174^^^^^173^182^[Delete]^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P7_Replace_Invocation]^if  ( removable.contains ( n.removeChild (  )  )  )  {^175^^^^^173^182^if  ( removable.contains ( n.getString (  )  )  )  {^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P7_Replace_Invocation]^if  ( removable.contains ( n .getParent (  )   )  )  {^175^^^^^173^182^if  ( removable.contains ( n.getString (  )  )  )  {^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P15_Unwrap_Block]^parent.removeChild(n); if (!(parent.hasChildren())) {    parent.getParent().removeChild(parent);};^175^176^177^178^179^173^182^if  ( removable.contains ( n.getString (  )  )  )  { parent.removeChild ( n ) ; if  ( !parent.hasChildren (  )  )  { parent.getParent (  ) .removeChild ( parent ) ; }^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P16_Remove_Block]^^175^176^177^178^179^173^182^if  ( removable.contains ( n.getString (  )  )  )  { parent.removeChild ( n ) ; if  ( !parent.hasChildren (  )  )  { parent.getParent (  ) .removeChild ( parent ) ; }^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P13_Insert_Block]^if  ( isVarDeclaration ( n )  )  {     if  ( removable.contains ( n.getString (  )  )  )  {         parent.removeChild ( n ) ;         if  ( ! ( parent.hasChildren (  )  )  )  {             parent.getParent (  ) .removeChild ( parent ) ;         }     } }^175^^^^^173^182^[Delete]^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P7_Replace_Invocation]^if  ( !parent.removeChild (  )  )  {^177^^^^^173^182^if  ( !parent.hasChildren (  )  )  {^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P15_Unwrap_Block]^parent.getParent().removeChild(parent);^177^178^179^^^173^182^if  ( !parent.hasChildren (  )  )  { parent.getParent (  ) .removeChild ( parent ) ; }^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P16_Remove_Block]^^177^178^179^^^173^182^if  ( !parent.hasChildren (  )  )  { parent.getParent (  ) .removeChild ( parent ) ; }^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P5_Replace_Variable]^parent.getParent (  ) .removeChild ( n ) ;^178^^^^^173^182^parent.getParent (  ) .removeChild ( parent ) ;^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P7_Replace_Invocation]^parent.removeChild (  ) .removeChild ( parent ) ;^178^^^^^173^182^parent.getParent (  ) .removeChild ( parent ) ;^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P8_Replace_Mix]^parent .getString (  )  .removeChild ( n ) ;^178^^^^^173^182^parent.getParent (  ) .removeChild ( parent ) ;^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P14_Delete_Statement]^^178^^^^^173^182^parent.getParent (  ) .removeChild ( parent ) ;^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P8_Replace_Mix]^parent .getString (  )  ;^176^^^^^173^182^parent.removeChild ( n ) ;^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P14_Delete_Statement]^^176^^^^^173^182^parent.removeChild ( n ) ;^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P11_Insert_Donor_Statement]^parent.getParent (  ) .removeChild ( parent ) ;parent.removeChild ( n ) ;^176^^^^^173^182^parent.removeChild ( n ) ;^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P7_Replace_Invocation]^if  ( !parent .removeChild ( n )   )  {^177^^^^^173^182^if  ( !parent.hasChildren (  )  )  {^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P7_Replace_Invocation]^parent .getString (  )  .removeChild ( parent ) ;^178^^^^^173^182^parent.getParent (  ) .removeChild ( parent ) ;^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P8_Replace_Mix]^parent.getParent (  )  .getString (  )  ;^178^^^^^173^182^parent.getParent (  ) .removeChild ( parent ) ;^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P5_Replace_Variable]^if  ( removable.contains ( parent.getString (  )  )  )  {^175^^^^^173^182^if  ( removable.contains ( n.getString (  )  )  )  {^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P5_Replace_Variable]^if  ( n.contains ( removable.getString (  )  )  )  {^175^^^^^173^182^if  ( removable.contains ( n.getString (  )  )  )  {^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P8_Replace_Mix]^if  ( removable.contains ( parent.removeChild (  )  )  )  {^175^^^^^173^182^if  ( removable.contains ( n.getString (  )  )  )  {^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P8_Replace_Mix]^if  ( !parent .removeChild ( parent )   )  {^177^^^^^173^182^if  ( !parent.hasChildren (  )  )  {^[CLASS] RemoveCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P1_Replace_Type]^private final  long  functionId;^213^^^^^208^218^private final int functionId;^[CLASS] InstrumentReturns  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] List  removable  boolean  NodeTraversal  t  Node  n  parent  
[P8_Replace_Mix]^this.functionId =  null;^221^^^^^220^222^this.functionId = functionId;^[CLASS] InstrumentReturns  [METHOD] <init> [RETURN_TYPE] InstrumentFunctions$InstrumentReturns(int)   int functionId [VARIABLES] int  functionId  boolean  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler, expr, this ) ;^228^^^^^227^236^NodeTraversal.traverse ( compiler, body, this ) ;^[CLASS] InstrumentReturns  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] int  functionId  Node  body  call  expr  boolean  
[P5_Replace_Variable]^NodeTraversal.traverse ( null, body, this ) ;^228^^^^^227^236^NodeTraversal.traverse ( compiler, body, this ) ;^[CLASS] InstrumentReturns  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] int  functionId  Node  body  call  expr  boolean  
[P5_Replace_Variable]^NodeTraversal.traverse ( compiler,  this ) ;^228^^^^^227^236^NodeTraversal.traverse ( compiler, body, this ) ;^[CLASS] InstrumentReturns  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] int  functionId  Node  body  call  expr  boolean  
[P5_Replace_Variable]^NodeTraversal.traverse (  body, this ) ;^228^^^^^227^236^NodeTraversal.traverse ( compiler, body, this ) ;^[CLASS] InstrumentReturns  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] int  functionId  Node  body  call  expr  boolean  
[P5_Replace_Variable]^NodeTraversal.traverse ( body, compiler, this ) ;^228^^^^^227^236^NodeTraversal.traverse ( compiler, body, this ) ;^[CLASS] InstrumentReturns  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] int  functionId  Node  body  call  expr  boolean  
[P14_Delete_Statement]^^228^^^^^227^236^NodeTraversal.traverse ( compiler, body, this ) ;^[CLASS] InstrumentReturns  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] int  functionId  Node  body  call  expr  boolean  
[P5_Replace_Variable]^if  ( !allPathsReturn ( expr )  )  {^230^^^^^227^236^if  ( !allPathsReturn ( body )  )  {^[CLASS] InstrumentReturns  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] int  functionId  Node  body  call  expr  boolean  
[P7_Replace_Invocation]^if  ( !process ( body )  )  {^230^^^^^227^236^if  ( !allPathsReturn ( body )  )  {^[CLASS] InstrumentReturns  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] int  functionId  Node  body  call  expr  boolean  
[P15_Unwrap_Block]^com.google.javascript.rhino.Node call = newReportFunctionExitNode(); com.google.javascript.rhino.Node expr = new com.google.javascript.rhino.Node(com.google.javascript.rhino.Token.EXPR_RESULT, call); body.addChildToBack(expr); compiler.reportCodeChange();^230^231^232^233^234^227^236^if  ( !allPathsReturn ( body )  )  { Node call = newReportFunctionExitNode (  ) ; Node expr = new Node ( Token.EXPR_RESULT, call ) ; body.addChildToBack ( expr ) ; compiler.reportCodeChange (  ) ; }^[CLASS] InstrumentReturns  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] int  functionId  Node  body  call  expr  boolean  
[P16_Remove_Block]^^230^231^232^233^234^227^236^if  ( !allPathsReturn ( body )  )  { Node call = newReportFunctionExitNode (  ) ; Node expr = new Node ( Token.EXPR_RESULT, call ) ; body.addChildToBack ( expr ) ; compiler.reportCodeChange (  ) ; }^[CLASS] InstrumentReturns  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] int  functionId  Node  body  call  expr  boolean  
[P5_Replace_Variable]^Node expr = new Node ( Token.EXPR_RESULT, expr ) ;^232^^^^^227^236^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentReturns  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] int  functionId  Node  body  call  expr  boolean  
[P5_Replace_Variable]^Node expr = new Node ( Token.EXPR_RESULT ) ;^232^^^^^227^236^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentReturns  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] int  functionId  Node  body  call  expr  boolean  
[P5_Replace_Variable]^Node expr = new Node ( Token. call ) ;^232^^^^^227^236^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentReturns  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] int  functionId  Node  body  call  expr  boolean  
[P5_Replace_Variable]^Node expr = new Node ( Token.EXPR_RESULT, body ) ;^232^^^^^227^236^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentReturns  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] int  functionId  Node  body  call  expr  boolean  
[P14_Delete_Statement]^^231^^^^^227^236^Node call = newReportFunctionExitNode (  ) ;^[CLASS] InstrumentReturns  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] int  functionId  Node  body  call  expr  boolean  
[P5_Replace_Variable]^body.addChildToBack ( call ) ;^233^^^^^227^236^body.addChildToBack ( expr ) ;^[CLASS] InstrumentReturns  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] int  functionId  Node  body  call  expr  boolean  
[P7_Replace_Invocation]^body .addChildToFront ( expr )  ;^233^^^^^227^236^body.addChildToBack ( expr ) ;^[CLASS] InstrumentReturns  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] int  functionId  Node  body  call  expr  boolean  
[P14_Delete_Statement]^^233^^^^^227^236^body.addChildToBack ( expr ) ;^[CLASS] InstrumentReturns  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] int  functionId  Node  body  call  expr  boolean  
[P11_Insert_Donor_Statement]^n.addChildToFront ( call ) ;body.addChildToBack ( expr ) ;^233^^^^^227^236^body.addChildToBack ( expr ) ;^[CLASS] InstrumentReturns  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] int  functionId  Node  body  call  expr  boolean  
[P11_Insert_Donor_Statement]^call.addChildToBack ( returnRhs ) ;body.addChildToBack ( expr ) ;^233^^^^^227^236^body.addChildToBack ( expr ) ;^[CLASS] InstrumentReturns  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] int  functionId  Node  body  call  expr  boolean  
[P14_Delete_Statement]^^234^^^^^227^236^compiler.reportCodeChange (  ) ;^[CLASS] InstrumentReturns  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] int  functionId  Node  body  call  expr  boolean  
[P7_Replace_Invocation]^body .addChildToFront ( body )  ;^233^^^^^227^236^body.addChildToBack ( expr ) ;^[CLASS] InstrumentReturns  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] int  functionId  Node  body  call  expr  boolean  
[P14_Delete_Statement]^^233^234^^^^227^236^body.addChildToBack ( expr ) ; compiler.reportCodeChange (  ) ;^[CLASS] InstrumentReturns  [METHOD] process [RETURN_TYPE] void   Node body [VARIABLES] int  functionId  Node  body  call  expr  boolean  
[P2_Replace_Operator]^if  ( n.getType (  )  < Token.RETURN )  {^240^^^^^239^251^if  ( n.getType (  )  != Token.RETURN )  {^[CLASS] InstrumentReturns  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  int  functionId  Node  call  n  parent  returnRhs  
[P5_Replace_Variable]^if  ( returnRhs.getType (  )  != Token.RETURN )  {^240^^^^^239^251^if  ( n.getType (  )  != Token.RETURN )  {^[CLASS] InstrumentReturns  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  int  functionId  Node  call  n  parent  returnRhs  
[P7_Replace_Invocation]^if  ( n.newNumber (  )  != Token.RETURN )  {^240^^^^^239^251^if  ( n.getType (  )  != Token.RETURN )  {^[CLASS] InstrumentReturns  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  int  functionId  Node  call  n  parent  returnRhs  
[P15_Unwrap_Block]^return ;^240^241^242^^^239^251^if  ( n.getType (  )  != Token.RETURN )  { return; }^[CLASS] InstrumentReturns  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  int  functionId  Node  call  n  parent  returnRhs  
[P16_Remove_Block]^^240^241^242^^^239^251^if  ( n.getType (  )  != Token.RETURN )  { return; }^[CLASS] InstrumentReturns  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  int  functionId  Node  call  n  parent  returnRhs  
[P13_Insert_Block]^if  (  ( n.getType (  )  )  !=  ( RETURN )  )  {     return false; }^240^^^^^239^251^[Delete]^[CLASS] InstrumentReturns  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  int  functionId  Node  call  n  parent  returnRhs  
[P14_Delete_Statement]^^244^^^^^239^251^Node call = newReportFunctionExitNode (  ) ;^[CLASS] InstrumentReturns  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  int  functionId  Node  call  n  parent  returnRhs  
[P5_Replace_Variable]^Node returnRhs = parent.removeFirstChild (  ) ;^245^^^^^239^251^Node returnRhs = n.removeFirstChild (  ) ;^[CLASS] InstrumentReturns  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  int  functionId  Node  call  n  parent  returnRhs  
[P7_Replace_Invocation]^Node returnRhs = n.newNumber (  ) ;^245^^^^^239^251^Node returnRhs = n.removeFirstChild (  ) ;^[CLASS] InstrumentReturns  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  int  functionId  Node  call  n  parent  returnRhs  
[P8_Replace_Mix]^Node returnRhs = parent.newNumber (  ) ;^245^^^^^239^251^Node returnRhs = n.removeFirstChild (  ) ;^[CLASS] InstrumentReturns  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  int  functionId  Node  call  n  parent  returnRhs  
[P5_Replace_Variable]^Node returnRhs = returnRhs.removeFirstChild (  ) ;^245^^^^^239^251^Node returnRhs = n.removeFirstChild (  ) ;^[CLASS] InstrumentReturns  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  int  functionId  Node  call  n  parent  returnRhs  
[P14_Delete_Statement]^^245^^^^^239^251^Node returnRhs = n.removeFirstChild (  ) ;^[CLASS] InstrumentReturns  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  int  functionId  Node  call  n  parent  returnRhs  
[P2_Replace_Operator]^if  ( returnRhs == null )  {^246^^^^^239^251^if  ( returnRhs != null )  {^[CLASS] InstrumentReturns  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  int  functionId  Node  call  n  parent  returnRhs  
[P5_Replace_Variable]^if  ( parent != null )  {^246^^^^^239^251^if  ( returnRhs != null )  {^[CLASS] InstrumentReturns  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  int  functionId  Node  call  n  parent  returnRhs  
[P8_Replace_Mix]^if  ( returnRhs != false )  {^246^^^^^239^251^if  ( returnRhs != null )  {^[CLASS] InstrumentReturns  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  int  functionId  Node  call  n  parent  returnRhs  
[P15_Unwrap_Block]^call.addChildToBack(returnRhs);^246^247^248^^^239^251^if  ( returnRhs != null )  { call.addChildToBack ( returnRhs ) ; }^[CLASS] InstrumentReturns  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  int  functionId  Node  call  n  parent  returnRhs  
[P16_Remove_Block]^^246^247^248^^^239^251^if  ( returnRhs != null )  { call.addChildToBack ( returnRhs ) ; }^[CLASS] InstrumentReturns  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  int  functionId  Node  call  n  parent  returnRhs  
[P5_Replace_Variable]^call.addChildToBack ( parent ) ;^247^^^^^239^251^call.addChildToBack ( returnRhs ) ;^[CLASS] InstrumentReturns  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  int  functionId  Node  call  n  parent  returnRhs  
[P14_Delete_Statement]^^247^^^^^239^251^call.addChildToBack ( returnRhs ) ;^[CLASS] InstrumentReturns  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  int  functionId  Node  call  n  parent  returnRhs  
[P5_Replace_Variable]^n.addChildToFront ( returnRhs ) ;^249^^^^^239^251^n.addChildToFront ( call ) ;^[CLASS] InstrumentReturns  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  int  functionId  Node  call  n  parent  returnRhs  
[P14_Delete_Statement]^^249^^^^^239^251^n.addChildToFront ( call ) ;^[CLASS] InstrumentReturns  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  int  functionId  Node  call  n  parent  returnRhs  
[P11_Insert_Donor_Statement]^body.addChildToBack ( expr ) ;n.addChildToFront ( call ) ;^249^^^^^239^251^n.addChildToFront ( call ) ;^[CLASS] InstrumentReturns  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  int  functionId  Node  call  n  parent  returnRhs  
[P14_Delete_Statement]^^250^^^^^239^251^compiler.reportCodeChange (  ) ;^[CLASS] InstrumentReturns  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  int  functionId  Node  call  n  parent  returnRhs  
[P5_Replace_Variable]^return new Node ( Token. Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^254^255^256^^^253^257^return new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentReturns  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] int  functionId  boolean  
[P5_Replace_Variable]^return new Node ( Token.CALL, Node.newString ( Token.NAME ) , Node.newNumber ( functionId )  ) ;^254^255^256^^^253^257^return new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentReturns  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] int  functionId  boolean  
[P5_Replace_Variable]^return new Node ( Token.CALL, Node.newString ( Token.NAME, functionId ) , Node.newNumber ( reportFunctionExitName )  ) ;^254^255^256^^^253^257^return new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentReturns  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] int  functionId  boolean  
[P7_Replace_Invocation]^return new Node ( Token.CALL, Node.getType ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^254^255^256^^^253^257^return new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentReturns  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] int  functionId  boolean  
[P7_Replace_Invocation]^return new Node ( Token.CALL, Node .newNumber ( functionId )  , Node.newNumber ( functionId )  ) ;^254^255^256^^^253^257^return new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentReturns  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] int  functionId  boolean  
[P7_Replace_Invocation]^return new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionExitName ) , Node.getType ( functionId )  ) ;^254^255^256^^^253^257^return new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentReturns  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] int  functionId  boolean  
[P8_Replace_Mix]^return new Node ( Token.CALL, Node.newString ( Token.NAME, null ) , Node.newNumber ( functionId )  ) ;^254^255^256^^^253^257^return new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentReturns  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] int  functionId  boolean  
[P7_Replace_Invocation]^Node.getType ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^255^256^^^^253^257^Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentReturns  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] int  functionId  boolean  
[P14_Delete_Statement]^^255^256^^^^253^257^Node.newString ( Token.NAME, reportFunctionExitName ) , Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentReturns  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] int  functionId  boolean  
[P7_Replace_Invocation]^Node.getType ( functionId )  ) ;^256^^^^^253^257^Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentReturns  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] int  functionId  boolean  
[P14_Delete_Statement]^^256^^^^^253^257^Node.newNumber ( functionId )  ) ;^[CLASS] InstrumentReturns  [METHOD] newReportFunctionExitNode [RETURN_TYPE] Node   [VARIABLES] int  functionId  boolean  
[P3_Replace_Literal]^ControlFlowAnalysis cfa = new ControlFlowAnalysis ( compiler, true ) ;^264^^^^^262^277^ControlFlowAnalysis cfa = new ControlFlowAnalysis ( compiler, false ) ;^[CLASS] InstrumentReturns  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  int  functionId  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  
[P5_Replace_Variable]^ControlFlowAnalysis cfa = new ControlFlowAnalysis ( 0, false ) ;^264^^^^^262^277^ControlFlowAnalysis cfa = new ControlFlowAnalysis ( compiler, false ) ;^[CLASS] InstrumentReturns  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  int  functionId  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  
[P5_Replace_Variable]^cfa.process ( null, returnPathsParent ) ;^265^^^^^262^277^cfa.process ( null, block ) ;^[CLASS] InstrumentReturns  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  int  functionId  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  
[P5_Replace_Variable]^cfa.process ( null ) ;^265^^^^^262^277^cfa.process ( null, block ) ;^[CLASS] InstrumentReturns  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  int  functionId  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  
[P14_Delete_Statement]^^265^266^^^^262^277^cfa.process ( null, block ) ; ControlFlowGraph<Node> cfg = cfa.getCfg (  ) ;^[CLASS] InstrumentReturns  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  int  functionId  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  
[P14_Delete_Statement]^^266^^^^^262^277^ControlFlowGraph<Node> cfg = cfa.getCfg (  ) ;^[CLASS] InstrumentReturns  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  int  functionId  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  
[P7_Replace_Invocation]^Node returnPathsParent = cfg.getDirectedPredNodes (  ) .getValue (  ) ;^268^^^^^262^277^Node returnPathsParent = cfg.getImplicitReturn (  ) .getValue (  ) ;^[CLASS] InstrumentReturns  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  int  functionId  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  
[P7_Replace_Invocation]^Node returnPathsParent = cfg .getDirectedPredNodes ( n )  .getValue (  ) ;^268^^^^^262^277^Node returnPathsParent = cfg.getImplicitReturn (  ) .getValue (  ) ;^[CLASS] InstrumentReturns  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  int  functionId  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  
[P8_Replace_Mix]^Node returnPathsParent = 0.getDirectedPredNodes (  ) .getValue (  ) ;^268^^^^^262^277^Node returnPathsParent = cfg.getImplicitReturn (  ) .getValue (  ) ;^[CLASS] InstrumentReturns  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  int  functionId  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  
[P14_Delete_Statement]^^268^^^^^262^277^Node returnPathsParent = cfg.getImplicitReturn (  ) .getValue (  ) ;^[CLASS] InstrumentReturns  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  int  functionId  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  
[P2_Replace_Operator]^if  ( n.getType (  )  == Token.RETURN )  {^272^^^^^262^277^if  ( n.getType (  )  != Token.RETURN )  {^[CLASS] InstrumentReturns  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  int  functionId  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  
[P5_Replace_Variable]^if  ( returnPathsParent.getType (  )  != Token.RETURN )  {^272^^^^^262^277^if  ( n.getType (  )  != Token.RETURN )  {^[CLASS] InstrumentReturns  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  int  functionId  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  
[P7_Replace_Invocation]^if  ( n.newNumber (  )  != Token.RETURN )  {^272^^^^^262^277^if  ( n.getType (  )  != Token.RETURN )  {^[CLASS] InstrumentReturns  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  int  functionId  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  
[P15_Unwrap_Block]^return false;^272^273^274^^^262^277^if  ( n.getType (  )  != Token.RETURN )  { return false; }^[CLASS] InstrumentReturns  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  int  functionId  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  
[P16_Remove_Block]^^272^273^274^^^262^277^if  ( n.getType (  )  != Token.RETURN )  { return false; }^[CLASS] InstrumentReturns  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  int  functionId  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  
[P13_Insert_Block]^if  (  ( n.getType (  )  )  !=  ( RETURN )  )  {     return ; }^272^^^^^262^277^[Delete]^[CLASS] InstrumentReturns  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  int  functionId  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  
[P3_Replace_Literal]^return true;^273^^^^^262^277^return false;^[CLASS] InstrumentReturns  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  int  functionId  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  
[P5_Replace_Variable]^cfg.getDirectedPredNodes ( n )  )  {^270^^^^^262^277^cfg.getDirectedPredNodes ( returnPathsParent )  )  {^[CLASS] InstrumentReturns  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  int  functionId  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  
[P7_Replace_Invocation]^cfg .getImplicitReturn (  )   )  {^270^^^^^262^277^cfg.getDirectedPredNodes ( returnPathsParent )  )  {^[CLASS] InstrumentReturns  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  int  functionId  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  
[P14_Delete_Statement]^^270^271^^^^262^277^cfg.getDirectedPredNodes ( returnPathsParent )  )  { Node n = pred.getValue (  ) ;^[CLASS] InstrumentReturns  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  int  functionId  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  
[P8_Replace_Mix]^Node n = null.getValue (  ) ;^271^^^^^262^277^Node n = pred.getValue (  ) ;^[CLASS] InstrumentReturns  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  int  functionId  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  
[P14_Delete_Statement]^^271^^^^^262^277^Node n = pred.getValue (  ) ;^[CLASS] InstrumentReturns  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  int  functionId  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  
[P3_Replace_Literal]^return false;^276^^^^^262^277^return true;^[CLASS] InstrumentReturns  [METHOD] allPathsReturn [RETURN_TYPE] boolean   Node block [VARIABLES] ControlFlowAnalysis  cfa  DiGraphNode  pred  boolean  int  functionId  Node  block  n  returnPathsParent  ControlFlowGraph  cfg  
[P2_Replace_Operator]^if  ( n.getType (  )  >= Token.FUNCTION )  {^283^^^^^268^298^if  ( n.getType (  )  != Token.FUNCTION )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^if  ( call.getType (  )  != Token.FUNCTION )  {^283^^^^^268^298^if  ( n.getType (  )  != Token.FUNCTION )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^if  ( n.newNumber (  )  != Token.FUNCTION )  {^283^^^^^268^298^if  ( n.getType (  )  != Token.FUNCTION )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^if  ( parent.getType (  )  != Token.FUNCTION )  {^283^^^^^268^298^if  ( n.getType (  )  != Token.FUNCTION )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P15_Unwrap_Block]^return ;^283^284^285^^^268^298^if  ( n.getType (  )  != Token.FUNCTION )  { return; }^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P16_Remove_Block]^^283^284^285^^^268^298^if  ( n.getType (  )  != Token.FUNCTION )  { return; }^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^if  ( n .getAncestors (  )   != Token.FUNCTION )  {^283^^^^^268^298^if  ( n.getType (  )  != Token.FUNCTION )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^if  ( expr.getType (  )  != Token.FUNCTION )  {^283^^^^^268^298^if  ( n.getType (  )  != Token.FUNCTION )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P1_Replace_Type]^long  id = functionNames.getFunctionId ( n ) ;^287^^^^^272^302^int id = functionNames.getFunctionId ( n ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^int id = functionNames.getFunctionId ( parent ) ;^287^^^^^272^302^int id = functionNames.getFunctionId ( n ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^int id = n.getFunctionId ( functionNames ) ;^287^^^^^272^302^int id = functionNames.getFunctionId ( n ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P14_Delete_Statement]^^287^^^^^272^302^int id = functionNames.getFunctionId ( n ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P2_Replace_Operator]^if  ( id == 0 )  {^288^^^^^273^303^if  ( id < 0 )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P3_Replace_Literal]^if  ( id < id )  {^288^^^^^273^303^if  ( id < 0 )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^if  ( type < 0 )  {^288^^^^^273^303^if  ( id < 0 )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^if  ( id < 0 >> 1 )  {^288^^^^^273^303^if  ( id < 0 )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P15_Unwrap_Block]^return ;^288^289^290^291^^273^303^if  ( id < 0 )  {  return; }^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P16_Remove_Block]^^288^289^290^291^^273^303^if  ( id < 0 )  {  return; }^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^if  ( reportFunctionName.isEmpty (  )  )  {^293^^^^^278^308^if  ( !reportFunctionName.isEmpty (  )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P9_Replace_Statement]^if  ( !definedFunctionName.isEmpty (  )  )  {^293^^^^^278^308^if  ( !reportFunctionName.isEmpty (  )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P9_Replace_Statement]^if  ( !reportFunctionExitName.isEmpty (  )  )  {^293^^^^^278^308^if  ( !reportFunctionName.isEmpty (  )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( type )  ) ;^295^296^297^^^280^310^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^Node call = new Node ( Token. Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^295^296^297^^^280^310^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME ) , Node.newNumber ( id )  ) ;^295^296^297^^^280^310^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^Node call = new Node ( Token.CALL, Node.getAncestors ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^295^296^297^^^280^310^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node.newString ( id )  ) ;^295^296^297^^^280^310^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^Node expr = new Node ( Token.EXPR_RESULT, n ) ;^298^^^^^283^313^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^Node expr = new Node ( Token.EXPR_RESULT ) ;^298^^^^^283^313^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^Node expr = new Node ( Token. call ) ;^298^^^^^283^313^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^Node body = parent.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^294^^^^^279^309^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^Node body = n.newNumber (  ) .getNext (  ) .getNext (  ) ;^294^^^^^279^309^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^Node body = parent.newNumber (  ) .getNext (  ) .getNext (  ) ;^294^^^^^279^309^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, id ) , Node.newNumber ( reportFunctionName )  ) ;^295^296^297^^^280^310^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^Node expr = new Node ( Token.EXPR_RESULT, parent ) ;^298^^^^^283^313^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P11_Insert_Donor_Statement]^Node expr = NodeUtil.newExpr ( call ) ;Node expr = new Node ( Token.EXPR_RESULT, call ) ;^298^^^^^283^313^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^Node body = n .getType (  )  .getNext (  ) .getNext (  ) ;^294^^^^^279^309^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P14_Delete_Statement]^^294^^^^^279^309^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^Node body = call.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^294^^^^^279^309^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^Node body = expr.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^294^^^^^279^309^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^Node.getAncestors ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^296^297^^^^281^311^Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P14_Delete_Statement]^^296^297^^^^281^311^Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P11_Insert_Donor_Statement]^Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^296^297^^^^281^311^Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^Node.newNumber ( type )  ) ;^297^^^^^282^312^Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^Node.newString ( id )  ) ;^297^^^^^282^312^Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P14_Delete_Statement]^^297^298^^^^282^312^Node.newNumber ( id )  ) ; Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^body.addChildToFront ( parent ) ;^299^^^^^284^314^body.addChildToFront ( expr ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P14_Delete_Statement]^^299^^^^^284^314^body.addChildToFront ( expr ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P11_Insert_Donor_Statement]^addingRoot.addChildToFront ( expr ) ;body.addChildToFront ( expr ) ;^299^^^^^284^314^body.addChildToFront ( expr ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P14_Delete_Statement]^^300^^^^^285^315^compiler.reportCodeChange (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^Node call = new Node ( Token.CALL, Node .newNumber ( id )  , Node.newNumber ( id )  ) ;^295^296^297^^^280^310^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^Node expr = new Node ( Token.EXPR_RESULT, expr ) ;^298^^^^^283^313^Node expr = new Node ( Token.EXPR_RESULT, call ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^Node body = expr.newNumber (  ) .getNext (  ) .getNext (  ) ;^294^^^^^279^309^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^Node.newString ( Token.NAME, 2 ) , Node.newNumber ( id )  ) ;^296^297^^^^281^311^Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^Node.newString ( type )  ) ;^297^^^^^282^312^Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^body .addChildBefore ( n , body )  ;^299^^^^^284^314^body.addChildToFront ( expr ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^body .addChildBefore ( addingRoot , expr )  ;^299^^^^^284^314^body.addChildToFront ( expr ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^compiler .getNodeForCodeInsertion ( module )  ;^300^^^^^285^315^compiler.reportCodeChange (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^if  ( reportFunctionExitName.isEmpty (  )  )  {^303^^^^^288^318^if  ( !reportFunctionExitName.isEmpty (  )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P9_Replace_Statement]^if  ( !reportFunctionName.isEmpty (  )  )  {^303^^^^^288^318^if  ( !reportFunctionExitName.isEmpty (  )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P9_Replace_Statement]^if  ( !definedFunctionName.isEmpty (  )  )  {^303^^^^^288^318^if  ( !reportFunctionExitName.isEmpty (  )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P15_Unwrap_Block]^com.google.javascript.rhino.Node body = n.getFirstChild().getNext().getNext(); new com.google.javascript.jscomp.InstrumentFunctions.InstrumentReturns(id).process(body);^303^304^305^306^^288^318^if  ( !reportFunctionExitName.isEmpty (  )  )  { Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ; ( new InstrumentReturns ( id )  ) .process ( body ) ; }^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P16_Remove_Block]^^303^304^305^306^^288^318^if  ( !reportFunctionExitName.isEmpty (  )  )  { Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ; ( new InstrumentReturns ( id )  ) .process ( body ) ; }^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^( new InstrumentReturns ( type )  ) .process ( body ) ;^305^^^^^290^320^( new InstrumentReturns ( id )  ) .process ( body ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^Node body = parent.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^304^^^^^289^319^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^Node body = n.newNumber (  ) .getNext (  ) .getNext (  ) ;^304^^^^^289^319^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^Node body = call.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^304^^^^^289^319^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^Node body = n .getType (  )  .getNext (  ) .getNext (  ) ;^304^^^^^289^319^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^Node body = expr.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^304^^^^^289^319^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P14_Delete_Statement]^^304^^^^^289^319^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P14_Delete_Statement]^^304^305^^^^289^319^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ; ( new InstrumentReturns ( id )  ) .process ( body ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^( new InstrumentReturns ( id )  ) .process ( expr ) ;^305^^^^^290^320^( new InstrumentReturns ( id )  ) .process ( body ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^( new InstrumentReturns ( body )  ) .process ( id ) ;^305^^^^^290^320^( new InstrumentReturns ( id )  ) .process ( body ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P14_Delete_Statement]^^305^^^^^290^320^( new InstrumentReturns ( id )  ) .process ( body ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^Node body = parent .getType (  )  .getNext (  ) .getNext (  ) ;^304^^^^^289^319^Node body = n.getFirstChild (  ) .getNext (  ) .getNext (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^( new InstrumentReturns ( id )  ) .process ( n ) ;^305^^^^^290^320^( new InstrumentReturns ( id )  ) .process ( body ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P6_Replace_Expression]^if  ( type == BLOCK )  {^308^^^^^293^323^if  ( !definedFunctionName.isEmpty (  )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P6_Replace_Expression]^if  ( type == SCRIPT )  {^308^^^^^293^323^if  ( !definedFunctionName.isEmpty (  )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P9_Replace_Statement]^if  ( !reportFunctionName.isEmpty (  )  )  {^308^^^^^293^323^if  ( !definedFunctionName.isEmpty (  )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P9_Replace_Statement]^if  ( !reportFunctionExitName.isEmpty (  )  )  {^308^^^^^293^323^if  ( !definedFunctionName.isEmpty (  )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^if  ( NodeUtil.isFunctionDeclaration ( call )  )  {^315^^^^^300^330^if  ( NodeUtil.isFunctionDeclaration ( n )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P6_Replace_Expression]^if  ( type == BLOCK )  {^315^^^^^300^330^if  ( NodeUtil.isFunctionDeclaration ( n )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P6_Replace_Expression]^if  ( type == SCRIPT )  {^315^^^^^300^330^if  ( NodeUtil.isFunctionDeclaration ( n )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^if  ( NodeUtil.newExpr ( n )  )  {^315^^^^^300^330^if  ( NodeUtil.isFunctionDeclaration ( n )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^if  ( NodeUtil .newExpr ( expr )   )  {^315^^^^^300^330^if  ( NodeUtil.isFunctionDeclaration ( n )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^if  ( NodeUtil.isFunctionDeclaration ( parent )  )  {^315^^^^^300^330^if  ( NodeUtil.isFunctionDeclaration ( n )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P2_Replace_Operator]^if  ( type == Token.BLOCK && type == Token.SCRIPT )  {^323^^^^^315^330^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P2_Replace_Operator]^if  ( type < Token.BLOCK || type == Token.SCRIPT )  {^323^^^^^315^330^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P2_Replace_Operator]^if  ( type != Token.BLOCK || type == Token.SCRIPT )  {^323^^^^^315^330^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^if  ( id == Token.BLOCK || type == Token.SCRIPT )  {^323^^^^^315^330^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P6_Replace_Expression]^if  ( type == Token.BLOCK ) {^323^^^^^315^330^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P6_Replace_Expression]^if  (  type == Token.SCRIPT )  {^323^^^^^315^330^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P6_Replace_Expression]^if  ( type == BLOCK )  {^323^^^^^315^330^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P6_Replace_Expression]^if  ( type == SCRIPT )  {^323^^^^^315^330^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^if  ( id == Token.BLOCK ) {^323^^^^^315^330^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P15_Unwrap_Block]^addingRoot = ancestor; break;^323^324^325^326^^315^330^if  ( type == Token.BLOCK || type == Token.SCRIPT )  { addingRoot = ancestor; break; }^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P16_Remove_Block]^^323^324^325^326^^315^330^if  ( type == Token.BLOCK || type == Token.SCRIPT )  { addingRoot = ancestor; break; }^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^addingRoot =  parent;^324^^^^^315^330^addingRoot = ancestor;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P11_Insert_Donor_Statement]^beforeChild = ancestor;addingRoot = ancestor;^324^^^^^315^330^addingRoot = ancestor;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^addingRoot = n;^324^^^^^315^330^addingRoot = ancestor;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^beforeChild = n;^327^^^^^315^330^beforeChild = ancestor;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^beforeChild =  parent;^327^^^^^315^330^beforeChild = ancestor;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P11_Insert_Donor_Statement]^addingRoot = ancestor;beforeChild = ancestor;^327^^^^^315^330^beforeChild = ancestor;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^Node beforeChild = parent;^320^^^^^315^330^Node beforeChild = n;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^Node beforeChild = expr;^320^^^^^315^330^Node beforeChild = n;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P1_Replace_Type]^short  type = ancestor.getType (  ) ;^322^^^^^315^330^int type = ancestor.getType (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^int type = parent.getType (  ) ;^322^^^^^315^330^int type = ancestor.getType (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^int type = ancestor.newNumber (  ) ;^322^^^^^315^330^int type = ancestor.getType (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^for  ( Node ancestor : parent.getAncestors (  )  )  {^321^^^^^315^330^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^for  ( Node ancestor : n.newNumber (  )  )  {^321^^^^^315^330^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^for  ( Node ancestor : expr.getAncestors (  )  )  {^321^^^^^315^330^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P14_Delete_Statement]^^321^322^323^324^325^315^330^for  ( Node ancestor : n.getAncestors (  )  )  { int type = ancestor.getType (  ) ; if  ( type == Token.BLOCK || type == Token.SCRIPT )  { addingRoot = ancestor; break; }^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^int type = n.getType (  ) ;^322^^^^^315^330^int type = ancestor.getType (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^int type = expr.newNumber (  ) ;^322^^^^^315^330^int type = ancestor.getType (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P14_Delete_Statement]^^322^^^^^315^330^int type = ancestor.getType (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^addingRoot.addChildBefore ( n, beforeChild ) ;^329^^^^^315^330^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^addingRoot.addChildBefore ( expr, parent ) ;^329^^^^^315^330^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^addingRoot.addChildBefore (  beforeChild ) ;^329^^^^^315^330^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^addingRoot.addChildBefore ( expr ) ;^329^^^^^315^330^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^addingRoot.addChildBefore ( parent, beforeChild ) ;^329^^^^^315^330^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P14_Delete_Statement]^^329^330^^^^315^330^addingRoot.addChildBefore ( expr, beforeChild ) ; }^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P11_Insert_Donor_Statement]^addingRoot.addChildToFront ( expr ) ;addingRoot.addChildBefore ( expr, beforeChild ) ;^329^^^^^315^330^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^addingRoot = module.getNodeForCodeInsertion ( compiler ) ;^317^^^^^302^332^addingRoot = compiler.getNodeForCodeInsertion ( module ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^addingRoot = compiler .reportCodeChange (  )  ;^317^^^^^302^332^addingRoot = compiler.getNodeForCodeInsertion ( module ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^addingRoot =  compiler.getNodeForCodeInsertion ( null ) ;^317^^^^^302^332^addingRoot = compiler.getNodeForCodeInsertion ( module ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P14_Delete_Statement]^^316^^^^^301^331^JSModule module = t.getModule (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P14_Delete_Statement]^^317^^^^^302^332^addingRoot = compiler.getNodeForCodeInsertion ( module ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^addingRoot.addChildToFront ( n ) ;^318^^^^^303^333^addingRoot.addChildToFront ( expr ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P14_Delete_Statement]^^318^^^^^303^333^addingRoot.addChildToFront ( expr ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P11_Insert_Donor_Statement]^body.addChildToFront ( expr ) ;addingRoot.addChildToFront ( expr ) ;^318^^^^^303^333^addingRoot.addChildToFront ( expr ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P11_Insert_Donor_Statement]^addingRoot.addChildBefore ( expr, beforeChild ) ;addingRoot.addChildToFront ( expr ) ;^318^^^^^303^333^addingRoot.addChildToFront ( expr ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P2_Replace_Operator]^if  ( type == Token.BLOCK && type == Token.SCRIPT )  {^323^^^^^308^338^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P2_Replace_Operator]^if  ( type < Token.BLOCK || type == Token.SCRIPT )  {^323^^^^^308^338^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P2_Replace_Operator]^if  ( type != Token.BLOCK || type == Token.SCRIPT )  {^323^^^^^308^338^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^if  ( id == Token.BLOCK || type == Token.SCRIPT )  {^323^^^^^308^338^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P6_Replace_Expression]^if  ( type == Token.BLOCK ) {^323^^^^^308^338^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P6_Replace_Expression]^if  (  type == Token.SCRIPT )  {^323^^^^^308^338^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P6_Replace_Expression]^if  ( type == BLOCK )  {^323^^^^^308^338^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P6_Replace_Expression]^if  ( type == SCRIPT )  {^323^^^^^308^338^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P15_Unwrap_Block]^addingRoot = ancestor; break;^323^324^325^326^^308^338^if  ( type == Token.BLOCK || type == Token.SCRIPT )  { addingRoot = ancestor; break; }^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P16_Remove_Block]^^323^324^325^326^^308^338^if  ( type == Token.BLOCK || type == Token.SCRIPT )  { addingRoot = ancestor; break; }^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^addingRoot = expr;^324^^^^^309^339^addingRoot = ancestor;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^addingRoot =  n;^324^^^^^309^339^addingRoot = ancestor;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P11_Insert_Donor_Statement]^beforeChild = ancestor;addingRoot = ancestor;^324^^^^^309^339^addingRoot = ancestor;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^addingRoot = parent;^324^^^^^309^339^addingRoot = ancestor;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^beforeChild = parent;^327^^^^^312^342^beforeChild = ancestor;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P11_Insert_Donor_Statement]^addingRoot = ancestor;beforeChild = ancestor;^327^^^^^312^342^beforeChild = ancestor;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( type )  ) ;^309^310^311^^^294^324^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^Node call = new Node ( Token. Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^309^310^311^^^294^324^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME ) , Node.newNumber ( id )  ) ;^309^310^311^^^294^324^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, id ) , Node.newNumber ( definedFunctionName )  ) ;^309^310^311^^^294^324^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^Node call = new Node ( Token.CALL, Node.getAncestors ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^309^310^311^^^294^324^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node.newString ( id )  ) ;^309^310^311^^^294^324^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node.newString ( type )  ) ;^309^310^311^^^294^324^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^Node expr = NodeUtil.newExpr ( n ) ;^312^^^^^297^327^Node expr = NodeUtil.newExpr ( call ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^Node expr = NodeUtil.isFunctionDeclaration ( call ) ;^312^^^^^297^327^Node expr = NodeUtil.newExpr ( call ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^Node expr = NodeUtil.isFunctionDeclaration ( parent ) ;^312^^^^^297^327^Node expr = NodeUtil.newExpr ( call ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P11_Insert_Donor_Statement]^Node expr = new Node ( Token.EXPR_RESULT, call ) ;Node expr = NodeUtil.newExpr ( call ) ;^312^^^^^297^327^Node expr = NodeUtil.newExpr ( call ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^Node beforeChild = parent;^320^^^^^305^335^Node beforeChild = n;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P1_Replace_Type]^short  type = ancestor.getType (  ) ;^322^^^^^307^337^int type = ancestor.getType (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^int type = n.getType (  ) ;^322^^^^^307^337^int type = ancestor.getType (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^int type = ancestor.newNumber (  ) ;^322^^^^^307^337^int type = ancestor.getType (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^int type = expr.newNumber (  ) ;^322^^^^^307^337^int type = ancestor.getType (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^Node.getAncestors ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^310^311^^^^295^325^Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^Node .newNumber ( id )  , Node.newNumber ( id )  ) ;^310^311^^^^295^325^Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P14_Delete_Statement]^^310^311^^^^295^325^Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P11_Insert_Donor_Statement]^Node.newString ( Token.NAME, reportFunctionName ) , Node.newNumber ( id )  ) ;Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^310^311^^^^295^325^Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^Node.newNumber ( type )  ) ;^311^^^^^296^326^Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^Node.newString ( id )  ) ;^311^^^^^296^326^Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P14_Delete_Statement]^^311^^^^^296^326^Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^Node expr = NodeUtil.newExpr ( parent ) ;^312^^^^^297^327^Node expr = NodeUtil.newExpr ( call ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^Node expr = NodeUtil .isFunctionDeclaration ( n )  ;^312^^^^^297^327^Node expr = NodeUtil.newExpr ( call ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P14_Delete_Statement]^^312^^^^^297^327^Node expr = NodeUtil.newExpr ( call ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^if  ( NodeUtil .newExpr ( parent )   )  {^315^^^^^300^330^if  ( NodeUtil.isFunctionDeclaration ( n )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^addingRoot.addChildToFront ( parent ) ;^318^^^^^303^333^addingRoot.addChildToFront ( expr ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^addingRoot .addChildBefore ( n , call )  ;^318^^^^^303^333^addingRoot.addChildToFront ( expr ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^for  ( Node ancestor : call.getAncestors (  )  )  {^321^^^^^306^336^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^for  ( Node ancestor : n.newNumber (  )  )  {^321^^^^^306^336^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^for  ( Node ancestor : expr.getAncestors (  )  )  {^321^^^^^306^336^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P14_Delete_Statement]^^321^322^323^324^325^306^336^for  ( Node ancestor : n.getAncestors (  )  )  { int type = ancestor.getType (  ) ; if  ( type == Token.BLOCK || type == Token.SCRIPT )  { addingRoot = ancestor; break; }^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^int type = parent.getType (  ) ;^322^^^^^307^337^int type = ancestor.getType (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^int type = ancestor .getAncestors (  )  ;^322^^^^^307^337^int type = ancestor.getType (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^int type = expr.getType (  ) ;^322^^^^^307^337^int type = ancestor.getType (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P14_Delete_Statement]^^322^^^^^307^337^int type = ancestor.getType (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^addingRoot.addChildBefore ( parent, beforeChild ) ;^329^^^^^314^344^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^addingRoot.addChildBefore ( expr, n ) ;^329^^^^^314^344^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^addingRoot.addChildBefore (  beforeChild ) ;^329^^^^^314^344^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^addingRoot.addChildBefore ( expr ) ;^329^^^^^314^344^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^addingRoot.addChildBefore ( beforeChild, expr ) ;^329^^^^^314^344^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^addingRoot .addChildToFront ( ancestor )  ;^329^^^^^314^344^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^addingRoot.addChildBefore ( expr, parent ) ;^329^^^^^314^344^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P14_Delete_Statement]^^329^330^^^^314^344^addingRoot.addChildBefore ( expr, beforeChild ) ; }^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P11_Insert_Donor_Statement]^addingRoot.addChildToFront ( expr ) ;addingRoot.addChildBefore ( expr, beforeChild ) ;^329^^^^^314^344^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^compiler .getNodeForCodeInsertion ( module )  ;^331^^^^^316^346^compiler.reportCodeChange (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P14_Delete_Statement]^^331^^^^^316^346^compiler.reportCodeChange (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^if  ( NodeUtil .newExpr ( addingRoot )   )  {^315^^^^^300^330^if  ( NodeUtil.isFunctionDeclaration ( n )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P2_Replace_Operator]^if  ( type <= Token.BLOCK || type == Token.SCRIPT )  {^323^^^^^315^330^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^int type = ancestor .getAncestors (  )  ;^322^^^^^315^330^int type = ancestor.getType (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^int type = parent.newNumber (  ) ;^322^^^^^315^330^int type = ancestor.getType (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^addingRoot.addChildBefore ( beforeChild, expr ) ;^329^^^^^315^330^addingRoot.addChildBefore ( expr, beforeChild ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P14_Delete_Statement]^^317^318^^^^302^332^addingRoot = compiler.getNodeForCodeInsertion ( module ) ; addingRoot.addChildToFront ( expr ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P2_Replace_Operator]^if  ( type >= Token.BLOCK || type == Token.SCRIPT )  {^323^^^^^308^338^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P5_Replace_Variable]^if  ( type == Token.BLOCK || type == Token.null )  {^323^^^^^308^338^if  ( type == Token.BLOCK || type == Token.SCRIPT )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^Node call = new Node ( Token.CALL, Node .newNumber ( type )  , Node.newNumber ( id )  ) ;^309^310^311^^^294^324^Node call = new Node ( Token.CALL, Node.newString ( Token.NAME, definedFunctionName ) , Node.newNumber ( id )  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^Node expr = NodeUtil .isFunctionDeclaration ( expr )  ;^312^^^^^297^327^Node expr = NodeUtil.newExpr ( call ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^if  ( NodeUtil.newExpr ( call )  )  {^315^^^^^300^330^if  ( NodeUtil.isFunctionDeclaration ( n )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P7_Replace_Invocation]^for  ( Node ancestor : n .getType (  )   )  {^321^^^^^306^336^for  ( Node ancestor : n.getAncestors (  )  )  {^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
[P8_Replace_Mix]^int type = parent.newNumber (  ) ;^322^^^^^307^337^int type = ancestor.getType (  ) ;^[CLASS] InstrumentCallback  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  addingRoot  ancestor  beforeChild  body  call  expr  n  parent  JSModule  module  int  id  type  
