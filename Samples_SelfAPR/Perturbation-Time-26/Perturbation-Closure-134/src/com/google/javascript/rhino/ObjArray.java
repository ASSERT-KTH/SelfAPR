[P1_Replace_Type]^static final  short  serialVersionUID = 4174889037736658296L;^52^^^^^47^57^static final long serialVersionUID = 4174889037736658296L;^[CLASS] ObjArray   [VARIABLES] 
[P8_Replace_Mix]^static final long serialVersionUID ;^52^^^^^47^57^static final long serialVersionUID = 4174889037736658296L;^[CLASS] ObjArray   [VARIABLES] 
[P1_Replace_Type]^private  short  size;^387^^^^^382^392^private int size;^[CLASS] ObjArray   [VARIABLES] 
[P8_Replace_Mix]^private  long  size;^387^^^^^382^392^private int size;^[CLASS] ObjArray   [VARIABLES] 
[P1_Replace_Type]^private static final  short  FIELDS_STORE_SIZE = 5;^391^^^^^386^396^private static final int FIELDS_STORE_SIZE = 5;^[CLASS] ObjArray   [VARIABLES] 
[P3_Replace_Literal]^private static final int FIELDS_STORE_SIZE = 10;^391^^^^^386^396^private static final int FIELDS_STORE_SIZE = 5;^[CLASS] ObjArray   [VARIABLES] 
[P8_Replace_Mix]^private static final  short  FIELDS_STORE_SIZE = 4;^391^^^^^386^396^private static final int FIELDS_STORE_SIZE = 5;^[CLASS] ObjArray   [VARIABLES] 
[P3_Replace_Literal]^sealed = false;^63^^^^^61^64^sealed = true;^[CLASS] ObjArray  [METHOD] seal [RETURN_TYPE] void   [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  size  Object[]  data  
[P2_Replace_Operator]^return size != 0;^68^^^^^66^69^return size == 0;^[CLASS] ObjArray  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  size  Object[]  data  
[P3_Replace_Literal]^return size == ;^68^^^^^66^69^return size == 0;^[CLASS] ObjArray  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  size  Object[]  data  
[P5_Replace_Variable]^return FIELDS_STORE_SIZE == 0;^68^^^^^66^69^return size == 0;^[CLASS] ObjArray  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  size  Object[]  data  
[P8_Replace_Mix]^return size  ||  0;^68^^^^^66^69^return size == 0;^[CLASS] ObjArray  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  size  Object[]  data  
[P5_Replace_Variable]^return FIELDS_STORE_SIZE;^73^^^^^71^74^return size;^[CLASS] ObjArray  [METHOD] size [RETURN_TYPE] int   [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  size  Object[]  data  
[P8_Replace_Mix]^return ;^78^^^^^76^91^if   (" ")  ;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P7_Replace_Invocation]^if  ( sealed )  throw onEmptyStackTopRead (  ) ;^79^^^^^76^91^if  ( sealed )  throw onSeledMutation (  ) ;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P15_Unwrap_Block]^throw com.google.javascript.rhino.ObjArray.onSeledMutation();^79^80^81^82^83^76^91^if  ( sealed )  throw onSeledMutation (  ) ; int N = size; if  ( newSize < N )  { for  ( int i = newSize; i != N; ++i )  { setImpl ( i, null ) ; }^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P16_Remove_Block]^^79^80^81^82^83^76^91^if  ( sealed )  throw onSeledMutation (  ) ; int N = size; if  ( newSize < N )  { for  ( int i = newSize; i != N; ++i )  { setImpl ( i, null ) ; }^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P8_Replace_Mix]^return ;^79^^^^^76^91^if  ( sealed )  throw onSeledMutation (  ) ;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P1_Replace_Type]^long  N = size;^80^^^^^76^91^int N = size;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P5_Replace_Variable]^int N = newSize;^80^^^^^76^91^int N = size;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( newSize <= N )  {^81^^^^^76^91^if  ( newSize < N )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( size < N )  {^81^^^^^76^91^if  ( newSize < N )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( newSize < size )  {^81^^^^^76^91^if  ( newSize < N )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P6_Replace_Expression]^if  ( i != N )  {^81^^^^^76^91^if  ( newSize < N )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P6_Replace_Expression]^if  ( newSize > N )  {^81^^^^^76^91^if  ( newSize < N )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P6_Replace_Expression]^if  ( newSize > FIELDS_STORE_SIZE )  {^81^^^^^76^91^if  ( newSize < N )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P15_Unwrap_Block]^for (int i = newSize; i != N; ++i) {    setImpl(i, null);};^81^82^83^84^^76^91^if  ( newSize < N )  { for  ( int i = newSize; i != N; ++i )  { setImpl ( i, null ) ; }^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P16_Remove_Block]^^81^82^83^84^^76^91^if  ( newSize < N )  { for  ( int i = newSize; i != N; ++i )  { setImpl ( i, null ) ; }^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( newSize > N )  {     if  ( newSize >  ( FIELDS_STORE_SIZE )  )  {         ensureCapacity ( newSize ) ;     } }^81^^^^^76^91^[Delete]^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P2_Replace_Operator]^} else if  ( newSize >= N )  {^85^^^^^76^91^} else if  ( newSize > N )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P2_Replace_Operator]^} else if  ( newSize < N )  {^85^^^^^76^91^} else if  ( newSize > N )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P5_Replace_Variable]^} else if  ( size > N )  {^85^^^^^76^91^} else if  ( newSize > N )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P5_Replace_Variable]^} else if  ( newSize > size )  {^85^^^^^76^91^} else if  ( newSize > N )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P5_Replace_Variable]^} else if  ( N > newSize )  {^85^^^^^76^91^} else if  ( newSize > N )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P6_Replace_Expression]^} else if  ( newSize > FIELDS_STORE_SIZE )  {^85^^^^^76^91^} else if  ( newSize > N )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P6_Replace_Expression]^} else {^85^^^^^76^91^} else if  ( newSize > N )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P15_Unwrap_Block]^if (newSize > (com.google.javascript.rhino.ObjArray.FIELDS_STORE_SIZE)) {    ensureCapacity(newSize);};^85^86^87^88^^76^91^} else if  ( newSize > N )  { if  ( newSize > FIELDS_STORE_SIZE )  { ensureCapacity ( newSize ) ; }^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P16_Remove_Block]^^85^86^87^88^^76^91^} else if  ( newSize > N )  { if  ( newSize > FIELDS_STORE_SIZE )  { ensureCapacity ( newSize ) ; }^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( newSize == FIELDS_STORE_SIZE )  {^86^^^^^76^91^if  ( newSize > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( size > FIELDS_STORE_SIZE )  {^86^^^^^76^91^if  ( newSize > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( newSize > size )  {^86^^^^^76^91^if  ( newSize > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( FIELDS_STORE_SIZE > newSize )  {^86^^^^^76^91^if  ( newSize > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P9_Replace_Statement]^if  ( N > FIELDS_STORE_SIZE )  {^86^^^^^76^91^if  ( newSize > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P9_Replace_Statement]^if  ( alloc <= FIELDS_STORE_SIZE )  {^86^^^^^76^91^if  ( newSize > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P9_Replace_Statement]^if  ( N >= FIELDS_STORE_SIZE )  {^86^^^^^76^91^if  ( newSize > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P15_Unwrap_Block]^ensureCapacity(newSize);^86^87^88^^^76^91^if  ( newSize > FIELDS_STORE_SIZE )  { ensureCapacity ( newSize ) ; }^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P16_Remove_Block]^^86^87^88^^^76^91^if  ( newSize > FIELDS_STORE_SIZE )  { ensureCapacity ( newSize ) ; }^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( newSize > N )  {     if  ( newSize >  ( FIELDS_STORE_SIZE )  )  {         ensureCapacity ( newSize ) ;     } }^86^^^^^76^91^[Delete]^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N >=  ( FIELDS_STORE_SIZE )  )  {     ensureCapacity (  ( N + 1 )  ) ; }^86^^^^^76^91^[Delete]^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N >  ( FIELDS_STORE_SIZE )  )  {     data = new Object[N -  ( FIELDS_STORE_SIZE ) ]; }^86^^^^^76^91^[Delete]^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P5_Replace_Variable]^ensureCapacity ( size ) ;^87^^^^^76^91^ensureCapacity ( newSize ) ;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P7_Replace_Invocation]^setSize ( newSize ) ;^87^^^^^76^91^ensureCapacity ( newSize ) ;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P8_Replace_Mix]^ensureCapacity ( i ) ;^87^^^^^76^91^ensureCapacity ( newSize ) ;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P14_Delete_Statement]^^87^^^^^76^91^ensureCapacity ( newSize ) ;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^ensureCapacity ( N + 1 ) ;ensureCapacity ( newSize ) ;^87^^^^^76^91^ensureCapacity ( newSize ) ;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P8_Replace_Mix]^setSize ( size ) ;^87^^^^^76^91^ensureCapacity ( newSize ) ;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P1_Replace_Type]^for  (  short  i = newSize; i != N; ++i )  {^82^^^^^76^91^for  ( int i = newSize; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P2_Replace_Operator]^for  ( int i = newSize; i <= N; ++i )  {^82^^^^^76^91^for  ( int i = newSize; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P5_Replace_Variable]^for  ( int i = size; i != N; ++i )  {^82^^^^^76^91^for  ( int i = newSize; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P5_Replace_Variable]^for  ( sizent i = newSize; i != N; ++i )  {^82^^^^^76^91^for  ( int i = newSize; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P5_Replace_Variable]^for  ( int i = newSize; i != size; ++i )  {^82^^^^^76^91^for  ( int i = newSize; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P5_Replace_Variable]^for  ( newSizent i = i; i != N; ++i )  {^82^^^^^76^91^for  ( int i = newSize; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P5_Replace_Variable]^for  ( Nnt i = newSize; i != i; ++i )  {^82^^^^^76^91^for  ( int i = newSize; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P5_Replace_Variable]^setImpl ( size, null ) ;^83^^^^^76^91^setImpl ( i, null ) ;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P7_Replace_Invocation]^set ( i, null ) ;^83^^^^^76^91^setImpl ( i, null ) ;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P8_Replace_Mix]^set ( newSize, null ) ;^83^^^^^76^91^setImpl ( i, null ) ;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P14_Delete_Statement]^^83^^^^^76^91^setImpl ( i, null ) ;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^setImpl ( i, obj ) ;setImpl ( i, null ) ;^83^^^^^76^91^setImpl ( i, null ) ;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^setImpl ( index, value ) ;setImpl ( i, null ) ;^83^^^^^76^91^setImpl ( i, null ) ;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^setImpl ( N, value ) ;setImpl ( i, null ) ;^83^^^^^76^91^setImpl ( i, null ) ;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( newSize >= FIELDS_STORE_SIZE )  {^86^^^^^76^91^if  ( newSize > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P2_Replace_Operator]^for  ( int i = newSize; i == N; ++i )  {^82^^^^^76^91^for  ( int i = newSize; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P5_Replace_Variable]^size = size;^90^^^^^76^91^size = newSize;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P8_Replace_Mix]^size =  i;^90^^^^^76^91^size = newSize;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^size = N;size = newSize;^90^^^^^76^91^size = newSize;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^size = 0;size = newSize;^90^^^^^76^91^size = newSize;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^size = N + 1;size = newSize;^90^^^^^76^91^size = newSize;^[CLASS] ObjArray  [METHOD] setSize [RETURN_TYPE] void   int newSize [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( ! ( 0 <= index || index < size )  )  throw onInvalidIndex ( index, size ) ;^95^^^^^93^97^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( ! ( 0 < index && index < size )  )  throw onInvalidIndex ( index, size ) ;^95^^^^^93^97^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( ! ( 0 <= index && index == size )  )  throw onInvalidIndex ( index, size ) ;^95^^^^^93^97^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^if  ( ! (  <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^95^^^^^93^97^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( ! ( 0 <= newSize && index < size )  )  throw onInvalidIndex ( index, size ) ;^95^^^^^93^97^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( ! ( 0 <= index && index < newSize )  )  throw onInvalidIndex ( index, size ) ;^95^^^^^93^97^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex (  size ) ;^95^^^^^93^97^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index ) ;^95^^^^^93^97^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( ! ( 0 <= size && index < index )  )  throw onInvalidIndex ( index, size ) ;^95^^^^^93^97^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P6_Replace_Expression]^if  ( 0 <= index ) ;^95^^^^^93^97^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P6_Replace_Expression]^if  ( index < size ) ;^95^^^^^93^97^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P7_Replace_Invocation]^if  ( ! ( 0 <= index && index < size )  )  throw setSize ( index, size ) ;^95^^^^^93^97^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( ! ( 0  <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^95^^^^^93^97^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P15_Unwrap_Block]^throw com.google.javascript.rhino.ObjArray.onInvalidIndex(index, size);^95^96^97^^^93^97^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ; return getImpl ( index ) ; }^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P16_Remove_Block]^^95^96^97^^^93^97^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ; return getImpl ( index ) ; }^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( ! ( 0 <= newSize && index < size )  )  throw setSize ( index, size ) ;^95^^^^^93^97^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ; ;^95^^^^^93^97^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( ! ( 0 <= index && index < newSize )  )  throw setSize ( index, size ) ;^95^^^^^93^97^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P7_Replace_Invocation]^return get ( index ) ;^96^^^^^93^97^return getImpl ( index ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^return getImpl ( size ) ;^96^^^^^93^97^return getImpl ( index ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P14_Delete_Statement]^^96^^^^^93^97^return getImpl ( index ) ;^[CLASS] ObjArray  [METHOD] get [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( ! ( 0 <= index || index < size )  )  throw onInvalidIndex ( index, size ) ;^101^^^^^99^104^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( ! ( 0 < index && index < size )  )  throw onInvalidIndex ( index, size ) ;^101^^^^^99^104^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( ! ( 0 <= index && index <= size )  )  throw onInvalidIndex ( index, size ) ;^101^^^^^99^104^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^if  ( ! ( -9 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^101^^^^^99^104^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( ! ( 0 <= newSize && index < size )  )  throw onInvalidIndex ( index, size ) ;^101^^^^^99^104^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( ! ( 0 <= index && index < newSize )  )  throw onInvalidIndex ( index, size ) ;^101^^^^^99^104^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex (  size ) ;^101^^^^^99^104^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index ) ;^101^^^^^99^104^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( ! ( 0 <= size && index < index )  )  throw onInvalidIndex ( index, size ) ;^101^^^^^99^104^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P6_Replace_Expression]^if  ( 0 <= index ) ;^101^^^^^99^104^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P6_Replace_Expression]^if  ( index < size ) ;^101^^^^^99^104^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P7_Replace_Invocation]^if  ( ! ( 0 <= index && index < size )  )  throw setSize ( index, size ) ;^101^^^^^99^104^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P15_Unwrap_Block]^throw com.google.javascript.rhino.ObjArray.onInvalidIndex(index, size);^101^102^103^104^^99^104^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ; if  ( sealed )  throw onSeledMutation (  ) ; setImpl ( index, value ) ; }^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P16_Remove_Block]^^101^102^103^104^^99^104^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ; if  ( sealed )  throw onSeledMutation (  ) ; setImpl ( index, value ) ; }^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^return false;^101^^^^^99^104^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ; ;^101^^^^^99^104^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( ! ( 0 <= newSize && index < size )  )  throw setSize ( index, size ) ;^101^^^^^99^104^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P7_Replace_Invocation]^if  ( sealed )  throw onEmptyStackTopRead (  ) ;^102^^^^^99^104^if  ( sealed )  throw onSeledMutation (  ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P15_Unwrap_Block]^throw com.google.javascript.rhino.ObjArray.onSeledMutation();^102^103^104^^^99^104^if  ( sealed )  throw onSeledMutation (  ) ; setImpl ( index, value ) ; }^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P16_Remove_Block]^^102^103^104^^^99^104^if  ( sealed )  throw onSeledMutation (  ) ; setImpl ( index, value ) ; }^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N == 0 )  throw onEmptyStackTopRead (  ) ; ;^102^^^^^99^104^if  ( sealed )  throw onSeledMutation (  ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^setImpl ( size, value ) ;^103^^^^^99^104^setImpl ( index, value ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^setImpl ( index, f3 ) ;^103^^^^^99^104^setImpl ( index, value ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^setImpl (  value ) ;^103^^^^^99^104^setImpl ( index, value ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^setImpl ( index ) ;^103^^^^^99^104^setImpl ( index, value ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^setImpl ( value, index ) ;^103^^^^^99^104^setImpl ( index, value ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P7_Replace_Invocation]^set ( index, value ) ;^103^^^^^99^104^setImpl ( index, value ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P14_Delete_Statement]^^103^^^^^99^104^setImpl ( index, value ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^setImpl ( i, obj ) ;setImpl ( index, value ) ;^103^^^^^99^104^setImpl ( index, value ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^setImpl ( i, null ) ;setImpl ( index, value ) ;^103^^^^^99^104^setImpl ( index, value ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^setImpl ( N, value ) ;setImpl ( index, value ) ;^103^^^^^99^104^setImpl ( index, value ) ;^[CLASS] ObjArray  [METHOD] set [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^case 0: return value;^110^^^^^107^117^case 0: return f0;^[CLASS] ObjArray  [METHOD] getImpl [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^case 1: return value;^111^^^^^107^117^case 1: return f1;^[CLASS] ObjArray  [METHOD] getImpl [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^case 2: return value;^112^^^^^107^117^case 2: return f2;^[CLASS] ObjArray  [METHOD] getImpl [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^case 3: return f4;^113^^^^^107^117^case 3: return f3;^[CLASS] ObjArray  [METHOD] getImpl [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^case 3: return value;^113^^^^^107^117^case 3: return f3;^[CLASS] ObjArray  [METHOD] getImpl [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^case 4: return value;^114^^^^^107^117^case 4: return f4;^[CLASS] ObjArray  [METHOD] getImpl [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^return data[index   instanceof   FIELDS_STORE_SIZE];^116^^^^^107^117^return data[index - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] getImpl [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^return data[size - FIELDS_STORE_SIZE];^116^^^^^107^117^return data[index - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] getImpl [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^return data[index - size];^116^^^^^107^117^return data[index - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] getImpl [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^return data[size  &&  FIELDS_STORE_SIZE];^116^^^^^107^117^return data[index - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] getImpl [RETURN_TYPE] Object   int index [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^case 0: f0 = f4; break;^123^^^^^120^131^case 0: f0 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 2: f2 = value; break;case 0: f0 = value; break;^123^^^^^120^131^case 0: f0 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 1: f1 = value; break;case 0: f0 = value; break;^123^^^^^120^131^case 0: f0 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 4: top = f4; f4 = null; break;case 0: f0 = value; break;^123^^^^^120^131^case 0: f0 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 3: f3 = value; break;case 0: f0 = value; break;^123^^^^^120^131^case 0: f0 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 3: top = f3; f3 = null; break;case 0: f0 = value; break;^123^^^^^120^131^case 0: f0 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 1: top = f1; f1 = null; break;case 0: f0 = value; break;^123^^^^^120^131^case 0: f0 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 2: top = f2; f2 = null; break;case 0: f0 = value; break;^123^^^^^120^131^case 0: f0 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 4: f4 = value; break;case 0: f0 = value; break;^123^^^^^120^131^case 0: f0 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 0: top = f0; f0 = null; break;case 0: f0 = value; break;^123^^^^^120^131^case 0: f0 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^case 1: f1 = f4; break;^124^^^^^120^131^case 1: f1 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 2: f2 = value; break;case 1: f1 = value; break;^124^^^^^120^131^case 1: f1 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 4: top = f4; f4 = null; break;case 1: f1 = value; break;^124^^^^^120^131^case 1: f1 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 0: f0 = value; break;case 1: f1 = value; break;^124^^^^^120^131^case 1: f1 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 3: f3 = value; break;case 1: f1 = value; break;^124^^^^^120^131^case 1: f1 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 3: top = f3; f3 = null; break;case 1: f1 = value; break;^124^^^^^120^131^case 1: f1 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 1: top = f1; f1 = null; break;case 1: f1 = value; break;^124^^^^^120^131^case 1: f1 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 2: top = f2; f2 = null; break;case 1: f1 = value; break;^124^^^^^120^131^case 1: f1 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 4: f4 = value; break;case 1: f1 = value; break;^124^^^^^120^131^case 1: f1 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 0: top = f0; f0 = null; break;case 1: f1 = value; break;^124^^^^^120^131^case 1: f1 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^case 2: f2 = f4; break;^125^^^^^120^131^case 2: f2 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 1: f1 = value; break;case 2: f2 = value; break;^125^^^^^120^131^case 2: f2 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 4: top = f4; f4 = null; break;case 2: f2 = value; break;^125^^^^^120^131^case 2: f2 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 0: f0 = value; break;case 2: f2 = value; break;^125^^^^^120^131^case 2: f2 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 3: f3 = value; break;case 2: f2 = value; break;^125^^^^^120^131^case 2: f2 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 3: top = f3; f3 = null; break;case 2: f2 = value; break;^125^^^^^120^131^case 2: f2 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 1: top = f1; f1 = null; break;case 2: f2 = value; break;^125^^^^^120^131^case 2: f2 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 2: top = f2; f2 = null; break;case 2: f2 = value; break;^125^^^^^120^131^case 2: f2 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 4: f4 = value; break;case 2: f2 = value; break;^125^^^^^120^131^case 2: f2 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 0: top = f0; f0 = null; break;case 2: f2 = value; break;^125^^^^^120^131^case 2: f2 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^case 3: f3 = f4; break;^126^^^^^120^131^case 3: f3 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 2: f2 = value; break;case 3: f3 = value; break;^126^^^^^120^131^case 3: f3 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 1: f1 = value; break;case 3: f3 = value; break;^126^^^^^120^131^case 3: f3 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 4: top = f4; f4 = null; break;case 3: f3 = value; break;^126^^^^^120^131^case 3: f3 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 0: f0 = value; break;case 3: f3 = value; break;^126^^^^^120^131^case 3: f3 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 3: top = f3; f3 = null; break;case 3: f3 = value; break;^126^^^^^120^131^case 3: f3 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 1: top = f1; f1 = null; break;case 3: f3 = value; break;^126^^^^^120^131^case 3: f3 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 2: top = f2; f2 = null; break;case 3: f3 = value; break;^126^^^^^120^131^case 3: f3 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 4: f4 = value; break;case 3: f3 = value; break;^126^^^^^120^131^case 3: f3 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 0: top = f0; f0 = null; break;case 3: f3 = value; break;^126^^^^^120^131^case 3: f3 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^case 4: f4 = f4; break;^127^^^^^120^131^case 4: f4 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^case 4: f4 =  f3; break;^127^^^^^120^131^case 4: f4 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 2: f2 = value; break;case 4: f4 = value; break;^127^^^^^120^131^case 4: f4 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 1: f1 = value; break;case 4: f4 = value; break;^127^^^^^120^131^case 4: f4 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 4: top = f4; f4 = null; break;case 4: f4 = value; break;^127^^^^^120^131^case 4: f4 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 0: f0 = value; break;case 4: f4 = value; break;^127^^^^^120^131^case 4: f4 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 3: f3 = value; break;case 4: f4 = value; break;^127^^^^^120^131^case 4: f4 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 3: top = f3; f3 = null; break;case 4: f4 = value; break;^127^^^^^120^131^case 4: f4 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 1: top = f1; f1 = null; break;case 4: f4 = value; break;^127^^^^^120^131^case 4: f4 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 2: top = f2; f2 = null; break;case 4: f4 = value; break;^127^^^^^120^131^case 4: f4 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 0: top = f0; f0 = null; break;case 4: f4 = value; break;^127^^^^^120^131^case 4: f4 = value; break;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^default: data[index  >>  FIELDS_STORE_SIZE] = value;^128^^^^^120^131^default: data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^default: data[size - FIELDS_STORE_SIZE] = value;^128^^^^^120^131^default: data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^default: data[index - size] = value;^128^^^^^120^131^default: data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^default: value[index - FIELDS_STORE_SIZE] = data;^128^^^^^120^131^default: data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^default: data[index - FIELDS_STORE_SIZE] ;^128^^^^^120^131^default: data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^data[N - FIELDS_STORE_SIZE] = null;default: data[index - FIELDS_STORE_SIZE] = value;^128^^^^^120^131^default: data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^index = FIELDS_STORE_SIZE;default: data[index - FIELDS_STORE_SIZE] = value;^128^^^^^120^131^default: data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^top = data[N - FIELDS_STORE_SIZE];default: data[index - FIELDS_STORE_SIZE] = value;^128^^^^^120^131^default: data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^data[index - FIELDS_STORE_SIZE] = value;default: data[index - FIELDS_STORE_SIZE] = value;^128^^^^^120^131^default: data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P12_Insert_Condition]^if  ( newSize > FIELDS_STORE_SIZE )  { default: data[index - FIELDS_STORE_SIZE] = value; }^128^^^^^120^131^default: data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P12_Insert_Condition]^if  ( size > FIELDS_STORE_SIZE )  { default: data[index - FIELDS_STORE_SIZE] = value; }^128^^^^^120^131^default: data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] setImpl [RETURN_TYPE] void   int index Object value [VARIABLES] Object  f0  f1  f2  f3  f4  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P1_Replace_Type]^short  N = size;^135^^^^^133^143^int N = size;^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^int N = newSize;^135^^^^^133^143^int N = size;^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( current == obj &&  ( current != null && current.equals ( obj )  )  )  {^138^^^^^133^143^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( current != obj ||  ( current != null && current.equals ( obj )  )  )  {^138^^^^^133^143^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( current == obj ||  ( current != null || current.equals ( obj )  )  )  {^138^^^^^133^143^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( current == obj ||  ( current == null && current.equals ( obj )  )  )  {^138^^^^^133^143^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( f4 == obj ||  ( current != null && current.equals ( obj )  )  )  {^138^^^^^133^143^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( current == value ||  ( current != null && current.equals ( obj )  )  )  {^138^^^^^133^143^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( obj == current ||  ( current != null && current.equals ( obj )  )  )  {^138^^^^^133^143^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P6_Replace_Expression]^if  ( current == obj ) {^138^^^^^133^143^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P6_Replace_Expression]^if  (   ( current != null && current.equals ( obj )  )  )  {^138^^^^^133^143^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P6_Replace_Expression]^if  ( current != null )  {^138^^^^^133^143^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( current == obj ||  ( current != true && current.equals ( obj )  )  )  {^138^^^^^133^143^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P15_Unwrap_Block]^return i;^138^139^140^^^133^143^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  { return i; }^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P16_Remove_Block]^^138^139^140^^^133^143^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  { return i; }^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^return newSize;^139^^^^^133^143^return i;^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^return size;^139^^^^^133^143^return i;^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P1_Replace_Type]^for  (  short  i = 0; i != N; ++i )  {^136^^^^^133^143^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^for  ( int i = 0; i == N; ++i )  {^136^^^^^133^143^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^for  ( int i = 0; i >= N; ++i )  {^136^^^^^133^143^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^for  ( int i = 3; i != N; ++i )  {^136^^^^^133^143^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^for  ( sizent i = 0; i != N; ++i )  {^136^^^^^133^143^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^for  ( int i = 0; i != size; ++i )  {^136^^^^^133^143^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^for  ( Nnt i = 0; i != i; ++i )  {^136^^^^^133^143^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( value == obj ||  ( current != null && current.equals ( obj )  )  )  {^138^^^^^133^143^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  (   ( current != false && current.equals ( obj )  )  )  {^138^^^^^133^143^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^Object current = getImpl ( newSize ) ;^137^^^^^133^143^Object current = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P7_Replace_Invocation]^Object current = get ( i ) ;^137^^^^^133^143^Object current = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^Object current = getImpl ( size ) ;^137^^^^^133^143^Object current = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^Object obj = getImpl ( i ) ;Object current = getImpl ( i ) ;^137^^^^^133^143^Object current = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P14_Delete_Statement]^^137^^^^^133^143^Object current = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^return getImpl ( index ) ;Object current = getImpl ( i ) ;^137^^^^^133^143^Object current = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( current == f4 ||  ( current != null && current.equals ( obj )  )  )  {^138^^^^^133^143^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P1_Replace_Type]^for  (  long  i = 0; i != N; ++i )  {^136^^^^^133^143^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^for  ( int i = index; i != N; ++i )  {^136^^^^^133^143^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^Object current = get ( size ) ;^137^^^^^133^143^Object current = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^return -i;^142^^^^^133^143^return -1;^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^return -1 + 0;^142^^^^^133^143^return -1;^[CLASS] ObjArray  [METHOD] indexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( current == obj &&  ( current != null && current.equals ( obj )  )  )  {^150^^^^^145^155^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( current != obj ||  ( current != null && current.equals ( obj )  )  )  {^150^^^^^145^155^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( current == obj ||  ( current != null || current.equals ( obj )  )  )  {^150^^^^^145^155^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( current == obj ||  ( current == null && current.equals ( obj )  )  )  {^150^^^^^145^155^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( value == obj ||  ( current != null && current.equals ( obj )  )  )  {^150^^^^^145^155^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( current == value ||  ( current != null && current.equals ( obj )  )  )  {^150^^^^^145^155^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( obj == current ||  ( current != null && current.equals ( obj )  )  )  {^150^^^^^145^155^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P6_Replace_Expression]^if  ( current == obj ) {^150^^^^^145^155^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P6_Replace_Expression]^if  (   ( current != null && current.equals ( obj )  )  )  {^150^^^^^145^155^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P6_Replace_Expression]^if  ( current != null )  {^150^^^^^145^155^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( current == obj ||  ( current != this && current.equals ( obj )  )  )  {^150^^^^^145^155^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P15_Unwrap_Block]^return i;^150^151^152^^^145^155^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  { return i; }^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P16_Remove_Block]^^150^151^152^^^145^155^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  { return i; }^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^return size;^151^^^^^145^155^return i;^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P1_Replace_Type]^for  (  short  i = size; i != 0; )  {^147^^^^^145^155^for  ( int i = size; i != 0; )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^for  ( int i = size; i >= 0; )  {^147^^^^^145^155^for  ( int i = size; i != 0; )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^for  ( int i = size; i < 0; )  {^147^^^^^145^155^for  ( int i = size; i != 0; )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^for  ( newSizent i = size; i != 0; )  {^147^^^^^145^155^for  ( int i = size; i != 0; )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^for  ( int i = newSize; i != 0; )  {^147^^^^^145^155^for  ( int i = size; i != 0; )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^for  ( sizent i = i; i != 0; )  {^147^^^^^145^155^for  ( int i = size; i != 0; )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  (   ( current != false && current.equals ( obj )  )  )  {^150^^^^^145^155^if  ( current == obj ||  ( current != null && current.equals ( obj )  )  )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^return newSize;^151^^^^^145^155^return i;^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^Object current = getImpl ( size ) ;^149^^^^^145^155^Object current = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P7_Replace_Invocation]^Object current = get ( i ) ;^149^^^^^145^155^Object current = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^Object current = getImpl ( newSize ) ;^149^^^^^145^155^Object current = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^Object obj = getImpl ( i ) ;Object current = getImpl ( i ) ;^149^^^^^145^155^Object current = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P14_Delete_Statement]^^149^^^^^145^155^Object current = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^return getImpl ( index ) ;Object current = getImpl ( i ) ;^149^^^^^145^155^Object current = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P1_Replace_Type]^for  (  long  i = size; i != 0; )  {^147^^^^^145^155^for  ( int i = size; i != 0; )  {^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^return -N;^154^^^^^145^155^return -1;^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^return -3;^154^^^^^145^155^return -1;^[CLASS] ObjArray  [METHOD] lastIndexOf [RETURN_TYPE] int   Object obj [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P1_Replace_Type]^short  N = size;^159^^^^^157^162^int N = size;^[CLASS] ObjArray  [METHOD] peek [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^int N = newSize;^159^^^^^157^162^int N = size;^[CLASS] ObjArray  [METHOD] peek [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( N != 0 )  throw onEmptyStackTopRead (  ) ;^160^^^^^157^162^if  ( N == 0 )  throw onEmptyStackTopRead (  ) ;^[CLASS] ObjArray  [METHOD] peek [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^if  ( N == FIELDS_STORE_SIZE )  throw onEmptyStackTopRead (  ) ;^160^^^^^157^162^if  ( N == 0 )  throw onEmptyStackTopRead (  ) ;^[CLASS] ObjArray  [METHOD] peek [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( size == 0 )  throw onEmptyStackTopRead (  ) ;^160^^^^^157^162^if  ( N == 0 )  throw onEmptyStackTopRead (  ) ;^[CLASS] ObjArray  [METHOD] peek [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P7_Replace_Invocation]^if  ( N == 0 )  throw onSeledMutation (  ) ;^160^^^^^157^162^if  ( N == 0 )  throw onEmptyStackTopRead (  ) ;^[CLASS] ObjArray  [METHOD] peek [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N == 3 )  throw onEmptyStackTopRead (  ) ;^160^^^^^157^162^if  ( N == 0 )  throw onEmptyStackTopRead (  ) ;^[CLASS] ObjArray  [METHOD] peek [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P15_Unwrap_Block]^throw com.google.javascript.rhino.ObjArray.onEmptyStackTopRead();^160^161^162^^^157^162^if  ( N == 0 )  throw onEmptyStackTopRead (  ) ; return getImpl ( N - 1 ) ; }^[CLASS] ObjArray  [METHOD] peek [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P16_Remove_Block]^^160^161^162^^^157^162^if  ( N == 0 )  throw onEmptyStackTopRead (  ) ; return getImpl ( N - 1 ) ; }^[CLASS] ObjArray  [METHOD] peek [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( sealed )  throw onSeledMutation (  ) ; ;^160^^^^^157^162^if  ( N == 0 )  throw onEmptyStackTopRead (  ) ;^[CLASS] ObjArray  [METHOD] peek [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^return getImpl ( N  &&  1 ) ;^161^^^^^157^162^return getImpl ( N - 1 ) ;^[CLASS] ObjArray  [METHOD] peek [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^return getImpl ( N  ) ;^161^^^^^157^162^return getImpl ( N - 1 ) ;^[CLASS] ObjArray  [METHOD] peek [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^return getImpl ( newSize - 1 ) ;^161^^^^^157^162^return getImpl ( N - 1 ) ;^[CLASS] ObjArray  [METHOD] peek [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P7_Replace_Invocation]^return setImpl ( N - 1 ) ;^161^^^^^157^162^return getImpl ( N - 1 ) ;^[CLASS] ObjArray  [METHOD] peek [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^return setImpl ( size - 0 ) ;^161^^^^^157^162^return getImpl ( N - 1 ) ;^[CLASS] ObjArray  [METHOD] peek [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^return getImpl ( N  >=  1 ) ;^161^^^^^157^162^return getImpl ( N - 1 ) ;^[CLASS] ObjArray  [METHOD] peek [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^return getImpl ( size - 1 ) ;^161^^^^^157^162^return getImpl ( N - 1 ) ;^[CLASS] ObjArray  [METHOD] peek [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P14_Delete_Statement]^^161^^^^^157^162^return getImpl ( N - 1 ) ;^[CLASS] ObjArray  [METHOD] peek [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P7_Replace_Invocation]^if  ( sealed )  throw onEmptyStackTopRead (  ) ;^167^^^^^165^184^if  ( sealed )  throw onSeledMutation (  ) ;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N == 0 )  throw onEmptyStackTopRead (  ) ; ;^167^^^^^165^184^if  ( sealed )  throw onSeledMutation (  ) ;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P1_Replace_Type]^short  N = size;^168^^^^^165^184^int N = size;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^int N = newSize;^168^^^^^165^184^int N = size;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^Object tmp;Object top;^170^^^^^165^184^Object top;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^case 0: top = value; f0 = null; break;^173^^^^^165^184^case 0: top = f0; f0 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^case 0: top  =  case 0: top ;^173^^^^^165^184^case 0: top = f0; f0 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 2: f2 = value; break;case 0: top = f0; f0 = null; break;^173^^^^^165^184^case 0: top = f0; f0 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 1: f1 = value; break;case 0: top = f0; f0 = null; break;^173^^^^^165^184^case 0: top = f0; f0 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 4: top = f4; f4 = null; break;case 0: top = f0; f0 = null; break;^173^^^^^165^184^case 0: top = f0; f0 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 0: f0 = value; break;case 0: top = f0; f0 = null; break;^173^^^^^165^184^case 0: top = f0; f0 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 3: f3 = value; break;case 0: top = f0; f0 = null; break;^173^^^^^165^184^case 0: top = f0; f0 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 3: top = f3; f3 = null; break;case 0: top = f0; f0 = null; break;^173^^^^^165^184^case 0: top = f0; f0 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 1: top = f1; f1 = null; break;case 0: top = f0; f0 = null; break;^173^^^^^165^184^case 0: top = f0; f0 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 2: top = f2; f2 = null; break;case 0: top = f0; f0 = null; break;^173^^^^^165^184^case 0: top = f0; f0 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 4: f4 = value; break;case 0: top = f0; f0 = null; break;^173^^^^^165^184^case 0: top = f0; f0 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^case 0: top = f0; f0 = false; break;^173^^^^^165^184^case 0: top = f0; f0 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^case 1: top = value; f1 = null; break;^174^^^^^165^184^case 1: top = f1; f1 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^case 1: top  = null ;^174^^^^^165^184^case 1: top = f1; f1 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 2: f2 = value; break;case 1: top = f1; f1 = null; break;^174^^^^^165^184^case 1: top = f1; f1 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 1: f1 = value; break;case 1: top = f1; f1 = null; break;^174^^^^^165^184^case 1: top = f1; f1 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 4: top = f4; f4 = null; break;case 1: top = f1; f1 = null; break;^174^^^^^165^184^case 1: top = f1; f1 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 0: f0 = value; break;case 1: top = f1; f1 = null; break;^174^^^^^165^184^case 1: top = f1; f1 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 3: f3 = value; break;case 1: top = f1; f1 = null; break;^174^^^^^165^184^case 1: top = f1; f1 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 3: top = f3; f3 = null; break;case 1: top = f1; f1 = null; break;^174^^^^^165^184^case 1: top = f1; f1 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 2: top = f2; f2 = null; break;case 1: top = f1; f1 = null; break;^174^^^^^165^184^case 1: top = f1; f1 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 4: f4 = value; break;case 1: top = f1; f1 = null; break;^174^^^^^165^184^case 1: top = f1; f1 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 0: top = f0; f0 = null; break;case 1: top = f1; f1 = null; break;^174^^^^^165^184^case 1: top = f1; f1 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^case 1: top = f1; f1 = this; break;^174^^^^^165^184^case 1: top = f1; f1 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^case 2: top = obj; f2 = null; break;^175^^^^^165^184^case 2: top = f2; f2 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^case 2: top ;^175^^^^^165^184^case 2: top = f2; f2 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 2: f2 = value; break;case 2: top = f2; f2 = null; break;^175^^^^^165^184^case 2: top = f2; f2 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 1: f1 = value; break;case 2: top = f2; f2 = null; break;^175^^^^^165^184^case 2: top = f2; f2 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 4: top = f4; f4 = null; break;case 2: top = f2; f2 = null; break;^175^^^^^165^184^case 2: top = f2; f2 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 0: f0 = value; break;case 2: top = f2; f2 = null; break;^175^^^^^165^184^case 2: top = f2; f2 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 3: f3 = value; break;case 2: top = f2; f2 = null; break;^175^^^^^165^184^case 2: top = f2; f2 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 3: top = f3; f3 = null; break;case 2: top = f2; f2 = null; break;^175^^^^^165^184^case 2: top = f2; f2 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 1: top = f1; f1 = null; break;case 2: top = f2; f2 = null; break;^175^^^^^165^184^case 2: top = f2; f2 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 4: f4 = value; break;case 2: top = f2; f2 = null; break;^175^^^^^165^184^case 2: top = f2; f2 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 0: top = f0; f0 = null; break;case 2: top = f2; f2 = null; break;^175^^^^^165^184^case 2: top = f2; f2 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^case 2: top = f2; f2 = true; break;^175^^^^^165^184^case 2: top = f2; f2 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^case 3: top = top; f3 = null; break;^176^^^^^165^184^case 3: top = f3; f3 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^case 3: top ;^176^^^^^165^184^case 3: top = f3; f3 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 2: f2 = value; break;case 3: top = f3; f3 = null; break;^176^^^^^165^184^case 3: top = f3; f3 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 1: f1 = value; break;case 3: top = f3; f3 = null; break;^176^^^^^165^184^case 3: top = f3; f3 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 4: top = f4; f4 = null; break;case 3: top = f3; f3 = null; break;^176^^^^^165^184^case 3: top = f3; f3 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 0: f0 = value; break;case 3: top = f3; f3 = null; break;^176^^^^^165^184^case 3: top = f3; f3 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 3: f3 = value; break;case 3: top = f3; f3 = null; break;^176^^^^^165^184^case 3: top = f3; f3 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 1: top = f1; f1 = null; break;case 3: top = f3; f3 = null; break;^176^^^^^165^184^case 3: top = f3; f3 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 2: top = f2; f2 = null; break;case 3: top = f3; f3 = null; break;^176^^^^^165^184^case 3: top = f3; f3 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 4: f4 = value; break;case 3: top = f3; f3 = null; break;^176^^^^^165^184^case 3: top = f3; f3 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 0: top = f0; f0 = null; break;case 3: top = f3; f3 = null; break;^176^^^^^165^184^case 3: top = f3; f3 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^case 3: top = f3; f3 = false; break;^176^^^^^165^184^case 3: top = f3; f3 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^case 4: top = f3; f4 = null; break;^177^^^^^165^184^case 4: top = f4; f4 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^case 4: top ;^177^^^^^165^184^case 4: top = f4; f4 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 2: f2 = value; break;case 4: top = f4; f4 = null; break;^177^^^^^165^184^case 4: top = f4; f4 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 1: f1 = value; break;case 4: top = f4; f4 = null; break;^177^^^^^165^184^case 4: top = f4; f4 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 0: f0 = value; break;case 4: top = f4; f4 = null; break;^177^^^^^165^184^case 4: top = f4; f4 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 3: f3 = value; break;case 4: top = f4; f4 = null; break;^177^^^^^165^184^case 4: top = f4; f4 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 3: top = f3; f3 = null; break;case 4: top = f4; f4 = null; break;^177^^^^^165^184^case 4: top = f4; f4 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 1: top = f1; f1 = null; break;case 4: top = f4; f4 = null; break;^177^^^^^165^184^case 4: top = f4; f4 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 2: top = f2; f2 = null; break;case 4: top = f4; f4 = null; break;^177^^^^^165^184^case 4: top = f4; f4 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 4: f4 = value; break;case 4: top = f4; f4 = null; break;^177^^^^^165^184^case 4: top = f4; f4 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^case 0: top = f0; f0 = null; break;case 4: top = f4; f4 = null; break;^177^^^^^165^184^case 4: top = f4; f4 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^case 4: top = f4; f4 = this; break;^177^^^^^165^184^case 4: top = f4; f4 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^top = data[N  &&  FIELDS_STORE_SIZE];^179^^^^^165^184^top = data[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^top = data[size - FIELDS_STORE_SIZE];^179^^^^^165^184^top = data[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^top = data[N - size];^179^^^^^165^184^top = data[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^top = FIELDS_STORE_SIZE[N - data];^179^^^^^165^184^top = data[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^top =  data[newSize - FIELDS_STORE_SIZE];^179^^^^^165^184^top = data[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^data[N - FIELDS_STORE_SIZE] = null;top = data[N - FIELDS_STORE_SIZE];^179^^^^^165^184^top = data[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^data = new Object[N - FIELDS_STORE_SIZE];top = data[N - FIELDS_STORE_SIZE];^179^^^^^165^184^top = data[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^index = FIELDS_STORE_SIZE;top = data[N - FIELDS_STORE_SIZE];^179^^^^^165^184^top = data[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^default: data[index - FIELDS_STORE_SIZE] = value;top = data[N - FIELDS_STORE_SIZE];^179^^^^^165^184^top = data[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^alloc = FIELDS_STORE_SIZE * 2;top = data[N - FIELDS_STORE_SIZE];^179^^^^^165^184^top = data[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^data[index - FIELDS_STORE_SIZE] = value;top = data[N - FIELDS_STORE_SIZE];^179^^^^^165^184^top = data[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^data[N   instanceof   FIELDS_STORE_SIZE] = null;^180^^^^^165^184^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^data[size - FIELDS_STORE_SIZE] = null;^180^^^^^165^184^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^data[N - size] = null;^180^^^^^165^184^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^data[N - FIELDS_STORE_SIZE] = false;^180^^^^^165^184^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^data = new Object[N - FIELDS_STORE_SIZE];data[N - FIELDS_STORE_SIZE] = null;^180^^^^^165^184^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^index = FIELDS_STORE_SIZE;data[N - FIELDS_STORE_SIZE] = null;^180^^^^^165^184^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^top = data[N - FIELDS_STORE_SIZE];data[N - FIELDS_STORE_SIZE] = null;^180^^^^^165^184^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^default: data[index - FIELDS_STORE_SIZE] = value;data[N - FIELDS_STORE_SIZE] = null;^180^^^^^165^184^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^alloc = FIELDS_STORE_SIZE * 2;data[N - FIELDS_STORE_SIZE] = null;^180^^^^^165^184^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^data[index - FIELDS_STORE_SIZE] = value;data[N - FIELDS_STORE_SIZE] = null;^180^^^^^165^184^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P12_Insert_Condition]^if  ( N > FIELDS_STORE_SIZE )  { data[N - FIELDS_STORE_SIZE] = null; }^180^^^^^165^184^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P12_Insert_Condition]^if  ( N >= FIELDS_STORE_SIZE )  { data[N - FIELDS_STORE_SIZE] = null; }^180^^^^^165^184^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P7_Replace_Invocation]^case -1: throw onSeledMutation (  ) ;^172^^^^^165^184^case -1: throw onEmptyStackTopRead (  ) ;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N == 0 )  throw onEmptyStackTopRead (  ) ; ;^172^^^^^165^184^case -1: throw onEmptyStackTopRead (  ) ;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P14_Delete_Statement]^^172^173^^^^165^184^case -1: throw onEmptyStackTopRead (  ) ; case 0: top = f0; f0 = null; break;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^size = size;^182^^^^^165^184^size = N;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^size =  newSize;^182^^^^^165^184^size = N;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^size = newSize;size = N;^182^^^^^165^184^size = N;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^size = 0;size = N;^182^^^^^165^184^size = N;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^size = N + 1;size = N;^182^^^^^165^184^size = N;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^return value;^183^^^^^165^184^return top;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^return f3;^183^^^^^165^184^return top;^[CLASS] ObjArray  [METHOD] pop [RETURN_TYPE] Object   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^add ( top ) ;^188^^^^^186^189^add ( value ) ;^[CLASS] ObjArray  [METHOD] push [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P7_Replace_Invocation]^push ( value ) ;^188^^^^^186^189^add ( value ) ;^[CLASS] ObjArray  [METHOD] push [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P14_Delete_Statement]^^188^^^^^186^189^add ( value ) ;^[CLASS] ObjArray  [METHOD] push [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^setImpl ( N, value ) ;add ( value ) ;^188^^^^^186^189^add ( value ) ;^[CLASS] ObjArray  [METHOD] push [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P7_Replace_Invocation]^if  ( sealed )  throw onEmptyStackTopRead (  ) ;^193^^^^^191^200^if  ( sealed )  throw onSeledMutation (  ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P15_Unwrap_Block]^throw com.google.javascript.rhino.ObjArray.onSeledMutation();^193^194^195^196^197^191^200^if  ( sealed )  throw onSeledMutation (  ) ; int N = size; if  ( N >= FIELDS_STORE_SIZE )  { ensureCapacity ( N + 1 ) ; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P16_Remove_Block]^^193^194^195^196^197^191^200^if  ( sealed )  throw onSeledMutation (  ) ; int N = size; if  ( N >= FIELDS_STORE_SIZE )  { ensureCapacity ( N + 1 ) ; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^return true;^193^^^^^191^200^if  ( sealed )  throw onSeledMutation (  ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P1_Replace_Type]^short  N = size;^194^^^^^191^200^int N = size;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^int N = newSize;^194^^^^^191^200^int N = size;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( N < FIELDS_STORE_SIZE )  {^195^^^^^191^200^if  ( N >= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( size >= FIELDS_STORE_SIZE )  {^195^^^^^191^200^if  ( N >= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( N >= size )  {^195^^^^^191^200^if  ( N >= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( FIELDS_STORE_SIZE >= N )  {^195^^^^^191^200^if  ( N >= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P6_Replace_Expression]^if  ( N + 1 )  {^195^^^^^191^200^if  ( N >= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P9_Replace_Statement]^if  ( N > FIELDS_STORE_SIZE )  {^195^^^^^191^200^if  ( N >= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P9_Replace_Statement]^if  ( newSize > FIELDS_STORE_SIZE )  {^195^^^^^191^200^if  ( N >= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P9_Replace_Statement]^if  ( alloc <= FIELDS_STORE_SIZE )  {^195^^^^^191^200^if  ( N >= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P9_Replace_Statement]^if  ( size > FIELDS_STORE_SIZE )  {^195^^^^^191^200^if  ( N >= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P15_Unwrap_Block]^ensureCapacity((N + 1));^195^196^197^^^191^200^if  ( N >= FIELDS_STORE_SIZE )  { ensureCapacity ( N + 1 ) ; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P16_Remove_Block]^^195^196^197^^^191^200^if  ( N >= FIELDS_STORE_SIZE )  { ensureCapacity ( N + 1 ) ; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( newSize > N )  {     if  ( newSize >  ( FIELDS_STORE_SIZE )  )  {         ensureCapacity ( newSize ) ;     } }^195^^^^^191^200^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N >  ( FIELDS_STORE_SIZE )  )  {     data = new Object[N -  ( FIELDS_STORE_SIZE ) ]; }^195^^^^^191^200^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( newSize >  ( FIELDS_STORE_SIZE )  )  {     ensureCapacity ( newSize ) ; }^195^^^^^191^200^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^ensureCapacity ( N  &&  1 ) ;^196^^^^^191^200^ensureCapacity ( N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^ensureCapacity ( N  ) ;^196^^^^^191^200^ensureCapacity ( N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^ensureCapacity ( size + 1 ) ;^196^^^^^191^200^ensureCapacity ( N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P7_Replace_Invocation]^onInvalidIndex ( N + 1 ) ;^196^^^^^191^200^ensureCapacity ( N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^onInvalidIndex ( size + 1 ) ;^196^^^^^191^200^ensureCapacity ( N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P14_Delete_Statement]^^196^^^^^191^200^ensureCapacity ( N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^ensureCapacity ( newSize ) ;ensureCapacity ( N + 1 ) ;^196^^^^^191^200^ensureCapacity ( N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^ensureCapacity ( newSize + 1 ) ;^196^^^^^191^200^ensureCapacity ( N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^size = N ;^198^^^^^191^200^size = N + 1;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^size = N + 0 ;^198^^^^^191^200^size = N + 1;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^size = newSize;size = N + 1;^198^^^^^191^200^size = N + 1;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^size = N;size = N + 1;^198^^^^^191^200^size = N + 1;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^size = 0;size = N + 1;^198^^^^^191^200^size = N + 1;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^setImpl ( newSize, value ) ;^199^^^^^191^200^setImpl ( N, value ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^setImpl ( N, f3 ) ;^199^^^^^191^200^setImpl ( N, value ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^setImpl (  value ) ;^199^^^^^191^200^setImpl ( N, value ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^setImpl ( N ) ;^199^^^^^191^200^setImpl ( N, value ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^setImpl ( value, N ) ;^199^^^^^191^200^setImpl ( N, value ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P7_Replace_Invocation]^set ( N, value ) ;^199^^^^^191^200^setImpl ( N, value ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^set ( size, value ) ;^199^^^^^191^200^setImpl ( N, value ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P14_Delete_Statement]^^199^^^^^191^200^setImpl ( N, value ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^setImpl ( i, obj ) ;setImpl ( N, value ) ;^199^^^^^191^200^setImpl ( N, value ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^setImpl ( index, value ) ;setImpl ( N, value ) ;^199^^^^^191^200^setImpl ( N, value ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^add ( value ) ;setImpl ( N, value ) ;^199^^^^^191^200^setImpl ( N, value ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^setImpl ( i, null ) ;setImpl ( N, value ) ;^199^^^^^191^200^setImpl ( N, value ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P1_Replace_Type]^long  N = size;^205^^^^^190^220^int N = size;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^int N = newSize;^205^^^^^190^220^int N = size;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( ! ( 0 <= index || index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( ! ( 0 < index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N + 1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N  &  1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^if  ( ! ( FIELDS_STORE_SIZE <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + FIELDS_STORE_SIZE ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( ! ( 0 <= size && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( ! ( 0 <= index && index <= size )  )  throw onInvalidIndex ( index, N + 1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex (  N + 1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index + 1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( ! ( 0 <= N && index <= index )  )  throw onInvalidIndex ( index, N + 1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P6_Replace_Expression]^if  ( 0 <= index ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P6_Replace_Expression]^if  ( index <= N ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P6_Replace_Expression]^if  ( N + 1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( ! ( 2 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P15_Unwrap_Block]^throw com.google.javascript.rhino.ObjArray.onInvalidIndex(index, (N + 1));^206^207^208^209^210^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ; if  ( sealed )  throw onSeledMutation (  ) ; Object tmp; switch  ( index )  { case 0: if  ( N == 0 )  { f0 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P16_Remove_Block]^^206^207^208^209^210^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ; if  ( sealed )  throw onSeledMutation (  ) ; Object tmp; switch  ( index )  { case 0: if  ( N == 0 )  { f0 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N  >>  1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + i ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N  <=  1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N  ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N  !=  1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ; ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N  >=  1 ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + size ) ;^206^^^^^191^221^if  ( ! ( 0 <= index && index <= N )  )  throw onInvalidIndex ( index, N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P7_Replace_Invocation]^if  ( sealed )  throw onEmptyStackTopRead (  ) ;^207^^^^^192^222^if  ( sealed )  throw onSeledMutation (  ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P15_Unwrap_Block]^throw com.google.javascript.rhino.ObjArray.onSeledMutation();^207^208^209^210^211^192^222^if  ( sealed )  throw onSeledMutation (  ) ; Object tmp; switch  ( index )  { case 0: if  ( N == 0 )  { f0 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P16_Remove_Block]^^207^208^209^210^211^192^222^if  ( sealed )  throw onSeledMutation (  ) ; Object tmp; switch  ( index )  { case 0: if  ( N == 0 )  { f0 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N == 0 )  throw onEmptyStackTopRead (  ) ; ;^207^^^^^192^222^if  ( sealed )  throw onSeledMutation (  ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^Object top;Object tmp;^208^^^^^193^223^Object tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( N >= 0 )  { f0 = value; break; }^211^^^^^196^226^if  ( N == 0 )  { f0 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^if  ( N == 4 )  { f4 = value; break; }^211^^^^^196^226^if  ( N == 0 )  { f0 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( size == 0 )  { f0 = value; break; }^211^^^^^196^226^if  ( N == 0 )  { f0 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( N == 0 )  { f0 = top; break; }^211^^^^^196^226^if  ( N == 0 )  { f0 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( value == 0 )  { f0 = N; break; }^211^^^^^196^226^if  ( N == 0 )  { f0 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N == 2 )  { f2 = tmp; break; }^211^^^^^196^226^if  ( N == 0 )  { f0 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P15_Unwrap_Block]^f0 = value; break;^211^212^213^214^^196^226^if  ( N == 0 )  { f0 = value; break; } tmp = f0; f0 = value; value = tmp; case 1: if  ( N == 1 )  { f1 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P16_Remove_Block]^^211^212^213^214^^196^226^if  ( N == 0 )  { f0 = value; break; } tmp = f0; f0 = value; value = tmp; case 1: if  ( N == 1 )  { f1 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 2 )  {     f2 = value;     break; }^211^^^^^196^226^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 1 )  {     f1 = value;     break; }^211^^^^^196^226^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 3 )  {     f3 = null;     break; }^211^^^^^196^226^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 3 )  {     f3 = value;     break; }^211^^^^^196^226^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 4 )  {     f4 = value;     break; }^211^^^^^196^226^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 4 )  {     f4 = null;     break; }^211^^^^^196^226^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 2 )  {     f2 = null;     break; }^211^^^^^196^226^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 1 )  {     f1 = null;     break; }^211^^^^^196^226^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 0 )  {     f0 = null;     break; }^211^^^^^196^226^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( N == 0 )  { f0 = f4; break; }^211^^^^^196^226^if  ( N == 0 )  { f0 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N =^211^^^^^196^226^if  ( N == 0 )  { f0 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( N != 1 )  { f1 = value; break; }^214^^^^^199^229^if  ( N == 1 )  { f1 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^if  ( N == 2 )  { f2 = value; break; }^214^^^^^199^229^if  ( N == 1 )  { f1 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( size == 1 )  { f1 = value; break; }^214^^^^^199^229^if  ( N == 1 )  { f1 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( N == 1 )  { f1 = top; break; }^214^^^^^199^229^if  ( N == 1 )  { f1 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( value == 1 )  { f1 = N; break; }^214^^^^^199^229^if  ( N == 1 )  { f1 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N == 3 )  { f3 = value; break; }^214^^^^^199^229^if  ( N == 1 )  { f1 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P15_Unwrap_Block]^f1 = value; break;^214^215^216^217^^199^229^if  ( N == 1 )  { f1 = value; break; } tmp = f1; f1 = value; value = tmp; case 2: if  ( N == 2 )  { f2 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P16_Remove_Block]^^214^215^216^217^^199^229^if  ( N == 1 )  { f1 = value; break; } tmp = f1; f1 = value; value = tmp; case 2: if  ( N == 2 )  { f2 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 0 )  {     f0 = value;     break; }^214^^^^^199^229^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 2 )  {     f2 = value;     break; }^214^^^^^199^229^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 3 )  {     f3 = null;     break; }^214^^^^^199^229^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 3 )  {     f3 = value;     break; }^214^^^^^199^229^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 4 )  {     f4 = value;     break; }^214^^^^^199^229^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 4 )  {     f4 = null;     break; }^214^^^^^199^229^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 2 )  {     f2 = null;     break; }^214^^^^^199^229^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 1 )  {     f1 = null;     break; }^214^^^^^199^229^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 0 )  {     f0 = null;     break; }^214^^^^^199^229^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( N == 1 )  { f1 = obj; break; }^214^^^^^199^229^if  ( N == 1 )  { f1 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N =^214^^^^^199^229^if  ( N == 1 )  { f1 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( N != 2 )  { f2 = value; break; }^217^^^^^202^232^if  ( N == 2 )  { f2 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^if  ( N == 0 )  { f0 = value; break; }^217^^^^^202^232^if  ( N == 2 )  { f2 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( newSize == 2 )  { f2 = value; break; }^217^^^^^202^232^if  ( N == 2 )  { f2 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( N == 2 )  { f2 = tmp; break; }^217^^^^^202^232^if  ( N == 2 )  { f2 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( value == 2 )  { f2 = N; break; }^217^^^^^202^232^if  ( N == 2 )  { f2 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N == 2 / 3 )  { f2 / 3 = value; break; }^217^^^^^202^232^if  ( N == 2 )  { f2 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P15_Unwrap_Block]^f2 = value; break;^217^218^219^220^^202^232^if  ( N == 2 )  { f2 = value; break; } tmp = f2; f2 = value; value = tmp; case 3: if  ( N == 3 )  { f3 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P16_Remove_Block]^^217^218^219^220^^202^232^if  ( N == 2 )  { f2 = value; break; } tmp = f2; f2 = value; value = tmp; case 3: if  ( N == 3 )  { f3 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 0 )  {     f0 = value;     break; }^217^^^^^202^232^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 1 )  {     f1 = value;     break; }^217^^^^^202^232^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 3 )  {     f3 = null;     break; }^217^^^^^202^232^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 3 )  {     f3 = value;     break; }^217^^^^^202^232^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 4 )  {     f4 = value;     break; }^217^^^^^202^232^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 4 )  {     f4 = null;     break; }^217^^^^^202^232^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 2 )  {     f2 = null;     break; }^217^^^^^202^232^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 1 )  {     f1 = null;     break; }^217^^^^^202^232^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 0 )  {     f0 = null;     break; }^217^^^^^202^232^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( N == 2 )  { f2 = obj; break; }^217^^^^^202^232^if  ( N == 2 )  { f2 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N =^217^^^^^202^232^if  ( N == 2 )  { f2 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( N != 3 )  { f3 = value; break; }^220^^^^^205^235^if  ( N == 3 )  { f3 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^if  ( N == -1 )  { f-1 = value; break; }^220^^^^^205^235^if  ( N == 3 )  { f3 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( size == 3 )  { f3 = value; break; }^220^^^^^205^235^if  ( N == 3 )  { f3 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( N == 3 )  { f3 = f4; break; }^220^^^^^205^235^if  ( N == 3 )  { f3 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( value == 3 )  { f3 = N; break; }^220^^^^^205^235^if  ( N == 3 )  { f3 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N == 0 )  { f0 = obj; break; }^220^^^^^205^235^if  ( N == 3 )  { f3 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P15_Unwrap_Block]^f3 = value; break;^220^221^222^223^^205^235^if  ( N == 3 )  { f3 = value; break; } tmp = f3; f3 = value; value = tmp; case 4: if  ( N == 4 )  { f4 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P16_Remove_Block]^^220^221^222^223^^205^235^if  ( N == 3 )  { f3 = value; break; } tmp = f3; f3 = value; value = tmp; case 4: if  ( N == 4 )  { f4 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 0 )  {     f0 = value;     break; }^220^^^^^205^235^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 2 )  {     f2 = value;     break; }^220^^^^^205^235^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 1 )  {     f1 = value;     break; }^220^^^^^205^235^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 3 )  {     f3 = null;     break; }^220^^^^^205^235^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 4 )  {     f4 = value;     break; }^220^^^^^205^235^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 4 )  {     f4 = null;     break; }^220^^^^^205^235^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 2 )  {     f2 = null;     break; }^220^^^^^205^235^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 1 )  {     f1 = null;     break; }^220^^^^^205^235^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 0 )  {     f0 = null;     break; }^220^^^^^205^235^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( N == 3 )  { f3 = obj; break; }^220^^^^^205^235^if  ( N == 3 )  { f3 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N =^220^^^^^205^235^if  ( N == 3 )  { f3 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( N <= 4 )  { f4 = value; break; }^223^^^^^208^238^if  ( N == 4 )  { f4 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^if  ( N == index )  { findex = value; break; }^223^^^^^208^238^if  ( N == 4 )  { f4 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( size == 4 )  { f4 = value; break; }^223^^^^^208^238^if  ( N == 4 )  { f4 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( N == 4 )  { f4 = top; break; }^223^^^^^208^238^if  ( N == 4 )  { f4 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( value == 4 )  { f4 = N; break; }^223^^^^^208^238^if  ( N == 4 )  { f4 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N == 2 )  { f2 = value; break; }^223^^^^^208^238^if  ( N == 4 )  { f4 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 0 )  {     f0 = value;     break; }^223^^^^^208^238^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 2 )  {     f2 = value;     break; }^223^^^^^208^238^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 1 )  {     f1 = value;     break; }^223^^^^^208^238^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 3 )  {     f3 = null;     break; }^223^^^^^208^238^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 3 )  {     f3 = value;     break; }^223^^^^^208^238^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 4 )  {     f4 = null;     break; }^223^^^^^208^238^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 2 )  {     f2 = null;     break; }^223^^^^^208^238^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 1 )  {     f1 = null;     break; }^223^^^^^208^238^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 0 )  {     f0 = null;     break; }^223^^^^^208^238^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( N == 4 )  { f4 = obj; break; }^223^^^^^208^238^if  ( N == 4 )  { f4 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N =^223^^^^^208^238^if  ( N == 4 )  { f4 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( index == N )  {^229^^^^^214^244^if  ( index != N )  {^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( size != N )  {^229^^^^^214^244^if  ( index != N )  {^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( index != size )  {^229^^^^^214^244^if  ( index != N )  {^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P6_Replace_Expression]^if  ( index - FIELDS_STORE_SIZE )  {^229^^^^^214^244^if  ( index != N )  {^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P6_Replace_Expression]^if  ( index -  ( FIELDS_STORE_SIZE )  + 1 )  {^229^^^^^214^244^if  ( index != N )  {^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P6_Replace_Expression]^if  ( N - index )  {^229^^^^^214^244^if  ( index != N )  {^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( index = N )  {^229^^^^^214^244^if  ( index != N )  {^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P15_Unwrap_Block]^java.lang.System.arraycopy(data, (index - (com.google.javascript.rhino.ObjArray.FIELDS_STORE_SIZE)), data, ((index - (com.google.javascript.rhino.ObjArray.FIELDS_STORE_SIZE)) + 1), (N - index));^229^230^231^232^233^214^244^if  ( index != N )  { System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P16_Remove_Block]^^229^230^231^232^233^214^244^if  ( index != N )  { System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( alloc <=  ( FIELDS_STORE_SIZE )  )  {     alloc =  ( FIELDS_STORE_SIZE )  * 2; }else {     alloc *= 2; }^229^^^^^214^244^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( index != N )  {     arraycopy ( data,  (  ( index -  ( FIELDS_STORE_SIZE )  )  + 1 ) , data,  ( index -  ( FIELDS_STORE_SIZE )  ) ,  ( N - index )  ) ; }^229^^^^^214^244^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N >  ( FIELDS_STORE_SIZE )  )  {     data = new Object[N -  ( FIELDS_STORE_SIZE ) ]; }^229^^^^^214^244^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index  |  FIELDS_STORE_SIZE + 1, N - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index  ||  FIELDS_STORE_SIZE + 1, N - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N  &&  index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + index, N - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^System.arraycopy ( data, size - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, size - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^System.arraycopy ( data, index - size, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^System.arraycopy ( data - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1 - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^System.arraycopy (  index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^System.arraycopy ( data, index -  data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^System.arraycopy ( data, N - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, index - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^System.arraycopy ( FIELDS_STORE_SIZE, index - data, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P14_Delete_Statement]^^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( alloc <=  ( FIELDS_STORE_SIZE )  )  {     alloc =  ( FIELDS_STORE_SIZE )  * 2; }else {     alloc *= 2; }^230^^^^^215^245^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( index != N )  {     arraycopy ( data,  ( index -  ( FIELDS_STORE_SIZE )  ) , data,  (  ( index -  ( FIELDS_STORE_SIZE )  )  + 1 ) ,  ( N - index )  ) ; }^230^^^^^215^245^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( index != N )  {     arraycopy ( data,  (  ( index -  ( FIELDS_STORE_SIZE )  )  + 1 ) , data,  ( index -  ( FIELDS_STORE_SIZE )  ) ,  ( N - index )  ) ; }^230^^^^^215^245^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N >  ( FIELDS_STORE_SIZE )  )  {     data = new Object[N -  ( FIELDS_STORE_SIZE ) ]; }^230^^^^^215^245^[Delete]^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( N == 0 )  { f0 = tmp; break; }^211^^^^^196^226^if  ( N == 0 )  { f0 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^tmp  =  tmp ;^212^^^^^197^227^tmp = f0; f0 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^tmp = f1; f1 = value; value = tmp;tmp = f0; f0 = value; value = tmp;^212^^^^^197^227^tmp = f0; f0 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^tmp = f2; f2 = value; value = tmp;tmp = f0; f0 = value; value = tmp;^212^^^^^197^227^tmp = f0; f0 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^tmp = f3; f3 = value; value = tmp;tmp = f0; f0 = value; value = tmp;^212^^^^^197^227^tmp = f0; f0 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^tmp = f4; f4 = value; value = tmp;tmp = f0; f0 = value; value = tmp;^212^^^^^197^227^tmp = f0; f0 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^tmp = f0; f0 = obj; value = tmp;^212^^^^^197^227^tmp = f0; f0 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^tmp =  f0; f0^212^^^^^197^227^tmp = f0; f0 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^tmp = f0; f0 = value; value = value;^212^^^^^197^227^tmp = f0; f0 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( N == 1 )  { f1 = tmp; break; }^214^^^^^199^229^if  ( N == 1 )  { f1 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^tmp = value; f1 = value; value = tmp;^215^^^^^200^230^tmp = f1; f1 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^tmp ;^215^^^^^200^230^tmp = f1; f1 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^tmp = f2; f2 = value; value = tmp;tmp = f1; f1 = value; value = tmp;^215^^^^^200^230^tmp = f1; f1 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^tmp = f3; f3 = value; value = tmp;tmp = f1; f1 = value; value = tmp;^215^^^^^200^230^tmp = f1; f1 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^tmp = f4; f4 = value; value = tmp;tmp = f1; f1 = value; value = tmp;^215^^^^^200^230^tmp = f1; f1 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^tmp = f0; f0 = value; value = tmp;tmp = f1; f1 = value; value = tmp;^215^^^^^200^230^tmp = f1; f1 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^tmp = f1; f1 = f4; value = tmp;^215^^^^^200^230^tmp = f1; f1 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^tmp =  f1; f1^215^^^^^200^230^tmp = f1; f1 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^tmp = f1; f1 = value; value = value;^215^^^^^200^230^tmp = f1; f1 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( N == 2 )  { f2 = f4; break; }^217^^^^^202^232^if  ( N == 2 )  { f2 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^tmp = value; f2 = value; value = tmp;^218^^^^^203^233^tmp = f2; f2 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^tmp ;^218^^^^^203^233^tmp = f2; f2 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^tmp = f1; f1 = value; value = tmp;tmp = f2; f2 = value; value = tmp;^218^^^^^203^233^tmp = f2; f2 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^tmp = f3; f3 = value; value = tmp;tmp = f2; f2 = value; value = tmp;^218^^^^^203^233^tmp = f2; f2 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^tmp = f4; f4 = value; value = tmp;tmp = f2; f2 = value; value = tmp;^218^^^^^203^233^tmp = f2; f2 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^tmp = f0; f0 = value; value = tmp;tmp = f2; f2 = value; value = tmp;^218^^^^^203^233^tmp = f2; f2 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^tmp = f2; f2 = top; value = tmp;^218^^^^^203^233^tmp = f2; f2 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^tmp =  f2; f2^218^^^^^203^233^tmp = f2; f2 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^tmp = f2; f2 = value; value = f4;^218^^^^^203^233^tmp = f2; f2 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( N == 3 )  { f3 = top; break; }^220^^^^^205^235^if  ( N == 3 )  { f3 = value; break; }^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^tmp = value; f3 = value; value = tmp;^221^^^^^206^236^tmp = f3; f3 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^tmp  =  tmp ;^221^^^^^206^236^tmp = f3; f3 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^tmp = f1; f1 = value; value = tmp;tmp = f3; f3 = value; value = tmp;^221^^^^^206^236^tmp = f3; f3 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^tmp = f2; f2 = value; value = tmp;tmp = f3; f3 = value; value = tmp;^221^^^^^206^236^tmp = f3; f3 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^tmp = f4; f4 = value; value = tmp;tmp = f3; f3 = value; value = tmp;^221^^^^^206^236^tmp = f3; f3 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^tmp = f0; f0 = value; value = tmp;tmp = f3; f3 = value; value = tmp;^221^^^^^206^236^tmp = f3; f3 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^tmp = f3; f3 = top; value = tmp;^221^^^^^206^236^tmp = f3; f3 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^tmp =  f3; f3^221^^^^^206^236^tmp = f3; f3 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^tmp = f3; f3 = value; value = obj;^221^^^^^206^236^tmp = f3; f3 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^tmp = value; f4 = value; value = tmp;^224^^^^^209^239^tmp = f4; f4 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^tmp ;^224^^^^^209^239^tmp = f4; f4 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^tmp = f1; f1 = value; value = tmp;tmp = f4; f4 = value; value = tmp;^224^^^^^209^239^tmp = f4; f4 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^tmp = f2; f2 = value; value = tmp;tmp = f4; f4 = value; value = tmp;^224^^^^^209^239^tmp = f4; f4 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^tmp = f3; f3 = value; value = tmp;tmp = f4; f4 = value; value = tmp;^224^^^^^209^239^tmp = f4; f4 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^tmp = f0; f0 = value; value = tmp;tmp = f4; f4 = value; value = tmp;^224^^^^^209^239^tmp = f4; f4 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^tmp = f4; f4 = f4; value = tmp;^224^^^^^209^239^tmp = f4; f4 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^tmp =  f4; f4^224^^^^^209^239^tmp = f4; f4 = value; value = tmp;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^index  = null ;^226^^^^^211^241^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^data[N - FIELDS_STORE_SIZE] = null;index = FIELDS_STORE_SIZE;^226^^^^^211^241^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^data = new Object[N - FIELDS_STORE_SIZE];index = FIELDS_STORE_SIZE;^226^^^^^211^241^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^top = data[N - FIELDS_STORE_SIZE];index = FIELDS_STORE_SIZE;^226^^^^^211^241^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^default: data[index - FIELDS_STORE_SIZE] = value;index = FIELDS_STORE_SIZE;^226^^^^^211^241^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^alloc = FIELDS_STORE_SIZE * 2;index = FIELDS_STORE_SIZE;^226^^^^^211^241^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^data[index - FIELDS_STORE_SIZE] = value;index = FIELDS_STORE_SIZE;^226^^^^^211^241^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P12_Insert_Condition]^if  ( N > FIELDS_STORE_SIZE )  { index = FIELDS_STORE_SIZE; }^226^^^^^211^241^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P12_Insert_Condition]^if  ( newSize > FIELDS_STORE_SIZE )  { index = FIELDS_STORE_SIZE; }^226^^^^^211^241^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P12_Insert_Condition]^if  ( alloc <= FIELDS_STORE_SIZE )  { index = FIELDS_STORE_SIZE; }^226^^^^^211^241^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P12_Insert_Condition]^if  ( N >= FIELDS_STORE_SIZE )  { index = FIELDS_STORE_SIZE; }^226^^^^^211^241^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P12_Insert_Condition]^if  ( size > FIELDS_STORE_SIZE )  { index = FIELDS_STORE_SIZE; }^226^^^^^211^241^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^data[index  >=  FIELDS_STORE_SIZE] = value;^234^^^^^219^249^data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^data[size - FIELDS_STORE_SIZE] = value;^234^^^^^219^249^data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^data[index - FIELDS_STORE_SIZE] = top;^234^^^^^219^249^data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^data[index - size] = value;^234^^^^^219^249^data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^data[index - value] = FIELDS_STORE_SIZE;^234^^^^^219^249^data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^data[index - FIELDS_STORE_SIZE]  =  data[index - FIELDS_STORE_SIZE] ;^234^^^^^219^249^data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^data[N - FIELDS_STORE_SIZE] = null;data[index - FIELDS_STORE_SIZE] = value;^234^^^^^219^249^data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^index = FIELDS_STORE_SIZE;data[index - FIELDS_STORE_SIZE] = value;^234^^^^^219^249^data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^top = data[N - FIELDS_STORE_SIZE];data[index - FIELDS_STORE_SIZE] = value;^234^^^^^219^249^data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^default: data[index - FIELDS_STORE_SIZE] = value;data[index - FIELDS_STORE_SIZE] = value;^234^^^^^219^249^data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^alloc = FIELDS_STORE_SIZE * 2;data[index - FIELDS_STORE_SIZE] = value;^234^^^^^219^249^data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P12_Insert_Condition]^if  ( N > FIELDS_STORE_SIZE )  { data[index - FIELDS_STORE_SIZE] = value; }^234^^^^^219^249^data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P12_Insert_Condition]^if  ( N >= FIELDS_STORE_SIZE )  { data[index - FIELDS_STORE_SIZE] = value; }^234^^^^^219^249^data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P12_Insert_Condition]^if  ( size > FIELDS_STORE_SIZE )  { data[index - FIELDS_STORE_SIZE] = value; }^234^^^^^219^249^data[index - FIELDS_STORE_SIZE] = value;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^ensureCapacity ( N  >>  1 ) ;^228^^^^^213^243^ensureCapacity ( N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^ensureCapacity ( N  ) ;^228^^^^^213^243^ensureCapacity ( N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^ensureCapacity ( size + 1 ) ;^228^^^^^213^243^ensureCapacity ( N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P7_Replace_Invocation]^onInvalidIndex ( N + 1 ) ;^228^^^^^213^243^ensureCapacity ( N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^onInvalidIndex ( size + 1 ) ;^228^^^^^213^243^ensureCapacity ( N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P14_Delete_Statement]^^228^^^^^213^243^ensureCapacity ( N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^ensureCapacity ( newSize ) ;ensureCapacity ( N + 1 ) ;^228^^^^^213^243^ensureCapacity ( N + 1 ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index  >=  FIELDS_STORE_SIZE + 1, N - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N  ^  index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + i, N - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^System.arraycopy ( data, index - N, data, index - FIELDS_STORE_SIZE + 1, FIELDS_STORE_SIZE - index ) ;^230^231^232^^^215^245^System.arraycopy ( data, index - FIELDS_STORE_SIZE, data, index - FIELDS_STORE_SIZE + 1, N - index ) ;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^size = N + index;^236^^^^^221^251^size = N + 1;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^size = size + 1;^236^^^^^221^251^size = N + 1;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^size = N + 0 ;^236^^^^^221^251^size = N + 1;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^size = newSize;size = N + 1;^236^^^^^221^251^size = N + 1;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^size = N;size = N + 1;^236^^^^^221^251^size = N + 1;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^size = 0;size = N + 1;^236^^^^^221^251^size = N + 1;^[CLASS] ObjArray  [METHOD] add [RETURN_TYPE] void   int index Object value [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P1_Replace_Type]^long  N = size;^242^^^^^227^257^int N = size;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^int N = newSize;^242^^^^^227^257^int N = size;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( ! ( 0 <= index || index < N )  )  throw onInvalidIndex ( index, N ) ;^243^^^^^228^258^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( ! ( 0 < index && index < N )  )  throw onInvalidIndex ( index, N ) ;^243^^^^^228^258^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( ! ( 0 <= index && index == N )  )  throw onInvalidIndex ( index, N ) ;^243^^^^^228^258^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^if  ( ! ( 9 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^243^^^^^228^258^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, N ) ;^243^^^^^228^258^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex (  N ) ;^243^^^^^228^258^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index ) ;^243^^^^^228^258^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( ! ( 0 <= N && index < index )  )  throw onInvalidIndex ( index, N ) ;^243^^^^^228^258^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P6_Replace_Expression]^if  ( 0 <= index ) ;^243^^^^^228^258^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P6_Replace_Expression]^if  ( index < N ) ;^243^^^^^228^258^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P7_Replace_Invocation]^if  ( ! ( 0 <= index && index < N )  )  throw toArray ( index, N ) ;^243^^^^^228^258^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( ! ( 4 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^243^^^^^228^258^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P15_Unwrap_Block]^throw com.google.javascript.rhino.ObjArray.onInvalidIndex(index, N);^243^244^245^246^247^228^258^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ; if  ( sealed )  throw onSeledMutation (  ) ; --N; switch  ( index )  { case 0: if  ( N == 0 )  { f0 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P16_Remove_Block]^^243^244^245^246^247^228^258^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ; if  ( sealed )  throw onSeledMutation (  ) ; --N; switch  ( index )  { case 0: if  ( N == 0 )  { f0 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( ! ( 0 <= size && index < N )  )  throw onInvalidIndex ( index, N ) ;^243^^^^^228^258^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( ! ( 0 <= index && index < size )  )  throw onInvalidIndex ( index, size ) ; ;^243^^^^^228^258^if  ( ! ( 0 <= index && index < N )  )  throw onInvalidIndex ( index, N ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P7_Replace_Invocation]^if  ( sealed )  throw onEmptyStackTopRead (  ) ;^244^^^^^229^259^if  ( sealed )  throw onSeledMutation (  ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P15_Unwrap_Block]^throw com.google.javascript.rhino.ObjArray.onSeledMutation();^244^245^246^247^248^229^259^if  ( sealed )  throw onSeledMutation (  ) ; --N; switch  ( index )  { case 0: if  ( N == 0 )  { f0 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P16_Remove_Block]^^244^245^246^247^248^229^259^if  ( sealed )  throw onSeledMutation (  ) ; --N; switch  ( index )  { case 0: if  ( N == 0 )  { f0 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^return ;^244^^^^^229^259^if  ( sealed )  throw onSeledMutation (  ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( N != 0 )  { f0 = null; break; }^248^^^^^233^263^if  ( N == 0 )  { f0 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^if  ( N == i )  { fi = null; break; }^248^^^^^233^263^if  ( N == 0 )  { f0 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( size == 0 )  { f0 = null; break; }^248^^^^^233^263^if  ( N == 0 )  { f0 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N == 3 )  { f3 = null; break; }^248^^^^^233^263^if  ( N == 0 )  { f0 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P15_Unwrap_Block]^f0 = null; break;^248^249^250^251^^233^263^if  ( N == 0 )  { f0 = null; break; } f0 = f1; case 1: if  ( N == 1 )  { f1 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P16_Remove_Block]^^248^249^250^251^^233^263^if  ( N == 0 )  { f0 = null; break; } f0 = f1; case 1: if  ( N == 1 )  { f1 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 0 )  {     f0 = value;     break; }^248^^^^^233^263^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 2 )  {     f2 = value;     break; }^248^^^^^233^263^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 1 )  {     f1 = value;     break; }^248^^^^^233^263^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 3 )  {     f3 = null;     break; }^248^^^^^233^263^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 3 )  {     f3 = value;     break; }^248^^^^^233^263^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 4 )  {     f4 = value;     break; }^248^^^^^233^263^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 4 )  {     f4 = null;     break; }^248^^^^^233^263^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 2 )  {     f2 = null;     break; }^248^^^^^233^263^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 1 )  {     f1 = null;     break; }^248^^^^^233^263^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N == 0 )  { f0 = false; break; }^248^^^^^233^263^if  ( N == 0 )  { f0 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( N != 1 )  { f1 = null; break; }^251^^^^^236^266^if  ( N == 1 )  { f1 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( size == 1 )  { f1 = null; break; }^251^^^^^236^266^if  ( N == 1 )  { f1 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N == 2 )  { f2 = null; break; }^251^^^^^236^266^if  ( N == 1 )  { f1 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P15_Unwrap_Block]^f1 = null; break;^251^252^253^254^^236^266^if  ( N == 1 )  { f1 = null; break; } f1 = f2; case 2: if  ( N == 2 )  { f2 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P16_Remove_Block]^^251^252^253^254^^236^266^if  ( N == 1 )  { f1 = null; break; } f1 = f2; case 2: if  ( N == 2 )  { f2 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 0 )  {     f0 = value;     break; }^251^^^^^236^266^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 2 )  {     f2 = value;     break; }^251^^^^^236^266^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 1 )  {     f1 = value;     break; }^251^^^^^236^266^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 3 )  {     f3 = null;     break; }^251^^^^^236^266^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 3 )  {     f3 = value;     break; }^251^^^^^236^266^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 4 )  {     f4 = value;     break; }^251^^^^^236^266^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 4 )  {     f4 = null;     break; }^251^^^^^236^266^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 2 )  {     f2 = null;     break; }^251^^^^^236^266^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 0 )  {     f0 = null;     break; }^251^^^^^236^266^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N == 1 )  { f1 = false; break; }^251^^^^^236^266^if  ( N == 1 )  { f1 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( N != 2 )  { f2 = null; break; }^254^^^^^239^269^if  ( N == 2 )  { f2 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( newSize == 2 )  { f2 = null; break; }^254^^^^^239^269^if  ( N == 2 )  { f2 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( size == 3 )  { f3 = null; break; }^254^^^^^239^269^if  ( N == 2 )  { f2 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P15_Unwrap_Block]^f2 = null; break;^254^255^256^257^^239^269^if  ( N == 2 )  { f2 = null; break; } f2 = f3; case 3: if  ( N == 3 )  { f3 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P16_Remove_Block]^^254^255^256^257^^239^269^if  ( N == 2 )  { f2 = null; break; } f2 = f3; case 3: if  ( N == 3 )  { f3 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 0 )  {     f0 = value;     break; }^254^^^^^239^269^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 2 )  {     f2 = value;     break; }^254^^^^^239^269^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 1 )  {     f1 = value;     break; }^254^^^^^239^269^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 3 )  {     f3 = null;     break; }^254^^^^^239^269^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 3 )  {     f3 = value;     break; }^254^^^^^239^269^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 4 )  {     f4 = value;     break; }^254^^^^^239^269^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 4 )  {     f4 = null;     break; }^254^^^^^239^269^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 1 )  {     f1 = null;     break; }^254^^^^^239^269^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 0 )  {     f0 = null;     break; }^254^^^^^239^269^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N == 2 )  { f2 = this; break; }^254^^^^^239^269^if  ( N == 2 )  { f2 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( N != 3 )  { f3 = null; break; }^257^^^^^242^272^if  ( N == 3 )  { f3 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^if  ( N == FIELDS_STORE_SIZE )  { fFIELDS_STORE_SIZE = null; break; }^257^^^^^242^272^if  ( N == 3 )  { f3 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( newSize == 3 )  { f3 = null; break; }^257^^^^^242^272^if  ( N == 3 )  { f3 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N == 0 )  { f0 = null; break; }^257^^^^^242^272^if  ( N == 3 )  { f3 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P15_Unwrap_Block]^f3 = null; break;^257^258^259^260^^242^272^if  ( N == 3 )  { f3 = null; break; } f3 = f4; case 4: if  ( N == 4 )  { f4 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P16_Remove_Block]^^257^258^259^260^^242^272^if  ( N == 3 )  { f3 = null; break; } f3 = f4; case 4: if  ( N == 4 )  { f4 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 0 )  {     f0 = value;     break; }^257^^^^^242^272^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 2 )  {     f2 = value;     break; }^257^^^^^242^272^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 1 )  {     f1 = value;     break; }^257^^^^^242^272^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 3 )  {     f3 = value;     break; }^257^^^^^242^272^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 4 )  {     f4 = value;     break; }^257^^^^^242^272^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 4 )  {     f4 = null;     break; }^257^^^^^242^272^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 2 )  {     f2 = null;     break; }^257^^^^^242^272^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 1 )  {     f1 = null;     break; }^257^^^^^242^272^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 0 )  {     f0 = null;     break; }^257^^^^^242^272^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N == 3 )  { f3 = false; break; }^257^^^^^242^272^if  ( N == 3 )  { f3 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( N != 4 )  { f4 = null; break; }^260^^^^^245^275^if  ( N == 4 )  { f4 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^if  ( N == newSize )  { fnewSize = null; break; }^260^^^^^245^275^if  ( N == 4 )  { f4 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( size == 4 )  { f4 = null; break; }^260^^^^^245^275^if  ( N == 4 )  { f4 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N == 4 + 1 )  { f4 + 1 = null; break; }^260^^^^^245^275^if  ( N == 4 )  { f4 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 0 )  {     f0 = value;     break; }^260^^^^^245^275^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 2 )  {     f2 = value;     break; }^260^^^^^245^275^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 1 )  {     f1 = value;     break; }^260^^^^^245^275^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 3 )  {     f3 = null;     break; }^260^^^^^245^275^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 3 )  {     f3 = value;     break; }^260^^^^^245^275^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 4 )  {     f4 = value;     break; }^260^^^^^245^275^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 2 )  {     f2 = null;     break; }^260^^^^^245^275^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 1 )  {     f1 = null;     break; }^260^^^^^245^275^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N == 0 )  {     f0 = null;     break; }^260^^^^^245^275^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N == 4 )  { f4 = false; break; }^260^^^^^245^275^if  ( N == 4 )  { f4 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^if  ( index < N )  {^265^^^^^250^280^if  ( index != N )  {^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^if  ( size != N )  {^265^^^^^250^280^if  ( index != N )  {^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P6_Replace_Expression]^if  ( index -  ( FIELDS_STORE_SIZE )  + 1 )  {^265^^^^^250^280^if  ( index != N )  {^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P6_Replace_Expression]^if  ( index - FIELDS_STORE_SIZE )  {^265^^^^^250^280^if  ( index != N )  {^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P6_Replace_Expression]^if  ( N - index )  {^265^^^^^250^280^if  ( index != N )  {^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P15_Unwrap_Block]^java.lang.System.arraycopy(data, ((index - (com.google.javascript.rhino.ObjArray.FIELDS_STORE_SIZE)) + 1), data, (index - (com.google.javascript.rhino.ObjArray.FIELDS_STORE_SIZE)), (N - index));^265^266^267^268^269^250^280^if  ( index != N )  { System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P16_Remove_Block]^^265^266^267^268^269^250^280^if  ( index != N )  { System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^System.arraycopy ( data, index  >=  FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^System.arraycopy ( data, index  >  FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N  |  index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^System.arraycopy ( data, index - FIELDS_STORE_SIZE , data, index - FIELDS_STORE_SIZE, N - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^System.arraycopy ( data, size - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, size - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^System.arraycopy ( data, index - size + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^System.arraycopy ( data - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^System.arraycopy (  index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index -  N - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^System.arraycopy ( data, N - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, index - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^System.arraycopy ( index, data - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^System.arraycopy ( data, index - N + 1, data, index - FIELDS_STORE_SIZE, FIELDS_STORE_SIZE - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P14_Delete_Statement]^^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( alloc <=  ( FIELDS_STORE_SIZE )  )  {     alloc =  ( FIELDS_STORE_SIZE )  * 2; }else {     alloc *= 2; }^266^^^^^251^281^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( index != N )  {     arraycopy ( data,  ( index -  ( FIELDS_STORE_SIZE )  ) , data,  (  ( index -  ( FIELDS_STORE_SIZE )  )  + 1 ) ,  ( N - index )  ) ; }^266^^^^^251^281^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( index != N )  {     arraycopy ( data,  (  ( index -  ( FIELDS_STORE_SIZE )  )  + 1 ) , data,  ( index -  ( FIELDS_STORE_SIZE )  ) ,  ( N - index )  ) ; }^266^^^^^251^281^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P13_Insert_Block]^if  ( N >  ( FIELDS_STORE_SIZE )  )  {     data = new Object[N -  ( FIELDS_STORE_SIZE ) ]; }^266^^^^^251^281^[Delete]^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N == 0 )  { f0 = true; break; }^248^^^^^233^263^if  ( N == 0 )  { f0 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^f0 = value;^249^^^^^234^264^f0 = f1;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^f0  =  f0 ;^249^^^^^234^264^f0 = f1;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^f2 = f3;f0 = f1;^249^^^^^234^264^f0 = f1;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^f1 = f2;f0 = f1;^249^^^^^234^264^f0 = f1;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^f3 = f4;f0 = f1;^249^^^^^234^264^f0 = f1;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N == 1 )  { f1 = true; break; }^251^^^^^236^266^if  ( N == 1 )  { f1 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^f1 = value;^252^^^^^237^267^f1 = f2;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^f1 ;^252^^^^^237^267^f1 = f2;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^f2 = f3;f1 = f2;^252^^^^^237^267^f1 = f2;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^f3 = f4;f1 = f2;^252^^^^^237^267^f1 = f2;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^f0 = f1;f1 = f2;^252^^^^^237^267^f1 = f2;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N == 2 )  { f2 = true; break; }^254^^^^^239^269^if  ( N == 2 )  { f2 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^f2 = value;^255^^^^^240^270^f2 = f3;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^f2  = null ;^255^^^^^240^270^f2 = f3;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^f1 = f2;f2 = f3;^255^^^^^240^270^f2 = f3;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^f3 = f4;f2 = f3;^255^^^^^240^270^f2 = f3;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^f0 = f1;f2 = f3;^255^^^^^240^270^f2 = f3;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^if  ( N == 3 )  { f3 = true; break; }^257^^^^^242^272^if  ( N == 3 )  { f3 = null; break; }^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^f3 = obj;^258^^^^^243^273^f3 = f4;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^f3  =  f3 ;^258^^^^^243^273^f3 = f4;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^f2 = f3;f3 = f4;^258^^^^^243^273^f3 = f4;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^f1 = f2;f3 = f4;^258^^^^^243^273^f3 = f4;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^f0 = f1;f3 = f4;^258^^^^^243^273^f3 = f4;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^f4 = data[index];^261^^^^^246^276^f4 = data[0];^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^f4 = data[1];^261^^^^^246^276^f4 = data[0];^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^index = size;^263^^^^^248^278^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^index ;^263^^^^^248^278^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^data[N - FIELDS_STORE_SIZE] = null;index = FIELDS_STORE_SIZE;^263^^^^^248^278^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^data = new Object[N - FIELDS_STORE_SIZE];index = FIELDS_STORE_SIZE;^263^^^^^248^278^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^top = data[N - FIELDS_STORE_SIZE];index = FIELDS_STORE_SIZE;^263^^^^^248^278^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^default: data[index - FIELDS_STORE_SIZE] = value;index = FIELDS_STORE_SIZE;^263^^^^^248^278^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^alloc = FIELDS_STORE_SIZE * 2;index = FIELDS_STORE_SIZE;^263^^^^^248^278^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^data[index - FIELDS_STORE_SIZE] = value;index = FIELDS_STORE_SIZE;^263^^^^^248^278^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P12_Insert_Condition]^if  ( N > FIELDS_STORE_SIZE )  { index = FIELDS_STORE_SIZE; }^263^^^^^248^278^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P12_Insert_Condition]^if  ( newSize > FIELDS_STORE_SIZE )  { index = FIELDS_STORE_SIZE; }^263^^^^^248^278^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P12_Insert_Condition]^if  ( alloc <= FIELDS_STORE_SIZE )  { index = FIELDS_STORE_SIZE; }^263^^^^^248^278^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P12_Insert_Condition]^if  ( N >= FIELDS_STORE_SIZE )  { index = FIELDS_STORE_SIZE; }^263^^^^^248^278^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P12_Insert_Condition]^if  ( size > FIELDS_STORE_SIZE )  { index = FIELDS_STORE_SIZE; }^263^^^^^248^278^index = FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^data[N  &&  FIELDS_STORE_SIZE] = null;^270^^^^^255^285^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^data[size - FIELDS_STORE_SIZE] = null;^270^^^^^255^285^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^data[N - size] = null;^270^^^^^255^285^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^data[N - FIELDS_STORE_SIZE] = true;^270^^^^^255^285^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^data = new Object[N - FIELDS_STORE_SIZE];data[N - FIELDS_STORE_SIZE] = null;^270^^^^^255^285^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^index = FIELDS_STORE_SIZE;data[N - FIELDS_STORE_SIZE] = null;^270^^^^^255^285^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^top = data[N - FIELDS_STORE_SIZE];data[N - FIELDS_STORE_SIZE] = null;^270^^^^^255^285^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^default: data[index - FIELDS_STORE_SIZE] = value;data[N - FIELDS_STORE_SIZE] = null;^270^^^^^255^285^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^alloc = FIELDS_STORE_SIZE * 2;data[N - FIELDS_STORE_SIZE] = null;^270^^^^^255^285^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^data[index - FIELDS_STORE_SIZE] = value;data[N - FIELDS_STORE_SIZE] = null;^270^^^^^255^285^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P12_Insert_Condition]^if  ( N > FIELDS_STORE_SIZE )  { data[N - FIELDS_STORE_SIZE] = null; }^270^^^^^255^285^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P12_Insert_Condition]^if  ( N >= FIELDS_STORE_SIZE )  { data[N - FIELDS_STORE_SIZE] = null; }^270^^^^^255^285^data[N - FIELDS_STORE_SIZE] = null;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^System.arraycopy ( data, index  ||  FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N  <=  index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^System.arraycopy ( FIELDS_STORE_SIZE, index - data + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^266^267^268^^^251^281^System.arraycopy ( data, index - FIELDS_STORE_SIZE + 1, data, index - FIELDS_STORE_SIZE, N - index ) ;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^size = newSize;^272^^^^^257^287^size = N;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^size = newSize;size = N;^272^^^^^257^287^size = N;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^size = 0;size = N;^272^^^^^257^287^size = N;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^size = N + 1;size = N;^272^^^^^257^287^size = N;^[CLASS] ObjArray  [METHOD] remove [RETURN_TYPE] void   int index [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P7_Replace_Invocation]^if  ( sealed )  throw onEmptyStackTopRead (  ) ;^277^^^^^275^283^if  ( sealed )  throw onSeledMutation (  ) ;^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P15_Unwrap_Block]^throw com.google.javascript.rhino.ObjArray.onSeledMutation();^277^278^279^280^281^275^283^if  ( sealed )  throw onSeledMutation (  ) ; int N = size; for  ( int i = 0; i != N; ++i )  { setImpl ( i, null ) ; }^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P16_Remove_Block]^^277^278^279^280^281^275^283^if  ( sealed )  throw onSeledMutation (  ) ; int N = size; for  ( int i = 0; i != N; ++i )  { setImpl ( i, null ) ; }^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P1_Replace_Type]^short  N = size;^278^^^^^275^283^int N = size;^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^int N = newSize;^278^^^^^275^283^int N = size;^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P1_Replace_Type]^for  (  long  i = 0; i != N; ++i )  {^279^^^^^275^283^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P2_Replace_Operator]^for  ( int i = 0; i == N; ++i )  {^279^^^^^275^283^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^for  ( int i = 4; i != N; ++i )  {^279^^^^^275^283^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^for  ( newSizent i = 0; i != N; ++i )  {^279^^^^^275^283^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^for  ( Nnt i = 0; i != i; ++i )  {^279^^^^^275^283^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^for  ( int i = 0; i != size; ++i )  {^279^^^^^275^283^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P5_Replace_Variable]^setImpl ( size, null ) ;^280^^^^^275^283^setImpl ( i, null ) ;^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P7_Replace_Invocation]^set ( i, null ) ;^280^^^^^275^283^setImpl ( i, null ) ;^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P14_Delete_Statement]^^280^^^^^275^283^setImpl ( i, null ) ;^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^setImpl ( i, obj ) ;setImpl ( i, null ) ;^280^^^^^275^283^setImpl ( i, null ) ;^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^setImpl ( index, value ) ;setImpl ( i, null ) ;^280^^^^^275^283^setImpl ( i, null ) ;^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^setImpl ( N, value ) ;setImpl ( i, null ) ;^280^^^^^275^283^setImpl ( i, null ) ;^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P1_Replace_Type]^for  (  short  i = 0; i != N; ++i )  {^279^^^^^275^283^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^for  ( int i = FIELDS_STORE_SIZE; i != N; ++i )  {^279^^^^^275^283^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^setImpl ( newSize, null ) ;^280^^^^^275^283^setImpl ( i, null ) ;^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P3_Replace_Literal]^size = N;^282^^^^^275^283^size = 0;^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P8_Replace_Mix]^size = 0 ;^282^^^^^275^283^size = 0;^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^size = newSize;size = 0;^282^^^^^275^283^size = 0;^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^size = N;size = 0;^282^^^^^275^283^size = 0;^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^size = N + 1;size = 0;^282^^^^^275^283^size = 0;^[CLASS] ObjArray  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  data  
[P11_Insert_Donor_Statement]^Object[] tmp = new Object[alloc];Object[] array = new Object[size];^287^^^^^285^290^Object[] array = new Object[size];^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  array  data  
[P3_Replace_Literal]^toArray ( array, -4 ) ;^288^^^^^285^290^toArray ( array, 0 ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  array  data  
[P5_Replace_Variable]^toArray ( data, 0 ) ;^288^^^^^285^290^toArray ( array, 0 ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  array  data  
[P7_Replace_Invocation]^set ( array, 0 ) ;^288^^^^^285^290^toArray ( array, 0 ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  array  data  
[P14_Delete_Statement]^^288^289^^^^285^290^toArray ( array, 0 ) ; return array;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  array  data  
[P5_Replace_Variable]^return data;^289^^^^^285^290^return array;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] Object[]   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  array  data  
[P3_Replace_Literal]^toArray ( array, -2 ) ;^294^^^^^292^295^toArray ( array, 0 ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  array  data  
[P5_Replace_Variable]^toArray ( data, 0 ) ;^294^^^^^292^295^toArray ( array, 0 ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  array  data  
[P7_Replace_Invocation]^set ( array, 0 ) ;^294^^^^^292^295^toArray ( array, 0 ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  array  data  
[P14_Delete_Statement]^^294^^^^^292^295^toArray ( array, 0 ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  size  Object[]  array  data  
[P1_Replace_Type]^short  N = size;^300^^^^^298^312^int N = size;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^int N = offset;^300^^^^^298^312^int N = size;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P3_Replace_Literal]^case 5: array[offset + size] = fsize;^305^^^^^298^312^case 5: array[offset + 4] = f4;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^case 5: data[offset + 4] = f4;^305^^^^^298^312^case 5: array[offset + 4] = f4;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^case 5: array[index + 4] = f4;^305^^^^^298^312^case 5: array[offset + 4] = f4;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^case 5: array[offset + 4] = value;^305^^^^^298^312^case 5: array[offset + 4] = f4;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^case 5: f4[offset + 4] = array;^305^^^^^298^312^case 5: array[offset + 4] = f4;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P8_Replace_Mix]^case 5: array[offset + 5] = f5;^305^^^^^298^312^case 5: array[offset + 4] = f4;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P11_Insert_Donor_Statement]^case 2: array[offset + 1] = f1;case 5: array[offset + 4] = f4;^305^^^^^298^312^case 5: array[offset + 4] = f4;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P11_Insert_Donor_Statement]^case 3: array[offset + 2] = f2;case 5: array[offset + 4] = f4;^305^^^^^298^312^case 5: array[offset + 4] = f4;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P11_Insert_Donor_Statement]^case 4: array[offset + 3] = f3;case 5: array[offset + 4] = f4;^305^^^^^298^312^case 5: array[offset + 4] = f4;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P11_Insert_Donor_Statement]^case 1: array[offset + 0] = f0;case 5: array[offset + 4] = f4;^305^^^^^298^312^case 5: array[offset + 4] = f4;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P3_Replace_Literal]^case 4: array[offset + N] = fN;^306^^^^^298^312^case 4: array[offset + 3] = f3;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^case 4: data[offset + 3] = f3;^306^^^^^298^312^case 4: array[offset + 3] = f3;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^case 4: array[offset + 3] = value;^306^^^^^298^312^case 4: array[offset + 3] = f3;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^case 4: f3[offset + 3] = array;^306^^^^^298^312^case 4: array[offset + 3] = f3;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P8_Replace_Mix]^case 4: array[offset + 6] = f6;^306^^^^^298^312^case 4: array[offset + 3] = f3;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P11_Insert_Donor_Statement]^case 2: array[offset + 1] = f1;case 4: array[offset + 3] = f3;^306^^^^^298^312^case 4: array[offset + 3] = f3;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P11_Insert_Donor_Statement]^case 3: array[offset + 2] = f2;case 4: array[offset + 3] = f3;^306^^^^^298^312^case 4: array[offset + 3] = f3;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P11_Insert_Donor_Statement]^case 5: array[offset + 4] = f4;case 4: array[offset + 3] = f3;^306^^^^^298^312^case 4: array[offset + 3] = f3;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P11_Insert_Donor_Statement]^case 1: array[offset + 0] = f0;case 4: array[offset + 3] = f3;^306^^^^^298^312^case 4: array[offset + 3] = f3;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P3_Replace_Literal]^case 3: array[offset ] = f2;^307^^^^^298^312^case 3: array[offset + 2] = f2;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^case 3: array[size + 2] = f2;^307^^^^^298^312^case 3: array[offset + 2] = f2;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^case 3: array[offset + 2] = obj;^307^^^^^298^312^case 3: array[offset + 2] = f2;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^case 3: f2[offset + 2] = array;^307^^^^^298^312^case 3: array[offset + 2] = f2;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P8_Replace_Mix]^case 3: array[offset + 2L] = f2L;^307^^^^^298^312^case 3: array[offset + 2] = f2;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P11_Insert_Donor_Statement]^case 2: array[offset + 1] = f1;case 3: array[offset + 2] = f2;^307^^^^^298^312^case 3: array[offset + 2] = f2;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P11_Insert_Donor_Statement]^case 4: array[offset + 3] = f3;case 3: array[offset + 2] = f2;^307^^^^^298^312^case 3: array[offset + 2] = f2;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P11_Insert_Donor_Statement]^case 5: array[offset + 4] = f4;case 3: array[offset + 2] = f2;^307^^^^^298^312^case 3: array[offset + 2] = f2;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P11_Insert_Donor_Statement]^case 1: array[offset + 0] = f0;case 3: array[offset + 2] = f2;^307^^^^^298^312^case 3: array[offset + 2] = f2;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P3_Replace_Literal]^case 2: array[offset + N] = fN;^308^^^^^298^312^case 2: array[offset + 1] = f1;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^case 2: data[offset + 1] = f1;^308^^^^^298^312^case 2: array[offset + 1] = f1;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^case 2: array[size + 1] = f1;^308^^^^^298^312^case 2: array[offset + 1] = f1;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^case 2: array[offset + 1] = value;^308^^^^^298^312^case 2: array[offset + 1] = f1;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^case 2: f1[offset + 1] = array;^308^^^^^298^312^case 2: array[offset + 1] = f1;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P8_Replace_Mix]^case 2: array[offset + 1 >> 3] = f1 >> 3;^308^^^^^298^312^case 2: array[offset + 1] = f1;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P11_Insert_Donor_Statement]^case 3: array[offset + 2] = f2;case 2: array[offset + 1] = f1;^308^^^^^298^312^case 2: array[offset + 1] = f1;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P11_Insert_Donor_Statement]^case 4: array[offset + 3] = f3;case 2: array[offset + 1] = f1;^308^^^^^298^312^case 2: array[offset + 1] = f1;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P11_Insert_Donor_Statement]^case 5: array[offset + 4] = f4;case 2: array[offset + 1] = f1;^308^^^^^298^312^case 2: array[offset + 1] = f1;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P11_Insert_Donor_Statement]^case 1: array[offset + 0] = f0;case 2: array[offset + 1] = f1;^308^^^^^298^312^case 2: array[offset + 1] = f1;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P3_Replace_Literal]^case 1: array[offset ] = f0;^309^^^^^298^312^case 1: array[offset + 0] = f0;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^case 1: data[offset + 0] = f0;^309^^^^^298^312^case 1: array[offset + 0] = f0;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^case 1: array[offset + 0] = obj;^309^^^^^298^312^case 1: array[offset + 0] = f0;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^case 1: f0[offset + 0] = array;^309^^^^^298^312^case 1: array[offset + 0] = f0;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P8_Replace_Mix]^case 1: array[offset + 0 << 4] = f0 << 4;^309^^^^^298^312^case 1: array[offset + 0] = f0;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P11_Insert_Donor_Statement]^case 2: array[offset + 1] = f1;case 1: array[offset + 0] = f0;^309^^^^^298^312^case 1: array[offset + 0] = f0;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P11_Insert_Donor_Statement]^case 3: array[offset + 2] = f2;case 1: array[offset + 0] = f0;^309^^^^^298^312^case 1: array[offset + 0] = f0;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P11_Insert_Donor_Statement]^case 4: array[offset + 3] = f3;case 1: array[offset + 0] = f0;^309^^^^^298^312^case 1: array[offset + 0] = f0;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P11_Insert_Donor_Statement]^case 5: array[offset + 4] = f4;case 1: array[offset + 0] = f0;^309^^^^^298^312^case 1: array[offset + 0] = f0;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P2_Replace_Operator]^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N  >>  FIELDS_STORE_SIZE ) ;^303^304^^^^298^312^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P3_Replace_Literal]^System.arraycopy ( data, size, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^303^304^^^^298^312^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^System.arraycopy ( data, 0, data, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^303^304^^^^298^312^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^System.arraycopy ( data, 0, array, size + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^303^304^^^^298^312^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, offset - FIELDS_STORE_SIZE ) ;^303^304^^^^298^312^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^System.arraycopy ( array, 0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^303^304^^^^298^312^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^System.arraycopy ( data, 0, array, offset + size, N - FIELDS_STORE_SIZE ) ;^303^304^^^^298^312^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^System.arraycopy ( data, 0,  offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^303^304^^^^298^312^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^System.arraycopy ( data, 0, array + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^303^304^^^^298^312^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE - FIELDS_STORE_SIZE ) ;^303^304^^^^298^312^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^System.arraycopy (  0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^303^304^^^^298^312^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^System.arraycopy ( data, 0, array, offset +  N - FIELDS_STORE_SIZE ) ;^303^304^^^^298^312^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^System.arraycopy ( array, 0, data, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^303^304^^^^298^312^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^System.arraycopy ( data, 0, offset, array + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^303^304^^^^298^312^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P5_Replace_Variable]^System.arraycopy ( data, 0, array, offset + N, FIELDS_STORE_SIZE - FIELDS_STORE_SIZE ) ;^303^304^^^^298^312^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P14_Delete_Statement]^^303^304^^^^298^312^System.arraycopy ( data, 0, array, offset + FIELDS_STORE_SIZE, N - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] toArray [RETURN_TYPE] void   Object[] array int offset [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  i  index  newSize  offset  size  Object[]  array  data  
[P1_Replace_Type]^short  required = minimalCapacity - FIELDS_STORE_SIZE;^316^^^^^315^343^int required = minimalCapacity - FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^int required = minimalCapacity  ||  FIELDS_STORE_SIZE;^316^^^^^315^343^int required = minimalCapacity - FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^int required = offset - FIELDS_STORE_SIZE;^316^^^^^315^343^int required = minimalCapacity - FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^int required = minimalCapacity - offset;^316^^^^^315^343^int required = minimalCapacity - FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^int required = FIELDS_STORE_SIZE - minimalCapacity;^316^^^^^315^343^int required = minimalCapacity - FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^int required = newSize - FIELDS_STORE_SIZE;^316^^^^^315^343^int required = minimalCapacity - FIELDS_STORE_SIZE;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P15_Unwrap_Block]^throw new java.lang.IllegalArgumentException();^317^318^319^320^321^315^343^if   (" ")  ; if  ( data == null )  { int alloc = FIELDS_STORE_SIZE * 2; if  ( alloc < required )  { alloc = required; }^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P16_Remove_Block]^^317^318^319^320^321^315^343^if   (" ")  ; if  ( data == null )  { int alloc = FIELDS_STORE_SIZE * 2; if  ( alloc < required )  { alloc = required; }^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^if  ( data != null )  {^318^^^^^315^343^if  ( data == null )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( tmp == null )  {^318^^^^^315^343^if  ( data == null )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P6_Replace_Expression]^if  ( FIELDS_STORE_SIZE * 2 )  {^318^^^^^315^343^if  ( data == null )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P6_Replace_Expression]^if  ( alloc < required )  {^318^^^^^315^343^if  ( data == null )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P6_Replace_Expression]^if  ( alloc <= FIELDS_STORE_SIZE )  {^318^^^^^315^343^if  ( data == null )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P6_Replace_Expression]^if  ( size > FIELDS_STORE_SIZE )  {^318^^^^^315^343^if  ( data == null )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P6_Replace_Expression]^if  ( size - FIELDS_STORE_SIZE )  {^318^^^^^315^343^if  ( data == null )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^if  ( data == true )  {^318^^^^^315^343^if  ( data == null )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P15_Unwrap_Block]^int alloc = (com.google.javascript.rhino.ObjArray.FIELDS_STORE_SIZE) * 2; if (alloc < required) {    alloc = required;}; data = new java.lang.Object[alloc];^318^319^320^321^322^315^343^if  ( data == null )  { int alloc = FIELDS_STORE_SIZE * 2; if  ( alloc < required )  { alloc = required; }^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P16_Remove_Block]^^318^319^320^321^322^315^343^if  ( data == null )  { int alloc = FIELDS_STORE_SIZE * 2; if  ( alloc < required )  { alloc = required; }^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^if  ( alloc <= required )  {^326^^^^^318^342^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( newSize < required )  {^326^^^^^318^342^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( alloc < size )  {^326^^^^^318^342^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( required < alloc )  {^326^^^^^318^342^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P6_Replace_Expression]^if  ( alloc <= FIELDS_STORE_SIZE )  {^326^^^^^318^342^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P6_Replace_Expression]^if  ( FIELDS_STORE_SIZE * 2 )  {^326^^^^^318^342^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P6_Replace_Expression]^if  ( size > FIELDS_STORE_SIZE )  {^326^^^^^318^342^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P6_Replace_Expression]^if  ( size - FIELDS_STORE_SIZE )  {^326^^^^^318^342^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^if  ( alloc < newSize )  {^326^^^^^318^342^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P15_Unwrap_Block]^if (alloc <= (com.google.javascript.rhino.ObjArray.FIELDS_STORE_SIZE)) {    alloc = (com.google.javascript.rhino.ObjArray.FIELDS_STORE_SIZE) * 2;}else {    alloc *= 2;}; if (alloc < required) {    alloc = required;}; java.lang.Object[] tmp = new java.lang.Object[alloc]; if ((size) > (com.google.javascript.rhino.ObjArray.FIELDS_STORE_SIZE)) {    java.lang.System.arraycopy(data, 0, tmp, 0, ((size) - (com.google.javascript.rhino.ObjArray.FIELDS_STORE_SIZE)));}; data = tmp;^326^327^328^329^330^318^342^if  ( alloc < required )  { if  ( alloc <= FIELDS_STORE_SIZE )  { alloc = FIELDS_STORE_SIZE * 2; } else { alloc *= 2; }^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P16_Remove_Block]^^326^327^328^329^330^318^342^if  ( alloc < required )  { if  ( alloc <= FIELDS_STORE_SIZE )  { alloc = FIELDS_STORE_SIZE * 2; } else { alloc *= 2; }^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^if  ( alloc < FIELDS_STORE_SIZE )  {^327^^^^^318^342^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( offset <= FIELDS_STORE_SIZE )  {^327^^^^^318^342^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( alloc <= required )  {^327^^^^^318^342^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( FIELDS_STORE_SIZE <= alloc )  {^327^^^^^318^342^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P6_Replace_Expression]^if  ( FIELDS_STORE_SIZE * 2 )  {^327^^^^^318^342^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P9_Replace_Statement]^if  ( N > FIELDS_STORE_SIZE )  {^327^^^^^318^342^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P9_Replace_Statement]^if  ( newSize > FIELDS_STORE_SIZE )  {^327^^^^^318^342^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P9_Replace_Statement]^if  ( N >= FIELDS_STORE_SIZE )  {^327^^^^^318^342^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P9_Replace_Statement]^if  ( size > FIELDS_STORE_SIZE )  {^327^^^^^318^342^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P15_Unwrap_Block]^alloc = (com.google.javascript.rhino.ObjArray.FIELDS_STORE_SIZE) * 2;^327^328^329^330^331^318^342^if  ( alloc <= FIELDS_STORE_SIZE )  { alloc = FIELDS_STORE_SIZE * 2; } else { alloc *= 2; }^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P16_Remove_Block]^^327^328^329^330^331^318^342^if  ( alloc <= FIELDS_STORE_SIZE )  { alloc = FIELDS_STORE_SIZE * 2; } else { alloc *= 2; }^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P13_Insert_Block]^if  ( index != N )  {     arraycopy ( data,  ( index -  ( FIELDS_STORE_SIZE )  ) , data,  (  ( index -  ( FIELDS_STORE_SIZE )  )  + 1 ) ,  ( N - index )  ) ; }^327^^^^^318^342^[Delete]^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P13_Insert_Block]^if  (  ( size )  >  ( FIELDS_STORE_SIZE )  )  {     arraycopy ( data, 0, tmp, 0,  (  ( size )  -  ( FIELDS_STORE_SIZE )  )  ) ; }^327^^^^^318^342^[Delete]^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P13_Insert_Block]^if  ( index != N )  {     arraycopy ( data,  (  ( index -  ( FIELDS_STORE_SIZE )  )  + 1 ) , data,  ( index -  ( FIELDS_STORE_SIZE )  ) ,  ( N - index )  ) ; }^327^^^^^318^342^[Delete]^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P13_Insert_Block]^if  ( N >  ( FIELDS_STORE_SIZE )  )  {     data = new Object[N -  ( FIELDS_STORE_SIZE ) ]; }^327^^^^^318^342^[Delete]^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^alloc *= -6;^330^^^^^318^342^alloc *= 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^alloc *= 0;^330^^^^^318^342^alloc *= 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^alloc - = FIELDS_STORE_SIZE * 2;^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^alloc = FIELDS_STORE_SIZE * 0;^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^alloc = required * 2;^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^alloc = FIELDS_STORE_SIZE * 3;^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P11_Insert_Donor_Statement]^data[N - FIELDS_STORE_SIZE] = null;alloc = FIELDS_STORE_SIZE * 2;^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P11_Insert_Donor_Statement]^index = FIELDS_STORE_SIZE;alloc = FIELDS_STORE_SIZE * 2;^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P11_Insert_Donor_Statement]^top = data[N - FIELDS_STORE_SIZE];alloc = FIELDS_STORE_SIZE * 2;^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P11_Insert_Donor_Statement]^data[index - FIELDS_STORE_SIZE] = value;alloc = FIELDS_STORE_SIZE * 2;^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P12_Insert_Condition]^if  ( N > FIELDS_STORE_SIZE )  { alloc = FIELDS_STORE_SIZE * 2; }^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P12_Insert_Condition]^if  ( newSize > FIELDS_STORE_SIZE )  { alloc = FIELDS_STORE_SIZE * 2; }^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P12_Insert_Condition]^if  ( alloc <= FIELDS_STORE_SIZE )  { alloc = FIELDS_STORE_SIZE * 2; }^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P12_Insert_Condition]^if  ( N >= FIELDS_STORE_SIZE )  { alloc = FIELDS_STORE_SIZE * 2; }^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P12_Insert_Condition]^if  ( size > FIELDS_STORE_SIZE )  { alloc = FIELDS_STORE_SIZE * 2; }^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^if  ( alloc <= required )  {^332^^^^^318^342^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( newSize < required )  {^332^^^^^318^342^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( alloc < size )  {^332^^^^^318^342^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( required < alloc )  {^332^^^^^318^342^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^if  ( alloc < newSize )  {^332^^^^^318^342^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P15_Unwrap_Block]^alloc = required;^332^333^334^^^318^342^if  ( alloc < required )  { alloc = required; }^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P16_Remove_Block]^^332^333^334^^^318^342^if  ( alloc < required )  { alloc = required; }^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^alloc = minimalCapacity;^333^^^^^318^342^alloc = required;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^alloc =  newSize;^333^^^^^318^342^alloc = required;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P12_Insert_Condition]^if  ( alloc < required )  { alloc = required; }^333^^^^^318^342^alloc = required;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^if  ( size >= FIELDS_STORE_SIZE )  {^336^^^^^318^342^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( required > FIELDS_STORE_SIZE )  {^336^^^^^318^342^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( size > newSize )  {^336^^^^^318^342^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( FIELDS_STORE_SIZE > size )  {^336^^^^^318^342^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P6_Replace_Expression]^if  ( size - FIELDS_STORE_SIZE )  {^336^^^^^318^342^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^if  ( size > required )  {^336^^^^^318^342^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P9_Replace_Statement]^if  ( N > FIELDS_STORE_SIZE )  {^336^^^^^318^342^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P9_Replace_Statement]^if  ( newSize > FIELDS_STORE_SIZE )  {^336^^^^^318^342^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P9_Replace_Statement]^if  ( alloc <= FIELDS_STORE_SIZE )  {^336^^^^^318^342^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P9_Replace_Statement]^if  ( N >= FIELDS_STORE_SIZE )  {^336^^^^^318^342^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P15_Unwrap_Block]^java.lang.System.arraycopy(data, 0, tmp, 0, ((size) - (com.google.javascript.rhino.ObjArray.FIELDS_STORE_SIZE)));^336^337^338^339^^318^342^if  ( size > FIELDS_STORE_SIZE )  { System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ; }^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P16_Remove_Block]^^336^337^338^339^^318^342^if  ( size > FIELDS_STORE_SIZE )  { System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ; }^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P13_Insert_Block]^if  ( alloc <=  ( FIELDS_STORE_SIZE )  )  {     alloc =  ( FIELDS_STORE_SIZE )  * 2; }else {     alloc *= 2; }^336^^^^^318^342^[Delete]^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P13_Insert_Block]^if  ( N >  ( FIELDS_STORE_SIZE )  )  {     data = new Object[N -  ( FIELDS_STORE_SIZE ) ]; }^336^^^^^318^342^[Delete]^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^System.arraycopy ( data, 0, tmp, 0, size  ^  FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^System.arraycopy ( data, -4, tmp, -4, size - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^System.arraycopy ( data, -7, tmp, -7, size - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( data, 0, array, 0, size - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( array, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( data, 0, tmp, 0, required - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( data, 0, tmp, 0, size - required ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( data, 0,  0, size - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy (  0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( data, 0, tmp, 0 - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( tmp, 0, data, 0, size - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( size, 0, tmp, 0, data - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( data, 0, tmp, 0, FIELDS_STORE_SIZE - size ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^System.arraycopy ( data, 0, tmp, 0, size - size ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P14_Delete_Statement]^^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P13_Insert_Block]^if  (  ( size )  >  ( FIELDS_STORE_SIZE )  )  {     arraycopy ( data, 0, tmp, 0,  (  ( size )  -  ( FIELDS_STORE_SIZE )  )  ) ; }^337^^^^^318^342^[Delete]^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^alloc + = FIELDS_STORE_SIZE * 2;^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^alloc = FIELDS_STORE_SIZE * newSize;^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^alloc = FIELDS_STORE_SIZE * 4;^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^alloc *= required;^330^^^^^318^342^alloc *= 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^alloc *= 2 * 0;^330^^^^^318^342^alloc *= 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^alloc =  offset;^333^^^^^318^342^alloc = required;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^data = data;^340^^^^^318^342^data = tmp;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^data =  array;^340^^^^^318^342^data = tmp;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P11_Insert_Donor_Statement]^Object[] array = new Object[size];Object[] tmp = new Object[alloc];^335^^^^^318^342^Object[] tmp = new Object[alloc];^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^System.arraycopy ( data, 0, tmp, 0, size  !=  FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^System.arraycopy ( data, 7, tmp, 7, size - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^System.arraycopy ( data, , tmp, , size - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( tmp, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( data, 0, tmp, 0, offset - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( data, 0, tmp, 0, size - offset ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( data, 0, size, 0, tmp - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( size <= FIELDS_STORE_SIZE )  {^327^^^^^318^342^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^alloc *= 10;^330^^^^^318^342^alloc *= 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^alloc *= 4;^330^^^^^318^342^alloc *= 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^alloc = FIELDS_STORE_SIZE * 2 << 3;^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^if  ( size == FIELDS_STORE_SIZE )  {^336^^^^^318^342^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( size > size )  {^336^^^^^318^342^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^System.arraycopy ( data, 0, tmp, 0, size  &&  FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^System.arraycopy ( data, required, tmp, required, size - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^System.arraycopy ( data, size, tmp, size, size - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( data, 0, FIELDS_STORE_SIZE, 0, size - tmp ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^alloc = FIELDS_STORE_SIZE * minimalCapacity;^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^alloc = FIELDS_STORE_SIZE * 2L;^328^^^^^318^342^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^alloc *= index;^330^^^^^318^342^alloc *= 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^alloc *= 2 * 2;^330^^^^^318^342^alloc *= 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^alloc = size;^333^^^^^318^342^alloc = required;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P1_Replace_Type]^short  alloc = data.length;^325^^^^^318^342^int alloc = data.length;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^int alloc = size;^325^^^^^318^342^int alloc = data.length;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^int alloc = data;^325^^^^^318^342^int alloc = data.length;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^int alloc = data.length.length;^325^^^^^318^342^int alloc = data.length;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^int alloc = offset;^325^^^^^318^342^int alloc = data.length;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^System.arraycopy ( data, 0, tmp, 0, size  <  FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^System.arraycopy ( data, 5, tmp, 5, size - FIELDS_STORE_SIZE ) ;^337^338^^^^318^342^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^if  ( alloc == required )  {^320^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( newSize < required )  {^320^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( required < alloc )  {^320^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^if  ( alloc < newSize )  {^320^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P15_Unwrap_Block]^alloc = required;^320^321^322^^^315^343^if  ( alloc < required )  { alloc = required; }^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P16_Remove_Block]^^320^321^322^^^315^343^if  ( alloc < required )  { alloc = required; }^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^alloc = minimalCapacity;^321^^^^^315^343^alloc = required;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^alloc =  size;^321^^^^^315^343^alloc = required;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P12_Insert_Condition]^if  ( alloc < required )  { alloc = required; }^321^^^^^315^343^alloc = required;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^alloc =  newSize;^321^^^^^315^343^alloc = required;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^data =  new Object[size];^323^^^^^315^343^data = new Object[alloc];^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P11_Insert_Donor_Statement]^data = new Object[N - FIELDS_STORE_SIZE];data = new Object[alloc];^323^^^^^315^343^data = new Object[alloc];^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P1_Replace_Type]^short  alloc = FIELDS_STORE_SIZE * 2;^319^^^^^315^343^int alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^int + alloc = FIELDS_STORE_SIZE * 2;^319^^^^^315^343^int alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^int alloc = FIELDS_STORE_SIZE * minimalCapacity;^319^^^^^315^343^int alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^int alloc = required * 2;^319^^^^^315^343^int alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^int alloc = size * 2;^319^^^^^315^343^int alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P12_Insert_Condition]^if  ( N > FIELDS_STORE_SIZE )  { int alloc = FIELDS_STORE_SIZE * 2; }^319^^^^^315^343^int alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P12_Insert_Condition]^if  ( newSize > FIELDS_STORE_SIZE )  { int alloc = FIELDS_STORE_SIZE * 2; }^319^^^^^315^343^int alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P12_Insert_Condition]^if  ( alloc <= FIELDS_STORE_SIZE )  { int alloc = FIELDS_STORE_SIZE * 2; }^319^^^^^315^343^int alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P12_Insert_Condition]^if  ( N >= FIELDS_STORE_SIZE )  { int alloc = FIELDS_STORE_SIZE * 2; }^319^^^^^315^343^int alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P12_Insert_Condition]^if  ( size > FIELDS_STORE_SIZE )  { int alloc = FIELDS_STORE_SIZE * 2; }^319^^^^^315^343^int alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^if  ( alloc <= required )  {^320^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( alloc < size )  {^320^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^if  ( alloc < offset )  {^320^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^alloc =  offset;^321^^^^^315^343^alloc = required;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^if  ( alloc <= required )  {^326^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( size < required )  {^326^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( alloc < size )  {^326^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( required < alloc )  {^326^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P6_Replace_Expression]^if  ( alloc <= FIELDS_STORE_SIZE )  {^326^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P6_Replace_Expression]^if  ( FIELDS_STORE_SIZE * 2 )  {^326^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P6_Replace_Expression]^if  ( size > FIELDS_STORE_SIZE )  {^326^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P6_Replace_Expression]^if  ( size - FIELDS_STORE_SIZE )  {^326^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P15_Unwrap_Block]^if (alloc <= (com.google.javascript.rhino.ObjArray.FIELDS_STORE_SIZE)) {    alloc = (com.google.javascript.rhino.ObjArray.FIELDS_STORE_SIZE) * 2;}else {    alloc *= 2;}; if (alloc < required) {    alloc = required;}; java.lang.Object[] tmp = new java.lang.Object[alloc]; if ((size) > (com.google.javascript.rhino.ObjArray.FIELDS_STORE_SIZE)) {    java.lang.System.arraycopy(data, 0, tmp, 0, ((size) - (com.google.javascript.rhino.ObjArray.FIELDS_STORE_SIZE)));}; data = tmp;^326^327^328^329^330^315^343^if  ( alloc < required )  { if  ( alloc <= FIELDS_STORE_SIZE )  { alloc = FIELDS_STORE_SIZE * 2; } else { alloc *= 2; }^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P16_Remove_Block]^^326^327^328^329^330^315^343^if  ( alloc < required )  { if  ( alloc <= FIELDS_STORE_SIZE )  { alloc = FIELDS_STORE_SIZE * 2; } else { alloc *= 2; }^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^if  ( alloc < FIELDS_STORE_SIZE )  {^327^^^^^315^343^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( alloc <= size )  {^327^^^^^315^343^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( FIELDS_STORE_SIZE <= alloc )  {^327^^^^^315^343^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P6_Replace_Expression]^if  ( FIELDS_STORE_SIZE * 2 )  {^327^^^^^315^343^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P9_Replace_Statement]^if  ( N > FIELDS_STORE_SIZE )  {^327^^^^^315^343^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P9_Replace_Statement]^if  ( newSize > FIELDS_STORE_SIZE )  {^327^^^^^315^343^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P9_Replace_Statement]^if  ( N >= FIELDS_STORE_SIZE )  {^327^^^^^315^343^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P9_Replace_Statement]^if  ( size > FIELDS_STORE_SIZE )  {^327^^^^^315^343^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P15_Unwrap_Block]^alloc = (com.google.javascript.rhino.ObjArray.FIELDS_STORE_SIZE) * 2;^327^328^329^330^331^315^343^if  ( alloc <= FIELDS_STORE_SIZE )  { alloc = FIELDS_STORE_SIZE * 2; } else { alloc *= 2; }^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P16_Remove_Block]^^327^328^329^330^331^315^343^if  ( alloc <= FIELDS_STORE_SIZE )  { alloc = FIELDS_STORE_SIZE * 2; } else { alloc *= 2; }^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P13_Insert_Block]^if  ( index != N )  {     arraycopy ( data,  ( index -  ( FIELDS_STORE_SIZE )  ) , data,  (  ( index -  ( FIELDS_STORE_SIZE )  )  + 1 ) ,  ( N - index )  ) ; }^327^^^^^315^343^[Delete]^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P13_Insert_Block]^if  (  ( size )  >  ( FIELDS_STORE_SIZE )  )  {     arraycopy ( data, 0, tmp, 0,  (  ( size )  -  ( FIELDS_STORE_SIZE )  )  ) ; }^327^^^^^315^343^[Delete]^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P13_Insert_Block]^if  ( index != N )  {     arraycopy ( data,  (  ( index -  ( FIELDS_STORE_SIZE )  )  + 1 ) , data,  ( index -  ( FIELDS_STORE_SIZE )  ) ,  ( N - index )  ) ; }^327^^^^^315^343^[Delete]^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P13_Insert_Block]^if  ( N >  ( FIELDS_STORE_SIZE )  )  {     data = new Object[N -  ( FIELDS_STORE_SIZE ) ]; }^327^^^^^315^343^[Delete]^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^alloc *= minimalCapacity;^330^^^^^327^331^alloc *= 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^alloc *= 4;^330^^^^^327^331^alloc *= 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^alloc - = FIELDS_STORE_SIZE * 2;^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^alloc = FIELDS_STORE_SIZE * i;^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^alloc = size * 2;^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^alloc = FIELDS_STORE_SIZE * 3;^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P11_Insert_Donor_Statement]^data[N - FIELDS_STORE_SIZE] = null;alloc = FIELDS_STORE_SIZE * 2;^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P11_Insert_Donor_Statement]^index = FIELDS_STORE_SIZE;alloc = FIELDS_STORE_SIZE * 2;^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P11_Insert_Donor_Statement]^top = data[N - FIELDS_STORE_SIZE];alloc = FIELDS_STORE_SIZE * 2;^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P11_Insert_Donor_Statement]^data[index - FIELDS_STORE_SIZE] = value;alloc = FIELDS_STORE_SIZE * 2;^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P12_Insert_Condition]^if  ( N > FIELDS_STORE_SIZE )  { alloc = FIELDS_STORE_SIZE * 2; }^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P12_Insert_Condition]^if  ( newSize > FIELDS_STORE_SIZE )  { alloc = FIELDS_STORE_SIZE * 2; }^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P12_Insert_Condition]^if  ( alloc <= FIELDS_STORE_SIZE )  { alloc = FIELDS_STORE_SIZE * 2; }^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P12_Insert_Condition]^if  ( N >= FIELDS_STORE_SIZE )  { alloc = FIELDS_STORE_SIZE * 2; }^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P12_Insert_Condition]^if  ( size > FIELDS_STORE_SIZE )  { alloc = FIELDS_STORE_SIZE * 2; }^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^if  ( alloc > required )  {^332^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( size < required )  {^332^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( alloc < newSize )  {^332^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( required < alloc )  {^332^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^if  ( alloc < offset )  {^332^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P15_Unwrap_Block]^alloc = required;^332^333^334^^^315^343^if  ( alloc < required )  { alloc = required; }^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P16_Remove_Block]^^332^333^334^^^315^343^if  ( alloc < required )  { alloc = required; }^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^alloc = minimalCapacity;^333^^^^^315^343^alloc = required;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^alloc =  size;^333^^^^^315^343^alloc = required;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P12_Insert_Condition]^if  ( alloc < required )  { alloc = required; }^333^^^^^315^343^alloc = required;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^if  ( size >= FIELDS_STORE_SIZE )  {^336^^^^^315^343^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( offset > FIELDS_STORE_SIZE )  {^336^^^^^315^343^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( size > size )  {^336^^^^^315^343^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( FIELDS_STORE_SIZE > size )  {^336^^^^^315^343^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P6_Replace_Expression]^if  ( size - FIELDS_STORE_SIZE )  {^336^^^^^315^343^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P9_Replace_Statement]^if  ( N > FIELDS_STORE_SIZE )  {^336^^^^^315^343^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P9_Replace_Statement]^if  ( newSize > FIELDS_STORE_SIZE )  {^336^^^^^315^343^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P9_Replace_Statement]^if  ( alloc <= FIELDS_STORE_SIZE )  {^336^^^^^315^343^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P9_Replace_Statement]^if  ( N >= FIELDS_STORE_SIZE )  {^336^^^^^315^343^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P15_Unwrap_Block]^java.lang.System.arraycopy(data, 0, tmp, 0, ((size) - (com.google.javascript.rhino.ObjArray.FIELDS_STORE_SIZE)));^336^337^338^339^^315^343^if  ( size > FIELDS_STORE_SIZE )  { System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ; }^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P16_Remove_Block]^^336^337^338^339^^315^343^if  ( size > FIELDS_STORE_SIZE )  { System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ; }^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P13_Insert_Block]^if  ( alloc <=  ( FIELDS_STORE_SIZE )  )  {     alloc =  ( FIELDS_STORE_SIZE )  * 2; }else {     alloc *= 2; }^336^^^^^315^343^[Delete]^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P13_Insert_Block]^if  ( N >  ( FIELDS_STORE_SIZE )  )  {     data = new Object[N -  ( FIELDS_STORE_SIZE ) ]; }^336^^^^^315^343^[Delete]^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^System.arraycopy ( data, 0, tmp, 0, size  &&  FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^System.arraycopy ( data, required, tmp, required, size - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^System.arraycopy ( data, 6, tmp, 6, size - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( data, 0, data, 0, size - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( array, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( data, 0, tmp, 0, newSize - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( data, 0, tmp, 0, size - offset ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( data, 0,  0, size - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy (  0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( data, 0, tmp, 0 - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( tmp, 0, data, 0, size - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( data, 0, tmp, 0, FIELDS_STORE_SIZE - size ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^System.arraycopy ( data, 0, tmp, 0, offset - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P14_Delete_Statement]^^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P13_Insert_Block]^if  (  ( size )  >  ( FIELDS_STORE_SIZE )  )  {     arraycopy ( data, 0, tmp, 0,  (  ( size )  -  ( FIELDS_STORE_SIZE )  )  ) ; }^337^^^^^315^343^[Delete]^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^alloc / = FIELDS_STORE_SIZE * 2;^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^alloc = FIELDS_STORE_SIZE * 0;^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^alloc = newSize * 2;^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^alloc = FIELDS_STORE_SIZE * 2 % 1;^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^alloc *= 0;^330^^^^^315^343^alloc *= 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^alloc *= 4;^330^^^^^315^343^alloc *= 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^alloc =  offset;^333^^^^^315^343^alloc = required;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^data = data;^340^^^^^315^343^data = tmp;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^data =  array;^340^^^^^315^343^data = tmp;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P11_Insert_Donor_Statement]^Object[] array = new Object[size];Object[] tmp = new Object[alloc];^335^^^^^315^343^Object[] tmp = new Object[alloc];^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^System.arraycopy ( data, 0, tmp, 0, size  >=  FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^System.arraycopy ( data, N, tmp, N, size - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^System.arraycopy ( data, -7, tmp, -7, size - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( data, 0, tmp, 0, required - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( data, 0, tmp, 0, size - newSize ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( size, 0, tmp, 0, data - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( data, 0, FIELDS_STORE_SIZE, 0, size - tmp ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( size <= FIELDS_STORE_SIZE )  {^327^^^^^315^343^if  ( alloc <= FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^alloc *= 0;^330^^^^^327^331^alloc *= 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^alloc *= 2L;^330^^^^^327^331^alloc *= 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^alloc = FIELDS_STORE_SIZE * minimalCapacity;^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^alloc = FIELDS_STORE_SIZE * 1;^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^if  ( alloc == required )  {^332^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( newSize < required )  {^332^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( alloc < size )  {^332^^^^^315^343^if  ( alloc < required )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^if  ( size < FIELDS_STORE_SIZE )  {^336^^^^^315^343^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^if  ( size > required )  {^336^^^^^315^343^if  ( size > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^System.arraycopy ( data, -6, tmp, -6, size - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^System.arraycopy ( data, size, tmp, size, size - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( data, 0, array, 0, size - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^alloc = FIELDS_STORE_SIZE * 4;^328^^^^^315^343^alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^alloc *= size;^330^^^^^315^343^alloc *= 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^alloc *= 1;^330^^^^^315^343^alloc *= 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^int / alloc = FIELDS_STORE_SIZE * 2;^319^^^^^315^343^int alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^int alloc = FIELDS_STORE_SIZE * -4;^319^^^^^315^343^int alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P8_Replace_Mix]^int alloc = offset * 2;^319^^^^^315^343^int alloc = FIELDS_STORE_SIZE * 2;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P1_Replace_Type]^long  alloc = data.length;^325^^^^^315^343^int alloc = data.length;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^int alloc = size;^325^^^^^315^343^int alloc = data.length;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^int alloc = tmp.length;^325^^^^^315^343^int alloc = data.length;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^int alloc = data;^325^^^^^315^343^int alloc = data.length;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^int alloc = data.length.length;^325^^^^^315^343^int alloc = data.length;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P2_Replace_Operator]^System.arraycopy ( data, 0, tmp, 0, size  <  FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^System.arraycopy ( data, FIELDS_STORE_SIZE, tmp, FIELDS_STORE_SIZE, size - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P3_Replace_Literal]^System.arraycopy ( data, -8, tmp, -8, size - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P5_Replace_Variable]^System.arraycopy ( data, 0, size, 0, tmp - FIELDS_STORE_SIZE ) ;^337^338^^^^315^343^System.arraycopy ( data, 0, tmp, 0, size - FIELDS_STORE_SIZE ) ;^[CLASS] ObjArray  [METHOD] ensureCapacity [RETURN_TYPE] void   int minimalCapacity [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  Object[]  array  data  tmp  
[P1_Replace_Type]^char msg = index+" \u2209 [0, "+upperBound+' ) ';^348^^^^^345^350^String msg = index+" \u2209 [0, "+upperBound+' ) ';^[CLASS] ObjArray  [METHOD] onInvalidIndex [RETURN_TYPE] RuntimeException   int index int upperBound [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  String  msg  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P3_Replace_Literal]^String msg = index+""+upperBound+' ) ';^348^^^^^345^350^String msg = index+" \u2209 [0, "+upperBound+' ) ';^[CLASS] ObjArray  [METHOD] onInvalidIndex [RETURN_TYPE] RuntimeException   int index int upperBound [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  String  msg  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P5_Replace_Variable]^String msg = offset+" \u2209 [0, "+upperBound+' ) ';^348^^^^^345^350^String msg = index+" \u2209 [0, "+upperBound+' ) ';^[CLASS] ObjArray  [METHOD] onInvalidIndex [RETURN_TYPE] RuntimeException   int index int upperBound [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  String  msg  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P8_Replace_Mix]^String msg = size+" \u2209 [0, "+upperBound+' ) ';^348^^^^^345^350^String msg = index+" \u2209 [0, "+upperBound+' ) ';^[CLASS] ObjArray  [METHOD] onInvalidIndex [RETURN_TYPE] RuntimeException   int index int upperBound [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  String  msg  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new IndexOutOfBoundsException  (" ")  ;^349^^^^^345^350^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] ObjArray  [METHOD] onInvalidIndex [RETURN_TYPE] RuntimeException   int index int upperBound [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  String  msg  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P11_Insert_Donor_Statement]^throw new RuntimeException  (" ")  ;throw new IndexOutOfBoundsException  (" ")  ;^349^^^^^345^350^throw new IndexOutOfBoundsException  (" ")  ;^[CLASS] ObjArray  [METHOD] onInvalidIndex [RETURN_TYPE] RuntimeException   int index int upperBound [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  String  msg  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new RuntimeException  (" ")  ;^354^^^^^352^355^throw new RuntimeException  (" ")  ;^[CLASS] ObjArray  [METHOD] onEmptyStackTopRead [RETURN_TYPE] RuntimeException   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P11_Insert_Donor_Statement]^throw new IllegalStateException  (" ")  ;throw new RuntimeException  (" ")  ;^354^^^^^352^355^throw new RuntimeException  (" ")  ;^[CLASS] ObjArray  [METHOD] onEmptyStackTopRead [RETURN_TYPE] RuntimeException   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P8_Replace_Mix]^return ;^359^^^^^357^360^throw new IllegalStateException  (" ")  ;^[CLASS] ObjArray  [METHOD] onSeledMutation [RETURN_TYPE] RuntimeException   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P11_Insert_Donor_Statement]^throw new IndexOutOfBoundsException  (" ")  ;throw new IllegalStateException  (" ")  ;^359^^^^^357^360^throw new IllegalStateException  (" ")  ;^[CLASS] ObjArray  [METHOD] onSeledMutation [RETURN_TYPE] RuntimeException   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P11_Insert_Donor_Statement]^throw new RuntimeException  (" ")  ;throw new IllegalStateException  (" ")  ;^359^^^^^357^360^throw new IllegalStateException  (" ")  ;^[CLASS] ObjArray  [METHOD] onSeledMutation [RETURN_TYPE] RuntimeException   [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P7_Replace_Invocation]^os.writeObject (  ) ;^364^^^^^362^370^os.defaultWriteObject (  ) ;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P14_Delete_Statement]^^364^^^^^362^370^os.defaultWriteObject (  ) ;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P11_Insert_Donor_Statement]^is.defaultReadObject (  ) ;os.defaultWriteObject (  ) ;^364^^^^^362^370^os.defaultWriteObject (  ) ;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P11_Insert_Donor_Statement]^os.writeObject ( obj ) ;os.defaultWriteObject (  ) ;^364^^^^^362^370^os.defaultWriteObject (  ) ;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P1_Replace_Type]^short  N = size;^365^^^^^362^370^int N = size;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P5_Replace_Variable]^int N = required;^365^^^^^362^370^int N = size;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P8_Replace_Mix]^int N = newSize;^365^^^^^362^370^int N = size;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P1_Replace_Type]^for  (  long  i = 0; i != N; ++i )  {^366^^^^^362^370^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P2_Replace_Operator]^for  ( int i = 0; i >= N; ++i )  {^366^^^^^362^370^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P5_Replace_Variable]^for  ( requirednt i = 0; i != N; ++i )  {^366^^^^^362^370^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P5_Replace_Variable]^for  ( int i = 0; i != upperBound; ++i )  {^366^^^^^362^370^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P5_Replace_Variable]^for  ( Nnt i = 0; i != i; ++i )  {^366^^^^^362^370^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P8_Replace_Mix]^for  ( int i = 0; i != required; ++i )  {^366^^^^^362^370^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P5_Replace_Variable]^Object obj = getImpl ( required ) ;^367^^^^^362^370^Object obj = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P7_Replace_Invocation]^Object obj = get ( i ) ;^367^^^^^362^370^Object obj = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P8_Replace_Mix]^Object obj = getImpl ( upperBound ) ;^367^^^^^362^370^Object obj = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P11_Insert_Donor_Statement]^Object current = getImpl ( i ) ;Object obj = getImpl ( i ) ;^367^^^^^362^370^Object obj = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P11_Insert_Donor_Statement]^Object obj = is.readObject (  ) ;Object obj = getImpl ( i ) ;^367^^^^^362^370^Object obj = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P5_Replace_Variable]^Object obj = getImpl ( newSize ) ;^367^^^^^362^370^Object obj = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P14_Delete_Statement]^^367^368^^^^362^370^Object obj = getImpl ( i ) ; os.writeObject ( obj ) ;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P5_Replace_Variable]^os.writeObject ( f4 ) ;^368^^^^^362^370^os.writeObject ( obj ) ;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P8_Replace_Mix]^os.writeObject ( value ) ;^368^^^^^362^370^os.writeObject ( obj ) ;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P14_Delete_Statement]^^368^^^^^362^370^os.writeObject ( obj ) ;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P11_Insert_Donor_Statement]^os.defaultWriteObject (  ) ;os.writeObject ( obj ) ;^368^^^^^362^370^os.writeObject ( obj ) ;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P11_Insert_Donor_Statement]^is.defaultReadObject (  ) ;os.writeObject ( obj ) ;^368^^^^^362^370^os.writeObject ( obj ) ;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P3_Replace_Literal]^for  ( int i = required; i != N; ++i )  {^366^^^^^362^370^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P5_Replace_Variable]^Object obj = getImpl ( size ) ;^367^^^^^362^370^Object obj = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P8_Replace_Mix]^Object obj = getImpl ( offset ) ;^367^^^^^362^370^Object obj = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P14_Delete_Statement]^^367^^^^^362^370^Object obj = getImpl ( i ) ;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P8_Replace_Mix]^os .writeObject ( os )  ;^368^^^^^362^370^os.writeObject ( obj ) ;^[CLASS] ObjArray  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream os [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  ObjectOutputStream  os  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  
[P14_Delete_Statement]^^375^^^^^372^384^is.defaultReadObject (  ) ;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P11_Insert_Donor_Statement]^os.defaultWriteObject (  ) ;is.defaultReadObject (  ) ;^375^^^^^372^384^is.defaultReadObject (  ) ;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P11_Insert_Donor_Statement]^os.writeObject ( obj ) ;is.defaultReadObject (  ) ;^375^^^^^372^384^is.defaultReadObject (  ) ;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P11_Insert_Donor_Statement]^Object obj = is.readObject (  ) ;is.defaultReadObject (  ) ;^375^^^^^372^384^is.defaultReadObject (  ) ;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P1_Replace_Type]^short  N = size;^376^^^^^372^384^int N = size;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P5_Replace_Variable]^int N = offset;^376^^^^^372^384^int N = size;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P8_Replace_Mix]^int N = upperBound;^376^^^^^372^384^int N = size;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P2_Replace_Operator]^if  ( N >= FIELDS_STORE_SIZE )  {^377^^^^^372^384^if  ( N > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P5_Replace_Variable]^if  ( offset > FIELDS_STORE_SIZE )  {^377^^^^^372^384^if  ( N > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P5_Replace_Variable]^if  ( FIELDS_STORE_SIZE > N )  {^377^^^^^372^384^if  ( N > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P6_Replace_Expression]^if  ( N - FIELDS_STORE_SIZE )  {^377^^^^^372^384^if  ( N > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P8_Replace_Mix]^if  ( required > FIELDS_STORE_SIZE )  {^377^^^^^372^384^if  ( N > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P9_Replace_Statement]^if  ( newSize > FIELDS_STORE_SIZE )  {^377^^^^^372^384^if  ( N > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P9_Replace_Statement]^if  ( alloc <= FIELDS_STORE_SIZE )  {^377^^^^^372^384^if  ( N > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P9_Replace_Statement]^if  ( size > FIELDS_STORE_SIZE )  {^377^^^^^372^384^if  ( N > FIELDS_STORE_SIZE )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P15_Unwrap_Block]^data = new java.lang.Object[N - (com.google.javascript.rhino.ObjArray.FIELDS_STORE_SIZE)];^377^378^379^^^372^384^if  ( N > FIELDS_STORE_SIZE )  { data = new Object[N - FIELDS_STORE_SIZE]; }^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P16_Remove_Block]^^377^378^379^^^372^384^if  ( N > FIELDS_STORE_SIZE )  { data = new Object[N - FIELDS_STORE_SIZE]; }^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P13_Insert_Block]^if  ( alloc <=  ( FIELDS_STORE_SIZE )  )  {     alloc =  ( FIELDS_STORE_SIZE )  * 2; }else {     alloc *= 2; }^377^^^^^372^384^[Delete]^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P13_Insert_Block]^if  ( N >=  ( FIELDS_STORE_SIZE )  )  {     ensureCapacity (  ( N + 1 )  ) ; }^377^^^^^372^384^[Delete]^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P13_Insert_Block]^if  ( index != N )  {     arraycopy ( data,  ( index -  ( FIELDS_STORE_SIZE )  ) , data,  (  ( index -  ( FIELDS_STORE_SIZE )  )  + 1 ) ,  ( N - index )  ) ; }^377^^^^^372^384^[Delete]^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P13_Insert_Block]^if  (  ( size )  >  ( FIELDS_STORE_SIZE )  )  {     arraycopy ( data, 0, tmp, 0,  (  ( size )  -  ( FIELDS_STORE_SIZE )  )  ) ; }^377^^^^^372^384^[Delete]^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P13_Insert_Block]^if  ( index != N )  {     arraycopy ( data,  (  ( index -  ( FIELDS_STORE_SIZE )  )  + 1 ) , data,  ( index -  ( FIELDS_STORE_SIZE )  ) ,  ( N - index )  ) ; }^377^^^^^372^384^[Delete]^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P13_Insert_Block]^if  ( newSize >  ( FIELDS_STORE_SIZE )  )  {     ensureCapacity ( newSize ) ; }^377^^^^^372^384^[Delete]^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P2_Replace_Operator]^data = new Object[N   instanceof   FIELDS_STORE_SIZE];^378^^^^^372^384^data = new Object[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P5_Replace_Variable]^data = new Object[size - FIELDS_STORE_SIZE];^378^^^^^372^384^data = new Object[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P5_Replace_Variable]^data = new Object[N - required];^378^^^^^372^384^data = new Object[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P8_Replace_Mix]^data =  new Object[required - FIELDS_STORE_SIZE];^378^^^^^372^384^data = new Object[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P11_Insert_Donor_Statement]^data[N - FIELDS_STORE_SIZE] = null;data = new Object[N - FIELDS_STORE_SIZE];^378^^^^^372^384^data = new Object[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P11_Insert_Donor_Statement]^index = FIELDS_STORE_SIZE;data = new Object[N - FIELDS_STORE_SIZE];^378^^^^^372^384^data = new Object[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P11_Insert_Donor_Statement]^top = data[N - FIELDS_STORE_SIZE];data = new Object[N - FIELDS_STORE_SIZE];^378^^^^^372^384^data = new Object[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P11_Insert_Donor_Statement]^data = new Object[alloc];data = new Object[N - FIELDS_STORE_SIZE];^378^^^^^372^384^data = new Object[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P12_Insert_Condition]^if  ( newSize > FIELDS_STORE_SIZE )  { data = new Object[N - FIELDS_STORE_SIZE]; }^378^^^^^372^384^data = new Object[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P2_Replace_Operator]^data = new Object[N  <  FIELDS_STORE_SIZE];^378^^^^^372^384^data = new Object[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P5_Replace_Variable]^data = new Object[offset - FIELDS_STORE_SIZE];^378^^^^^372^384^data = new Object[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P8_Replace_Mix]^data =  new Object[newSize - FIELDS_STORE_SIZE];^378^^^^^372^384^data = new Object[N - FIELDS_STORE_SIZE];^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P1_Replace_Type]^for  (  short  i = 0; i != N; ++i )  {^380^^^^^372^384^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P2_Replace_Operator]^for  ( int i = 0; i == N; ++i )  {^380^^^^^372^384^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P3_Replace_Literal]^for  ( int i = i; i != N; ++i )  {^380^^^^^372^384^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P5_Replace_Variable]^for  ( newSizent i = 0; i != N; ++i )  {^380^^^^^372^384^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P5_Replace_Variable]^for  ( int i = 0; i != size; ++i )  {^380^^^^^372^384^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P5_Replace_Variable]^for  ( Nnt i = 0; i != i; ++i )  {^380^^^^^372^384^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P8_Replace_Mix]^for  ( int i = 0; i != required; ++i )  {^380^^^^^372^384^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P11_Insert_Donor_Statement]^Object obj = getImpl ( i ) ;Object obj = is.readObject (  ) ;^381^^^^^372^384^Object obj = is.readObject (  ) ;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P14_Delete_Statement]^^381^^^^^372^384^Object obj = is.readObject (  ) ;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P11_Insert_Donor_Statement]^is.defaultReadObject (  ) ;Object obj = is.readObject (  ) ;^381^^^^^372^384^Object obj = is.readObject (  ) ;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P5_Replace_Variable]^setImpl ( newSize, obj ) ;^382^^^^^372^384^setImpl ( i, obj ) ;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P5_Replace_Variable]^setImpl ( i, f4 ) ;^382^^^^^372^384^setImpl ( i, obj ) ;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P5_Replace_Variable]^setImpl (  obj ) ;^382^^^^^372^384^setImpl ( i, obj ) ;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P5_Replace_Variable]^setImpl ( i ) ;^382^^^^^372^384^setImpl ( i, obj ) ;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P5_Replace_Variable]^setImpl ( obj, i ) ;^382^^^^^372^384^setImpl ( i, obj ) ;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P7_Replace_Invocation]^set ( i, obj ) ;^382^^^^^372^384^setImpl ( i, obj ) ;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P8_Replace_Mix]^set ( newSize, obj ) ;^382^^^^^372^384^setImpl ( i, obj ) ;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P14_Delete_Statement]^^382^^^^^372^384^setImpl ( i, obj ) ;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P11_Insert_Donor_Statement]^setImpl ( index, value ) ;setImpl ( i, obj ) ;^382^^^^^372^384^setImpl ( i, obj ) ;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P11_Insert_Donor_Statement]^setImpl ( i, null ) ;setImpl ( i, obj ) ;^382^^^^^372^384^setImpl ( i, obj ) ;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P11_Insert_Donor_Statement]^setImpl ( N, value ) ;setImpl ( i, obj ) ;^382^^^^^372^384^setImpl ( i, obj ) ;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P1_Replace_Type]^for  (  long  i = 0; i != N; ++i )  {^380^^^^^372^384^for  ( int i = 0; i != N; ++i )  {^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P5_Replace_Variable]^setImpl ( required, obj ) ;^382^^^^^372^384^setImpl ( i, obj ) ;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
[P5_Replace_Variable]^setImpl ( i, tmp ) ;^382^^^^^372^384^setImpl ( i, obj ) ;^[CLASS] ObjArray  [METHOD] readObject [RETURN_TYPE] void   ObjectInputStream is [VARIABLES] Object  current  f0  f1  f2  f3  f4  obj  tmp  top  value  boolean  sealed  long  serialVersionUID  int  FIELDS_STORE_SIZE  N  alloc  i  index  minimalCapacity  newSize  offset  required  size  upperBound  Object[]  array  data  tmp  ObjectInputStream  is  
