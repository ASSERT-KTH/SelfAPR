[P1_Replace_Type]^private static final  int  serialVersionUID = 1L;^80^^^^^75^85^private static final long serialVersionUID = 1L;^[CLASS] NamedType   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID  = null ;^80^^^^^75^85^private static final long serialVersionUID = 1L;^[CLASS] NamedType   [VARIABLES] 
[P1_Replace_Type]^private final char reference;^82^^^^^77^87^private final String reference;^[CLASS] NamedType   [VARIABLES] 
[P8_Replace_Mix]^private  char reference;^82^^^^^77^87^private final String reference;^[CLASS] NamedType   [VARIABLES] 
[P1_Replace_Type]^private final char sourceName;^83^^^^^78^88^private final String sourceName;^[CLASS] NamedType   [VARIABLES] 
[P1_Replace_Type]^private final  short  lineno;^84^^^^^79^89^private final int lineno;^[CLASS] NamedType   [VARIABLES] 
[P8_Replace_Mix]^private final  long  lineno;^84^^^^^79^89^private final int lineno;^[CLASS] NamedType   [VARIABLES] 
[P1_Replace_Type]^private final  short  charno;^85^^^^^80^90^private final int charno;^[CLASS] NamedType   [VARIABLES] 
[P8_Replace_Mix]^private   short  charno;^85^^^^^80^90^private final int charno;^[CLASS] NamedType   [VARIABLES] 
[P3_Replace_Literal]^private boolean isResolved = true;^86^^^^^81^91^private boolean isResolved = false;^[CLASS] NamedType   [VARIABLES] 
[P3_Replace_Literal]^private boolean forgiving = true;^98^^^^^93^103^private boolean forgiving = false;^[CLASS] NamedType   [VARIABLES] 
[P8_Replace_Mix]^private boolean forgiving  = null ;^98^^^^^93^103^private boolean forgiving = false;^[CLASS] NamedType   [VARIABLES] 
[P14_Delete_Statement]^^105^^^^^103^112^super ( registry, registry.getNativeObjectType ( JSTypeNative.UNKNOWN_TYPE )  ) ;^[CLASS] NamedType  [METHOD] <init> [RETURN_TYPE] String,int,int)   JSTypeRegistry registry String reference String sourceName int lineno int charno [VARIABLES] JSTypeRegistry  registry  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P11_Insert_Donor_Statement]^referencedType = registry.getNativeObjectType ( JSTypeNative.UNKNOWN_TYPE ) ;super ( registry, registry.getNativeObjectType ( JSTypeNative.UNKNOWN_TYPE )  ) ;^105^^^^^103^112^super ( registry, registry.getNativeObjectType ( JSTypeNative.UNKNOWN_TYPE )  ) ;^[CLASS] NamedType  [METHOD] <init> [RETURN_TYPE] String,int,int)   JSTypeRegistry registry String reference String sourceName int lineno int charno [VARIABLES] JSTypeRegistry  registry  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P11_Insert_Donor_Statement]^referencedType = registry.getNativeObjectType ( JSTypeNative.CHECKED_UNKNOWN_TYPE ) ;super ( registry, registry.getNativeObjectType ( JSTypeNative.UNKNOWN_TYPE )  ) ;^105^^^^^103^112^super ( registry, registry.getNativeObjectType ( JSTypeNative.UNKNOWN_TYPE )  ) ;^[CLASS] NamedType  [METHOD] <init> [RETURN_TYPE] String,int,int)   JSTypeRegistry registry String reference String sourceName int lineno int charno [VARIABLES] JSTypeRegistry  registry  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P5_Replace_Variable]^Preconditions.checkNotNull ( sourceName ) ;^107^^^^^103^112^Preconditions.checkNotNull ( reference ) ;^[CLASS] NamedType  [METHOD] <init> [RETURN_TYPE] String,int,int)   JSTypeRegistry registry String reference String sourceName int lineno int charno [VARIABLES] JSTypeRegistry  registry  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P14_Delete_Statement]^^107^^^^^103^112^Preconditions.checkNotNull ( reference ) ;^[CLASS] NamedType  [METHOD] <init> [RETURN_TYPE] String,int,int)   JSTypeRegistry registry String reference String sourceName int lineno int charno [VARIABLES] JSTypeRegistry  registry  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P5_Replace_Variable]^this.reference = sourceName;^108^^^^^103^112^this.reference = reference;^[CLASS] NamedType  [METHOD] <init> [RETURN_TYPE] String,int,int)   JSTypeRegistry registry String reference String sourceName int lineno int charno [VARIABLES] JSTypeRegistry  registry  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P11_Insert_Donor_Statement]^this.sourceName = sourceName;this.reference = reference;^108^^^^^103^112^this.reference = reference;^[CLASS] NamedType  [METHOD] <init> [RETURN_TYPE] String,int,int)   JSTypeRegistry registry String reference String sourceName int lineno int charno [VARIABLES] JSTypeRegistry  registry  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P5_Replace_Variable]^this.sourceName = reference;^109^^^^^103^112^this.sourceName = sourceName;^[CLASS] NamedType  [METHOD] <init> [RETURN_TYPE] String,int,int)   JSTypeRegistry registry String reference String sourceName int lineno int charno [VARIABLES] JSTypeRegistry  registry  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P11_Insert_Donor_Statement]^this.reference = reference;this.sourceName = sourceName;^109^^^^^103^112^this.sourceName = sourceName;^[CLASS] NamedType  [METHOD] <init> [RETURN_TYPE] String,int,int)   JSTypeRegistry registry String reference String sourceName int lineno int charno [VARIABLES] JSTypeRegistry  registry  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P5_Replace_Variable]^this.lineno = charno;^110^^^^^103^112^this.lineno = lineno;^[CLASS] NamedType  [METHOD] <init> [RETURN_TYPE] String,int,int)   JSTypeRegistry registry String reference String sourceName int lineno int charno [VARIABLES] JSTypeRegistry  registry  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P11_Insert_Donor_Statement]^this.charno = charno;this.lineno = lineno;^110^^^^^103^112^this.lineno = lineno;^[CLASS] NamedType  [METHOD] <init> [RETURN_TYPE] String,int,int)   JSTypeRegistry registry String reference String sourceName int lineno int charno [VARIABLES] JSTypeRegistry  registry  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P5_Replace_Variable]^this.charno = lineno;^111^^^^^103^112^this.charno = charno;^[CLASS] NamedType  [METHOD] <init> [RETURN_TYPE] String,int,int)   JSTypeRegistry registry String reference String sourceName int lineno int charno [VARIABLES] JSTypeRegistry  registry  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P11_Insert_Donor_Statement]^this.lineno = lineno;this.charno = charno;^111^^^^^103^112^this.charno = charno;^[CLASS] NamedType  [METHOD] <init> [RETURN_TYPE] String,int,int)   JSTypeRegistry registry String reference String sourceName int lineno int charno [VARIABLES] JSTypeRegistry  registry  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P3_Replace_Literal]^forgiving = false;^116^^^^^115^117^forgiving = true;^[CLASS] NamedType  [METHOD] forgiveUnknownNames [RETURN_TYPE] void   [VARIABLES] boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P5_Replace_Variable]^return forgiving;^121^^^^^120^122^return isResolved;^[CLASS] NamedType  [METHOD] isResolved [RETURN_TYPE] boolean   [VARIABLES] boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P3_Replace_Literal]^isResolved = true;^126^^^^^125^127^isResolved = false;^[CLASS] NamedType  [METHOD] clearResolved [RETURN_TYPE] void   [VARIABLES] boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P11_Insert_Donor_Statement]^isResolved = true;isResolved = false;^126^^^^^125^127^isResolved = false;^[CLASS] NamedType  [METHOD] clearResolved [RETURN_TYPE] void   [VARIABLES] boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P5_Replace_Variable]^return sourceName;^136^^^^^135^137^return reference;^[CLASS] NamedType  [METHOD] getReferenceName [RETURN_TYPE] String   [VARIABLES] boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P5_Replace_Variable]^return sourceName;^141^^^^^140^142^return reference;^[CLASS] NamedType  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P3_Replace_Literal]^return false;^146^^^^^145^147^return true;^[CLASS] NamedType  [METHOD] hasReferenceName [RETURN_TYPE] boolean   [VARIABLES] boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P3_Replace_Literal]^return false;^151^^^^^150^152^return true;^[CLASS] NamedType  [METHOD] isNamedType [RETURN_TYPE] boolean   [VARIABLES] boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P3_Replace_Literal]^return false;^156^^^^^155^157^return true;^[CLASS] NamedType  [METHOD] isNominalType [RETURN_TYPE] boolean   [VARIABLES] boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P2_Replace_Operator]^if  ( this >= that )  {^170^^^^^169^180^if  ( this == that )  {^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P6_Replace_Expression]^if  ( that instanceof JSType )  {^170^^^^^169^180^if  ( this == that )  {^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P6_Replace_Expression]^if  ( objType != null )  {^170^^^^^169^180^if  ( this == that )  {^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P6_Replace_Expression]^if  ( objType.isNominalType() && getReferenceName()) )  {^170^^^^^169^180^if  ( this == that )  {^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P9_Replace_Statement]^if  ( slot == null )  {^170^^^^^169^180^if  ( this == that )  {^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P9_Replace_Statement]^if  ( type != null )  {^170^^^^^169^180^if  ( this == that )  {^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P13_Insert_Block]^if  ( that instanceof JSType )  {     ObjectType objType = cast (  (  ( JSType )   ( that )  )  ) ;     if  ( objType != null )  {         return  ( objType.isNominalType (  )  )  &&  ( reference.equals ( objType.getReferenceName (  )  )  ) ;     } }^170^^^^^169^180^[Delete]^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P2_Replace_Operator]^} else if  ( that  ^  JSType )  {^172^^^^^169^180^} else if  ( that instanceof JSType )  {^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P6_Replace_Expression]^} else if  ( objType != null )  {^172^^^^^169^180^} else if  ( that instanceof JSType )  {^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P6_Replace_Expression]^} else if  ( objType.isNominalType() && getReferenceName()) )  {^172^^^^^169^180^} else if  ( that instanceof JSType )  {^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P6_Replace_Expression]^} else {^172^^^^^169^180^} else if  ( that instanceof JSType )  {^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P9_Replace_Statement]^} else if  ( value instanceof EnumType )  {^172^^^^^169^180^} else if  ( that instanceof JSType )  {^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P15_Unwrap_Block]^com.google.javascript.rhino.jstype.ObjectType objType = com.google.javascript.rhino.jstype.ObjectType.cast(((com.google.javascript.rhino.jstype.JSType) (that))); if (objType != null) {    return (objType.isNominalType()) && (reference.equals(objType.getReferenceName()));};^172^173^174^175^176^169^180^} else if  ( that instanceof JSType )  { ObjectType objType = ObjectType.cast (  ( JSType )  that ) ; if  ( objType != null )  { return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ; }^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P16_Remove_Block]^^172^173^174^175^176^169^180^} else if  ( that instanceof JSType )  { ObjectType objType = ObjectType.cast (  ( JSType )  that ) ; if  ( objType != null )  { return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ; }^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P2_Replace_Operator]^if  ( objType == null )  {^174^^^^^169^180^if  ( objType != null )  {^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P6_Replace_Expression]^if  ( objType.isNominalType() && getReferenceName()) )  {^174^^^^^169^180^if  ( objType != null )  {^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P8_Replace_Mix]^if  ( objType != true )  {^174^^^^^169^180^if  ( objType != null )  {^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P9_Replace_Statement]^if  ( value == null )  {^174^^^^^169^180^if  ( objType != null )  {^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P9_Replace_Statement]^if  ( slot == null )  {^174^^^^^169^180^if  ( objType != null )  {^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P9_Replace_Statement]^if  ( type != null )  {^174^^^^^169^180^if  ( objType != null )  {^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P15_Unwrap_Block]^return (objType.isNominalType()) && (reference.equals(objType.getReferenceName()));^174^175^176^177^^169^180^if  ( objType != null )  { return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ; }^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P16_Remove_Block]^^174^175^176^177^^169^180^if  ( objType != null )  { return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ; }^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P2_Replace_Operator]^return objType.isNominalType (  )  || reference.equals ( objType.getReferenceName (  )  ) ;^175^176^^^^169^180^return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P5_Replace_Variable]^return objType.isNominalType (  )  && sourceName.equals ( objType.getReferenceName (  )  ) ;^175^176^^^^169^180^return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P5_Replace_Variable]^return reference.isNominalType (  )  && objType.equals ( objType.getReferenceName (  )  ) ;^175^176^^^^169^180^return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P7_Replace_Invocation]^return objType.getPropertyType (  )  && reference.equals ( objType.getReferenceName (  )  ) ;^175^176^^^^169^180^return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P7_Replace_Invocation]^return objType.isNominalType (  )  && reference.equals ( objType.getPropertyType (  )  ) ;^175^176^^^^169^180^return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P7_Replace_Invocation]^return objType.isNominalType (  )  && reference.equals ( objType .getPropertyType ( sourceName )   ) ;^175^176^^^^169^180^return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P8_Replace_Mix]^return objType.isNominalType (  )  ;^175^176^^^^169^180^return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P13_Insert_Block]^if  ( objType != null )  {     return  ( objType.isNominalType (  )  )  &&  ( reference.equals ( objType.getReferenceName (  )  )  ) ; }^175^^^^^169^180^[Delete]^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P14_Delete_Statement]^^175^176^^^^169^180^return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P7_Replace_Invocation]^reference.equals ( objType.getPropertyType (  )  ) ;^176^^^^^169^180^reference.equals ( objType.getReferenceName (  )  ) ;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P14_Delete_Statement]^^176^^^^^169^180^reference.equals ( objType.getReferenceName (  )  ) ;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P11_Insert_Donor_Statement]^return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ;reference.equals ( objType.getReferenceName (  )  ) ;^176^^^^^169^180^reference.equals ( objType.getReferenceName (  )  ) ;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P7_Replace_Invocation]^ObjectType objType = ObjectType.getPropertyType (  ( JSType )  that ) ;^173^^^^^169^180^ObjectType objType = ObjectType.cast (  ( JSType )  that ) ;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P7_Replace_Invocation]^ObjectType objType = ObjectType .isNominalType (  )  ;^173^^^^^169^180^ObjectType objType = ObjectType.cast (  ( JSType )  that ) ;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P11_Insert_Donor_Statement]^ObjectType type = ObjectType.cast ( registry.getType ( reference )  ) ;ObjectType objType = ObjectType.cast (  ( JSType )  that ) ;^173^^^^^169^180^ObjectType objType = ObjectType.cast (  ( JSType )  that ) ;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P11_Insert_Donor_Statement]^ObjectType parentClass = ObjectType.cast ( value ) ;ObjectType objType = ObjectType.cast (  ( JSType )  that ) ;^173^^^^^169^180^ObjectType objType = ObjectType.cast (  ( JSType )  that ) ;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P14_Delete_Statement]^^173^^^^^169^180^ObjectType objType = ObjectType.cast (  ( JSType )  that ) ;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P8_Replace_Mix]^if  ( objType != this )  {^174^^^^^169^180^if  ( objType != null )  {^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P8_Replace_Mix]^return   reference.equals ( objType.getPropertyType (  )  ) ;^175^176^^^^169^180^return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P7_Replace_Invocation]^return objType .getPropertyType ( reference )   && reference.equals ( objType.getReferenceName (  )  ) ;^175^176^^^^169^180^return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P7_Replace_Invocation]^reference.equals ( objType .getPropertyType ( reference )   ) ;^176^^^^^169^180^reference.equals ( objType.getReferenceName (  )  ) ;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P7_Replace_Invocation]^return objType.isNominalType (  )  && reference.equals ( objType .getPropertyType ( reference )   ) ;^175^176^^^^169^180^return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P8_Replace_Mix]^return objType.getPropertyType (  )  ;^175^176^^^^169^180^return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P7_Replace_Invocation]^reference.equals ( objType .getPropertyType ( sourceName )   ) ;^176^^^^^169^180^reference.equals ( objType.getReferenceName (  )  ) ;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P3_Replace_Literal]^return false;^171^^^^^169^180^return true;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P2_Replace_Operator]^} else if  ( that  >>  JSType )  {^172^^^^^169^180^} else if  ( that instanceof JSType )  {^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P7_Replace_Invocation]^return objType .getPropertyType ( sourceName )   && reference.equals ( objType.getReferenceName (  )  ) ;^175^176^^^^169^180^return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P8_Replace_Mix]^if  ( objType != false )  {^174^^^^^169^180^if  ( objType != null )  {^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P8_Replace_Mix]^return objType.isNominalType (  )  || reference.equals ( objType.getPropertyType (  )  ) ;^175^176^^^^169^180^return objType.isNominalType (  )  && reference.equals ( objType.getReferenceName (  )  ) ;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P3_Replace_Literal]^return true;^179^^^^^169^180^return false;^[CLASS] NamedType  [METHOD] equals [RETURN_TYPE] boolean   Object that [VARIABLES] ObjectType  objType  Object  that  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P7_Replace_Invocation]^return reference.length (  ) ;^184^^^^^183^185^return reference.hashCode (  ) ;^[CLASS] NamedType  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P8_Replace_Mix]^return reference .split ( reference , lineno )  ;^184^^^^^183^185^return reference.hashCode (  ) ;^[CLASS] NamedType  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P5_Replace_Variable]^return sourceName.hashCode (  ) ;^184^^^^^183^185^return reference.hashCode (  ) ;^[CLASS] NamedType  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P14_Delete_Statement]^^184^^^^^183^185^return reference.hashCode (  ) ;^[CLASS] NamedType  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P15_Unwrap_Block]^return ;^195^196^197^198^199^190^208^if  ( isResolved (  )  )  return;  resolveViaRegistry ( t, enclosing ) ; if  ( detectImplicitPrototypeCycle (  )  )  { handleTypeCycle ( t ) ; }^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P16_Remove_Block]^^195^196^197^198^199^190^208^if  ( isResolved (  )  )  return;  resolveViaRegistry ( t, enclosing ) ; if  ( detectImplicitPrototypeCycle (  )  )  { handleTypeCycle ( t ) ; }^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P13_Insert_Block]^if  ( type != null )  {     return type; }^195^^^^^190^208^[Delete]^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P5_Replace_Variable]^resolveViaRegistry (  enclosing ) ;^197^^^^^190^208^resolveViaRegistry ( t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P5_Replace_Variable]^resolveViaRegistry ( t ) ;^197^^^^^190^208^resolveViaRegistry ( t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P5_Replace_Variable]^resolveViaRegistry ( enclosing, t ) ;^197^^^^^190^208^resolveViaRegistry ( t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P7_Replace_Invocation]^resolveViaProperties ( t, enclosing ) ;^197^^^^^190^208^resolveViaRegistry ( t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P14_Delete_Statement]^^197^^^^^190^208^resolveViaRegistry ( t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P11_Insert_Donor_Statement]^resolveViaProperties ( t, enclosing ) ;resolveViaRegistry ( t, enclosing ) ;^197^^^^^190^208^resolveViaRegistry ( t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P11_Insert_Donor_Statement]^setReferencedType ( type, t, enclosing ) ;resolveViaRegistry ( t, enclosing ) ;^197^^^^^190^208^resolveViaRegistry ( t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P7_Replace_Invocation]^if  ( getPrimitiveType (  )  )  {^198^^^^^190^208^if  ( detectImplicitPrototypeCycle (  )  )  {^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P15_Unwrap_Block]^handleTypeCycle(t);^198^199^200^^^190^208^if  ( detectImplicitPrototypeCycle (  )  )  { handleTypeCycle ( t ) ; }^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P16_Remove_Block]^^198^199^200^^^190^208^if  ( detectImplicitPrototypeCycle (  )  )  { handleTypeCycle ( t ) ; }^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P7_Replace_Invocation]^checkEnumElementCycle ( t ) ;^199^^^^^190^208^handleTypeCycle ( t ) ;^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P14_Delete_Statement]^^199^^^^^190^208^handleTypeCycle ( t ) ;^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P11_Insert_Donor_Statement]^checkEnumElementCycle ( t ) ;handleTypeCycle ( t ) ;^199^^^^^190^208^handleTypeCycle ( t ) ;^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P11_Insert_Donor_Statement]^handleUnresolvedType ( t ) ;handleTypeCycle ( t ) ;^199^^^^^190^208^handleTypeCycle ( t ) ;^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P15_Unwrap_Block]^return ;^202^203^204^205^206^190^208^if  ( isResolved (  )  )  return;  resolveViaProperties ( t, enclosing ) ; if  ( detectImplicitPrototypeCycle (  )  )  { handleTypeCycle ( t ) ; }^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P16_Remove_Block]^^202^203^204^205^206^190^208^if  ( isResolved (  )  )  return;  resolveViaProperties ( t, enclosing ) ; if  ( detectImplicitPrototypeCycle (  )  )  { handleTypeCycle ( t ) ; }^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P13_Insert_Block]^if  ( type != null )  {     return type; }^202^^^^^190^208^[Delete]^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P5_Replace_Variable]^resolveViaProperties (  enclosing ) ;^204^^^^^190^208^resolveViaProperties ( t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P5_Replace_Variable]^resolveViaProperties ( t ) ;^204^^^^^190^208^resolveViaProperties ( t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P5_Replace_Variable]^resolveViaProperties ( enclosing, t ) ;^204^^^^^190^208^resolveViaProperties ( t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P7_Replace_Invocation]^resolveViaRegistry ( t, enclosing ) ;^204^^^^^190^208^resolveViaProperties ( t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P8_Replace_Mix]^resolveViaProperties ( t, 0 ) ;^204^^^^^190^208^resolveViaProperties ( t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P14_Delete_Statement]^^204^^^^^190^208^resolveViaProperties ( t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P11_Insert_Donor_Statement]^resolveViaRegistry ( t, enclosing ) ;resolveViaProperties ( t, enclosing ) ;^204^^^^^190^208^resolveViaProperties ( t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P7_Replace_Invocation]^if  ( getPrimitiveType (  )  )  {^205^^^^^190^208^if  ( detectImplicitPrototypeCycle (  )  )  {^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P15_Unwrap_Block]^handleTypeCycle(t);^205^206^207^^^190^208^if  ( detectImplicitPrototypeCycle (  )  )  { handleTypeCycle ( t ) ; }^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P16_Remove_Block]^^205^206^207^^^190^208^if  ( detectImplicitPrototypeCycle (  )  )  { handleTypeCycle ( t ) ; }^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P7_Replace_Invocation]^checkEnumElementCycle ( t ) ;^206^^^^^190^208^handleTypeCycle ( t ) ;^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P14_Delete_Statement]^^206^^^^^190^208^handleTypeCycle ( t ) ;^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P11_Insert_Donor_Statement]^checkEnumElementCycle ( t ) ;handleTypeCycle ( t ) ;^206^^^^^190^208^handleTypeCycle ( t ) ;^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P11_Insert_Donor_Statement]^handleUnresolvedType ( t ) ;handleTypeCycle ( t ) ;^206^^^^^190^208^handleTypeCycle ( t ) ;^[CLASS] NamedType  [METHOD] resolve [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  StaticScope  enclosing  
[P5_Replace_Variable]^ObjectType type = ObjectType.cast ( registry.getType ( sourceName )  ) ;^215^^^^^213^219^ObjectType type = ObjectType.cast ( registry.getType ( reference )  ) ;^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P5_Replace_Variable]^ObjectType type = ObjectType.cast ( reference.getType ( registry )  ) ;^215^^^^^213^219^ObjectType type = ObjectType.cast ( registry.getType ( reference )  ) ;^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P7_Replace_Invocation]^ObjectType type = ObjectType.isNominalType ( registry.getType ( reference )  ) ;^215^^^^^213^219^ObjectType type = ObjectType.cast ( registry.getType ( reference )  ) ;^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P7_Replace_Invocation]^ObjectType type = ObjectType.cast ( registry.getNativeObjectType ( reference )  ) ;^215^^^^^213^219^ObjectType type = ObjectType.cast ( registry.getType ( reference )  ) ;^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P11_Insert_Donor_Statement]^ObjectType objType = ObjectType.cast (  ( JSType )  that ) ;ObjectType type = ObjectType.cast ( registry.getType ( reference )  ) ;^215^^^^^213^219^ObjectType type = ObjectType.cast ( registry.getType ( reference )  ) ;^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P7_Replace_Invocation]^ObjectType type = ObjectType.cast ( registry .getType ( reference )   ) ;^215^^^^^213^219^ObjectType type = ObjectType.cast ( registry.getType ( reference )  ) ;^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P14_Delete_Statement]^^215^^^^^213^219^ObjectType type = ObjectType.cast ( registry.getType ( reference )  ) ;^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P5_Replace_Variable]^ObjectType type = ObjectType.cast ( this.getType ( reference )  ) ;^215^^^^^213^219^ObjectType type = ObjectType.cast ( registry.getType ( reference )  ) ;^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P2_Replace_Operator]^if  ( type == null )  {^216^^^^^213^219^if  ( type != null )  {^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P5_Replace_Variable]^if  ( t != null )  {^216^^^^^213^219^if  ( type != null )  {^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P8_Replace_Mix]^if  ( type != false )  {^216^^^^^213^219^if  ( type != null )  {^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P9_Replace_Statement]^if  ( objType != null )  {^216^^^^^213^219^if  ( type != null )  {^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P9_Replace_Statement]^if  ( value == null )  {^216^^^^^213^219^if  ( type != null )  {^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P9_Replace_Statement]^if  ( this == that )  {^216^^^^^213^219^if  ( type != null )  {^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P9_Replace_Statement]^if  ( slot == null )  {^216^^^^^213^219^if  ( type != null )  {^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P15_Unwrap_Block]^setReferencedType(type, t, enclosing);^216^217^218^^^213^219^if  ( type != null )  { setReferencedType ( type, t, enclosing ) ; }^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P16_Remove_Block]^^216^217^218^^^213^219^if  ( type != null )  { setReferencedType ( type, t, enclosing ) ; }^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P13_Insert_Block]^if  ( slot == null )  {     handleUnresolvedType ( t ) ;     return ; }^216^^^^^213^219^[Delete]^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P13_Insert_Block]^if  ( value == null )  {     handleUnresolvedType ( t ) ;     return ; }^216^^^^^213^219^[Delete]^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P13_Insert_Block]^if  ( type != null )  {     return type; }^216^^^^^213^219^[Delete]^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P5_Replace_Variable]^setReferencedType (  t, enclosing ) ;^217^^^^^213^219^setReferencedType ( type, t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P5_Replace_Variable]^setReferencedType ( type,  enclosing ) ;^217^^^^^213^219^setReferencedType ( type, t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P5_Replace_Variable]^setReferencedType ( type, t ) ;^217^^^^^213^219^setReferencedType ( type, t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P5_Replace_Variable]^setReferencedType ( enclosing, t, type ) ;^217^^^^^213^219^setReferencedType ( type, t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P5_Replace_Variable]^setReferencedType ( enclosingype, t, t ) ;^217^^^^^213^219^setReferencedType ( type, t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P7_Replace_Invocation]^getTypedefType ( type, t, enclosing ) ;^217^^^^^213^219^setReferencedType ( type, t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P14_Delete_Statement]^^217^^^^^213^219^setReferencedType ( type, t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P11_Insert_Donor_Statement]^resolveViaRegistry ( t, enclosing ) ;setReferencedType ( type, t, enclosing ) ;^217^^^^^213^219^setReferencedType ( type, t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P11_Insert_Donor_Statement]^setReferencedType ( functionType.getInstanceType (  ) , t, enclosing ) ;setReferencedType ( type, t, enclosing ) ;^217^^^^^213^219^setReferencedType ( type, t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P13_Insert_Block]^if  ( type != null )  {     setReferencedType ( type, t, enclosing ) ; }^217^^^^^213^219^[Delete]^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P5_Replace_Variable]^setReferencedType ( t, type, enclosing ) ;^217^^^^^213^219^setReferencedType ( type, t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P5_Replace_Variable]^setReferencedType ( typeype, t, enclosing ) ;^217^^^^^213^219^setReferencedType ( type, t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaRegistry [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  lineno  
[P3_Replace_Literal]^String[] componentNames = reference.split ( "\\.", -lineno ) ;^228^^^^^213^243^String[] componentNames = reference.split ( "\\.", -1 ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^String[] componentNames = sourceName.split ( "\\.", -1 ) ;^228^^^^^213^243^String[] componentNames = reference.split ( "\\.", -1 ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^String[] componentNames = reference .length (  )  ;^228^^^^^213^243^String[] componentNames = reference.split ( "\\.", -1 ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P3_Replace_Literal]^String[] componentNames = reference.split ( "\\.\\", -1 ) ;^228^^^^^213^243^String[] componentNames = reference.split ( "\\.", -1 ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P3_Replace_Literal]^String[] componentNames = reference.split ( "\\.", --6 ) ;^228^^^^^213^243^String[] componentNames = reference.split ( "\\.", -1 ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^228^^^^^213^243^String[] componentNames = reference.split ( "\\.", -1 ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P2_Replace_Operator]^if  ( componentNames[0].length (  )  != 0 )  {^229^^^^^214^244^if  ( componentNames[0].length (  )  == 0 )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P3_Replace_Literal]^if  ( componentNames[-8].length (  )  == -8 )  {^229^^^^^214^244^if  ( componentNames[0].length (  )  == 0 )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P3_Replace_Literal]^if  ( componentNames[lineno].length (  )  == lineno )  {^229^^^^^214^244^if  ( componentNames[0].length (  )  == 0 )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P3_Replace_Literal]^if  ( componentNames[0].length() - 3  == 0 )  {^229^^^^^214^244^if  ( componentNames[0].length (  )  == 0 )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^if  ( componentNames[0].split (  )  == 0 )  {^229^^^^^214^244^if  ( componentNames[0].length (  )  == 0 )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P8_Replace_Mix]^if  ( componentNames[0 ].length (  )  == 0  )  {^229^^^^^214^244^if  ( componentNames[0].length (  )  == 0 )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P9_Replace_Statement]^if  ( componentNames[i].length (  )  == 0 )  {^229^^^^^214^244^if  ( componentNames[0].length (  )  == 0 )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P15_Unwrap_Block]^handleUnresolvedType(t); return ;^229^230^231^232^^214^244^if  ( componentNames[0].length (  )  == 0 )  { handleUnresolvedType ( t ) ; return; }^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P16_Remove_Block]^^229^230^231^232^^214^244^if  ( componentNames[0].length (  )  == 0 )  { handleUnresolvedType ( t ) ; return; }^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  ( slot == null )  {     handleUnresolvedType ( t ) ;     return ; }^229^^^^^214^244^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  (  ( componentNames[i].length (  )  )  == 0 )  {     handleUnresolvedType ( t ) ;     return ; }^229^^^^^214^244^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  ( value == null )  {     handleUnresolvedType ( t ) ;     return ; }^229^^^^^214^244^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  (  (  ( slotType == null )  ||  ( slotType.isAllType (  )  )  )  ||  ( slotType.isNoType (  )  )  )  {     handleUnresolvedType ( t ) ;     return ; }^229^^^^^214^244^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  ( parentClass == null )  {     handleUnresolvedType ( t ) ;     return ; }^229^^^^^214^244^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^handleTypeCycle ( t ) ;^230^^^^^215^245^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^230^^^^^215^245^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^handleTypeCycle ( t ) ;handleUnresolvedType ( t ) ;^230^^^^^215^245^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P3_Replace_Literal]^if  ( componentNames[1].length (  )  == 1 )  {^229^^^^^214^244^if  ( componentNames[0].length (  )  == 0 )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P3_Replace_Literal]^if  ( componentNames[0].length() - 7  == 0 )  {^229^^^^^214^244^if  ( componentNames[0].length (  )  == 0 )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P3_Replace_Literal]^StaticSlot<JSType> slot = enclosing.getSlot ( componentNames[-1] ) ;^233^^^^^218^248^StaticSlot<JSType> slot = enclosing.getSlot ( componentNames[0] ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^StaticSlot<JSType> slot = componentNames.getSlot ( enclosing[0] ) ;^233^^^^^218^248^StaticSlot<JSType> slot = enclosing.getSlot ( componentNames[0] ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P3_Replace_Literal]^StaticSlot<JSType> slot = enclosing.getSlot ( componentNames[-6] ) ;^233^^^^^218^248^StaticSlot<JSType> slot = enclosing.getSlot ( componentNames[0] ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^233^^^^^218^248^StaticSlot<JSType> slot = enclosing.getSlot ( componentNames[0] ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P2_Replace_Operator]^if  ( slot != null )  {^234^^^^^219^249^if  ( slot == null )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P8_Replace_Mix]^if  ( slot == this )  {^234^^^^^219^249^if  ( slot == null )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P9_Replace_Statement]^if  ( objType != null )  {^234^^^^^219^249^if  ( slot == null )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P9_Replace_Statement]^if  ( parentClass == null )  {^234^^^^^219^249^if  ( slot == null )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P9_Replace_Statement]^if  ( value == null )  {^234^^^^^219^249^if  ( slot == null )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P9_Replace_Statement]^if  ( this == that )  {^234^^^^^219^249^if  ( slot == null )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P9_Replace_Statement]^if  ( type != null )  {^234^^^^^219^249^if  ( slot == null )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P15_Unwrap_Block]^handleUnresolvedType(t); return ;^234^235^236^237^^219^249^if  ( slot == null )  { handleUnresolvedType ( t ) ; return; }^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P16_Remove_Block]^^234^235^236^237^^219^249^if  ( slot == null )  { handleUnresolvedType ( t ) ; return; }^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  ( type != null )  {     setReferencedType ( type, t, enclosing ) ; }^234^^^^^219^249^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  (  ( componentNames[i].length (  )  )  == 0 )  {     handleUnresolvedType ( t ) ;     return ; }^234^^^^^219^249^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  ( value == null )  {     handleUnresolvedType ( t ) ;     return ; }^234^^^^^219^249^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  (  (  ( slotType == null )  ||  ( slotType.isAllType (  )  )  )  ||  ( slotType.isNoType (  )  )  )  {     handleUnresolvedType ( t ) ;     return ; }^234^^^^^219^249^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  (  ( componentNames[0].length (  )  )  == 0 )  {     handleUnresolvedType ( t ) ;     return ; }^234^^^^^219^249^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  ( parentClass == null )  {     handleUnresolvedType ( t ) ;     return ; }^234^^^^^219^249^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^handleTypeCycle ( t ) ;^235^^^^^220^250^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^235^236^^^^220^250^handleUnresolvedType ( t ) ; return;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^handleTypeCycle ( t ) ;handleUnresolvedType ( t ) ;^235^^^^^220^250^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^235^^^^^220^250^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P8_Replace_Mix]^JSType thisType = slot.getType (  ) ;^241^^^^^226^256^JSType slotType = slot.getType (  ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^JSType type = slot.getType (  ) ;JSType slotType = slot.getType (  ) ;^241^^^^^226^256^JSType slotType = slot.getType (  ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P8_Replace_Mix]^JSType 1Type = slot.getType (  ) ;^241^^^^^226^256^JSType slotType = slot.getType (  ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^241^^^^^226^256^JSType slotType = slot.getType (  ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P2_Replace_Operator]^if  ( slotType == null && slotType.isAllType (  )  || slotType.isNoType (  )  )  {^242^^^^^227^257^if  ( slotType == null || slotType.isAllType (  )  || slotType.isNoType (  )  )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P2_Replace_Operator]^if  ( slotType != null || slotType.isAllType (  )  || slotType.isNoType (  )  )  {^242^^^^^227^257^if  ( slotType == null || slotType.isAllType (  )  || slotType.isNoType (  )  )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^if  ( value == null || slotType.isAllType (  )  || slotType.isNoType (  )  )  {^242^^^^^227^257^if  ( slotType == null || slotType.isAllType (  )  || slotType.isNoType (  )  )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P6_Replace_Expression]^if  ( slotType == null ) {^242^^^^^227^257^if  ( slotType == null || slotType.isAllType (  )  || slotType.isNoType (  )  )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P6_Replace_Expression]^if  (  slotType.isAllType (  )  || slotType.isNoType (  )  )  {^242^^^^^227^257^if  ( slotType == null || slotType.isAllType (  )  || slotType.isNoType (  )  )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P6_Replace_Expression]^if  ( (slotType == null || slotType.isAllType()) )  {^242^^^^^227^257^if  ( slotType == null || slotType.isAllType (  )  || slotType.isNoType (  )  )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^if  ( slotType == null || slotType .isNoType (  )   || slotType.isNoType (  )  )  {^242^^^^^227^257^if  ( slotType == null || slotType.isAllType (  )  || slotType.isNoType (  )  )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^if  ( slotType == null || slotType.isAllType (  )  || slotType .isAllType (  )   )  {^242^^^^^227^257^if  ( slotType == null || slotType.isAllType (  )  || slotType.isNoType (  )  )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P8_Replace_Mix]^if  ( slotType == true ) {^242^^^^^227^257^if  ( slotType == null || slotType.isAllType (  )  || slotType.isNoType (  )  )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P15_Unwrap_Block]^handleUnresolvedType(t); return ;^242^243^244^245^^227^257^if  ( slotType == null || slotType.isAllType (  )  || slotType.isNoType (  )  )  { handleUnresolvedType ( t ) ; return; }^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P16_Remove_Block]^^242^243^244^245^^227^257^if  ( slotType == null || slotType.isAllType (  )  || slotType.isNoType (  )  )  { handleUnresolvedType ( t ) ; return; }^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  ( slot == null )  {     handleUnresolvedType ( t ) ;     return ; }^242^^^^^227^257^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  (  ( componentNames[i].length (  )  )  == 0 )  {     handleUnresolvedType ( t ) ;     return ; }^242^^^^^227^257^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  (  ( componentNames[0].length (  )  )  == 0 )  {     handleUnresolvedType ( t ) ;     return ; }^242^^^^^227^257^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^handleTypeCycle ( t ) ;^243^^^^^228^258^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^243^^^^^228^258^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^handleTypeCycle ( t ) ;handleUnresolvedType ( t ) ;^243^^^^^228^258^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P8_Replace_Mix]^if  ( value == null || slotType .isNoType (  )   || slotType.isNoType (  )  )  {^242^^^^^227^257^if  ( slotType == null || slotType.isAllType (  )  || slotType.isNoType (  )  )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^243^244^^^^228^258^handleUnresolvedType ( t ) ; return;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^JSType value = getTypedefType ( t, 4, componentNames[0] ) ;^246^^^^^231^261^JSType value = getTypedefType ( t, slot, componentNames[0] ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^JSType value = getTypedefType (  slot, componentNames[0] ) ;^246^^^^^231^261^JSType value = getTypedefType ( t, slot, componentNames[0] ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^JSType value = getTypedefType ( t,  componentNames[0] ) ;^246^^^^^231^261^JSType value = getTypedefType ( t, slot, componentNames[0] ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^JSType value = getTypedefType ( t, slot[0] ) ;^246^^^^^231^261^JSType value = getTypedefType ( t, slot, componentNames[0] ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^JSType value = getTypedefType ( componentNames, slot, t[0] ) ;^246^^^^^231^261^JSType value = getTypedefType ( t, slot, componentNames[0] ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^JSType value = getTypedefType ( slot, t, componentNames[0] ) ;^246^^^^^231^261^JSType value = getTypedefType ( t, slot, componentNames[0] ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^JSType value = getTypedefType ( t, componentNames, slot[0] ) ;^246^^^^^231^261^JSType value = getTypedefType ( t, slot, componentNames[0] ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P3_Replace_Literal]^JSType value = getTypedefType ( t, slot, componentNames[i] ) ;^246^^^^^231^261^JSType value = getTypedefType ( t, slot, componentNames[0] ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^246^^^^^231^261^JSType value = getTypedefType ( t, slot, componentNames[0] ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P2_Replace_Operator]^if  ( value != null )  {^247^^^^^232^262^if  ( value == null )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^if  ( slotType == null )  {^247^^^^^232^262^if  ( value == null )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P8_Replace_Mix]^if  ( value == true )  {^247^^^^^232^262^if  ( value == null )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P9_Replace_Statement]^if  ( objType != null )  {^247^^^^^232^262^if  ( value == null )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P9_Replace_Statement]^if  ( parentClass == null )  {^247^^^^^232^262^if  ( value == null )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P9_Replace_Statement]^if  ( slot == null )  {^247^^^^^232^262^if  ( value == null )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P9_Replace_Statement]^if  ( type != null )  {^247^^^^^232^262^if  ( value == null )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P15_Unwrap_Block]^handleUnresolvedType(t); return ;^247^248^249^250^^232^262^if  ( value == null )  { handleUnresolvedType ( t ) ; return; }^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P16_Remove_Block]^^247^248^249^250^^232^262^if  ( value == null )  { handleUnresolvedType ( t ) ; return; }^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  ( slot == null )  {     handleUnresolvedType ( t ) ;     return ; }^247^^^^^232^262^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  ( type != null )  {     setReferencedType ( type, t, enclosing ) ; }^247^^^^^232^262^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  (  ( componentNames[i].length (  )  )  == 0 )  {     handleUnresolvedType ( t ) ;     return ; }^247^^^^^232^262^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  (  ( componentNames[0].length (  )  )  == 0 )  {     handleUnresolvedType ( t ) ;     return ; }^247^^^^^232^262^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  ( parentClass == null )  {     handleUnresolvedType ( t ) ;     return ; }^247^^^^^232^262^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^handleTypeCycle ( t ) ;^248^^^^^233^263^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^248^^^^^233^263^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^handleTypeCycle ( t ) ;handleUnresolvedType ( t ) ;^248^^^^^233^263^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P2_Replace_Operator]^if  ( parentClass != null )  {^255^^^^^240^270^if  ( parentClass == null )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P8_Replace_Mix]^if  ( parentClass == true )  {^255^^^^^240^270^if  ( parentClass == null )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P9_Replace_Statement]^if  ( value == null )  {^255^^^^^240^270^if  ( parentClass == null )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P9_Replace_Statement]^if  ( slot == null )  {^255^^^^^240^270^if  ( parentClass == null )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P15_Unwrap_Block]^handleUnresolvedType(t); return ;^255^256^257^258^^240^270^if  ( parentClass == null )  { handleUnresolvedType ( t ) ; return; }^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P16_Remove_Block]^^255^256^257^258^^240^270^if  ( parentClass == null )  { handleUnresolvedType ( t ) ; return; }^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  ( slot == null )  {     handleUnresolvedType ( t ) ;     return ; }^255^^^^^240^270^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  (  ( componentNames[i].length (  )  )  == 0 )  {     handleUnresolvedType ( t ) ;     return ; }^255^^^^^240^270^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  ( value == null )  {     handleUnresolvedType ( t ) ;     return ; }^255^^^^^240^270^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  (  ( componentNames[0].length (  )  )  == 0 )  {     handleUnresolvedType ( t ) ;     return ; }^255^^^^^240^270^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^handleTypeCycle ( t ) ;^256^^^^^241^271^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^256^257^^^^241^271^handleUnresolvedType ( t ) ; return;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^handleTypeCycle ( t ) ;handleUnresolvedType ( t ) ;^256^^^^^241^271^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P2_Replace_Operator]^if  ( componentNames[i].length (  )  <= 0 )  {^259^^^^^244^274^if  ( componentNames[i].length (  )  == 0 )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P3_Replace_Literal]^if  ( componentNames[i].length (  )  == lineno )  {^259^^^^^244^274^if  ( componentNames[i].length (  )  == 0 )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P3_Replace_Literal]^if  ( componentNames[i].length() + 5  == 0 )  {^259^^^^^244^274^if  ( componentNames[i].length (  )  == 0 )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^if  ( componentNames[i].split (  )  == 0 )  {^259^^^^^244^274^if  ( componentNames[i].length (  )  == 0 )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^if  ( componentNames[i] .split ( reference , i )   == 0 )  {^259^^^^^244^274^if  ( componentNames[i].length (  )  == 0 )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P8_Replace_Mix]^if  ( componentNames[i].length (  )  == 0  )  {^259^^^^^244^274^if  ( componentNames[i].length (  )  == 0 )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P9_Replace_Statement]^if  ( componentNames[0].length (  )  == 0 )  {^259^^^^^244^274^if  ( componentNames[i].length (  )  == 0 )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P15_Unwrap_Block]^handleUnresolvedType(t); return ;^259^260^261^262^^244^274^if  ( componentNames[i].length (  )  == 0 )  { handleUnresolvedType ( t ) ; return; }^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P16_Remove_Block]^^259^260^261^262^^244^274^if  ( componentNames[i].length (  )  == 0 )  { handleUnresolvedType ( t ) ; return; }^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  ( slot == null )  {     handleUnresolvedType ( t ) ;     return ; }^259^^^^^244^274^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  ( value == null )  {     handleUnresolvedType ( t ) ;     return ; }^259^^^^^244^274^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  (  (  ( slotType == null )  ||  ( slotType.isAllType (  )  )  )  ||  ( slotType.isNoType (  )  )  )  {     handleUnresolvedType ( t ) ;     return ; }^259^^^^^244^274^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  (  ( componentNames[0].length (  )  )  == 0 )  {     handleUnresolvedType ( t ) ;     return ; }^259^^^^^244^274^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  ( parentClass == null )  {     handleUnresolvedType ( t ) ;     return ; }^259^^^^^244^274^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^handleTypeCycle ( t ) ;^260^^^^^245^275^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^260^261^^^^245^275^handleUnresolvedType ( t ) ; return;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^handleTypeCycle ( t ) ;handleUnresolvedType ( t ) ;^260^^^^^245^275^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P1_Replace_Type]^for  (  short  i = 1; i < componentNames.length; i++ )  {^253^^^^^238^268^for  ( int i = 1; i < componentNames.length; i++ )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P2_Replace_Operator]^for  ( int i = 1; i > componentNames.length; i++ )  {^253^^^^^238^268^for  ( int i = 1; i < componentNames.length; i++ )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P3_Replace_Literal]^for  ( int i = lineno; i < componentNames.length; i++ )  {^253^^^^^238^268^for  ( int i = 1; i < componentNames.length; i++ )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^for  ( linenont i = 1; i < componentNames.length; i++ )  {^253^^^^^238^268^for  ( int i = 1; i < componentNames.length; i++ )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^for  ( int i = 1; i < lineno; i++ )  {^253^^^^^238^268^for  ( int i = 1; i < componentNames.length; i++ )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^for  ( componentNames.lengthnt i = 1; i < i; i++ )  {^253^^^^^238^268^for  ( int i = 1; i < componentNames.length; i++ )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^for  ( componentNamesnt i = 1; i < i.length; i++ )  {^253^^^^^238^268^for  ( int i = 1; i < componentNames.length; i++ )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^for  ( int i = 1; i < componentNames.split; i++ )  {^253^^^^^238^268^for  ( int i = 1; i < componentNames.length; i++ )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P8_Replace_Mix]^if  ( parentClass == false )  {^255^^^^^240^270^if  ( parentClass == null )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P3_Replace_Literal]^if  ( componentNames[i].length (  )  == 5 )  {^259^^^^^244^274^if  ( componentNames[i].length (  )  == 0 )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P3_Replace_Literal]^if  ( componentNames[i].length() + 2  == 0 )  {^259^^^^^244^274^if  ( componentNames[i].length (  )  == 0 )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^260^^^^^245^275^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^value = componentNames.getPropertyType ( parentClass[i] ) ;^263^^^^^248^278^value = parentClass.getPropertyType ( componentNames[i] ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^value = parentClass .getReferenceName (  )  ;^263^^^^^248^278^value = parentClass.getPropertyType ( componentNames[i] ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P8_Replace_Mix]^value =  null.getPropertyType ( componentNames[i] ) ;^263^^^^^248^278^value = parentClass.getPropertyType ( componentNames[i] ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^ObjectType parentClass = ObjectType.cast ( slotType ) ;^254^^^^^239^269^ObjectType parentClass = ObjectType.cast ( value ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^ObjectType parentClass = ObjectType.getPropertyType ( value ) ;^254^^^^^239^269^ObjectType parentClass = ObjectType.cast ( value ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^ObjectType objType = ObjectType.cast (  ( JSType )  that ) ;ObjectType parentClass = ObjectType.cast ( value ) ;^254^^^^^239^269^ObjectType parentClass = ObjectType.cast ( value ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^254^^^^^239^269^ObjectType parentClass = ObjectType.cast ( value ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P3_Replace_Literal]^if  ( componentNames[i].length() - 7  == 0 )  {^259^^^^^244^274^if  ( componentNames[i].length (  )  == 0 )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^263^^^^^248^278^value = parentClass.getPropertyType ( componentNames[i] ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P1_Replace_Type]^for  (  long  i = 1; i < componentNames.length; i++ )  {^253^^^^^238^268^for  ( int i = 1; i < componentNames.length; i++ )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P3_Replace_Literal]^for  ( int i = charno; i < componentNames.length; i++ )  {^253^^^^^238^268^for  ( int i = 1; i < componentNames.length; i++ )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^ObjectType parentClass = ObjectType .isNominalType (  )  ;^254^^^^^239^269^ObjectType parentClass = ObjectType.cast ( value ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^256^^^^^241^271^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^if  ( componentNames[i] .split ( reference , lineno )   == 0 )  {^259^^^^^244^274^if  ( componentNames[i].length (  )  == 0 )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P2_Replace_Operator]^if  ( value  ==  FunctionType )  {^267^^^^^252^282^if  ( value instanceof FunctionType )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P2_Replace_Operator]^if  ( value  >>  FunctionType )  {^267^^^^^252^282^if  ( value instanceof FunctionType )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^if  ( slotType instanceof FunctionType )  {^267^^^^^252^282^if  ( value instanceof FunctionType )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P6_Replace_Expression]^if  ( functionType.isConstructor() || functionType.isInterface() )  {^267^^^^^252^282^if  ( value instanceof FunctionType )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P6_Replace_Expression]^if  ( value instanceof EnumType )  {^267^^^^^252^282^if  ( value instanceof FunctionType )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P2_Replace_Operator]^} else if  ( value  &  EnumType )  {^274^^^^^259^289^} else if  ( value instanceof EnumType )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^} else if  ( slotType instanceof EnumType )  {^274^^^^^259^289^} else if  ( value instanceof EnumType )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P6_Replace_Expression]^} else {^274^^^^^259^289^} else if  ( value instanceof EnumType )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P9_Replace_Statement]^} else if  ( that instanceof JSType )  {^274^^^^^259^289^} else if  ( value instanceof EnumType )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P15_Unwrap_Block]^setReferencedType(((com.google.javascript.rhino.jstype.EnumType) (value)).getElementsType(), t, enclosing);^274^275^276^277^278^259^289^} else if  ( value instanceof EnumType )  { setReferencedType (  (  ( EnumType )  value ) .getElementsType (  ) , t, enclosing ) ; } else { handleUnresolvedType ( t ) ; }^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P16_Remove_Block]^^274^275^276^277^278^259^289^} else if  ( value instanceof EnumType )  { setReferencedType (  (  ( EnumType )  value ) .getElementsType (  ) , t, enclosing ) ; } else { handleUnresolvedType ( t ) ; }^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  (  ( functionType.isConstructor (  )  )  ||  ( functionType.isInterface (  )  )  )  {     setReferencedType ( functionType.getInstanceType (  ) , t, enclosing ) ; }else {     handleUnresolvedType ( t ) ; }^274^^^^^259^289^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  (  (  ( referencedType )  instanceof EnumElementType )  &&  (  (  (  ( EnumElementType )   ( referencedType )  ) .getPrimitiveType (  )  )  ==  ( this )  )  )  {     handleTypeCycle ( t ) ; }^274^^^^^259^289^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^handleTypeCycle ( t ) ;^277^^^^^274^278^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^277^^^^^274^278^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^handleTypeCycle ( t ) ;handleUnresolvedType ( t ) ;^277^^^^^274^278^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^setReferencedType (  (  ( EnumType )  value ) .getElementsType (  ) , t, null ) ;^275^^^^^260^290^setReferencedType (  (  ( EnumType )  value ) .getElementsType (  ) , t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^setReferencedType (  (  ( EnumType )  value ) .getElementsType (  ) ,  enclosing ) ;^275^^^^^260^290^setReferencedType (  (  ( EnumType )  value ) .getElementsType (  ) , t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^setReferencedType (  (  ( EnumType )  value ) .getElementsType (  ) , t ) ;^275^^^^^260^290^setReferencedType (  (  ( EnumType )  value ) .getElementsType (  ) , t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^setReferencedType (  (  ( EnumType )  value ) .getElementsType (  ) , enclosing, t ) ;^275^^^^^260^290^setReferencedType (  (  ( EnumType )  value ) .getElementsType (  ) , t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^getTypedefType (  (  ( EnumType )  value ) .getElementsType (  ) , t, enclosing ) ;^275^^^^^260^290^setReferencedType (  (  ( EnumType )  value ) .getElementsType (  ) , t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^275^^^^^260^290^setReferencedType (  (  ( EnumType )  value ) .getElementsType (  ) , t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^setReferencedType ( functionType.getInstanceType (  ) , t, enclosing ) ;setReferencedType (  (  ( EnumType )  value ) .getElementsType (  ) , t, enclosing ) ;^275^^^^^260^290^setReferencedType (  (  ( EnumType )  value ) .getElementsType (  ) , t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P8_Replace_Mix]^setReferencedType (  (  ( EnumType )  value )  .getPrimitiveType (  )  , t, enclosing ) ;^275^^^^^260^290^setReferencedType (  (  ( EnumType )  value ) .getElementsType (  ) , t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^handleTypeCycle ( t ) ;^277^^^^^262^292^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^277^^^^^262^292^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^handleTypeCycle ( t ) ;handleUnresolvedType ( t ) ;^277^^^^^262^292^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P2_Replace_Operator]^if  ( functionType.isConstructor (  )  && functionType.isInterface (  )  )  {^269^^^^^254^284^if  ( functionType.isConstructor (  )  || functionType.isInterface (  )  )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P6_Replace_Expression]^if  ( functionType.isConstructor (  )  ) {^269^^^^^254^284^if  ( functionType.isConstructor (  )  || functionType.isInterface (  )  )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P6_Replace_Expression]^if  (  functionType.isInterface (  )  )  {^269^^^^^254^284^if  ( functionType.isConstructor (  )  || functionType.isInterface (  )  )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^if  ( functionType.isConstructor (  )  || functionType .isConstructor (  )   )  {^269^^^^^254^284^if  ( functionType.isConstructor (  )  || functionType.isInterface (  )  )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P15_Unwrap_Block]^setReferencedType(functionType.getInstanceType(), t, enclosing);^269^270^271^272^273^254^284^if  ( functionType.isConstructor (  )  || functionType.isInterface (  )  )  { setReferencedType ( functionType.getInstanceType (  ) , t, enclosing ) ; } else { handleUnresolvedType ( t ) ; }^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P16_Remove_Block]^^269^270^271^272^273^254^284^if  ( functionType.isConstructor (  )  || functionType.isInterface (  )  )  { setReferencedType ( functionType.getInstanceType (  ) , t, enclosing ) ; } else { handleUnresolvedType ( t ) ; }^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  ( value instanceof EnumType )  {     setReferencedType (  (  ( EnumType )   ( value )  ) .getElementsType (  ) , t, enclosing ) ; }else {     handleUnresolvedType ( t ) ; }^269^^^^^254^284^[Delete]^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^handleTypeCycle ( t ) ;^272^^^^^269^273^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^272^^^^^269^273^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^handleTypeCycle ( t ) ;handleUnresolvedType ( t ) ;^272^^^^^269^273^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^setReferencedType ( functionType.getInstanceType (  ) ,  enclosing ) ;^270^^^^^255^285^setReferencedType ( functionType.getInstanceType (  ) , t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^setReferencedType ( functionType.getInstanceType (  ) , t ) ;^270^^^^^255^285^setReferencedType ( functionType.getInstanceType (  ) , t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^setReferencedType ( t.getInstanceType (  ) , functionType, enclosing ) ;^270^^^^^255^285^setReferencedType ( functionType.getInstanceType (  ) , t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^setReferencedType ( functionType.getInstanceType (  ) , enclosing, t ) ;^270^^^^^255^285^setReferencedType ( functionType.getInstanceType (  ) , t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^getTypedefType ( functionType.getInstanceType (  ) , t, enclosing ) ;^270^^^^^255^285^setReferencedType ( functionType.getInstanceType (  ) , t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^setReferencedType ( functionType .isConstructor (  )  , t, enclosing ) ;^270^^^^^255^285^setReferencedType ( functionType.getInstanceType (  ) , t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^270^^^^^255^285^setReferencedType ( functionType.getInstanceType (  ) , t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^setReferencedType ( type, t, enclosing ) ;setReferencedType ( functionType.getInstanceType (  ) , t, enclosing ) ;^270^^^^^255^285^setReferencedType ( functionType.getInstanceType (  ) , t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^setReferencedType (  (  ( EnumType )  value ) .getElementsType (  ) , t, enclosing ) ;setReferencedType ( functionType.getInstanceType (  ) , t, enclosing ) ;^270^^^^^255^285^setReferencedType ( functionType.getInstanceType (  ) , t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^if  ( functionType .getInstanceType (  )   || functionType.isInterface (  )  )  {^269^^^^^254^284^if  ( functionType.isConstructor (  )  || functionType.isInterface (  )  )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^setReferencedType ( enclosing.getInstanceType (  ) , t, functionType ) ;^270^^^^^255^285^setReferencedType ( functionType.getInstanceType (  ) , t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^handleTypeCycle ( t ) ;^272^^^^^257^287^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^272^^^^^257^287^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^handleTypeCycle ( t ) ;handleUnresolvedType ( t ) ;^272^^^^^257^287^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P8_Replace_Mix]^setReferencedType ( functionType.getInstanceType (  ) , t, 1 ) ;^270^^^^^255^285^setReferencedType ( functionType.getInstanceType (  ) , t, enclosing ) ;^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P2_Replace_Operator]^} else if  ( value  >>  EnumType )  {^274^^^^^259^289^} else if  ( value instanceof EnumType )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P8_Replace_Mix]^}  if  ( slotType instanceof EnumType )  {^274^^^^^259^289^} else if  ( value instanceof EnumType )  {^[CLASS] NamedType  [METHOD] resolveViaProperties [RETURN_TYPE] void   ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  parentClass  ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  slotType  value  StaticScope  enclosing  FunctionType  functionType  String  reference  sourceName  String[]  componentNames  long  serialVersionUID  int  charno  i  lineno  
[P8_Replace_Mix]^referencedType =  null;^283^^^^^281^286^referencedType = type;^[CLASS] NamedType  [METHOD] setReferencedType [RETURN_TYPE] void   ObjectType type ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^handleTypeCycle ( t ) ;^284^^^^^281^286^checkEnumElementCycle ( t ) ;^[CLASS] NamedType  [METHOD] setReferencedType [RETURN_TYPE] void   ObjectType type ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^284^285^^^^281^286^checkEnumElementCycle ( t ) ; isResolved = true;^[CLASS] NamedType  [METHOD] setReferencedType [RETURN_TYPE] void   ObjectType type ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^handleTypeCycle ( t ) ;checkEnumElementCycle ( t ) ;^284^^^^^281^286^checkEnumElementCycle ( t ) ;^[CLASS] NamedType  [METHOD] setReferencedType [RETURN_TYPE] void   ObjectType type ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P3_Replace_Literal]^isResolved = false;^285^^^^^281^286^isResolved = true;^[CLASS] NamedType  [METHOD] setReferencedType [RETURN_TYPE] void   ObjectType type ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^isResolved = false;isResolved = true;^285^^^^^281^286^isResolved = true;^[CLASS] NamedType  [METHOD] setReferencedType [RETURN_TYPE] void   ObjectType type ErrorReporter t JSType> enclosing [VARIABLES] ObjectType  type  ErrorReporter  t  boolean  forgiving  isResolved  StaticScope  enclosing  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^referencedType = registry.isLastGeneration ( JSTypeNative.UNKNOWN_TYPE ) ;^289^^^^^288^293^referencedType = registry.getNativeObjectType ( JSTypeNative.UNKNOWN_TYPE ) ;^[CLASS] NamedType  [METHOD] handleTypeCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P8_Replace_Mix]^referencedType ;^289^^^^^288^293^referencedType = registry.getNativeObjectType ( JSTypeNative.UNKNOWN_TYPE ) ;^[CLASS] NamedType  [METHOD] handleTypeCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^referencedType = registry.getNativeObjectType ( JSTypeNative.CHECKED_UNKNOWN_TYPE ) ;referencedType = registry.getNativeObjectType ( JSTypeNative.UNKNOWN_TYPE ) ;^289^^^^^288^293^referencedType = registry.getNativeObjectType ( JSTypeNative.UNKNOWN_TYPE ) ;^[CLASS] NamedType  [METHOD] handleTypeCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^289^^^^^288^293^referencedType = registry.getNativeObjectType ( JSTypeNative.UNKNOWN_TYPE ) ;^[CLASS] NamedType  [METHOD] handleTypeCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^super ( registry, registry.getNativeObjectType ( JSTypeNative.UNKNOWN_TYPE )  ) ;referencedType = registry.getNativeObjectType ( JSTypeNative.UNKNOWN_TYPE ) ;^289^^^^^288^293^referencedType = registry.getNativeObjectType ( JSTypeNative.UNKNOWN_TYPE ) ;^[CLASS] NamedType  [METHOD] handleTypeCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P3_Replace_Literal]^t.warning ( "Cycle detected in inheritance chain of type tected in inheritance chain of" + reference, sourceName, lineno, null, charno ) ;^290^291^^^^288^293^t.warning ( "Cycle detected in inheritance chain of type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleTypeCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Cycle detected in inheritance chain of type " + reference, reference, lineno, null, charno ) ;^290^291^^^^288^293^t.warning ( "Cycle detected in inheritance chain of type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleTypeCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Cycle detected in inheritance chain of type " + reference, sourceName, i, null, charno ) ;^290^291^^^^288^293^t.warning ( "Cycle detected in inheritance chain of type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleTypeCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Cycle detected in inheritance chain of type " + reference, sourceName, lineno, null, i ) ;^290^291^^^^288^293^t.warning ( "Cycle detected in inheritance chain of type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleTypeCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Cycle detected in inheritance chain of type " +  sourceName, lineno, null, charno ) ;^290^291^^^^288^293^t.warning ( "Cycle detected in inheritance chain of type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleTypeCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Cycle detected in inheritance chain of type " + reference,  lineno, null, charno ) ;^290^291^^^^288^293^t.warning ( "Cycle detected in inheritance chain of type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleTypeCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Cycle detected in inheritance chain of type " + reference, sourceName,  null, charno ) ;^290^291^^^^288^293^t.warning ( "Cycle detected in inheritance chain of type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleTypeCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Cycle detected in inheritance chain of type " + reference, sourceName, lineno, null ) ;^290^291^^^^288^293^t.warning ( "Cycle detected in inheritance chain of type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleTypeCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Cycle detected in inheritance chain of referenceype " + t, sourceName, lineno, null, charno ) ;^290^291^^^^288^293^t.warning ( "Cycle detected in inheritance chain of type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleTypeCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Cycle detected in inheritance chain of type " + lineno, sourceName, reference, null, charno ) ;^290^291^^^^288^293^t.warning ( "Cycle detected in inheritance chain of type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleTypeCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Cycle detected in inheritance chain of sourceNameype " + reference, t, lineno, null, charno ) ;^290^291^^^^288^293^t.warning ( "Cycle detected in inheritance chain of type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleTypeCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Cycle detected in inheritance chain of type " + reference, sourceName, charno, null, lineno ) ;^290^291^^^^288^293^t.warning ( "Cycle detected in inheritance chain of type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleTypeCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^290^291^^^^288^293^t.warning ( "Cycle detected in inheritance chain of type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleTypeCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^t.warning ( "Unknown type " + reference, sourceName, lineno, null, charno ) ;t.warning ( "Cycle detected in inheritance chain of type " + reference, sourceName, lineno, null, charno ) ;^290^291^^^^288^293^t.warning ( "Cycle detected in inheritance chain of type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleTypeCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P3_Replace_Literal]^isResolved = false;^292^^^^^288^293^isResolved = true;^[CLASS] NamedType  [METHOD] handleTypeCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^isResolved = false;isResolved = true;^292^^^^^288^293^isResolved = true;^[CLASS] NamedType  [METHOD] handleTypeCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P2_Replace_Operator]^if  ( referencedType instanceof EnumElementType || (  ( EnumElementType )  referencedType ) .getPrimitiveType (  )  == this )  {^296^297^^^^295^300^if  ( referencedType instanceof EnumElementType && (  ( EnumElementType )  referencedType ) .getPrimitiveType (  )  == this )  {^[CLASS] NamedType  [METHOD] checkEnumElementCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P2_Replace_Operator]^if  ( referencedType  ||  EnumElementType && (  ( EnumElementType )  referencedType ) .getPrimitiveType (  )  == this )  {^296^297^^^^295^300^if  ( referencedType instanceof EnumElementType && (  ( EnumElementType )  referencedType ) .getPrimitiveType (  )  == this )  {^[CLASS] NamedType  [METHOD] checkEnumElementCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P2_Replace_Operator]^if  ( referencedType instanceof EnumElementType && (  ( EnumElementType )  referencedType ) .getPrimitiveType (  )  != this )  {^296^297^^^^295^300^if  ( referencedType instanceof EnumElementType && (  ( EnumElementType )  referencedType ) .getPrimitiveType (  )  == this )  {^[CLASS] NamedType  [METHOD] checkEnumElementCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P6_Replace_Expression]^if  ( referencedType instanceof EnumElementType ) {^296^297^^^^295^300^if  ( referencedType instanceof EnumElementType && (  ( EnumElementType )  referencedType ) .getPrimitiveType (  )  == this )  {^[CLASS] NamedType  [METHOD] checkEnumElementCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P6_Replace_Expression]^if  (  (  ( EnumElementType )  referencedType ) .getPrimitiveType (  )  == this )  {^296^297^^^^295^300^if  ( referencedType instanceof EnumElementType && (  ( EnumElementType )  referencedType ) .getPrimitiveType (  )  == this )  {^[CLASS] NamedType  [METHOD] checkEnumElementCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P6_Replace_Expression]^if  (  (  ( EnumElementType )   ( referencedType )  ) .getPrimitiveType (  )  == this )  {^296^297^^^^295^300^if  ( referencedType instanceof EnumElementType && (  ( EnumElementType )  referencedType ) .getPrimitiveType (  )  == this )  {^[CLASS] NamedType  [METHOD] checkEnumElementCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^if  ( referencedType instanceof EnumElementType && (  ( EnumElementType )  referencedType ) .getElementsType (  )  == this )  {^296^297^^^^295^300^if  ( referencedType instanceof EnumElementType && (  ( EnumElementType )  referencedType ) .getPrimitiveType (  )  == this )  {^[CLASS] NamedType  [METHOD] checkEnumElementCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P15_Unwrap_Block]^handleTypeCycle(t);^296^297^298^299^^295^300^if  ( referencedType instanceof EnumElementType && (  ( EnumElementType )  referencedType ) .getPrimitiveType (  )  == this )  { handleTypeCycle ( t ) ; }^[CLASS] NamedType  [METHOD] checkEnumElementCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P16_Remove_Block]^^296^297^298^299^^295^300^if  ( referencedType instanceof EnumElementType && (  ( EnumElementType )  referencedType ) .getPrimitiveType (  )  == this )  { handleTypeCycle ( t ) ; }^[CLASS] NamedType  [METHOD] checkEnumElementCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P13_Insert_Block]^if  ( value instanceof EnumType )  {     setReferencedType (  (  ( EnumType )   ( value )  ) .getElementsType (  ) , t, enclosing ) ; }else {     handleUnresolvedType ( t ) ; }^296^^^^^295^300^[Delete]^[CLASS] NamedType  [METHOD] checkEnumElementCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^checkEnumElementCycle ( t ) ;^298^^^^^295^300^handleTypeCycle ( t ) ;^[CLASS] NamedType  [METHOD] checkEnumElementCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^298^^^^^295^300^handleTypeCycle ( t ) ;^[CLASS] NamedType  [METHOD] checkEnumElementCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^checkEnumElementCycle ( t ) ;handleTypeCycle ( t ) ;^298^^^^^295^300^handleTypeCycle ( t ) ;^[CLASS] NamedType  [METHOD] checkEnumElementCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^handleUnresolvedType ( t ) ;handleTypeCycle ( t ) ;^298^^^^^295^300^handleTypeCycle ( t ) ;^[CLASS] NamedType  [METHOD] checkEnumElementCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^(  ( EnumElementType )  referencedType ) .getElementsType (  )  == this )  {^297^^^^^295^300^(  ( EnumElementType )  referencedType ) .getPrimitiveType (  )  == this )  {^[CLASS] NamedType  [METHOD] checkEnumElementCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^297^298^^^^295^300^(  ( EnumElementType )  referencedType ) .getPrimitiveType (  )  == this )  { handleTypeCycle ( t ) ;^[CLASS] NamedType  [METHOD] checkEnumElementCycle [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P2_Replace_Operator]^if  ( !registry.isForwardDeclaredType ( reference )  || !forgiving && registry.isLastGeneration (  )  )  {^305^306^^^^304^315^if  ( !registry.isForwardDeclaredType ( reference )  && !forgiving && registry.isLastGeneration (  )  )  {^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^if  ( !registry.isForwardDeclaredType ( reference )  && !isResolved && registry.isLastGeneration (  )  )  {^305^306^^^^304^315^if  ( !registry.isForwardDeclaredType ( reference )  && !forgiving && registry.isLastGeneration (  )  )  {^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^if  ( !registry.isForwardDeclaredType ( registry )  && !forgiving && reference.isLastGeneration (  )  )  {^305^306^^^^304^315^if  ( !registry.isForwardDeclaredType ( reference )  && !forgiving && registry.isLastGeneration (  )  )  {^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P6_Replace_Expression]^if  ( !registry.isForwardDeclaredType ( reference )  ) {^305^306^^^^304^315^if  ( !registry.isForwardDeclaredType ( reference )  && !forgiving && registry.isLastGeneration (  )  )  {^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P6_Replace_Expression]^if  (  !forgiving && registry.isLastGeneration (  )  )  {^305^306^^^^304^315^if  ( !registry.isForwardDeclaredType ( reference )  && !forgiving && registry.isLastGeneration (  )  )  {^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P6_Replace_Expression]^if  ( !(registry.isForwardDeclaredType(reference) && !(forgiving)) )  {^305^306^^^^304^315^if  ( !registry.isForwardDeclaredType ( reference )  && !forgiving && registry.isLastGeneration (  )  )  {^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P6_Replace_Expression]^if  ( "Unknown type " + reference )  {^305^306^^^^304^315^if  ( !registry.isForwardDeclaredType ( reference )  && !forgiving && registry.isLastGeneration (  )  )  {^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^if  ( !registry.isLastGeneration ( reference )  && !forgiving && registry.isLastGeneration (  )  )  {^305^306^^^^304^315^if  ( !registry.isForwardDeclaredType ( reference )  && !forgiving && registry.isLastGeneration (  )  )  {^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^if  ( !registry.isForwardDeclaredType ( reference )  && !forgiving && registry.getNativeObjectType (  )  )  {^305^306^^^^304^315^if  ( !registry.isForwardDeclaredType ( reference )  && !forgiving && registry.isLastGeneration (  )  )  {^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P8_Replace_Mix]^if  (  !forgiving && registry.getNativeObjectType (  )  )  {^305^306^^^^304^315^if  ( !registry.isForwardDeclaredType ( reference )  && !forgiving && registry.isLastGeneration (  )  )  {^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^referencedType = registry.isLastGeneration ( JSTypeNative.CHECKED_UNKNOWN_TYPE ) ;^310^311^^^^304^315^referencedType = registry.getNativeObjectType ( JSTypeNative.CHECKED_UNKNOWN_TYPE ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P8_Replace_Mix]^referencedType ;^310^311^^^^304^315^referencedType = registry.getNativeObjectType ( JSTypeNative.CHECKED_UNKNOWN_TYPE ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^referencedType = registry.getNativeObjectType ( JSTypeNative.UNKNOWN_TYPE ) ;referencedType = registry.getNativeObjectType ( JSTypeNative.CHECKED_UNKNOWN_TYPE ) ;^310^311^^^^304^315^referencedType = registry.getNativeObjectType ( JSTypeNative.CHECKED_UNKNOWN_TYPE ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P8_Replace_Mix]^referencedType = 4.isLastGeneration ( JSTypeNative.CHECKED_UNKNOWN_TYPE ) ;^310^311^^^^304^315^referencedType = registry.getNativeObjectType ( JSTypeNative.CHECKED_UNKNOWN_TYPE ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^310^311^^^^304^315^referencedType = registry.getNativeObjectType ( JSTypeNative.CHECKED_UNKNOWN_TYPE ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^super ( registry, registry.getNativeObjectType ( JSTypeNative.UNKNOWN_TYPE )  ) ;referencedType = registry.getNativeObjectType ( JSTypeNative.CHECKED_UNKNOWN_TYPE ) ;^310^311^^^^304^315^referencedType = registry.getNativeObjectType ( JSTypeNative.CHECKED_UNKNOWN_TYPE ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P3_Replace_Literal]^t.warning ( "known tynknown type " + reference, sourceName, lineno, null, charno ) ;^307^308^^^^304^315^t.warning ( "Unknown type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Unknown type " + reference, sourceName, i, null, charno ) ;^307^308^^^^304^315^t.warning ( "Unknown type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Unknown type " + reference, sourceName, lineno, null, i ) ;^307^308^^^^304^315^t.warning ( "Unknown type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Unknown type " +  sourceName, lineno, null, charno ) ;^307^308^^^^304^315^t.warning ( "Unknown type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Unknown type " + reference,  lineno, null, charno ) ;^307^308^^^^304^315^t.warning ( "Unknown type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Unknown type " + reference, sourceName,  null, charno ) ;^307^308^^^^304^315^t.warning ( "Unknown type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Unknown type " + reference, sourceName, lineno, null ) ;^307^308^^^^304^315^t.warning ( "Unknown type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Unknown charnoype " + reference, sourceName, lineno, null, t ) ;^307^308^^^^304^315^t.warning ( "Unknown type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Unknown referenceype " + t, sourceName, lineno, null, charno ) ;^307^308^^^^304^315^t.warning ( "Unknown type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Unknown type " + reference, charno, lineno, null, sourceName ) ;^307^308^^^^304^315^t.warning ( "Unknown type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Unknown type " + reference, sourceName, charno, null, lineno ) ;^307^308^^^^304^315^t.warning ( "Unknown type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Unknown type " + charno, sourceName, lineno, null, reference ) ;^307^308^^^^304^315^t.warning ( "Unknown type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^307^308^^^^304^315^t.warning ( "Unknown type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P8_Replace_Mix]^referencedType  =  referencedType ;^310^311^^^^304^315^referencedType = registry.getNativeObjectType ( JSTypeNative.CHECKED_UNKNOWN_TYPE ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^if  ( !registry.isForwardDeclaredType ( sourceName )  && !forgiving && registry.isLastGeneration (  )  )  {^305^306^^^^304^315^if  ( !registry.isForwardDeclaredType ( reference )  && !forgiving && registry.isLastGeneration (  )  )  {^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^if  ( !registry .getNativeObjectType (  )   && !forgiving && registry.isLastGeneration (  )  )  {^305^306^^^^304^315^if  ( !registry.isForwardDeclaredType ( reference )  && !forgiving && registry.isLastGeneration (  )  )  {^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P8_Replace_Mix]^if  ( !registry.isLastGeneration ( sourceName )  && !forgiving && registry.isLastGeneration (  )  )  {^305^306^^^^304^315^if  ( !registry.isForwardDeclaredType ( reference )  && !forgiving && registry.isLastGeneration (  )  )  {^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^registry.getNativeObjectType (  )  )  {^306^^^^^304^315^registry.isLastGeneration (  )  )  {^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^registry .isForwardDeclaredType ( reference )   )  {^306^^^^^304^315^registry.isLastGeneration (  )  )  {^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^306^307^308^^^304^315^registry.isLastGeneration (  )  )  { t.warning ( "Unknown type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P3_Replace_Literal]^t.warning ( "Unknown type U" + reference, sourceName, lineno, null, charno ) ;^307^308^^^^304^315^t.warning ( "Unknown type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Unknown type " + sourceName, sourceName, lineno, null, charno ) ;^307^308^^^^304^315^t.warning ( "Unknown type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Unknown type " + reference, reference, lineno, null, charno ) ;^307^308^^^^304^315^t.warning ( "Unknown type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Unknown linenoype " + reference, sourceName, t, null, charno ) ;^307^308^^^^304^315^t.warning ( "Unknown type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P5_Replace_Variable]^t.warning ( "Unknown type " + sourceName, reference, lineno, null, charno ) ;^307^308^^^^304^315^t.warning ( "Unknown type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P8_Replace_Mix]^t.warning ( "Unknown type " + reference, sourceName, lineno, null, lineno ) ;^307^308^^^^304^315^t.warning ( "Unknown type " + reference, sourceName, lineno, null, charno ) ;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P3_Replace_Literal]^isResolved = false;^314^^^^^304^315^isResolved = true;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^isResolved = false;isResolved = true;^314^^^^^304^315^isResolved = true;^[CLASS] NamedType  [METHOD] handleUnresolvedType [RETURN_TYPE] void   ErrorReporter t [VARIABLES] ErrorReporter  t  boolean  forgiving  isResolved  String  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P8_Replace_Mix]^JSType type = slot .getNativeObjectType (  )  ;^318^^^^^317^324^JSType type = slot.getType (  ) ;^[CLASS] NamedType  [METHOD] getTypedefType [RETURN_TYPE] JSType   ErrorReporter t JSType> slot String name [VARIABLES] ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  type  String  name  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^JSType slotType = slot.getType (  ) ;JSType type = slot.getType (  ) ;^318^^^^^317^324^JSType type = slot.getType (  ) ;^[CLASS] NamedType  [METHOD] getTypedefType [RETURN_TYPE] JSType   ErrorReporter t JSType> slot String name [VARIABLES] ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  type  String  name  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^318^^^^^317^324^JSType type = slot.getType (  ) ;^[CLASS] NamedType  [METHOD] getTypedefType [RETURN_TYPE] JSType   ErrorReporter t JSType> slot String name [VARIABLES] ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  type  String  name  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P2_Replace_Operator]^if  ( type == null )  {^319^^^^^317^324^if  ( type != null )  {^[CLASS] NamedType  [METHOD] getTypedefType [RETURN_TYPE] JSType   ErrorReporter t JSType> slot String name [VARIABLES] ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  type  String  name  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P8_Replace_Mix]^if  ( type != true )  {^319^^^^^317^324^if  ( type != null )  {^[CLASS] NamedType  [METHOD] getTypedefType [RETURN_TYPE] JSType   ErrorReporter t JSType> slot String name [VARIABLES] ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  type  String  name  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P9_Replace_Statement]^if  ( objType != null )  {^319^^^^^317^324^if  ( type != null )  {^[CLASS] NamedType  [METHOD] getTypedefType [RETURN_TYPE] JSType   ErrorReporter t JSType> slot String name [VARIABLES] ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  type  String  name  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P9_Replace_Statement]^if  ( value == null )  {^319^^^^^317^324^if  ( type != null )  {^[CLASS] NamedType  [METHOD] getTypedefType [RETURN_TYPE] JSType   ErrorReporter t JSType> slot String name [VARIABLES] ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  type  String  name  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P9_Replace_Statement]^if  ( this == that )  {^319^^^^^317^324^if  ( type != null )  {^[CLASS] NamedType  [METHOD] getTypedefType [RETURN_TYPE] JSType   ErrorReporter t JSType> slot String name [VARIABLES] ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  type  String  name  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P9_Replace_Statement]^if  ( slot == null )  {^319^^^^^317^324^if  ( type != null )  {^[CLASS] NamedType  [METHOD] getTypedefType [RETURN_TYPE] JSType   ErrorReporter t JSType> slot String name [VARIABLES] ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  type  String  name  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P15_Unwrap_Block]^return type;^319^320^321^^^317^324^if  ( type != null )  { return type; }^[CLASS] NamedType  [METHOD] getTypedefType [RETURN_TYPE] JSType   ErrorReporter t JSType> slot String name [VARIABLES] ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  type  String  name  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P16_Remove_Block]^^319^320^321^^^317^324^if  ( type != null )  { return type; }^[CLASS] NamedType  [METHOD] getTypedefType [RETURN_TYPE] JSType   ErrorReporter t JSType> slot String name [VARIABLES] ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  type  String  name  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P7_Replace_Invocation]^handleTypeCycle ( t ) ;^322^^^^^317^324^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] getTypedefType [RETURN_TYPE] JSType   ErrorReporter t JSType> slot String name [VARIABLES] ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  type  String  name  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P14_Delete_Statement]^^322^^^^^317^324^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] getTypedefType [RETURN_TYPE] JSType   ErrorReporter t JSType> slot String name [VARIABLES] ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  type  String  name  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P11_Insert_Donor_Statement]^handleTypeCycle ( t ) ;handleUnresolvedType ( t ) ;^322^^^^^317^324^handleUnresolvedType ( t ) ;^[CLASS] NamedType  [METHOD] getTypedefType [RETURN_TYPE] JSType   ErrorReporter t JSType> slot String name [VARIABLES] ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  type  String  name  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
[P8_Replace_Mix]^return true;^323^^^^^317^324^return null;^[CLASS] NamedType  [METHOD] getTypedefType [RETURN_TYPE] JSType   ErrorReporter t JSType> slot String name [VARIABLES] ErrorReporter  t  StaticSlot  slot  boolean  forgiving  isResolved  JSType  type  String  name  reference  sourceName  long  serialVersionUID  int  charno  i  lineno  
