[P14_Delete_Statement]^^31^^^^^30^33^super ( steps ) ;^[CLASS] LocationPath  [METHOD] <init> [RETURN_TYPE] Step[])   boolean absolute Step[] steps [VARIABLES] Step[]  steps  boolean  absolute  
[P11_Insert_Donor_Statement]^buffer.append ( steps[i] ) ;super ( steps ) ;^31^^^^^30^33^super ( steps ) ;^[CLASS] LocationPath  [METHOD] <init> [RETURN_TYPE] Step[])   boolean absolute Step[] steps [VARIABLES] Step[]  steps  boolean  absolute  
[P8_Replace_Mix]^this.absolute =  null;^32^^^^^30^33^this.absolute = absolute;^[CLASS] LocationPath  [METHOD] <init> [RETURN_TYPE] Step[])   boolean absolute Step[] steps [VARIABLES] Step[]  steps  boolean  absolute  
[P8_Replace_Mix]^if  ( absolute )  {^40^^^^^39^45^if  ( !absolute )  {^[CLASS] LocationPath  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  absolute  
[P9_Replace_Statement]^if  ( i > 0 || absolute )  {^40^^^^^39^45^if  ( !absolute )  {^[CLASS] LocationPath  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  absolute  
[P9_Replace_Statement]^if  ( isAbsolute (  )  )  {^40^^^^^39^45^if  ( !absolute )  {^[CLASS] LocationPath  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  absolute  
[P15_Unwrap_Block]^return true;^40^41^42^^^39^45^if  ( !absolute )  { return true; }^[CLASS] LocationPath  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  absolute  
[P16_Remove_Block]^^40^41^42^^^39^45^if  ( !absolute )  { return true; }^[CLASS] LocationPath  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  absolute  
[P3_Replace_Literal]^return false;^41^^^^^39^45^return true;^[CLASS] LocationPath  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  absolute  
[P7_Replace_Invocation]^return super.getSingleNodePointerForSteps (  ) ;^44^^^^^39^45^return super.computeContextDependent (  ) ;^[CLASS] LocationPath  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  absolute  
[P14_Delete_Statement]^^44^^^^^39^45^return super.computeContextDependent (  ) ;^[CLASS] LocationPath  [METHOD] computeContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  absolute  
[P7_Replace_Invocation]^Step steps[] = getAbsoluteRootContext (  ) ;^49^^^^^47^59^Step steps[] = getSteps (  ) ;^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P14_Delete_Statement]^^49^^^^^47^59^Step steps[] = getSteps (  ) ;^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P2_Replace_Operator]^if  ( steps == null )  {^50^^^^^47^59^if  ( steps != null )  {^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P6_Replace_Expression]^if  ( i < steps.length )  {^50^^^^^47^59^if  ( steps != null )  {^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P6_Replace_Expression]^if  ( i > 0 || absolute )  {^50^^^^^47^59^if  ( steps != null )  {^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P6_Replace_Expression]^if  ( i > 0 )  {^50^^^^^47^59^if  ( steps != null )  {^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P8_Replace_Mix]^if  ( steps != this )  {^50^^^^^47^59^if  ( steps != null )  {^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P15_Unwrap_Block]^for (int i = 0; i < (steps.length); i++) {    if ((i > 0) || (absolute)) {        buffer.append('/');    }    buffer.append(steps[i]);};^50^51^52^53^54^47^59^if  ( steps != null )  { for  ( int i = 0; i < steps.length; i++ )  { if  ( i > 0 || absolute )  { buffer.append ( '/' ) ; }^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P16_Remove_Block]^^50^51^52^53^54^47^59^if  ( steps != null )  { for  ( int i = 0; i < steps.length; i++ )  { if  ( i > 0 || absolute )  { buffer.append ( '/' ) ; }^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P2_Replace_Operator]^if  ( i > 0 && absolute )  {^52^^^^^47^59^if  ( i > 0 || absolute )  {^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P2_Replace_Operator]^if  ( i == 0 || absolute )  {^52^^^^^47^59^if  ( i > 0 || absolute )  {^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P3_Replace_Literal]^if  ( i > -7 || absolute )  {^52^^^^^47^59^if  ( i > 0 || absolute )  {^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P5_Replace_Variable]^if  ( absolute > 0 || i )  {^52^^^^^47^59^if  ( i > 0 || absolute )  {^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P6_Replace_Expression]^if  ( i > 0 ) {^52^^^^^47^59^if  ( i > 0 || absolute )  {^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P6_Replace_Expression]^if  (  absolute )  {^52^^^^^47^59^if  ( i > 0 || absolute )  {^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P8_Replace_Mix]^if  ( i > 4 || absolute )  {^52^^^^^47^59^if  ( i > 0 || absolute )  {^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P9_Replace_Statement]^if  ( !absolute )  {^52^^^^^47^59^if  ( i > 0 || absolute )  {^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P15_Unwrap_Block]^buffer.append('/');^52^53^54^^^47^59^if  ( i > 0 || absolute )  { buffer.append ( '/' ) ; }^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P16_Remove_Block]^^52^53^54^^^47^59^if  ( i > 0 || absolute )  { buffer.append ( '/' ) ; }^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P14_Delete_Statement]^^53^^^^^47^59^buffer.append ( '/' ) ;^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( steps[i] ) ;buffer.append ( '/' ) ;^53^^^^^47^59^buffer.append ( '/' ) ;^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P1_Replace_Type]^for  (  long  i = 0; i < steps.length; i++ )  {^51^^^^^47^59^for  ( int i = 0; i < steps.length; i++ )  {^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i > steps.length; i++ )  {^51^^^^^47^59^for  ( int i = 0; i < steps.length; i++ )  {^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < steps.length; i++ )  {^51^^^^^47^59^for  ( int i = 0; i < steps.length; i++ )  {^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P13_Insert_Block]^if  ( steps != null )  {     for  ( int i = 0; i <  ( steps.length ) ; i++ )  {         if  (  ( i > 0 )  ||  ( absolute )  )  {             buffer.append ( '/' ) ;         }         buffer.append ( steps[i] ) ;     } }^51^^^^^47^59^[Delete]^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P2_Replace_Operator]^if  ( i >= 0 || absolute )  {^52^^^^^47^59^if  ( i > 0 || absolute )  {^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P3_Replace_Literal]^if  ( i > i || absolute )  {^52^^^^^47^59^if  ( i > 0 || absolute )  {^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P8_Replace_Mix]^if  ( i > 0 / 3 ) {^52^^^^^47^59^if  ( i > 0 || absolute )  {^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P14_Delete_Statement]^^55^^^^^47^59^buffer.append ( steps[i] ) ;^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P11_Insert_Donor_Statement]^super ( steps ) ;buffer.append ( steps[i] ) ;^55^^^^^47^59^buffer.append ( steps[i] ) ;^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( steps[i] ) ;^55^^^^^47^59^buffer.append ( steps[i] ) ;^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < steps.length; i++ )  {^51^^^^^47^59^for  ( int i = 0; i < steps.length; i++ )  {^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P3_Replace_Literal]^if  ( i > 8 || absolute )  {^52^^^^^47^59^if  ( i > 0 || absolute )  {^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= steps.length; i++ )  {^51^^^^^47^59^for  ( int i = 0; i < steps.length; i++ )  {^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P3_Replace_Literal]^for  ( int i = 2; i < steps.length; i++ )  {^51^^^^^47^59^for  ( int i = 0; i < steps.length; i++ )  {^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P3_Replace_Literal]^for  ( int i = -8; i < steps.length; i++ )  {^51^^^^^47^59^for  ( int i = 0; i < steps.length; i++ )  {^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P7_Replace_Invocation]^return buffer.append (  ) ;^58^^^^^47^59^return buffer.toString (  ) ;^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P7_Replace_Invocation]^return buffer .StringBuffer (  )  ;^58^^^^^47^59^return buffer.toString (  ) ;^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P14_Delete_Statement]^^58^^^^^47^59^return buffer.toString (  ) ;^[CLASS] LocationPath  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  Step[]  steps  boolean  absolute  int  i  
[P9_Replace_Statement]^if  ( !absolute )  {^64^^^^^61^71^if  ( isAbsolute (  )  )  {^[CLASS] LocationPath  [METHOD] compute [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P15_Unwrap_Block]^rootContext = context.getRootContext().getAbsoluteRootContext();^64^65^66^^^61^71^if  ( isAbsolute (  )  )  { rootContext = context.getRootContext (  ) .getAbsoluteRootContext (  ) ; }^[CLASS] LocationPath  [METHOD] compute [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P16_Remove_Block]^^64^65^66^^^61^71^if  ( isAbsolute (  )  )  { rootContext = context.getRootContext (  ) .getAbsoluteRootContext (  ) ; }^[CLASS] LocationPath  [METHOD] compute [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P5_Replace_Variable]^rootContext = new InitialContext ( rootContext ) ;^68^^^^^61^71^rootContext = new InitialContext ( context ) ;^[CLASS] LocationPath  [METHOD] compute [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P8_Replace_Mix]^rootContext =  new InitialContext ( null ) ;^68^^^^^61^71^rootContext = new InitialContext ( context ) ;^[CLASS] LocationPath  [METHOD] compute [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P11_Insert_Donor_Statement]^rootContext = context.getRootContext (  ) .getAbsoluteRootContext (  ) ;rootContext = new InitialContext ( context ) ;^68^^^^^61^71^rootContext = new InitialContext ( context ) ;^[CLASS] LocationPath  [METHOD] compute [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P5_Replace_Variable]^rootContext = rootContext.getRootContext (  ) .getAbsoluteRootContext (  ) ;^65^^^^^61^71^rootContext = context.getRootContext (  ) .getAbsoluteRootContext (  ) ;^[CLASS] LocationPath  [METHOD] compute [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P7_Replace_Invocation]^rootContext = context.getRootContext (  ) .getSingleNodePointerForSteps (  ) ;^65^^^^^61^71^rootContext = context.getRootContext (  ) .getAbsoluteRootContext (  ) ;^[CLASS] LocationPath  [METHOD] compute [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P8_Replace_Mix]^rootContext =  null.getRootContext (  ) .getAbsoluteRootContext (  ) ;^65^^^^^61^71^rootContext = context.getRootContext (  ) .getAbsoluteRootContext (  ) ;^[CLASS] LocationPath  [METHOD] compute [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P11_Insert_Donor_Statement]^rootContext = new InitialContext ( context ) ;rootContext = context.getRootContext (  ) .getAbsoluteRootContext (  ) ;^65^^^^^61^71^rootContext = context.getRootContext (  ) .getAbsoluteRootContext (  ) ;^[CLASS] LocationPath  [METHOD] compute [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P14_Delete_Statement]^^65^^^^^61^71^rootContext = context.getRootContext (  ) .getAbsoluteRootContext (  ) ;^[CLASS] LocationPath  [METHOD] compute [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P5_Replace_Variable]^return evalSteps ( context ) ;^70^^^^^61^71^return evalSteps ( rootContext ) ;^[CLASS] LocationPath  [METHOD] compute [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P7_Replace_Invocation]^return getSingleNodePointerForSteps ( rootContext ) ;^70^^^^^61^71^return evalSteps ( rootContext ) ;^[CLASS] LocationPath  [METHOD] compute [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P8_Replace_Mix]^return getSingleNodePointerForSteps ( context ) ;^70^^^^^61^71^return evalSteps ( rootContext ) ;^[CLASS] LocationPath  [METHOD] compute [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P14_Delete_Statement]^^70^^^^^61^71^return evalSteps ( rootContext ) ;^[CLASS] LocationPath  [METHOD] compute [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P9_Replace_Statement]^if  ( !absolute )  {^77^^^^^74^84^if  ( isAbsolute (  )  )  {^[CLASS] LocationPath  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P15_Unwrap_Block]^rootContext = context.getRootContext().getAbsoluteRootContext();^77^78^79^^^74^84^if  ( isAbsolute (  )  )  { rootContext = context.getRootContext (  ) .getAbsoluteRootContext (  ) ; }^[CLASS] LocationPath  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P16_Remove_Block]^^77^78^79^^^74^84^if  ( isAbsolute (  )  )  { rootContext = context.getRootContext (  ) .getAbsoluteRootContext (  ) ; }^[CLASS] LocationPath  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P5_Replace_Variable]^rootContext = new InitialContext ( rootContext ) ;^81^^^^^74^84^rootContext = new InitialContext ( context ) ;^[CLASS] LocationPath  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P8_Replace_Mix]^rootContext =  new InitialContext ( null ) ;^81^^^^^74^84^rootContext = new InitialContext ( context ) ;^[CLASS] LocationPath  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P11_Insert_Donor_Statement]^rootContext = context.getRootContext (  ) .getAbsoluteRootContext (  ) ;rootContext = new InitialContext ( context ) ;^81^^^^^74^84^rootContext = new InitialContext ( context ) ;^[CLASS] LocationPath  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P5_Replace_Variable]^rootContext = rootContext.getRootContext (  ) .getAbsoluteRootContext (  ) ;^78^^^^^74^84^rootContext = context.getRootContext (  ) .getAbsoluteRootContext (  ) ;^[CLASS] LocationPath  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P7_Replace_Invocation]^rootContext = context.getRootContext (  ) .getSingleNodePointerForSteps (  ) ;^78^^^^^74^84^rootContext = context.getRootContext (  ) .getAbsoluteRootContext (  ) ;^[CLASS] LocationPath  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P8_Replace_Mix]^rootContext =  null.getRootContext (  ) .getAbsoluteRootContext (  ) ;^78^^^^^74^84^rootContext = context.getRootContext (  ) .getAbsoluteRootContext (  ) ;^[CLASS] LocationPath  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P11_Insert_Donor_Statement]^rootContext = new InitialContext ( context ) ;rootContext = context.getRootContext (  ) .getAbsoluteRootContext (  ) ;^78^^^^^74^84^rootContext = context.getRootContext (  ) .getAbsoluteRootContext (  ) ;^[CLASS] LocationPath  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P14_Delete_Statement]^^78^^^^^74^84^rootContext = context.getRootContext (  ) .getAbsoluteRootContext (  ) ;^[CLASS] LocationPath  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P5_Replace_Variable]^return getSingleNodePointerForSteps ( context ) ;^83^^^^^74^84^return getSingleNodePointerForSteps ( rootContext ) ;^[CLASS] LocationPath  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P7_Replace_Invocation]^return evalSteps ( rootContext ) ;^83^^^^^74^84^return getSingleNodePointerForSteps ( rootContext ) ;^[CLASS] LocationPath  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
[P14_Delete_Statement]^^83^^^^^74^84^return getSingleNodePointerForSteps ( rootContext ) ;^[CLASS] LocationPath  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] EvalContext  context  rootContext  boolean  absolute  
