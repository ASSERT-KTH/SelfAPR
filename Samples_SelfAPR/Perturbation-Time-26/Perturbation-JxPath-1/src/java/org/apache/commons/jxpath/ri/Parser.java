[P8_Replace_Mix]^private static XPathParser parser ;^34^^^^^29^39^private static XPathParser parser = new XPathParser ( new StringReader ( "" )  ) ;^[CLASS] Parser   [VARIABLES] 
[P8_Replace_Mix]^expr  =  expr ;^49^^^^^43^71^expr = parser.parseExpression (  ) ;^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P7_Replace_Invocation]^parser.setCompiler ( new StringReader ( expression )  ) ;^48^^^^^43^71^parser.ReInit ( new StringReader ( expression )  ) ;^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P7_Replace_Invocation]^parser .parseExpression ( expression , compiler )  ;^48^^^^^43^71^parser.ReInit ( new StringReader ( expression )  ) ;^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P14_Delete_Statement]^^48^^^^^43^71^parser.ReInit ( new StringReader ( expression )  ) ;^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P8_Replace_Mix]^expr = parser .parseExpression ( expression , compiler )  ;^49^^^^^43^71^expr = parser.parseExpression (  ) ;^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P14_Delete_Statement]^^49^^^^^43^71^expr = parser.parseExpression (  ) ;^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P8_Replace_Mix]^expr ;^49^^^^^43^71^expr = parser.parseExpression (  ) ;^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P2_Replace_Operator]^throw new JXPathInvalidSyntaxException ( "Invalid XPath: '"  |  addEscapes ( expression ) + "'. Invalid symbol '"^52^53^54^55^^43^71^throw new JXPathInvalidSyntaxException ( "Invalid XPath: '" + addEscapes ( expression ) + "'. Invalid symbol '"^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P3_Replace_Literal]^throw new JXPathInvalidSyntaxException ( "Invalid XPath: 'XPa" + addEscapes ( expression ) + "'. Invalid symbol '"^52^53^54^55^^43^71^throw new JXPathInvalidSyntaxException ( "Invalid XPath: '" + addEscapes ( expression ) + "'. Invalid symbol '"^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P3_Replace_Literal]^throw new JXPathInvalidSyntaxException ( "Invalid XPath: '" + addEscapes ( expression ) + "'. Invalid symbol 'Inval"^52^53^54^55^^43^71^throw new JXPathInvalidSyntaxException ( "Invalid XPath: '" + addEscapes ( expression ) + "'. Invalid symbol '"^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P5_Replace_Variable]^throw new JXPathInvalidSyntaxException ( "Invalid XPath: '" + addEscapes ( e ) + "'. Invalid symbol '"^52^53^54^55^^43^71^throw new JXPathInvalidSyntaxException ( "Invalid XPath: '" + addEscapes ( expression ) + "'. Invalid symbol '"^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P5_Replace_Variable]^throw new JXPathInvalidSyntaxException ( "Invalid XPath: '" + addEscapes ( expressionxpression ) + "'. Invalid symbol '"^52^53^54^55^^43^71^throw new JXPathInvalidSyntaxException ( "Invalid XPath: '" + addEscapes ( expression ) + "'. Invalid symbol '"^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P2_Replace_Operator]^throw new JXPathInvalidSyntaxException ( "Invalid XPath: '"  &  addEscapes ( expression ) + "'. Syntax error "^61^62^63^64^^43^71^throw new JXPathInvalidSyntaxException ( "Invalid XPath: '" + addEscapes ( expression ) + "'. Syntax error "^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P3_Replace_Literal]^throw new JXPathInvalidSyntaxException ( "In" + addEscapes ( expression ) + "'. Syntax error "^61^62^63^64^^43^71^throw new JXPathInvalidSyntaxException ( "Invalid XPath: '" + addEscapes ( expression ) + "'. Syntax error "^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P3_Replace_Literal]^throw new JXPathInvalidSyntaxException ( "Invalid XPath: '" + addEscapes ( expression ) + "ax error. Syntax error "^61^62^63^64^^43^71^throw new JXPathInvalidSyntaxException ( "Invalid XPath: '" + addEscapes ( expression ) + "'. Syntax error "^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P2_Replace_Operator]^throw new JXPathInvalidSyntaxException ( "Invalid XPath: '"  ^  addEscapes ( expression ) + "'. Invalid symbol '"^52^53^54^55^^43^71^throw new JXPathInvalidSyntaxException ( "Invalid XPath: '" + addEscapes ( expression ) + "'. Invalid symbol '"^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P3_Replace_Literal]^throw new JXPathInvalidSyntaxException ( "Invalid XPath" + addEscapes ( expression ) + "'. Invalid symbol '"^52^53^54^55^^43^71^throw new JXPathInvalidSyntaxException ( "Invalid XPath: '" + addEscapes ( expression ) + "'. Invalid symbol '"^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P3_Replace_Literal]^throw new JXPathInvalidSyntaxException ( "Invalid XPath: '" + addEscapes ( expression ) + "'. Invalid symbol 'valid sy"^52^53^54^55^^43^71^throw new JXPathInvalidSyntaxException ( "Invalid XPath: '" + addEscapes ( expression ) + "'. Invalid symbol '"^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P2_Replace_Operator]^throw new JXPathInvalidSyntaxException ( "Invalid XPath: '"  <<  addEscapes ( expression ) + "'. Syntax error "^61^62^63^64^^43^71^throw new JXPathInvalidSyntaxException ( "Invalid XPath: '" + addEscapes ( expression ) + "'. Syntax error "^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P3_Replace_Literal]^throw new JXPathInvalidSyntaxException ( "nvalid XPath: '" + addEscapes ( expression ) + "'. Syntax error "^61^62^63^64^^43^71^throw new JXPathInvalidSyntaxException ( "Invalid XPath: '" + addEscapes ( expression ) + "'. Syntax error "^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P3_Replace_Literal]^throw new JXPathInvalidSyntaxException ( "Invalid XPath: '" + addEscapes ( expression ) + ""^61^62^63^64^^43^71^throw new JXPathInvalidSyntaxException ( "Invalid XPath: '" + addEscapes ( expression ) + "'. Syntax error "^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P7_Replace_Invocation]^parser.ReInit ( compiler ) ;^45^^^^^43^71^parser.setCompiler ( compiler ) ;^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P14_Delete_Statement]^^45^46^^^^43^71^parser.setCompiler ( compiler ) ; Object expr = null;^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P7_Replace_Invocation]^+ addEscapes ( String.valueOf ( e.addEscapes (  )  )  ) + "' " + describePosition ( expression, e.getPosition (  )  )  ) ;^56^57^58^^^43^71^+ addEscapes ( String.valueOf ( e.getCharacter (  )  )  ) + "' " + describePosition ( expression, e.getPosition (  )  )  ) ;^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P7_Replace_Invocation]^+ addEscapes ( String.valueOf ( e .getPosition (  )   )  ) + "' " + describePosition ( expression, e.getPosition (  )  )  ) ;^56^57^58^^^43^71^+ addEscapes ( String.valueOf ( e.getCharacter (  )  )  ) + "' " + describePosition ( expression, e.getPosition (  )  )  ) ;^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P14_Delete_Statement]^^56^57^58^^^43^71^+ addEscapes ( String.valueOf ( e.getCharacter (  )  )  ) + "' " + describePosition ( expression, e.getPosition (  )  )  ) ;^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P5_Replace_Variable]^+ describePosition (  e.getPosition (  )  )  ) ;^58^^^^^43^71^+ describePosition ( expression, e.getPosition (  )  )  ) ;^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P5_Replace_Variable]^+ describePosition ( expression.getPosition (  )  )  ) ;^58^^^^^43^71^+ describePosition ( expression, e.getPosition (  )  )  ) ;^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P5_Replace_Variable]^+ describePosition ( e, expression.getPosition (  )  )  ) ;^58^^^^^43^71^+ describePosition ( expression, e.getPosition (  )  )  ) ;^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P5_Replace_Variable]^+ describePosition ( expressionxpression, e.getPosition (  )  )  ) ;^58^^^^^43^71^+ describePosition ( expression, e.getPosition (  )  )  ) ;^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P7_Replace_Invocation]^+ parseExpression ( expression, e.getPosition (  )  )  ) ;^58^^^^^43^71^+ describePosition ( expression, e.getPosition (  )  )  ) ;^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P7_Replace_Invocation]^+ describePosition ( expression, e.addEscapes (  )  )  ) ;^58^^^^^43^71^+ describePosition ( expression, e.getPosition (  )  )  ) ;^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P14_Delete_Statement]^^58^^^^^43^71^+ describePosition ( expression, e.getPosition (  )  )  ) ;^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P5_Replace_Variable]^+ describePosition (  e.currentToken.beginColumn )  ) ;^65^66^67^^^43^71^+ describePosition ( expression, e.currentToken.beginColumn )  ) ;^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P5_Replace_Variable]^+ describePosition ( expression.currentToken.beginColumn )  ) ;^65^66^67^^^43^71^+ describePosition ( expression, e.currentToken.beginColumn )  ) ;^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P5_Replace_Variable]^+ describePosition ( expression.beginColumn )  ) ;^65^66^67^^^43^71^+ describePosition ( expression, e.currentToken.beginColumn )  ) ;^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P7_Replace_Invocation]^+ parseExpression ( expression, e.currentToken.beginColumn )  ) ;^65^66^67^^^43^71^+ describePosition ( expression, e.currentToken.beginColumn )  ) ;^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P14_Delete_Statement]^^65^66^67^^^43^71^+ describePosition ( expression, e.currentToken.beginColumn )  ) ;^[CLASS] Parser  [METHOD] parseExpression [RETURN_TYPE] Object   String expression Compiler compiler [VARIABLES] Compiler  compiler  XPathParser  parser  boolean  Object  expr  TokenMgrError  e  String  expression  ParseException  e  
[P2_Replace_Operator]^if  ( position > 0 )  {^74^^^^^73^84^if  ( position <= 0 )  {^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P3_Replace_Literal]^if  ( position <= position )  {^74^^^^^73^84^if  ( position <= 0 )  {^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P3_Replace_Literal]^if  ( position <= 9 )  {^74^^^^^73^84^if  ( position <= 0 )  {^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P6_Replace_Expression]^if  ( position >= expression.length() )  {^74^^^^^73^84^if  ( position <= 0 )  {^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P6_Replace_Expression]^if  ( "after: '" + substring(0, position))) + "'" )  {^74^^^^^73^84^if  ( position <= 0 )  {^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P6_Replace_Expression]^if  ( "after: '" + addEscapes ( expression.substring ( 0, position )  ) )  {^74^^^^^73^84^if  ( position <= 0 )  {^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P8_Replace_Mix]^if  ( position <= 3 )  {^74^^^^^73^84^if  ( position <= 0 )  {^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P15_Unwrap_Block]^return "at the beginning of the expression";^74^75^76^^^73^84^if  ( position <= 0 )  { return "at the beginning of the expression"; }^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P16_Remove_Block]^^74^75^76^^^73^84^if  ( position <= 0 )  { return "at the beginning of the expression"; }^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P13_Insert_Block]^if  ( position >=  ( expression.length (  )  )  )  {     return "- expression incomplete"; }else {     return  ( "after: '" +  ( addEscapes ( expression.substring ( 0, position )  )  )  )  + "'"; }^74^^^^^73^84^[Delete]^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P2_Replace_Operator]^else if  ( position > expression.length (  )  )  {^77^^^^^73^84^else if  ( position >= expression.length (  )  )  {^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P3_Replace_Literal]^else if  ( position >= expression.length() + 4  )  {^77^^^^^73^84^else if  ( position >= expression.length (  )  )  {^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P5_Replace_Variable]^else if  ( expression >= position.length (  )  )  {^77^^^^^73^84^else if  ( position >= expression.length (  )  )  {^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P6_Replace_Expression]^else if  ( "after: '" + substring(0, position))) + "'" )  {^77^^^^^73^84^else if  ( position >= expression.length (  )  )  {^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P6_Replace_Expression]^else if  ( "after: '" + addEscapes ( expression.substring ( 0, position )  ) )  {^77^^^^^73^84^else if  ( position >= expression.length (  )  )  {^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P7_Replace_Invocation]^else if  ( position >= expression.valueOf (  )  )  {^77^^^^^73^84^else if  ( position >= expression.length (  )  )  {^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P8_Replace_Mix]^else {^77^^^^^73^84^else if  ( position >= expression.length (  )  )  {^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P15_Unwrap_Block]^return "- expression incomplete";^77^78^79^^^73^84^else if  ( position >= expression.length (  )  )  { return "- expression incomplete"; }^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P16_Remove_Block]^^77^78^79^^^73^84^else if  ( position >= expression.length (  )  )  { return "- expression incomplete"; }^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P2_Replace_Operator]^return "after: '" + addEscapes ( expression.substring ( 0, position )  ==  )  + "'";^81^82^^^^73^84^return "after: '" + addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P2_Replace_Operator]^return "after: '"  >  addEscapes ( expression.substring ( 0, position )  )  + "'";^81^82^^^^73^84^return "after: '" + addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P3_Replace_Literal]^return "after: 'after" + addEscapes ( expression.substring ( 0, position )  )  + "'";^81^82^^^^73^84^return "after: '" + addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P3_Replace_Literal]^return "after: '" + addEscapes ( expression.substring ( position, position )  )  + "'";^81^82^^^^73^84^return "after: '" + addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P3_Replace_Literal]^return "after: '" + addEscapes ( expression.substring ( 0, position )  )  + "";^81^82^^^^73^84^return "after: '" + addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P5_Replace_Variable]^return "after: '" + addEscapes ( expression.substring ( 0 )  )  + "'";^81^82^^^^73^84^return "after: '" + addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P5_Replace_Variable]^return "after: '" + addEscapes ( position.substring ( 0, expression )  )  + "'";^81^82^^^^73^84^return "after: '" + addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P8_Replace_Mix]^return "after: '"  !=  addEscapes ( expression.substring ( 0, position )  )   !=  "'";;^81^82^^^^73^84^return "after: '" + addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P3_Replace_Literal]^+ addEscapes ( expression.substring ( position, position )  )  + "'";^82^^^^^73^84^+ addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P5_Replace_Variable]^+ addEscapes ( expression.substring ( 0 )  )  + "'";^82^^^^^73^84^+ addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P5_Replace_Variable]^+ addEscapes ( position.substring ( 0, expression )  )  + "'";^82^^^^^73^84^+ addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P14_Delete_Statement]^^82^^^^^73^84^+ addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P3_Replace_Literal]^+ addEscapes ( expression.substring ( -9, position )  )  + "'";^82^^^^^73^84^+ addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P7_Replace_Invocation]^+ addEscapes ( expression .length (  )   )  + "'";^82^^^^^73^84^+ addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P3_Replace_Literal]^return "s expression incomplete";^78^^^^^73^84^return "- expression incomplete";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P3_Replace_Literal]^return " in expression incomplete";^78^^^^^73^84^return "- expression incomplete";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P2_Replace_Operator]^return "after: '" + addEscapes ( expression.substring ( 0, position )  !=  )  + "'";^81^82^^^^73^84^return "after: '" + addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P2_Replace_Operator]^return "after: '"  |  addEscapes ( expression.substring ( 0, position )  )  + "'";^81^82^^^^73^84^return "after: '" + addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P3_Replace_Literal]^return "after: 'f" + addEscapes ( expression.substring ( 0, position )  )  + "'";^81^82^^^^73^84^return "after: '" + addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P7_Replace_Invocation]^return "after: '" + addEscapes ( expression .length (  )   )  + "'";^81^82^^^^73^84^return "after: '" + addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P8_Replace_Mix]^return true ;^81^82^^^^73^84^return "after: '" + addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P3_Replace_Literal]^else if  ( position >= expression.length() + 2  )  {^77^^^^^73^84^else if  ( position >= expression.length (  )  )  {^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P3_Replace_Literal]^+ addEscapes ( expression.substring ( -5, position )  )  + "'";^82^^^^^73^84^+ addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P3_Replace_Literal]^return "at the beginning of the expressionpressio";^75^^^^^73^84^return "at the beginning of the expression";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P3_Replace_Literal]^else if  ( position >= expression.length() - 2  )  {^77^^^^^73^84^else if  ( position >= expression.length (  )  )  {^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P8_Replace_Mix]^if  ( position >= expression.valueOf (  )  )  {^77^^^^^73^84^else if  ( position >= expression.length (  )  )  {^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P2_Replace_Operator]^return "after: '" + addEscapes ( expression.substring ( 0, position )  ||  )  + "'";^81^82^^^^73^84^return "after: '" + addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P2_Replace_Operator]^return "after: '"  <  addEscapes ( expression.substring ( 0, position )  )  + "'";^81^82^^^^73^84^return "after: '" + addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P3_Replace_Literal]^return "after: 'af" + addEscapes ( expression.substring ( 0, position )  )  + "'";^81^82^^^^73^84^return "after: '" + addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P3_Replace_Literal]^return "after: '" + addEscapes ( expression.substring ( -5, position )  )  + "'";^81^82^^^^73^84^return "after: '" + addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P3_Replace_Literal]^+ addEscapes ( expression.substring ( , position )  )  + "'";^82^^^^^73^84^+ addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P3_Replace_Literal]^return "- expression incompleteon incom";^78^^^^^73^84^return "- expression incomplete";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P3_Replace_Literal]^return "at the beginning of the expressioneginning of the expr";^75^^^^^73^84^return "at the beginning of the expression";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P3_Replace_Literal]^return "- expression incomplete- expr";^78^^^^^73^84^return "- expression incomplete";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P3_Replace_Literal]^return "after: 'ter:" + addEscapes ( expression.substring ( 0, position )  )  + "'";^81^82^^^^73^84^return "after: '" + addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P8_Replace_Mix]^return "after: '" + addEscapes ( expression.substring ( 0, position )  )  +expression;^81^82^^^^73^84^return "after: '" + addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P3_Replace_Literal]^else if  ( position >= expression.length() - 8  )  {^77^^^^^73^84^else if  ( position >= expression.length (  )  )  {^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P3_Replace_Literal]^+ addEscapes ( expression.substring ( 3, position )  )  + "'";^82^^^^^73^84^+ addEscapes ( expression.substring ( 0, position )  )  + "'";^[CLASS] Parser  [METHOD] describePosition [RETURN_TYPE] String   String expression int position [VARIABLES] XPathParser  parser  String  expression  boolean  int  position  
[P14_Delete_Statement]^^88^^^^^86^89^return TokenMgrError.addEscapes ( string ) ;^[CLASS] Parser  [METHOD] addEscapes [RETURN_TYPE] String   String string [VARIABLES] XPathParser  parser  String  string  boolean  
