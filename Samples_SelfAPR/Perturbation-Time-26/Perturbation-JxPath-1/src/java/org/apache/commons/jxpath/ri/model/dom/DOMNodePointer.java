[P1_Replace_Type]^private static final  int  serialVersionUID = -8751046933894857319L;^55^^^^^50^60^private static final long serialVersionUID = -8751046933894857319L;^[CLASS] DOMNodePointer   [VARIABLES] 
[P8_Replace_Mix]^private static final long serialVersionUID  = null ;^55^^^^^50^60^private static final long serialVersionUID = -8751046933894857319L;^[CLASS] DOMNodePointer   [VARIABLES] 
[P1_Replace_Type]^private char defaultNamespace;^59^^^^^54^64^private String defaultNamespace;^[CLASS] DOMNodePointer   [VARIABLES] 
[P1_Replace_Type]^private char id;^60^^^^^55^65^private String id;^[CLASS] DOMNodePointer   [VARIABLES] 
[P1_Replace_Type]^public static final char XML_NAMESPACE_URI = "http: public static final char XMLNS_NAMESPACE_URI = "http:^62^63^64^65^^62^63^public static final String XML_NAMESPACE_URI = "http: public static final String XMLNS_NAMESPACE_URI = "http:^[CLASS] DOMNodePointer   [VARIABLES] 
[P1_Replace_Type]^public static final char XMLNS_NAMESPACE_URI = "http:  public DOMNodePointer ( Node node, Locale locale )  {^64^65^66^67^^64^65^public static final String XMLNS_NAMESPACE_URI = "http:  public DOMNodePointer ( Node node, Locale locale )  {^[CLASS] DOMNodePointer   [VARIABLES] 
[P14_Delete_Statement]^^68^^^^^67^70^super ( null, locale ) ;^[CLASS] DOMNodePointer  [METHOD] <init> [RETURN_TYPE] Locale)   Node node Locale locale [VARIABLES] Locale  locale  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P8_Replace_Mix]^this.node =  null;^69^^^^^67^70^this.node = node;^[CLASS] DOMNodePointer  [METHOD] <init> [RETURN_TYPE] Locale)   Node node Locale locale [VARIABLES] Locale  locale  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P11_Insert_Donor_Statement]^this.id = id;this.node = node;^69^^^^^67^70^this.node = node;^[CLASS] DOMNodePointer  [METHOD] <init> [RETURN_TYPE] Locale)   Node node Locale locale [VARIABLES] Locale  locale  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P14_Delete_Statement]^^73^74^^^^72^76^super ( null, locale ) ; this.node = node;^[CLASS] DOMNodePointer  [METHOD] <init> [RETURN_TYPE] String)   Node node Locale locale String id [VARIABLES] Locale  locale  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P8_Replace_Mix]^this.node =  null;^74^^^^^72^76^this.node = node;^[CLASS] DOMNodePointer  [METHOD] <init> [RETURN_TYPE] String)   Node node Locale locale String id [VARIABLES] Locale  locale  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P11_Insert_Donor_Statement]^this.id = id;this.node = node;^74^^^^^72^76^this.node = node;^[CLASS] DOMNodePointer  [METHOD] <init> [RETURN_TYPE] String)   Node node Locale locale String id [VARIABLES] Locale  locale  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P5_Replace_Variable]^this.id = defaultNamespace;^75^^^^^72^76^this.id = id;^[CLASS] DOMNodePointer  [METHOD] <init> [RETURN_TYPE] String)   Node node Locale locale String id [VARIABLES] Locale  locale  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P11_Insert_Donor_Statement]^this.node = node;this.id = id;^75^^^^^72^76^this.id = id;^[CLASS] DOMNodePointer  [METHOD] <init> [RETURN_TYPE] String)   Node node Locale locale String id [VARIABLES] Locale  locale  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P14_Delete_Statement]^^79^80^^^^78^81^super ( parent ) ; this.node = node;^[CLASS] DOMNodePointer  [METHOD] <init> [RETURN_TYPE] Node)   NodePointer parent Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  NodePointer  parent  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P8_Replace_Mix]^this.node =  null;^80^^^^^78^81^this.node = node;^[CLASS] DOMNodePointer  [METHOD] <init> [RETURN_TYPE] Node)   NodePointer parent Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  NodePointer  parent  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P11_Insert_Donor_Statement]^this.id = id;this.node = node;^80^^^^^78^81^this.node = node;^[CLASS] DOMNodePointer  [METHOD] <init> [RETURN_TYPE] Node)   NodePointer parent Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  NodePointer  parent  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P5_Replace_Variable]^return testNode ( node ) ;^84^^^^^83^85^return testNode ( node, test ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  boolean  Map  namespaces  long  serialVersionUID  NodeTest  test  Node  node  
[P5_Replace_Variable]^return testNode (  test ) ;^84^^^^^83^85^return testNode ( node, test ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  boolean  Map  namespaces  long  serialVersionUID  NodeTest  test  Node  node  
[P5_Replace_Variable]^return nodeNode ( test, test ) ;^84^^^^^83^85^return testNode ( node, test ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  boolean  Map  namespaces  long  serialVersionUID  NodeTest  test  Node  node  
[P7_Replace_Invocation]^return getAbstractFactory ( node, test ) ;^84^^^^^83^85^return testNode ( node, test ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  boolean  Map  namespaces  long  serialVersionUID  NodeTest  test  Node  node  
[P14_Delete_Statement]^^84^^^^^83^85^return testNode ( node, test ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  boolean  Map  namespaces  long  serialVersionUID  NodeTest  test  Node  node  
[P2_Replace_Operator]^else if  ( test  >=  ProcessingInstructionTest )  {^128^^^^^113^143^else if  ( test instanceof ProcessingInstructionTest )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P6_Replace_Expression]^else if  ( node.getNodeType() == PROCESSING_INSTRUCTION_NODE )  {^128^^^^^113^143^else if  ( test instanceof ProcessingInstructionTest )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^else {^128^^^^^113^143^else if  ( test instanceof ProcessingInstructionTest )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P9_Replace_Statement]^else if  ( type == Node.PROCESSING_INSTRUCTION_NODE )  {^128^^^^^113^143^else if  ( test instanceof ProcessingInstructionTest )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P15_Unwrap_Block]^if ((node.getNodeType()) == (org.w3c.dom.Node.PROCESSING_INSTRUCTION_NODE)) {    java.lang.String testPI = ((org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest) (test)).getTarget();    java.lang.String nodePI = ((org.w3c.dom.ProcessingInstruction) (node)).getTarget();    return testPI.equals(nodePI);};^128^129^130^131^132^113^143^else if  ( test instanceof ProcessingInstructionTest )  { if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  { String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ; String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ; return testPI.equals ( nodePI ) ; }^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P16_Remove_Block]^^128^129^130^131^132^113^143^else if  ( test instanceof ProcessingInstructionTest )  { if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  { String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ; String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ; return testPI.equals ( nodePI ) ; }^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P13_Insert_Block]^if  (  ( node.getNodeType (  )  )  ==  ( PROCESSING_INSTRUCTION_NODE )  )  {     String testPI =  (  ( ProcessingInstructionTest )   ( test )  ) .getTarget (  ) ;     String nodePI =  (  ( ProcessingInstruction )   ( node )  ) .getTarget (  ) ;     return testPI.equals ( nodePI ) ; }^128^^^^^113^143^[Delete]^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^if  ( node.getNodeType (  )  != Node.PROCESSING_INSTRUCTION_NODE )  {^129^^^^^114^144^if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^if  ( node.cloneNode (  )  == Node.PROCESSING_INSTRUCTION_NODE )  {^129^^^^^114^144^if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^if  ( node .getNodeName (  )   == Node.PROCESSING_INSTRUCTION_NODE )  {^129^^^^^114^144^if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^129^^^^^114^144^if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P15_Unwrap_Block]^java.lang.String testPI = ((org.apache.commons.jxpath.ri.compiler.ProcessingInstructionTest) (test)).getTarget(); java.lang.String nodePI = ((org.w3c.dom.ProcessingInstruction) (node)).getTarget(); return testPI.equals(nodePI);^129^130^131^132^133^114^144^if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  { String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ; String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ; return testPI.equals ( nodePI ) ; }^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P16_Remove_Block]^^129^130^131^132^133^114^144^if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  { String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ; String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ; return testPI.equals ( nodePI ) ; }^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P13_Insert_Block]^if  ( test instanceof ProcessingInstructionTest )  {     if  (  ( node.getNodeType (  )  )  ==  ( PROCESSING_INSTRUCTION_NODE )  )  {         String testPI =  (  ( ProcessingInstructionTest )   ( test )  ) .getTarget (  ) ;         String nodePI =  (  ( ProcessingInstruction )   ( node )  ) .getTarget (  ) ;         return testPI.equals ( nodePI ) ;     } }^129^^^^^114^144^[Delete]^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^return testPrefix.equals ( nodePI ) ;^132^^^^^117^147^return testPI.equals ( nodePI ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^return nodePI.equals ( testPI ) ;^132^^^^^117^147^return testPI.equals ( nodePI ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^return testPI.substring ( nodePI ) ;^132^^^^^117^147^return testPI.equals ( nodePI ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^return namespaceURI .equals ( nodeNS )  ;^132^^^^^117^147^return testPI.equals ( nodePI ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P1_Replace_Type]^char testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ;^130^^^^^115^145^String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^String testPI =  (  ( ProcessingInstructionTest )  test ) .getPrefix (  ) ;^130^^^^^115^145^String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^String testPI =  (  ( ProcessingInstructionTest )  test )  .getNode (  )  ;^130^^^^^115^145^String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String text =  (  ( Comment )  node ) .getData (  ) ;String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ;^130^^^^^115^145^String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ;^130^^^^^115^145^String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String target =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ;^130^^^^^115^145^String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String text =  (  ( ProcessingInstruction )  node ) .getData (  ) ;String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ;^130^^^^^115^145^String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P1_Replace_Type]^char nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^131^^^^^116^146^String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String text =  (  ( Comment )  node ) .getData (  ) ;String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^131^^^^^116^146^String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String target =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^131^^^^^116^146^String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ;String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^131^^^^^116^146^String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String text =  (  ( ProcessingInstruction )  node ) .getData (  ) ;String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^131^^^^^116^146^String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P14_Delete_Statement]^^130^^^^^115^145^String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P14_Delete_Statement]^^131^132^^^^116^146^String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ; return testPI.equals ( nodePI ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^ln =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^131^^^^^116^146^String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^return namespaceURI.equals ( nodePI ) ;^132^^^^^117^147^return testPI.equals ( nodePI ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^return testPI.equals ( testPrefix ) ;^132^^^^^117^147^return testPI.equals ( nodePI ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P14_Delete_Statement]^^132^^^^^117^147^return testPI.equals ( nodePI ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^return testPI.equals ( nodeNS ) ;^132^^^^^117^147^return testPI.equals ( nodePI ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^return testPI .equals ( namespaceURI )  ;^132^^^^^117^147^return testPI.equals ( nodePI ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^String nodePI =  (  ( ProcessingInstruction )  node )  .getNode (  )  ;^131^^^^^116^146^String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P14_Delete_Statement]^^130^131^^^^115^145^String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ; String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P14_Delete_Statement]^^131^^^^^116^146^String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^return testPI.substring ( testPrefix ) ;^132^^^^^117^147^return testPI.equals ( nodePI ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^return testPI .equals ( nodePI )  ;^132^^^^^117^147^return testPI.equals ( nodePI ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^return nodeNS.equals ( nodePI ) ;^132^^^^^117^147^return testPI.equals ( nodePI ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^return nodeType == Node.ELEMENT_NODE && nodeType == Node.DOCUMENT_NODE;^116^117^^^^101^131^return nodeType == Node.ELEMENT_NODE || nodeType == Node.DOCUMENT_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^return nodeType != Node.ELEMENT_NODE || nodeType == Node.DOCUMENT_NODE;^116^117^^^^101^131^return nodeType == Node.ELEMENT_NODE || nodeType == Node.DOCUMENT_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^return true ;^116^117^^^^101^131^return nodeType == Node.ELEMENT_NODE || nodeType == Node.DOCUMENT_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^return nodeType == Node.CDATA_SECTION_NODE && nodeType == Node.TEXT_NODE;^119^120^^^^104^134^return nodeType == Node.CDATA_SECTION_NODE || nodeType == Node.TEXT_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^return nodeType < Node.CDATA_SECTION_NODE || nodeType == Node.TEXT_NODE;^119^120^^^^104^134^return nodeType == Node.CDATA_SECTION_NODE || nodeType == Node.TEXT_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^return nodeType <= Node.CDATA_SECTION_NODE || nodeType == Node.TEXT_NODE;^119^120^^^^104^134^return nodeType == Node.CDATA_SECTION_NODE || nodeType == Node.TEXT_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^return nodeType ;^119^120^^^^104^134^return nodeType == Node.CDATA_SECTION_NODE || nodeType == Node.TEXT_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^return nodeType < Node.COMMENT_NODE;^122^^^^^107^137^return nodeType == Node.COMMENT_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^return nodeType  &&  Node.COMMENT_NODE;^122^^^^^107^137^return nodeType == Node.COMMENT_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^return nodeType <= Node.PROCESSING_INSTRUCTION_NODE;^124^^^^^109^139^return nodeType == Node.PROCESSING_INSTRUCTION_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^return nodeType  !=  Node.PROCESSING_INSTRUCTION_NODE;;^124^^^^^109^139^return nodeType == Node.PROCESSING_INSTRUCTION_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P3_Replace_Literal]^return true;^126^^^^^111^141^return false;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P1_Replace_Type]^short  nodeType = node.getNodeType (  ) ;^113^^^^^98^128^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^int nodeType = node.cloneNode (  ) ;^113^^^^^98^128^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;int nodeType = node.getNodeType (  ) ;^113^^^^^98^128^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^int type = node.getNodeType (  ) ;int nodeType = node.getNodeType (  ) ;^113^^^^^98^128^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^int t1 = node1.getNodeType (  ) ;int nodeType = node.getNodeType (  ) ;^113^^^^^98^128^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^int t2 = node2.getNodeType (  ) ;int nodeType = node.getNodeType (  ) ;^113^^^^^98^128^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^QName testName = nodeNameTest.getNodeName (  ) ;int nodeType = node.getNodeType (  ) ;^113^^^^^98^128^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;int nodeType = node.getNodeType (  ) ;^113^^^^^98^128^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String nm = n.getNodeName (  ) ;int nodeType = node.getNodeType (  ) ;^113^^^^^98^128^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^int length = map.getLength (  ) ;int nodeType = node.getNodeType (  ) ;^113^^^^^98^128^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;int nodeType = node.getNodeType (  ) ;^113^^^^^98^128^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String prefix = node.getPrefix (  ) ;int nodeType = node.getNodeType (  ) ;^113^^^^^98^128^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String localName = node.getLocalName (  ) ;int nodeType = node.getNodeType (  ) ;^113^^^^^98^128^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P12_Insert_Condition]^if  ( nodeType == Node.COMMENT_NODE )  { int nodeType = node.getNodeType (  ) ; }^113^^^^^98^128^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P12_Insert_Condition]^if  ( nm.equals ( node.getNodeName (  )  )  )  { int nodeType = node.getNodeType (  ) ; }^113^^^^^98^128^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^int nodeType = node .getNodeName (  )  ;^113^^^^^98^128^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P14_Delete_Statement]^^113^^^^^98^128^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^aNode = aNode.getParentNode (  ) ;int nodeType = node.getNodeType (  ) ;^113^^^^^98^128^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^switch  (  (  ( NodeTypeTest )  test ) .getPrefix (  )  )  {^114^^^^^99^129^switch  (  (  ( NodeTypeTest )  test ) .getNodeType (  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^else if  ( test  ||  ProcessingInstructionTest )  {^128^^^^^113^143^else if  ( test instanceof ProcessingInstructionTest )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^return testPrefix .equals ( testPI )  ;^132^^^^^117^147^return testPI.equals ( nodePI ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^return testPI .equals ( id )  ;^132^^^^^117^147^return testPI.equals ( nodePI ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^return testPrefix.substring ( nodePI ) ;^132^^^^^117^147^return testPI.equals ( nodePI ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^if  ( node.getNodeType (  )  >= Node.PROCESSING_INSTRUCTION_NODE )  {^129^^^^^114^144^if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^return testPI .equals ( XML_NAMESPACE_URI )  ;^132^^^^^117^147^return testPI.equals ( nodePI ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^return testPrefix .equals ( namespaceURI )  ;^132^^^^^117^147^return testPI.equals ( nodePI ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^return nodeType >= Node.ELEMENT_NODE || nodeType == Node.DOCUMENT_NODE;^116^117^^^^101^131^return nodeType == Node.ELEMENT_NODE || nodeType == Node.DOCUMENT_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^return nodeType != Node.CDATA_SECTION_NODE || nodeType == Node.TEXT_NODE;^119^120^^^^104^134^return nodeType == Node.CDATA_SECTION_NODE || nodeType == Node.TEXT_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^return nodeType != Node.COMMENT_NODE;^122^^^^^107^137^return nodeType == Node.COMMENT_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^return nodeType  ||  Node.COMMENT_NODE;^122^^^^^107^137^return nodeType == Node.COMMENT_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^return nodeType  ||  Node.PROCESSING_INSTRUCTION_NODE;^124^^^^^109^139^return nodeType == Node.PROCESSING_INSTRUCTION_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P1_Replace_Type]^long  nodeType = node.getNodeType (  ) ;^113^^^^^98^128^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^switch  (  (  ( NodeTypeTest )  test )  .getNodeName (  )   )  {^114^^^^^99^129^switch  (  (  ( NodeTypeTest )  test ) .getNodeType (  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^if  ( node.getNodeType (  )  == Node.ELEMENT_NODE )  {^92^^^^^77^107^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^if  ( node.cloneNode (  )  != Node.ELEMENT_NODE )  {^92^^^^^77^107^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  {^92^^^^^77^107^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P9_Replace_Statement]^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^92^^^^^77^107^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P9_Replace_Statement]^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^92^^^^^77^107^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  == Node.DOCUMENT_NODE )  {^92^^^^^77^107^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P9_Replace_Statement]^if  ( nodeType == Node.COMMENT_NODE )  {^92^^^^^77^107^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P9_Replace_Statement]^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^92^^^^^77^107^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P15_Unwrap_Block]^return false;^92^93^94^^^77^107^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  { return false; }^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P16_Remove_Block]^^92^93^94^^^77^107^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  { return false; }^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P13_Insert_Block]^if  (  ( n.getNodeType (  )  )  ==  ( ELEMENT_NODE )  )  {     count++; }^92^^^^^77^107^[Delete]^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P3_Replace_Literal]^return true;^93^^^^^78^108^return false;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^if  ( wildcard || testPrefix == null )  {^101^^^^^86^116^if  ( wildcard && testPrefix == null )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^if  ( wildcard && testPrefix != null )  {^101^^^^^86^116^if  ( wildcard && testPrefix == null )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^if  ( testPrefix && wildcard == null )  {^101^^^^^86^116^if  ( wildcard && testPrefix == null )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P6_Replace_Expression]^if  ( wildcard ) {^101^^^^^86^116^if  ( wildcard && testPrefix == null )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P6_Replace_Expression]^if  (  testPrefix == null )  {^101^^^^^86^116^if  ( wildcard && testPrefix == null )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P15_Unwrap_Block]^return true;^101^102^103^^^86^116^if  ( wildcard && testPrefix == null )  { return true; }^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P16_Remove_Block]^^101^102^103^^^86^116^if  ( wildcard && testPrefix == null )  { return true; }^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P13_Insert_Block]^if  ( uri != null )  {     return uri; }^101^^^^^86^116^[Delete]^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P13_Insert_Block]^if  ( prefix != null )  {     return prefix; }^101^^^^^86^116^[Delete]^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P13_Insert_Block]^if  ( index ==  ( -1 )  )  {     return null; }^101^^^^^86^116^[Delete]^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P13_Insert_Block]^if  ( current == node2 )  {     return 1; }^101^^^^^86^116^[Delete]^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P13_Insert_Block]^if  ( index ==  ( -1 )  )  {     return name; }^101^^^^^86^116^[Delete]^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P13_Insert_Block]^if  ( object ==  ( this )  )  {     return true; }^101^^^^^86^116^[Delete]^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P3_Replace_Literal]^return false;^102^^^^^87^117^return true;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^if  ( wildcard && testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^105^106^107^^^90^120^if  ( wildcard || testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^if  ( testName || wildcard.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^105^106^107^^^90^120^if  ( wildcard || testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^if  ( wildcard || node.getName (  ) .equals ( DOMNodePointer.getLocalName ( testName )  )  )  {^105^106^107^^^90^120^if  ( wildcard || testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P6_Replace_Expression]^if  ( wildcard ) {^105^106^107^^^90^120^if  ( wildcard || testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P6_Replace_Expression]^if  (  testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^105^106^107^^^90^120^if  ( wildcard || testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^if  ( wildcard || testName.getName (  ) .equals ( DOMNodePointer.getPrefix ( node )  )  )  {^105^106^107^^^90^120^if  ( wildcard || testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P15_Unwrap_Block]^java.lang.String nodeNS = org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getNamespaceURI(node); return org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.equalStrings(namespaceURI, nodeNS);^105^106^107^108^109^90^120^if  ( wildcard || testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  { String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ; return equalStrings ( namespaceURI, nodeNS ) ; }^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P16_Remove_Block]^^105^106^107^108^109^90^120^if  ( wildcard || testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  { String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ; return equalStrings ( namespaceURI, nodeNS ) ; }^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^return equalStrings ( namespaceURI, testPrefix ) ;^109^^^^^105^110^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^return equalStrings (  nodeNS ) ;^109^^^^^105^110^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^return equalStrings ( namespaceURI ) ;^109^^^^^105^110^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^return equalStrings ( nodeNS, namespaceURI ) ;^109^^^^^105^110^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^return getPointerByID ( namespaceURI, nodeNS ) ;^109^^^^^105^110^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^return getPointerByID ( namespaceURI, testPrefix ) ;^109^^^^^105^110^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P1_Replace_Type]^char nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^105^110^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^String nodeNS = DOMNodePointer.getLocalName ( node ) ;^108^^^^^105^110^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^String nodeNS = DOMNodePointer .getNodeName (  )  ;^108^^^^^105^110^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^Node node2 =  ( Node )  pointer2.getBaseValue (  ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^105^110^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String ln = DOMNodePointer.getLocalName ( node ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^105^110^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String nsURI = getNamespaceURI (  ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^105^110^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^Node node1 =  ( Node )  pointer1.getBaseValue (  ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^105^110^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^105^110^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^105^110^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String uri = element.getNamespaceURI (  ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^105^110^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^105^110^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String ns = getNamespaceURI ( prefix ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^105^110^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P14_Delete_Statement]^^108^^^^^105^110^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^return getNamespaceURI ( node ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^105^110^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^ln = DOMNodePointer.getLocalName ( node ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^105^110^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^.equals ( DOMNodePointer.getLocalName ( node )  )  )  { String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^105^110^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^ns = DOMNodePointer.getPrefix ( node ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^105^110^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^return equalStrings ( testPI, nodeNS ) ;^109^^^^^105^110^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P14_Delete_Statement]^^109^^^^^105^110^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^return equalStrings ( testPI, nodeNS ) ;^109^^^^^94^124^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^return equalStrings ( namespaceURI, testPI ) ;^109^^^^^94^124^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^return equalStrings (  nodeNS ) ;^109^^^^^94^124^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^return equalStrings ( namespaceURI ) ;^109^^^^^94^124^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^return equalStrings ( nodeNS, namespaceURI ) ;^109^^^^^94^124^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^return getPointerByID ( namespaceURI, nodeNS ) ;^109^^^^^94^124^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^QName testName = nodeNameTest .getNamespaceURI (  )  ;^97^^^^^82^112^QName testName = nodeNameTest.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;QName testName = nodeNameTest.getNodeName (  ) ;^97^^^^^82^112^QName testName = nodeNameTest.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^int type = node.getNodeType (  ) ;QName testName = nodeNameTest.getNodeName (  ) ;^97^^^^^82^112^QName testName = nodeNameTest.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^int nodeType = node.getNodeType (  ) ;QName testName = nodeNameTest.getNodeName (  ) ;^97^^^^^82^112^QName testName = nodeNameTest.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^int t1 = node1.getNodeType (  ) ;QName testName = nodeNameTest.getNodeName (  ) ;^97^^^^^82^112^QName testName = nodeNameTest.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^boolean wildcard = nodeNameTest.isWildcard (  ) ;QName testName = nodeNameTest.getNodeName (  ) ;^97^^^^^82^112^QName testName = nodeNameTest.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^int t2 = node2.getNodeType (  ) ;QName testName = nodeNameTest.getNodeName (  ) ;^97^^^^^82^112^QName testName = nodeNameTest.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;QName testName = nodeNameTest.getNodeName (  ) ;^97^^^^^82^112^QName testName = nodeNameTest.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String nm = n.getNodeName (  ) ;QName testName = nodeNameTest.getNodeName (  ) ;^97^^^^^82^112^QName testName = nodeNameTest.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;QName testName = nodeNameTest.getNodeName (  ) ;^97^^^^^82^112^QName testName = nodeNameTest.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;QName testName = nodeNameTest.getNodeName (  ) ;^97^^^^^82^112^QName testName = nodeNameTest.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String localName = node.getLocalName (  ) ;QName testName = nodeNameTest.getNodeName (  ) ;^97^^^^^82^112^QName testName = nodeNameTest.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P1_Replace_Type]^char namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^98^^^^^83^113^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^String namespaceURI = nodeNameTest .getNodeName (  )  ;^98^^^^^83^113^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^boolean wildcard = nodeNameTest .getNodeName (  )  ;^99^^^^^84^114^boolean wildcard = nodeNameTest.isWildcard (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^QName testName = nodeNameTest.getNodeName (  ) ;boolean wildcard = nodeNameTest.isWildcard (  ) ;^99^^^^^84^114^boolean wildcard = nodeNameTest.isWildcard (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P1_Replace_Type]^char testPrefix = testName.getPrefix (  ) ;^100^^^^^85^115^String testPrefix = testName.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;String testPrefix = testName.getPrefix (  ) ;^100^^^^^85^115^String testPrefix = testName.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String prefix = getPrefix ( node ) ;String testPrefix = testName.getPrefix (  ) ;^100^^^^^85^115^String testPrefix = testName.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String nsURI = getNamespaceURI (  ) ;String testPrefix = testName.getPrefix (  ) ;^100^^^^^85^115^String testPrefix = testName.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String current = getLanguage (  ) ;String testPrefix = testName.getPrefix (  ) ;^100^^^^^85^115^String testPrefix = testName.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String prefix = name.getPrefix (  ) ;String testPrefix = testName.getPrefix (  ) ;^100^^^^^85^115^String testPrefix = testName.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;String testPrefix = testName.getPrefix (  ) ;^100^^^^^85^115^String testPrefix = testName.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;String testPrefix = testName.getPrefix (  ) ;^100^^^^^85^115^String testPrefix = testName.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String prefix = node.getPrefix (  ) ;String testPrefix = testName.getPrefix (  ) ;^100^^^^^85^115^String testPrefix = testName.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;String testPrefix = testName.getPrefix (  ) ;^100^^^^^85^115^String testPrefix = testName.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P1_Replace_Type]^char nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^93^123^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^String nodeNS = DOMNodePointer.getLocalName ( node ) ;^108^^^^^93^123^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^String nodeNS = DOMNodePointer .getNodeName (  )  ;^108^^^^^93^123^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^Node node2 =  ( Node )  pointer2.getBaseValue (  ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^93^123^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String ln = DOMNodePointer.getLocalName ( node ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^93^123^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String nsURI = getNamespaceURI (  ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^93^123^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^Node node1 =  ( Node )  pointer1.getBaseValue (  ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^93^123^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^93^123^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^93^123^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String uri = element.getNamespaceURI (  ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^93^123^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^93^123^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String ns = getNamespaceURI ( prefix ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^93^123^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P14_Delete_Statement]^^97^98^^^^82^112^QName testName = nodeNameTest.getNodeName (  ) ; String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P14_Delete_Statement]^^98^99^^^^83^113^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ; boolean wildcard = nodeNameTest.isWildcard (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String nsURI = getNamespaceURI (  ) ;String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^98^^^^^83^113^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String prefix = name.getPrefix (  ) ;String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^98^^^^^83^113^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String testPrefix = testName.getPrefix (  ) ;String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^98^^^^^83^113^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^98^^^^^83^113^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^QName testName = nodeNameTest.getNodeName (  ) ;String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^98^^^^^83^113^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^98^^^^^83^113^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^98^^^^^83^113^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String prefix = node.getPrefix (  ) ;String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^98^^^^^83^113^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String uri = element.getNamespaceURI (  ) ;String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^98^^^^^83^113^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String localName = node.getLocalName (  ) ;String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^98^^^^^83^113^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^98^^^^^83^113^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P14_Delete_Statement]^^99^^^^^84^114^boolean wildcard = nodeNameTest.isWildcard (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P14_Delete_Statement]^^100^^^^^85^115^String testPrefix = testName.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^|| node.getName (  ) .equals ( DOMNodePointer.getLocalName ( testName )  )  )  {^106^107^^^^91^121^|| testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^|| testName.getName (  )  .equals ( XMLNS_NAMESPACE_URI )   )  {^106^107^^^^91^121^|| testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^|| testName .QName ( XML_NAMESPACE_URI , defaultNamespace )  .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^106^107^^^^91^121^|| testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^|| testName.getName (  ) .equals ( DOMNodePointer.getPrefix ( node )  )  )  {^106^107^^^^91^121^|| testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^|| testName.getName (  ) .equals ( DOMNodePointer .getLanguage (  )   )  )  {^106^107^^^^91^121^|| testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P14_Delete_Statement]^^106^107^108^^^91^121^|| testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  { String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P13_Insert_Block]^if  ( ! ( object instanceof DOMNodePointer )  )  {     return false; }^106^^^^^91^121^[Delete]^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P13_Insert_Block]^if  ( prefix.equals ( "xml" )  )  {     return XML_NAMESPACE_URI; }^106^^^^^91^121^[Delete]^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P13_Insert_Block]^if  ( prefix.equals ( "xmlns" )  )  {     return XMLNS_NAMESPACE_URI; }^106^^^^^91^121^[Delete]^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^.equals ( DOMNodePointer.getPrefix ( node )  )  )  {^107^^^^^92^122^.equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P14_Delete_Statement]^^107^108^^^^92^122^.equals ( DOMNodePointer.getLocalName ( node )  )  )  { String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P14_Delete_Statement]^^108^^^^^93^123^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^return getNamespaceURI ( node ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^93^123^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^ln = DOMNodePointer.getLocalName ( node ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^93^123^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^.equals ( DOMNodePointer.getLocalName ( node )  )  )  { String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^93^123^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P11_Insert_Donor_Statement]^ns = DOMNodePointer.getPrefix ( node ) ;String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^108^^^^^93^123^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^return equalStrings ( testPrefix, nodeNS ) ;^109^^^^^94^124^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P14_Delete_Statement]^^109^^^^^94^124^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^if  ( node.getNodeType (  )  >= Node.ELEMENT_NODE )  {^92^^^^^77^107^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^if  ( node .getNodeName (  )   != Node.ELEMENT_NODE )  {^92^^^^^77^107^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^if  ( wildcard && namespaceURI == null )  {^101^^^^^86^116^if  ( wildcard && testPrefix == null )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^if  ( node || testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( wildcard )  )  )  {^105^106^107^^^90^120^if  ( wildcard || testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^if  ( wildcard || testName.getName (  )  .equals ( nodePI )   )  {^105^106^107^^^90^120^if  ( wildcard || testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^if  ( wildcard || testName .QName ( id , testPrefix )  .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^105^106^107^^^90^120^if  ( wildcard || testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^if  ( wildcard || testName.getName (  ) .equals ( DOMNodePointer .getLanguage (  )   )  )  {^105^106^107^^^90^120^if  ( wildcard || testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^if  (  testName.getName (  )  .equals ( namespaceURI )   )  {^105^106^107^^^90^120^if  ( wildcard || testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^return equalStrings ( nodePI, nodeNS ) ;^109^^^^^105^110^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^return equalStrings ( namespaceURI, nodePI ) ;^109^^^^^105^110^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^return equalStrings ( testPrefix, nodeNS ) ;^109^^^^^105^110^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^else if  ( test  <=  ProcessingInstructionTest )  {^128^^^^^113^143^else if  ( test instanceof ProcessingInstructionTest )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^return testPI .equals ( testPI )  ;^132^^^^^117^147^return testPI.equals ( nodePI ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^return testPI .equals ( XMLNS_NAMESPACE_URI )  ;^132^^^^^117^147^return testPI.equals ( nodePI ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^return nodeType < Node.ELEMENT_NODE || nodeType == Node.DOCUMENT_NODE;^116^117^^^^101^131^return nodeType == Node.ELEMENT_NODE || nodeType == Node.DOCUMENT_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^return nodeType == Node.this || nodeType == Node.DOCUMENT_NODE;^116^117^^^^101^131^return nodeType == Node.ELEMENT_NODE || nodeType == Node.DOCUMENT_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^return nodeType ;^116^117^^^^101^131^return nodeType == Node.ELEMENT_NODE || nodeType == Node.DOCUMENT_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^return nodeType > Node.PROCESSING_INSTRUCTION_NODE;^124^^^^^109^139^return nodeType == Node.PROCESSING_INSTRUCTION_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^return nodeType  &&  Node.PROCESSING_INSTRUCTION_NODE;^124^^^^^109^139^return nodeType == Node.PROCESSING_INSTRUCTION_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^else if  ( test  >  ProcessingInstructionTest )  {^128^^^^^113^143^else if  ( test instanceof ProcessingInstructionTest )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^if  ( node.getNodeType (  )  <= Node.PROCESSING_INSTRUCTION_NODE )  {^129^^^^^114^144^if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^return testPI.substring ( namespaceURI ) ;^132^^^^^117^147^return testPI.equals ( nodePI ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^return equalStrings ( nodePI, nodeNS ) ;^109^^^^^94^124^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^return true ;^119^120^^^^104^134^return nodeType == Node.CDATA_SECTION_NODE || nodeType == Node.TEXT_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^return nodeType <= Node.COMMENT_NODE;^122^^^^^107^137^return nodeType == Node.COMMENT_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^return nodeType >= Node.PROCESSING_INSTRUCTION_NODE;^124^^^^^109^139^return nodeType == Node.PROCESSING_INSTRUCTION_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^String testPrefix = testName .getName (  )  ;^100^^^^^85^115^String testPrefix = testName.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P14_Delete_Statement]^^97^^^^^82^112^QName testName = nodeNameTest.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P14_Delete_Statement]^^98^^^^^83^113^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P14_Delete_Statement]^^99^100^^^^84^114^boolean wildcard = nodeNameTest.isWildcard (  ) ; String testPrefix = testName.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^|| testName.getName (  )  .equals ( testPI )   )  {^106^107^^^^91^121^|| testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^|| testName .QName ( testPrefix , defaultNamespace )  .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^106^107^^^^91^121^|| testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^.equals ( DOMNodePointer .getLanguage (  )   )  )  {^107^^^^^92^122^.equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P3_Replace_Literal]^return false;^89^^^^^74^104^return true;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^else if  ( test  <<  ProcessingInstructionTest )  {^128^^^^^113^143^else if  ( test instanceof ProcessingInstructionTest )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^if  ( test instanceof ProcessingInstructionTest )  {^128^^^^^113^143^else if  ( test instanceof ProcessingInstructionTest )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^if  ( node.getNodeType (  )  == Node.this )  {^129^^^^^114^144^if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^return nodeNS.substring ( nodePI ) ;^132^^^^^117^147^return testPI.equals ( nodePI ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^return nodeType <= Node.ELEMENT_NODE || nodeType == Node.DOCUMENT_NODE;^116^117^^^^101^131^return nodeType == Node.ELEMENT_NODE || nodeType == Node.DOCUMENT_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^return nodeType >= Node.CDATA_SECTION_NODE || nodeType == Node.TEXT_NODE;^119^120^^^^104^134^return nodeType == Node.CDATA_SECTION_NODE || nodeType == Node.TEXT_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^return nodeType  !=  Node.COMMENT_NODE;;^122^^^^^107^137^return nodeType == Node.COMMENT_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^else if  ( test  !=  ProcessingInstructionTest )  {^128^^^^^113^143^else if  ( test instanceof ProcessingInstructionTest )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^return testPI .equals ( defaultNamespace )  ;^132^^^^^117^147^return testPI.equals ( nodePI ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^return nodeType != Node.PROCESSING_INSTRUCTION_NODE;^124^^^^^109^139^return nodeType == Node.PROCESSING_INSTRUCTION_NODE;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^if  ( node.getNodeType (  )  != Node.1 )  {^92^^^^^77^107^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^if  ( wildcard && testPI == this )  {^101^^^^^86^116^if  ( wildcard && testPrefix == null )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^if  ( wildcard || testName .QName ( defaultNamespace , nodeNS )  .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^105^106^107^^^90^120^if  ( wildcard || testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P14_Delete_Statement]^^108^109^^^^105^110^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ; return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^return equalStrings ( namespaceURI, nodePI ) ;^109^^^^^94^124^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^|| testName.getName (  )  .equals ( nodeNS )   )  {^106^107^^^^91^121^|| testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P7_Replace_Invocation]^|| testName .QName ( nodeNS , XML_NAMESPACE_URI )  .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^106^107^^^^91^121^|| testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P14_Delete_Statement]^^108^109^^^^93^123^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ; return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^return equalStrings ( namespaceURI, testPrefix ) ;^109^^^^^94^124^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^return getPointerByID ( nodePI, nodeNS ) ;^109^^^^^94^124^return equalStrings ( namespaceURI, nodeNS ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^if  ( node.getNodeType (  )  != Node.null )  {^92^^^^^77^107^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P5_Replace_Variable]^if  ( wildcard && nodeNS == null )  {^101^^^^^86^116^if  ( wildcard && testPrefix == null )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^if  ( wildcard && testPrefix == false )  {^101^^^^^86^116^if  ( wildcard && testPrefix == null )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^else if  ( test  >>  ProcessingInstructionTest )  {^128^^^^^113^143^else if  ( test instanceof ProcessingInstructionTest )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^else if  ( test  &  ProcessingInstructionTest )  {^128^^^^^113^143^else if  ( test instanceof ProcessingInstructionTest )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^return namespaceURI.substring ( nodePI ) ;^132^^^^^117^147^return testPI.equals ( nodePI ) ;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P8_Replace_Mix]^|| testName .QName ( id , nodePI )  .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^106^107^^^^91^121^|| testName.getName (  ) .equals ( DOMNodePointer.getLocalName ( node )  )  )  {^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P3_Replace_Literal]^return true;^135^^^^^120^150^return false;^[CLASS] DOMNodePointer  [METHOD] testNode [RETURN_TYPE] boolean   Node node NodeTest test [VARIABLES] boolean  wildcard  NodeNameTest  nodeNameTest  QName  testName  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  testPI  testPrefix  Map  namespaces  long  serialVersionUID  NodeTest  test  int  nodeType  
[P2_Replace_Operator]^if  ( s1 != null )  {^139^^^^^138^152^if  ( s1 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P5_Replace_Variable]^if  ( testPrefix == null )  {^139^^^^^138^152^if  ( s1 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P6_Replace_Expression]^if  ( s2 == null || length() == 0 )  {^139^^^^^138^152^if  ( s1 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P6_Replace_Expression]^if  ( s2 == null )  {^139^^^^^138^152^if  ( s1 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P6_Replace_Expression]^if  ( s2.trim (  ) .length (  )  == 0 )  {^139^^^^^138^152^if  ( s1 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P8_Replace_Mix]^if  ( testPrefix == true )  {^139^^^^^138^152^if  ( s1 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( factory == null )  {^139^^^^^138^152^if  ( s1 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( element != null )  {^139^^^^^138^152^if  ( s1 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( parent != null )  {^139^^^^^138^152^if  ( s1 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( attr != null )  {^139^^^^^138^152^if  ( s1 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( current == null )  {^139^^^^^138^152^if  ( s1 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( namespaces == null )  {^139^^^^^138^152^if  ( s1 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( uri != null )  {^139^^^^^138^152^if  ( s1 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( namespace == null )  {^139^^^^^138^152^if  ( s1 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( prefix == null )  {^139^^^^^138^152^if  ( s1 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( ns == null )  {^139^^^^^138^152^if  ( s1 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( parent == null )  {^139^^^^^138^152^if  ( s1 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( id != null )  {^139^^^^^138^152^if  ( s1 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( n == node1 )  {^139^^^^^138^152^if  ( s1 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( prefix != null )  {^139^^^^^138^152^if  ( s1 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( node1 == node2 )  {^139^^^^^138^152^if  ( s1 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P15_Unwrap_Block]^return (s2 == null) || ((s2.trim().length()) == 0);^139^140^141^^^138^152^if  ( s1 == null )  { return s2 == null || s2.trim (  ) .length (  )  == 0; }^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P16_Remove_Block]^^139^140^141^^^138^152^if  ( s1 == null )  { return s2 == null || s2.trim (  ) .length (  )  == 0; }^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P13_Insert_Block]^if  ( s2 == null )  {     return  ( s1 == null )  ||  (  ( s1.trim (  ) .length (  )  )  == 0 ) ; }^139^^^^^138^152^[Delete]^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P2_Replace_Operator]^return s2 == null && s2.trim (  ) .length (  )  == 0;^140^^^^^138^152^return s2 == null || s2.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P2_Replace_Operator]^return s2 != null || s2.trim (  ) .length (  )  == 0;^140^^^^^138^152^return s2 == null || s2.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P3_Replace_Literal]^return s2 == null || s2.trim (  ) .length (  )  == -2;^140^^^^^138^152^return s2 == null || s2.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P3_Replace_Literal]^return s2 == null || s2.trim (  ) .length() + 1  == 0;^140^^^^^138^152^return s2 == null || s2.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P5_Replace_Variable]^return nodePI == null || s2.trim (  ) .length (  )  == 0;^140^^^^^138^152^return s2 == null || s2.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P7_Replace_Invocation]^return s2 == null || s2.trim (  ) .indexOf (  )  == 0;^140^^^^^138^152^return s2 == null || s2.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P7_Replace_Invocation]^return s2 == null || s2.substring (  ) .length (  )  == 0;^140^^^^^138^152^return s2 == null || s2.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P12_Insert_Condition]^if  ( s1 != null && !s1.trim (  ) .equals ( s2.trim (  )  )  )  { return s2 == null || s2.trim (  ) .length (  )  == 0; }^140^^^^^138^152^return s2 == null || s2.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P13_Insert_Block]^if  ( s2 == null )  {     return  ( s1 == null )  ||  (  ( s1.trim (  ) .length (  )  )  == 0 ) ; }^140^^^^^138^152^[Delete]^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P13_Insert_Block]^if  ( s1 == null )  {     return  ( s2 == null )  ||  (  ( s2.trim (  ) .length (  )  )  == 0 ) ; }^140^^^^^138^152^[Delete]^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P3_Replace_Literal]^return s2 == null || s2.trim (  ) .length() - 1  == 0;^140^^^^^138^152^return s2 == null || s2.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P7_Replace_Invocation]^return s2 == null || s2.trim (  )  .startsWith ( testPI )   == 0;^140^^^^^138^152^return s2 == null || s2.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P8_Replace_Mix]^return testPI == null || s2.trim (  ) .length (  )  == 0;^140^^^^^138^152^return s2 == null || s2.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P14_Delete_Statement]^^140^^^^^138^152^return s2 == null || s2.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P3_Replace_Literal]^return s2 == null || s2.trim (  ) .length() - 6  == 0;^140^^^^^138^152^return s2 == null || s2.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P5_Replace_Variable]^return s1 == null || s2.trim (  ) .length (  )  == 0;^140^^^^^138^152^return s2 == null || s2.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P8_Replace_Mix]^return nodePI == null || s2.substring (  ) .length (  )  == 0;^140^^^^^138^152^return s2 == null || s2.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P3_Replace_Literal]^return s2 == null || s2.trim (  ) .length (  )  == 6;^140^^^^^138^152^return s2 == null || s2.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P3_Replace_Literal]^return s2 == null || s2.trim (  ) .length() + 3  == 0;^140^^^^^138^152^return s2 == null || s2.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P5_Replace_Variable]^return testPrefix == null || s2.trim (  ) .length (  )  == 0;^140^^^^^138^152^return s2 == null || s2.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P7_Replace_Invocation]^return s2 == null || s2.trim (  )  .startsWith ( nodeNS )   == 0;^140^^^^^138^152^return s2 == null || s2.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P8_Replace_Mix]^return nodeNS == null || s2.trim (  ) .length (  )  == 0;^140^^^^^138^152^return s2 == null || s2.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P3_Replace_Literal]^return s2 == null || s2.trim (  ) .length() + 2  == 0;^140^^^^^138^152^return s2 == null || s2.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P8_Replace_Mix]^return nodeNS == null || s2.substring (  ) .length (  )  == 0;^140^^^^^138^152^return s2 == null || s2.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P2_Replace_Operator]^if  ( s2 != null )  {^143^^^^^138^152^if  ( s2 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P5_Replace_Variable]^if  ( testPrefix == null )  {^143^^^^^138^152^if  ( s2 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P6_Replace_Expression]^if  ( s1 == null || length() == 0 )  {^143^^^^^138^152^if  ( s2 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P6_Replace_Expression]^if  ( s1 == null )  {^143^^^^^138^152^if  ( s2 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P6_Replace_Expression]^if  ( s1.trim (  ) .length (  )  == 0 )  {^143^^^^^138^152^if  ( s2 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P8_Replace_Mix]^if  ( s2 == true )  {^143^^^^^138^152^if  ( s2 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( factory == null )  {^143^^^^^138^152^if  ( s2 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( element != null )  {^143^^^^^138^152^if  ( s2 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( parent != null )  {^143^^^^^138^152^if  ( s2 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( attr != null )  {^143^^^^^138^152^if  ( s2 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( current == null )  {^143^^^^^138^152^if  ( s2 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( namespaces == null )  {^143^^^^^138^152^if  ( s2 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( uri != null )  {^143^^^^^138^152^if  ( s2 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( namespace == null )  {^143^^^^^138^152^if  ( s2 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( prefix == null )  {^143^^^^^138^152^if  ( s2 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( ns == null )  {^143^^^^^138^152^if  ( s2 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( parent == null )  {^143^^^^^138^152^if  ( s2 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( id != null )  {^143^^^^^138^152^if  ( s2 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( n == node1 )  {^143^^^^^138^152^if  ( s2 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P9_Replace_Statement]^if  ( prefix != null )  {^143^^^^^138^152^if  ( s2 == null )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P15_Unwrap_Block]^return (s1 == null) || ((s1.trim().length()) == 0);^143^144^145^^^138^152^if  ( s2 == null )  { return s1 == null || s1.trim (  ) .length (  )  == 0; }^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P16_Remove_Block]^^143^144^145^^^138^152^if  ( s2 == null )  { return s1 == null || s1.trim (  ) .length (  )  == 0; }^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P13_Insert_Block]^if  ( s1 == null )  {     return  ( s2 == null )  ||  (  ( s2.trim (  ) .length (  )  )  == 0 ) ; }^143^^^^^138^152^[Delete]^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P2_Replace_Operator]^return s1 == null && s1.trim (  ) .length (  )  == 0;^144^^^^^138^152^return s1 == null || s1.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P2_Replace_Operator]^return s1 != null || s1.trim (  ) .length (  )  == 0;^144^^^^^138^152^return s1 == null || s1.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P3_Replace_Literal]^return s1 == null || s1.trim (  ) .length (  )  == 7;^144^^^^^138^152^return s1 == null || s1.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P3_Replace_Literal]^return s1 == null || s1.trim (  ) .length() + 6  == 0;^144^^^^^138^152^return s1 == null || s1.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P5_Replace_Variable]^return nodeNS == null || s1.trim (  ) .length (  )  == 0;^144^^^^^138^152^return s1 == null || s1.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P7_Replace_Invocation]^return s1 == null || s1.trim (  ) .indexOf (  )  == 0;^144^^^^^138^152^return s1 == null || s1.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P7_Replace_Invocation]^return s1 == null || s1.trim (  )  .startsWith ( testPrefix )   == 0;^144^^^^^138^152^return s1 == null || s1.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P7_Replace_Invocation]^return s1 == null || s1.substring (  ) .length (  )  == 0;^144^^^^^138^152^return s1 == null || s1.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P12_Insert_Condition]^if  ( s1 != null && !s1.trim (  ) .equals ( s2.trim (  )  )  )  { return s1 == null || s1.trim (  ) .length (  )  == 0; }^144^^^^^138^152^return s1 == null || s1.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P13_Insert_Block]^if  ( s2 == null )  {     return  ( s1 == null )  ||  (  ( s1.trim (  ) .length (  )  )  == 0 ) ; }^144^^^^^138^152^[Delete]^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P13_Insert_Block]^if  ( s1 == null )  {     return  ( s2 == null )  ||  (  ( s2.trim (  ) .length (  )  )  == 0 ) ; }^144^^^^^138^152^[Delete]^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P3_Replace_Literal]^return s1 == null || s1.trim (  ) .length() - 3  == 0;^144^^^^^138^152^return s1 == null || s1.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P7_Replace_Invocation]^return s1 == null || s1.trim (  )  .startsWith ( id )   == 0;^144^^^^^138^152^return s1 == null || s1.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P8_Replace_Mix]^return testPrefix == null || s1.trim (  ) .length (  )  == 0;^144^^^^^138^152^return s1 == null || s1.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P14_Delete_Statement]^^144^^^^^138^152^return s1 == null || s1.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P3_Replace_Literal]^return s1 == null || s1.trim (  ) .length() - 5  == 0;^144^^^^^138^152^return s1 == null || s1.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P8_Replace_Mix]^return nodeNS == null || s1.substring (  ) .length (  )  == 0;^144^^^^^138^152^return s1 == null || s1.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P3_Replace_Literal]^return s1 == null || s1.trim (  ) .length (  )  == -4;^144^^^^^138^152^return s1 == null || s1.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P3_Replace_Literal]^return s1 == null || s1.trim (  ) .length() - 6  == 0;^144^^^^^138^152^return s1 == null || s1.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P7_Replace_Invocation]^return s1 == null || s1.trim (  )  .startsWith ( nodeNS )   == 0;^144^^^^^138^152^return s1 == null || s1.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P3_Replace_Literal]^return s1 == null || s1.trim (  ) .length() + 9  == 0;^144^^^^^138^152^return s1 == null || s1.trim (  ) .length (  )  == 0;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P2_Replace_Operator]^if  ( s1 != null || !s1.trim (  ) .equals ( s2.trim (  )  )  )  {^147^^^^^138^152^if  ( s1 != null && !s1.trim (  ) .equals ( s2.trim (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P2_Replace_Operator]^if  ( s1 == null && !s1.trim (  ) .equals ( s2.trim (  )  )  )  {^147^^^^^138^152^if  ( s1 != null && !s1.trim (  ) .equals ( s2.trim (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P5_Replace_Variable]^if  ( testPrefix != null && !s1.trim (  ) .equals ( s2.trim (  )  )  )  {^147^^^^^138^152^if  ( s1 != null && !s1.trim (  ) .equals ( s2.trim (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P5_Replace_Variable]^if  ( s1 != null && !s1.trim (  ) .equals ( testPrefix.trim (  )  )  )  {^147^^^^^138^152^if  ( s1 != null && !s1.trim (  ) .equals ( s2.trim (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P5_Replace_Variable]^if  ( s2 != null && !s1.trim (  ) .equals ( s1.trim (  )  )  )  {^147^^^^^138^152^if  ( s1 != null && !s1.trim (  ) .equals ( s2.trim (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P6_Replace_Expression]^if  ( s1 != null ) {^147^^^^^138^152^if  ( s1 != null && !s1.trim (  ) .equals ( s2.trim (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P6_Replace_Expression]^if  (  !s1.trim (  ) .equals ( s2.trim (  )  )  )  {^147^^^^^138^152^if  ( s1 != null && !s1.trim (  ) .equals ( s2.trim (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P7_Replace_Invocation]^if  ( s1 != null && !s1.trim (  ) .substring ( s2.trim (  )  )  )  {^147^^^^^138^152^if  ( s1 != null && !s1.trim (  ) .equals ( s2.trim (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P7_Replace_Invocation]^if  ( s1 != null && !s1.substring (  ) .equals ( s2.trim (  )  )  )  {^147^^^^^138^152^if  ( s1 != null && !s1.trim (  ) .equals ( s2.trim (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P8_Replace_Mix]^if  ( nodeNS != true ) {^147^^^^^138^152^if  ( s1 != null && !s1.trim (  ) .equals ( s2.trim (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P15_Unwrap_Block]^return false;^147^148^149^^^138^152^if  ( s1 != null && !s1.trim (  ) .equals ( s2.trim (  )  )  )  { return false; }^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P16_Remove_Block]^^147^148^149^^^138^152^if  ( s1 != null && !s1.trim (  ) .equals ( s2.trim (  )  )  )  { return false; }^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P13_Insert_Block]^if  (  ( attr != null )  &&  ( ! ( attr.equals ( "" )  )  )  )  {     return attr; }^147^^^^^138^152^[Delete]^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P3_Replace_Literal]^return true;^148^^^^^138^152^return false;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P5_Replace_Variable]^if  ( nodeNS != null && !s1.trim (  ) .equals ( s2.trim (  )  )  )  {^147^^^^^138^152^if  ( s1 != null && !s1.trim (  ) .equals ( s2.trim (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P5_Replace_Variable]^if  ( s1 != null && !s1.trim (  ) .equals ( testPI.trim (  )  )  )  {^147^^^^^138^152^if  ( s1 != null && !s1.trim (  ) .equals ( s2.trim (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P8_Replace_Mix]^if  ( s1 != null && !s1.trim (  ) .equals ( nodeNS.trim (  )  )  )  {^147^^^^^138^152^if  ( s1 != null && !s1.trim (  ) .equals ( s2.trim (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P5_Replace_Variable]^if  ( s1 != null && !s1.trim (  ) .equals ( s1.trim (  )  )  )  {^147^^^^^138^152^if  ( s1 != null && !s1.trim (  ) .equals ( s2.trim (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P8_Replace_Mix]^if  ( s1 != null && !s1.trim (  ) .equals ( nodePI.trim (  )  )  )  {^147^^^^^138^152^if  ( s1 != null && !s1.trim (  ) .equals ( s2.trim (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P3_Replace_Literal]^return false;^151^^^^^138^152^return true;^[CLASS] DOMNodePointer  [METHOD] equalStrings [RETURN_TYPE] boolean   String s1 String s2 [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  namespaceURI  nodeNS  nodePI  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P1_Replace_Type]^char ln = null;^155^^^^^154^166^String ln = null;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^String ns = null;String ln = null;^155^^^^^154^166^String ln = null;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^String namespace = null;String ln = null;^155^^^^^154^166^String ln = null;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^String qname;String ln = null;^155^^^^^154^166^String ln = null;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P1_Replace_Type]^char ns = null;^156^^^^^154^166^String ns = null;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^String namespace = null;String ns = null;^156^^^^^154^166^String ns = null;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^String qname;String ns = null;^156^^^^^154^166^String ns = null;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^String ln = null;String ns = null;^156^^^^^154^166^String ns = null;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P1_Replace_Type]^short  type = node.getNodeType (  ) ;^157^^^^^154^166^int type = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P7_Replace_Invocation]^int type = node.getNodeName (  ) ;^157^^^^^154^166^int type = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^Node current = node.getFirstChild (  ) ;int type = node.getNodeType (  ) ;^157^^^^^154^166^int type = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^int t2 = node2.getNodeType (  ) ;int type = node.getNodeType (  ) ;^157^^^^^154^166^int type = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^NodeList children = node.getChildNodes (  ) ;int type = node.getNodeType (  ) ;^157^^^^^154^166^int type = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;int type = node.getNodeType (  ) ;^157^^^^^154^166^int type = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;int type = node.getNodeType (  ) ;^157^^^^^154^166^int type = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^int count = children.getLength (  ) ;int type = node.getNodeType (  ) ;^157^^^^^154^166^int type = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;int type = node.getNodeType (  ) ;^157^^^^^154^166^int type = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^int nodeType = node.getNodeType (  ) ;int type = node.getNodeType (  ) ;^157^^^^^154^166^int type = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^int t1 = node1.getNodeType (  ) ;int type = node.getNodeType (  ) ;^157^^^^^154^166^int type = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^int index = name.lastIndexOf ( ':' ) ;int type = node.getNodeType (  ) ;^157^^^^^154^166^int type = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^NodeList list = node.getChildNodes (  ) ;int type = node.getNodeType (  ) ;^157^^^^^154^166^int type = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^QName testName = nodeNameTest.getNodeName (  ) ;int type = node.getNodeType (  ) ;^157^^^^^154^166^int type = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^String nm = n.getNodeName (  ) ;int type = node.getNodeType (  ) ;^157^^^^^154^166^int type = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^String prefix = node.getPrefix (  ) ;int type = node.getNodeType (  ) ;^157^^^^^154^166^int type = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^String localName = node.getLocalName (  ) ;int type = node.getNodeType (  ) ;^157^^^^^154^166^int type = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P14_Delete_Statement]^^157^^^^^154^166^int type = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^aNode = aNode.getParentNode (  ) ;int type = node.getNodeType (  ) ;^157^^^^^154^166^int type = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^document = node.getOwnerDocument (  ) ;int type = node.getNodeType (  ) ;^157^^^^^154^166^int type = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P2_Replace_Operator]^if  ( type != Node.ELEMENT_NODE )  {^158^^^^^154^166^if  ( type == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P2_Replace_Operator]^if  ( type >= Node.ELEMENT_NODE )  {^158^^^^^154^166^if  ( type == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P6_Replace_Expression]^if  ( type == PROCESSING_INSTRUCTION_NODE )  {^158^^^^^154^166^if  ( type == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P15_Unwrap_Block]^ns = org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getPrefix(node); ln = org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getLocalName(node);^158^159^160^161^^154^166^if  ( type == Node.ELEMENT_NODE )  { ns = DOMNodePointer.getPrefix ( node ) ; ln = DOMNodePointer.getLocalName ( node ) ; }^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P16_Remove_Block]^^158^159^160^161^^154^166^if  ( type == Node.ELEMENT_NODE )  { ns = DOMNodePointer.getPrefix ( node ) ; ln = DOMNodePointer.getLocalName ( node ) ; }^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P2_Replace_Operator]^else if  ( type != Node.PROCESSING_INSTRUCTION_NODE )  {^162^^^^^154^166^else if  ( type == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P8_Replace_Mix]^if  ( type == Node.null )  {^162^^^^^154^166^else if  ( type == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P15_Unwrap_Block]^ln = ((org.w3c.dom.ProcessingInstruction) (node)).getTarget();^162^163^164^^^154^166^else if  ( type == Node.PROCESSING_INSTRUCTION_NODE )  { ln =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ; }^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P16_Remove_Block]^^162^163^164^^^154^166^else if  ( type == Node.PROCESSING_INSTRUCTION_NODE )  { ln =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ; }^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P13_Insert_Block]^if  (  (  ( n.getNodeType (  )  )  ==  ( PROCESSING_INSTRUCTION_NODE )  )  &&  (  (  ( ProcessingInstruction )   ( n )  ) .getTarget (  ) .equals ( target )  )  )  {     count++; }^162^^^^^154^166^[Delete]^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P7_Replace_Invocation]^ln =  (  ( ProcessingInstruction )  node ) .getData (  ) ;^163^^^^^154^166^ln =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P7_Replace_Invocation]^ln =  (  ( ProcessingInstruction )  node )  .getNode (  )  ;^163^^^^^154^166^ln =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P8_Replace_Mix]^ln  = null ;^163^^^^^154^166^ln =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P14_Delete_Statement]^^163^^^^^154^166^ln =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;ln =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^163^^^^^154^166^ln =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^String target =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;ln =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^163^^^^^154^166^ln =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ;ln =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^163^^^^^154^166^ln =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^String text =  (  ( ProcessingInstruction )  node ) .getData (  ) ;ln =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^163^^^^^154^166^ln =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^&&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  { count++;ln =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^163^^^^^154^166^ln =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P8_Replace_Mix]^ln ;^163^^^^^154^166^ln =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P7_Replace_Invocation]^ns = DOMNodePointer.getRelativePositionOfTextNode ( node ) ;^159^^^^^154^166^ns = DOMNodePointer.getPrefix ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P8_Replace_Mix]^ns ;^159^^^^^154^166^ns = DOMNodePointer.getPrefix ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^ln = DOMNodePointer.getLocalName ( node ) ;ns = DOMNodePointer.getPrefix ( node ) ;^159^^^^^154^166^ns = DOMNodePointer.getPrefix ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P13_Insert_Block]^if  ( ! ( object instanceof DOMNodePointer )  )  {     return false; }^159^^^^^154^166^[Delete]^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P13_Insert_Block]^if  ( prefix.equals ( "xml" )  )  {     return XML_NAMESPACE_URI; }^159^^^^^154^166^[Delete]^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P13_Insert_Block]^if  ( prefix.equals ( "xmlns" )  )  {     return XMLNS_NAMESPACE_URI; }^159^^^^^154^166^[Delete]^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P7_Replace_Invocation]^ln = DOMNodePointer.getRelativePositionOfTextNode ( node ) ;^160^^^^^154^166^ln = DOMNodePointer.getLocalName ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P7_Replace_Invocation]^ln = DOMNodePointer .getLocalName ( node )  ;^160^^^^^154^166^ln = DOMNodePointer.getLocalName ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P8_Replace_Mix]^ln ;^160^^^^^154^166^ln = DOMNodePointer.getLocalName ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^ns = DOMNodePointer.getPrefix ( node ) ;ln = DOMNodePointer.getLocalName ( node ) ;^160^^^^^154^166^ln = DOMNodePointer.getLocalName ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P7_Replace_Invocation]^ns = DOMNodePointer .getPrefix (  )  ;^159^^^^^154^166^ns = DOMNodePointer.getPrefix ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P14_Delete_Statement]^^159^160^^^^154^166^ns = DOMNodePointer.getPrefix ( node ) ; ln = DOMNodePointer.getLocalName ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^String ln = DOMNodePointer.getLocalName ( node ) ;ns = DOMNodePointer.getPrefix ( node ) ;^159^^^^^154^166^ns = DOMNodePointer.getPrefix ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^String prefix = getPrefix ( node ) ;ns = DOMNodePointer.getPrefix ( node ) ;^159^^^^^154^166^ns = DOMNodePointer.getPrefix ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;ns = DOMNodePointer.getPrefix ( node ) ;^159^^^^^154^166^ns = DOMNodePointer.getPrefix ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P14_Delete_Statement]^^160^^^^^154^166^ln = DOMNodePointer.getLocalName ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^String ln = DOMNodePointer.getLocalName ( node ) ;ln = DOMNodePointer.getLocalName ( node ) ;^160^^^^^154^166^ln = DOMNodePointer.getLocalName ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^return new DOMNodePointer ( element, getLocale (  ) , id ) ;ln = DOMNodePointer.getLocalName ( node ) ;^160^^^^^154^166^ln = DOMNodePointer.getLocalName ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P11_Insert_Donor_Statement]^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;ln = DOMNodePointer.getLocalName ( node ) ;^160^^^^^154^166^ln = DOMNodePointer.getLocalName ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P8_Replace_Mix]^if  ( type == Node.PROCESSING_INSTRUCTION_NODE )  {^162^^^^^154^166^else if  ( type == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P14_Delete_Statement]^^159^^^^^154^166^ns = DOMNodePointer.getPrefix ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P4_Replace_Constructor]^return new QName (  ln ) ;^165^^^^^154^166^return new QName ( ns, ln ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P4_Replace_Constructor]^return new QName ( ns ) ;^165^^^^^154^166^return new QName ( ns, ln ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P5_Replace_Variable]^return new QName ( s1, ln ) ;^165^^^^^154^166^return new QName ( ns, ln ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P5_Replace_Variable]^return new QName ( ns, nodePI ) ;^165^^^^^154^166^return new QName ( ns, ln ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P5_Replace_Variable]^return new QName ( ln, ns ) ;^165^^^^^154^166^return new QName ( ns, ln ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P8_Replace_Mix]^return new QName ( ns, testPrefix ) ;^165^^^^^154^166^return new QName ( ns, ln ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P8_Replace_Mix]^return new QName ( nodePI, ln ) ;^165^^^^^154^166^return new QName ( ns, ln ) ;^[CLASS] DOMNodePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  type  Node  node  
[P14_Delete_Statement]^^169^^^^^168^170^return getNamespaceURI ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P4_Replace_Constructor]^return new DOMNodeIterator ( this,  reverse, startWith ) ;^177^^^^^172^178^return new DOMNodeIterator ( this, test, reverse, startWith ) ;^[CLASS] DOMNodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  NodePointer  startWith  Map  namespaces  long  serialVersionUID  NodeTest  test  
[P4_Replace_Constructor]^return new DOMNodeIterator ( this, test,  startWith ) ;^177^^^^^172^178^return new DOMNodeIterator ( this, test, reverse, startWith ) ;^[CLASS] DOMNodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  NodePointer  startWith  Map  namespaces  long  serialVersionUID  NodeTest  test  
[P4_Replace_Constructor]^return new DOMNodeIterator ( this, test, reverse ) ;^177^^^^^172^178^return new DOMNodeIterator ( this, test, reverse, startWith ) ;^[CLASS] DOMNodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  NodePointer  startWith  Map  namespaces  long  serialVersionUID  NodeTest  test  
[P5_Replace_Variable]^return new DOMNodeIterator ( this, startWith, reverse, test ) ;^177^^^^^172^178^return new DOMNodeIterator ( this, test, reverse, startWith ) ;^[CLASS] DOMNodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  NodePointer  startWith  Map  namespaces  long  serialVersionUID  NodeTest  test  
[P5_Replace_Variable]^return new DOMNodeIterator ( this, test, startWith, reverse ) ;^177^^^^^172^178^return new DOMNodeIterator ( this, test, reverse, startWith ) ;^[CLASS] DOMNodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  NodePointer  startWith  Map  namespaces  long  serialVersionUID  NodeTest  test  
[P8_Replace_Mix]^return new DOMNodeIterator ( null, test, reverse, startWith ) ;^177^^^^^172^178^return new DOMNodeIterator ( this, test, reverse, startWith ) ;^[CLASS] DOMNodePointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] boolean  reverse  Node  node  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  NodePointer  startWith  Map  namespaces  long  serialVersionUID  NodeTest  test  
[P8_Replace_Mix]^return new DOMAttributeIterator ( null, name ) ;^181^^^^^180^182^return new DOMAttributeIterator ( this, name ) ;^[CLASS] DOMNodePointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName name [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  QName  name  Node  node  
[P4_Replace_Constructor]^return return  new DOMNamespaceIterator ( this )  ;^185^^^^^184^186^return new NamespacePointer ( this, prefix ) ;^[CLASS] DOMNodePointer  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  prefix  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P5_Replace_Variable]^return new NamespacePointer ( this, nodePI ) ;^185^^^^^184^186^return new NamespacePointer ( this, prefix ) ;^[CLASS] DOMNodePointer  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  prefix  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P8_Replace_Mix]^return  new DOMNamespaceIterator ( this )  ;^185^^^^^184^186^return new NamespacePointer ( this, prefix ) ;^[CLASS] DOMNodePointer  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  prefix  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P5_Replace_Variable]^return new NamespacePointer ( this, s1 ) ;^185^^^^^184^186^return new NamespacePointer ( this, prefix ) ;^[CLASS] DOMNodePointer  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  prefix  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P8_Replace_Mix]^return new NamespacePointer ( this, ns ) ;^185^^^^^184^186^return new NamespacePointer ( this, prefix ) ;^[CLASS] DOMNodePointer  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  prefix  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P4_Replace_Constructor]^return return  new DOMAttributeIterator ( this, name )  ;^189^^^^^188^190^return new DOMNamespaceIterator ( this ) ;^[CLASS] DOMNodePointer  [METHOD] namespaceIterator [RETURN_TYPE] NodeIterator   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  prefix  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P8_Replace_Mix]^return  new DOMAttributeIterator ( this, name )  ;^189^^^^^188^190^return new DOMNamespaceIterator ( this ) ;^[CLASS] DOMNodePointer  [METHOD] namespaceIterator [RETURN_TYPE] NodeIterator   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespaceURI  nodeNS  nodePI  ns  prefix  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  node  
[P2_Replace_Operator]^if  ( prefix == null && prefix.equals ( "" )  )  {^193^^^^^178^208^if  ( prefix == null || prefix.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P2_Replace_Operator]^if  ( prefix != null || prefix.equals ( "" )  )  {^193^^^^^178^208^if  ( prefix == null || prefix.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P6_Replace_Expression]^if  ( prefix == null ) {^193^^^^^178^208^if  ( prefix == null || prefix.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P6_Replace_Expression]^if  (  prefix.equals ( "" )  )  {^193^^^^^178^208^if  ( prefix == null || prefix.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^if  ( prefix == null || prefix.substring ( "" )  )  {^193^^^^^178^208^if  ( prefix == null || prefix.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^if  (  prefix.substring ( "" )  )  {^193^^^^^178^208^if  ( prefix == null || prefix.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( attr != null && !attr.equals ( "" )  )  {^193^^^^^178^208^if  ( prefix == null || prefix.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( namespace == null || namespace.equals ( "" )  )  {^193^^^^^178^208^if  ( prefix == null || prefix.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( string != null && !string.equals ( "" )  )  {^193^^^^^178^208^if  ( prefix == null || prefix.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P15_Unwrap_Block]^return getDefaultNamespaceURI();^193^194^195^^^178^208^if  ( prefix == null || prefix.equals ( "" )  )  { return getDefaultNamespaceURI (  ) ; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P16_Remove_Block]^^193^194^195^^^178^208^if  ( prefix == null || prefix.equals ( "" )  )  { return getDefaultNamespaceURI (  ) ; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  (  ( attr != null )  &&  ( ! ( attr.equals ( "" )  )  )  )  {     return attr; }^193^^^^^178^208^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^return getNamespaceURI (  ) ;^194^^^^^179^209^return getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P14_Delete_Statement]^^194^^^^^179^209^return getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^if  ( nodePI == null || prefix.equals ( "" )  )  {^193^^^^^178^208^if  ( prefix == null || prefix.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^if  ( testPI == null || prefix.equals ( "" )  )  {^193^^^^^178^208^if  ( prefix == null || prefix.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P3_Replace_Literal]^if  ( prefix.equals ( "xmlm" )  )  {^197^^^^^182^212^if  ( prefix.equals ( "xml" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^if  ( ns.equals ( "xml" )  )  {^197^^^^^182^212^if  ( prefix.equals ( "xml" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^if  ( prefix.substring ( "xml" )  )  {^197^^^^^182^212^if  ( prefix.equals ( "xml" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^if  ( prefix .equals ( namespace )   )  {^197^^^^^182^212^if  ( prefix.equals ( "xml" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^if  ( testPI.equals ( "xml" )  )  {^197^^^^^182^212^if  ( prefix.equals ( "xml" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( prefix.equals ( "xmlns" )  )  {^197^^^^^182^212^if  ( prefix.equals ( "xml" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P15_Unwrap_Block]^return org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.XML_NAMESPACE_URI;^197^198^199^^^182^212^if  ( prefix.equals ( "xml" )  )  { return XML_NAMESPACE_URI; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P16_Remove_Block]^^197^198^199^^^182^212^if  ( prefix.equals ( "xml" )  )  { return XML_NAMESPACE_URI; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( ! ( object instanceof DOMNodePointer )  )  {     return false; }^197^^^^^182^212^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( prefix.equals ( "xmlns" )  )  {     return XMLNS_NAMESPACE_URI; }^197^^^^^182^212^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  (  ( namespace == null )  ||  ( namespace.equals ( "" )  )  )  {     namespace = UNKNOWN_NAMESPACE; }^197^^^^^182^212^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^return ns;^198^^^^^183^213^return XML_NAMESPACE_URI;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^return s1;^198^^^^^183^213^return XML_NAMESPACE_URI;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( ! ( object instanceof DOMNodePointer )  )  {     return false; }^198^^^^^183^213^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( prefix.equals ( "xml" )  )  {     return XML_NAMESPACE_URI; }^198^^^^^183^213^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( prefix.equals ( "xmlns" )  )  {     return XMLNS_NAMESPACE_URI; }^198^^^^^183^213^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P3_Replace_Literal]^if  ( prefix.equals ( "" )  )  {^197^^^^^182^212^if  ( prefix.equals ( "xml" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^if  ( nodePI.equals ( "xml" )  )  {^197^^^^^182^212^if  ( prefix.equals ( "xml" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^if  ( prefix .equals ( s1 )   )  {^197^^^^^182^212^if  ( prefix.equals ( "xml" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P3_Replace_Literal]^if  ( prefix.equals ( "xmlnsm" )  )  {^201^^^^^186^216^if  ( prefix.equals ( "xmlns" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^if  ( ns.equals ( "xmlns" )  )  {^201^^^^^186^216^if  ( prefix.equals ( "xmlns" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^if  ( prefix.substring ( "xmlns" )  )  {^201^^^^^186^216^if  ( prefix.equals ( "xmlns" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^if  ( s1 .equals ( namespaceURI )   )  {^201^^^^^186^216^if  ( prefix.equals ( "xmlns" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( prefix.equals ( "xml" )  )  {^201^^^^^186^216^if  ( prefix.equals ( "xmlns" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P15_Unwrap_Block]^return org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.XMLNS_NAMESPACE_URI;^201^202^203^^^186^216^if  ( prefix.equals ( "xmlns" )  )  { return XMLNS_NAMESPACE_URI; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P16_Remove_Block]^^201^202^203^^^186^216^if  ( prefix.equals ( "xmlns" )  )  { return XMLNS_NAMESPACE_URI; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( ! ( object instanceof DOMNodePointer )  )  {     return false; }^201^^^^^186^216^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( prefix.equals ( "xml" )  )  {     return XML_NAMESPACE_URI; }^201^^^^^186^216^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  (  ( namespace == null )  ||  ( namespace.equals ( "" )  )  )  {     namespace = UNKNOWN_NAMESPACE; }^201^^^^^186^216^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^return s1;^202^^^^^187^217^return XMLNS_NAMESPACE_URI;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( ! ( object instanceof DOMNodePointer )  )  {     return false; }^202^^^^^187^217^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( prefix.equals ( "xml" )  )  {     return XML_NAMESPACE_URI; }^202^^^^^187^217^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( prefix.equals ( "xmlns" )  )  {     return XMLNS_NAMESPACE_URI; }^202^^^^^187^217^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^return prefix;^202^^^^^187^217^return XMLNS_NAMESPACE_URI;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^return ns;^202^^^^^187^217^return XMLNS_NAMESPACE_URI;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^if  ( qname.substring ( "xmlns" )  )  {^201^^^^^186^216^if  ( prefix.equals ( "xmlns" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P1_Replace_Type]^char namespace = null;^205^^^^^190^220^String namespace = null;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^String ns = null;String namespace = null;^205^^^^^190^220^String namespace = null;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^String ln = null;String namespace = null;^205^^^^^190^220^String namespace = null;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P12_Insert_Condition]^if  ( namespaces == null )  { String namespace = null; }^205^^^^^190^220^String namespace = null;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P12_Insert_Condition]^if  ( namespace == null )  { String namespace = null; }^205^^^^^190^220^String namespace = null;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P2_Replace_Operator]^if  ( namespaces != null )  {^206^^^^^191^221^if  ( namespaces == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^if  ( namespaces == false )  {^206^^^^^191^221^if  ( namespaces == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( factory == null )  {^206^^^^^191^221^if  ( namespaces == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( element != null )  {^206^^^^^191^221^if  ( namespaces == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( parent != null )  {^206^^^^^191^221^if  ( namespaces == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( attr != null )  {^206^^^^^191^221^if  ( namespaces == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( current == null )  {^206^^^^^191^221^if  ( namespaces == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( s2 == null )  {^206^^^^^191^221^if  ( namespaces == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( namespace == null )  {^206^^^^^191^221^if  ( namespaces == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( prefix == null )  {^206^^^^^191^221^if  ( namespaces == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( localName != null )  {^206^^^^^191^221^if  ( namespaces == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( defaultNamespace == null )  {^206^^^^^191^221^if  ( namespaces == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( ns == null )  {^206^^^^^191^221^if  ( namespaces == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( parent == null )  {^206^^^^^191^221^if  ( namespaces == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( s1 == null )  {^206^^^^^191^221^if  ( namespaces == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( prefix != null )  {^206^^^^^191^221^if  ( namespaces == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P15_Unwrap_Block]^namespaces = new java.util.HashMap();^206^207^208^^^191^221^if  ( namespaces == null )  { namespaces = new HashMap (  ) ; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P16_Remove_Block]^^206^207^208^^^191^221^if  ( namespaces == null )  { namespaces = new HashMap (  ) ; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P1_Replace_Type]^namespace =  ( char )  namespaces.get ( prefix ) ;^210^^^^^206^211^namespace =  ( String )  namespaces.get ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^namespace =  ( String )  namespaces.get ( ns ) ;^210^^^^^206^211^namespace =  ( String )  namespaces.get ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^namespace =  ( String )  prefix.get ( namespaces ) ;^210^^^^^206^211^namespace =  ( String )  namespaces.get ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^namespace =   ( String )  namespaces.get ( null ) ;^210^^^^^206^211^namespace =  ( String )  namespaces.get ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^namespace =  ( String )  namespaces.get ( nodePI ) ;^210^^^^^206^211^namespace =  ( String )  namespaces.get ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P14_Delete_Statement]^^210^^^^^206^211^namespace =  ( String )  namespaces.get ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^namespaces  =  namespaces ;^207^^^^^192^222^namespaces = new HashMap (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^namespace = attr.getValue (  ) ;namespaces = new HashMap (  ) ;^207^^^^^192^222^namespaces = new HashMap (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^namespaces ;^207^^^^^192^222^namespaces = new HashMap (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P1_Replace_Type]^namespace =  ( char )  namespaces.get ( prefix ) ;^210^^^^^195^225^namespace =  ( String )  namespaces.get ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^namespace =  ( String )  namespaces.get ( qname ) ;^210^^^^^195^225^namespace =  ( String )  namespaces.get ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^namespace =  ( String )  prefix.get ( namespaces ) ;^210^^^^^195^225^namespace =  ( String )  namespaces.get ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^namespace =   ( String )  namespaces.get ( s2 ) ;^210^^^^^195^225^namespace =  ( String )  namespaces.get ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^namespace =  ( String )  namespaces.get ( ns ) ;^210^^^^^195^225^namespace =  ( String )  namespaces.get ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P14_Delete_Statement]^^210^^^^^195^225^namespace =  ( String )  namespaces.get ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P2_Replace_Operator]^while  ( aNode == null )  {^219^^^^^204^234^while  ( aNode != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^while  ( node != null )  {^219^^^^^204^234^while  ( aNode != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P2_Replace_Operator]^if  ( aNode.getNodeType (  )  != Node.ELEMENT_NODE )  {^220^^^^^205^235^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P6_Replace_Expression]^if  ( attr != null )  {^220^^^^^205^235^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^if  ( aNode.cloneNode (  )  == Node.ELEMENT_NODE )  {^220^^^^^205^235^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^if  ( node.cloneNode (  )  == Node.ELEMENT_NODE )  {^220^^^^^205^235^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  {^220^^^^^205^235^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( type == Node.ELEMENT_NODE )  {^220^^^^^205^235^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^220^^^^^205^235^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^220^^^^^205^235^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  == Node.DOCUMENT_NODE )  {^220^^^^^205^235^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( nodeType == Node.COMMENT_NODE )  {^220^^^^^205^235^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^220^^^^^205^235^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P15_Unwrap_Block]^org.w3c.dom.Attr attr = ((org.w3c.dom.Element) (aNode)).getAttributeNode(qname); if (attr != null) {    namespace = attr.getValue();    break;};^220^221^222^223^224^205^235^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  { Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ; if  ( attr != null )  { namespace = attr.getValue (  ) ; break; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P16_Remove_Block]^^220^221^222^223^224^205^235^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  { Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ; if  ( attr != null )  { namespace = attr.getValue (  ) ; break; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  (  ( n.getNodeType (  )  )  ==  ( ELEMENT_NODE )  )  {     Element e =  (  ( Element )   ( n )  ) ;     String attr = e.getAttribute ( "xml:lang" ) ;     if  (  ( attr != null )  &&  ( ! ( attr.equals ( "" )  )  )  )  {         return attr;     } }^220^^^^^205^235^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  (  ( n.getNodeType (  )  )  ==  ( ELEMENT_NODE )  )  {     String nm = n.getNodeName (  ) ;     if  ( nm.equals ( node.getNodeName (  )  )  )  {         count++;     } }^220^^^^^205^235^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  (  ( aNode.getNodeType (  )  )  ==  ( ELEMENT_NODE )  )  {     Attr attr =  (  ( Element )   ( aNode )  ) .getAttributeNode ( "xmlns" ) ;     if  ( attr != null )  {         defaultNamespace = attr.getValue (  ) ;         break;     } }^220^^^^^205^235^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  (  ( node.getNodeType (  )  )  ==  ( DOCUMENT_NODE )  )  {     document =  (  ( Document )   ( node )  ) ; }else {     document = node.getOwnerDocument (  ) ; }^220^^^^^205^235^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  (  ( aNode.getNodeType (  )  )  ==  ( ELEMENT_NODE )  )  {     Attr attr =  (  ( Element )   ( aNode )  ) .getAttributeNode ( qname ) ;     if  ( attr != null )  {         return attr.getValue (  ) ;     } }^220^^^^^205^235^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P2_Replace_Operator]^if  ( attr == null )  {^222^^^^^207^237^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^if  ( attr != false )  {^222^^^^^207^237^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( factory == null )  {^222^^^^^207^237^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( element != null )  {^222^^^^^207^237^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( parent != null )  {^222^^^^^207^237^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( current == null )  {^222^^^^^207^237^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( namespaces == null )  {^222^^^^^207^237^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( uri != null )  {^222^^^^^207^237^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( s2 == null )  {^222^^^^^207^237^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( namespace == null )  {^222^^^^^207^237^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( prefix == null )  {^222^^^^^207^237^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( localName != null )  {^222^^^^^207^237^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( ns == null )  {^222^^^^^207^237^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( parent == null )  {^222^^^^^207^237^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( s1 == null )  {^222^^^^^207^237^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( id != null )  {^222^^^^^207^237^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( prefix != null )  {^222^^^^^207^237^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P15_Unwrap_Block]^namespace = attr.getValue(); break;^222^223^224^225^^207^237^if  ( attr != null )  { namespace = attr.getValue (  ) ; break; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P16_Remove_Block]^^222^223^224^225^^207^237^if  ( attr != null )  { namespace = attr.getValue (  ) ; break; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( attr != null )  {     defaultNamespace = attr.getValue (  ) ;     break; }^222^^^^^207^237^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( attr != null )  {     return attr.getValue (  ) ; }^222^^^^^207^237^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^namespace = attr .getValue (  )  ;^223^^^^^208^238^namespace = attr.getValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^namespace =  null.getValue (  ) ;^223^^^^^208^238^namespace = attr.getValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^defaultNamespace = attr.getValue (  ) ;namespace = attr.getValue (  ) ;^223^^^^^208^238^namespace = attr.getValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^namespaces = new HashMap (  ) ;namespace = attr.getValue (  ) ;^223^^^^^208^238^namespace = attr.getValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P14_Delete_Statement]^^223^224^^^^208^238^namespace = attr.getValue (  ) ; break;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;namespace = attr.getValue (  ) ;^223^^^^^208^238^namespace = attr.getValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;namespace = attr.getValue (  ) ;^223^^^^^208^238^namespace = attr.getValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^return attr.getValue (  ) ;namespace = attr.getValue (  ) ;^223^^^^^208^238^namespace = attr.getValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( testPrefix ) ;^221^^^^^206^236^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^Attr attr =  (  ( Element )  aNode ) .setAttribute ( qname ) ;^221^^^^^206^236^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^Attr attr =  (  ( Element )  aNode )  .getAttribute ( ns )  ;^221^^^^^206^236^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^Attr attr =  (  ( Element )  aNode )  .getAttribute ( s2 )  ;^221^^^^^206^236^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^221^^^^^206^236^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^String text =  (  ( Comment )  node ) .getData (  ) ;Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^221^^^^^206^236^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( ns ) ;^221^^^^^206^236^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( nodePI ) ;^221^^^^^206^236^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P14_Delete_Statement]^^221^^^^^206^236^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^if  ( attr != this )  {^222^^^^^207^237^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^aNode = node.getParentNode (  ) ;^227^^^^^212^242^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^aNode = aNode.cloneNode (  ) ;^227^^^^^212^242^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^document = node.getOwnerDocument (  ) ;aNode = aNode.getParentNode (  ) ;^227^^^^^212^242^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^children = valueNode.getChildNodes (  ) ;aNode = aNode.getParentNode (  ) ;^227^^^^^212^242^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^n = n.getParentNode (  ) ;aNode = aNode.getParentNode (  ) ;^227^^^^^212^242^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^Attr attr =  (  ( Element )  aNode )  .getAttribute ( testPI )  ;^221^^^^^206^236^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^Attr attr =  (  ( Element )  aNode ) .setAttribute ( testPI ) ;^221^^^^^206^236^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^if  ( node.getNodeType (  )  == Node.ELEMENT_NODE )  {^220^^^^^205^235^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( prefix ) ;^221^^^^^206^236^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^Attr attr =  (  ( Element )  aNode )  .getAttribute ( namespaceURI )  ;^221^^^^^206^236^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^aNode = aNode .getNodeType (  )  ;^227^^^^^212^242^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P14_Delete_Statement]^^227^^^^^212^242^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^int type = node.getNodeType (  ) ;aNode = aNode.getParentNode (  ) ;^227^^^^^212^242^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^Node current = node.getFirstChild (  ) ;aNode = aNode.getParentNode (  ) ;^227^^^^^212^242^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^int t2 = node2.getNodeType (  ) ;aNode = aNode.getParentNode (  ) ;^227^^^^^212^242^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^NodeList children = node.getChildNodes (  ) ;aNode = aNode.getParentNode (  ) ;^227^^^^^212^242^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;aNode = aNode.getParentNode (  ) ;^227^^^^^212^242^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;aNode = aNode.getParentNode (  ) ;^227^^^^^212^242^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;aNode = aNode.getParentNode (  ) ;^227^^^^^212^242^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^int nodeType = node.getNodeType (  ) ;aNode = aNode.getParentNode (  ) ;^227^^^^^212^242^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^int t1 = node1.getNodeType (  ) ;aNode = aNode.getParentNode (  ) ;^227^^^^^212^242^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^Node n = node.getPreviousSibling (  ) ;aNode = aNode.getParentNode (  ) ;^227^^^^^212^242^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^NodeList list = node.getChildNodes (  ) ;aNode = aNode.getParentNode (  ) ;^227^^^^^212^242^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P2_Replace_Operator]^if  ( namespace != null )  {^213^^^^^198^228^if  ( namespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^if  ( prefix == null )  {^213^^^^^198^228^if  ( namespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P6_Replace_Expression]^if  ( "xmlns:" + prefix )  {^213^^^^^198^228^if  ( namespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P6_Replace_Expression]^if  ( aNode instanceof Document )  {^213^^^^^198^228^if  ( namespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P6_Replace_Expression]^if  ( aNode != null )  {^213^^^^^198^228^if  ( namespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P6_Replace_Expression]^if  ( aNode.getNodeType() == ELEMENT_NODE )  {^213^^^^^198^228^if  ( namespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P6_Replace_Expression]^if  ( attr != null )  {^213^^^^^198^228^if  ( namespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P6_Replace_Expression]^if  ( namespace == null || namespace.equals("") )  {^213^^^^^198^228^if  ( namespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^if  ( prefix == false )  {^213^^^^^198^228^if  ( namespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( factory == null )  {^213^^^^^198^228^if  ( namespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( element != null )  {^213^^^^^198^228^if  ( namespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( parent != null )  {^213^^^^^198^228^if  ( namespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( current == null )  {^213^^^^^198^228^if  ( namespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( namespaces == null )  {^213^^^^^198^228^if  ( namespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( s2 == null )  {^213^^^^^198^228^if  ( namespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( localName != null )  {^213^^^^^198^228^if  ( namespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( defaultNamespace == null )  {^213^^^^^198^228^if  ( namespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( ns == null )  {^213^^^^^198^228^if  ( namespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( parent == null )  {^213^^^^^198^228^if  ( namespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( s1 == null )  {^213^^^^^198^228^if  ( namespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( prefix != null )  {^213^^^^^198^228^if  ( namespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P15_Unwrap_Block]^java.lang.String qname = "xmlns:" + prefix; org.w3c.dom.Node aNode = node; if (aNode instanceof org.w3c.dom.Document) {    aNode = ((org.w3c.dom.Document) (aNode)).getDocumentElement();}; while (aNode != null) {    if ((aNode.getNodeType()) == (org.w3c.dom.Node.ELEMENT_NODE)) {        org.w3c.dom.Attr attr = ((org.w3c.dom.Element) (aNode)).getAttributeNode(qname);        if (attr != null) {            namespace = attr.getValue();            break;        }    }    aNode = aNode.getParentNode();} ; if ((namespace == null) || (namespace.equals(""))) {    namespace = org.apache.commons.jxpath.ri.model.NodePointer.UNKNOWN_NAMESPACE;};^213^214^215^216^217^198^228^if  ( namespace == null )  { String qname = "xmlns:" + prefix; Node aNode = node; if  ( aNode instanceof Document )  { aNode =  (  ( Document ) aNode ) .getDocumentElement (  ) ; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P16_Remove_Block]^^213^214^215^216^217^198^228^if  ( namespace == null )  { String qname = "xmlns:" + prefix; Node aNode = node; if  ( aNode instanceof Document )  { aNode =  (  ( Document ) aNode ) .getDocumentElement (  ) ; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^if  ( aNode .getNodeName (  )   == Node.ELEMENT_NODE )  {^220^^^^^205^235^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( s2 ) ;^221^^^^^206^236^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^Attr attr =  (  ( Element )  aNode )  .getAttribute ( prefix )  ;^221^^^^^206^236^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P14_Delete_Statement]^^223^^^^^208^238^namespace = attr.getValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^if  ( attr != true )  {^222^^^^^207^237^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P2_Replace_Operator]^if  ( aNode  !=  Document )  {^216^^^^^201^231^if  ( aNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^if  ( node instanceof Document )  {^216^^^^^201^231^if  ( aNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( ! ( node instanceof Element )  )  {^216^^^^^201^231^if  ( aNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( parent instanceof DOMNodePointer )  {^216^^^^^201^231^if  ( aNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( value instanceof Node )  {^216^^^^^201^231^if  ( aNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P15_Unwrap_Block]^aNode = ((org.w3c.dom.Document) (aNode)).getDocumentElement();^216^217^218^^^201^231^if  ( aNode instanceof Document )  { aNode =  (  ( Document ) aNode ) .getDocumentElement (  ) ; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P16_Remove_Block]^^216^217^218^^^201^231^if  ( aNode instanceof Document )  { aNode =  (  ( Document ) aNode ) .getDocumentElement (  ) ; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( node instanceof Document )  {     node =  (  ( Document )   ( node )  ) .getDocumentElement (  ) ; }^216^^^^^201^231^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  (  ( node.getNodeType (  )  )  ==  ( DOCUMENT_NODE )  )  {     document =  (  ( Document )   ( node )  ) ; }else {     document = node.getOwnerDocument (  ) ; }^216^^^^^201^231^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^aNode =  (  ( Document ) aNode ) .getElementById (  ) ;^217^^^^^202^232^aNode =  (  ( Document ) aNode ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^aNode =   (  ( Document ) aNode ) .getDocumentElement (  ) ;^217^^^^^202^232^aNode =  (  ( Document ) aNode ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^document = node.getOwnerDocument (  ) ;aNode =  (  ( Document ) aNode ) .getDocumentElement (  ) ;^217^^^^^202^232^aNode =  (  ( Document ) aNode ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^node =  (  ( Document )  node ) .getDocumentElement (  ) ;aNode =  (  ( Document ) aNode ) .getDocumentElement (  ) ;^217^^^^^202^232^aNode =  (  ( Document ) aNode ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( aNode instanceof Document )  {     aNode =  (  ( Document )   ( aNode )  ) .getDocumentElement (  ) ; }^217^^^^^202^232^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( node instanceof Document )  {     node =  (  ( Document )   ( node )  ) .getDocumentElement (  ) ; }^217^^^^^202^232^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P14_Delete_Statement]^^217^^^^^202^232^aNode =  (  ( Document ) aNode ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;aNode =  (  ( Document ) aNode ) .getDocumentElement (  ) ;^217^^^^^202^232^aNode =  (  ( Document ) aNode ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^String text =  (  ( Comment )  node ) .getData (  ) ;aNode =  (  ( Document ) aNode ) .getDocumentElement (  ) ;^217^^^^^202^232^aNode =  (  ( Document ) aNode ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;aNode =  (  ( Document ) aNode ) .getDocumentElement (  ) ;^217^^^^^202^232^aNode =  (  ( Document ) aNode ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P2_Replace_Operator]^if  ( aNode.getNodeType (  )  <= Node.ELEMENT_NODE )  {^220^^^^^205^235^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^Attr attr =  (  ( Element )  aNode )  .getAttribute ( s1 )  ;^221^^^^^206^236^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P2_Replace_Operator]^if  ( namespace == null && namespace.equals ( "" )  )  {^229^^^^^214^244^if  ( namespace == null || namespace.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P2_Replace_Operator]^if  ( namespace != null || namespace.equals ( "" )  )  {^229^^^^^214^244^if  ( namespace == null || namespace.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^if  ( testPI == null || namespace.equals ( "" )  )  {^229^^^^^214^244^if  ( namespace == null || namespace.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P6_Replace_Expression]^if  ( namespace == null ) {^229^^^^^214^244^if  ( namespace == null || namespace.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P6_Replace_Expression]^if  (  namespace.equals ( "" )  )  {^229^^^^^214^244^if  ( namespace == null || namespace.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^if  ( namespace == null || namespace.substring ( "" )  )  {^229^^^^^214^244^if  ( namespace == null || namespace.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^if  ( namespace == true || namespace.equals ( "" )  )  {^229^^^^^214^244^if  ( namespace == null || namespace.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( attr != null && !attr.equals ( "" )  )  {^229^^^^^214^244^if  ( namespace == null || namespace.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( prefix == null || prefix.equals ( "" )  )  {^229^^^^^214^244^if  ( namespace == null || namespace.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P15_Unwrap_Block]^namespace = org.apache.commons.jxpath.ri.model.NodePointer.UNKNOWN_NAMESPACE;^229^230^231^^^214^244^if  ( namespace == null || namespace.equals ( "" )  )  { namespace = NodePointer.UNKNOWN_NAMESPACE; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P16_Remove_Block]^^229^230^231^^^214^244^if  ( namespace == null || namespace.equals ( "" )  )  { namespace = NodePointer.UNKNOWN_NAMESPACE; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( prefix.equals ( "xml" )  )  {     return XML_NAMESPACE_URI; }^229^^^^^214^244^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( prefix.equals ( "xmlns" )  )  {     return XMLNS_NAMESPACE_URI; }^229^^^^^214^244^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^namespace  =  namespace ;^230^^^^^215^245^namespace = NodePointer.UNKNOWN_NAMESPACE;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( ! ( object instanceof DOMNodePointer )  )  {     return false; }^230^^^^^215^245^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( prefix.equals ( "xml" )  )  {     return XML_NAMESPACE_URI; }^230^^^^^215^245^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( prefix.equals ( "xmlns" )  )  {     return XMLNS_NAMESPACE_URI; }^230^^^^^215^245^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  (  ( namespace == null )  ||  ( namespace.equals ( "" )  )  )  {     namespace = UNKNOWN_NAMESPACE; }^230^^^^^215^245^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^namespace  = null ;^230^^^^^215^245^namespace = NodePointer.UNKNOWN_NAMESPACE;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P1_Replace_Type]^char qname = "xmlns:" + prefix;^214^^^^^199^229^String qname = "xmlns:" + prefix;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P3_Replace_Literal]^String qname = "xmlns" + prefix;^214^^^^^199^229^String qname = "xmlns:" + prefix;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^String qname = "xmlns:" + s1;^214^^^^^199^229^String qname = "xmlns:" + prefix;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^Node n = node;Node aNode = node;^215^^^^^200^230^Node aNode = node;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^Node valueNode =  ( Node )  value;Node aNode = node;^215^^^^^200^230^Node aNode = node;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^if  ( ns == null || namespace.equals ( "" )  )  {^229^^^^^214^244^if  ( namespace == null || namespace.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^if  ( testPrefix == null || namespace.equals ( "" )  )  {^229^^^^^214^244^if  ( namespace == null || namespace.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P2_Replace_Operator]^if  ( aNode  &  Document )  {^216^^^^^201^231^if  ( aNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^aNode =  (  ( Document ) aNode )  .getElementById ( ns )  ;^217^^^^^202^232^aNode =  (  ( Document ) aNode ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( testPI ) ;^221^^^^^206^236^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^Attr attr =  (  ( Element )  aNode )  .getAttribute ( testPrefix )  ;^221^^^^^206^236^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^Attr attr =  (  ( Element )  aNode ) .setAttribute ( prefix ) ;^221^^^^^206^236^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^if  ( s1 == null || namespace.equals ( "" )  )  {^229^^^^^214^244^if  ( namespace == null || namespace.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^if  ( namespace == null || namespace .equals ( nodePI )   )  {^229^^^^^214^244^if  ( namespace == null || namespace.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P3_Replace_Literal]^String qname = "ns" + prefix;^214^^^^^199^229^String qname = "xmlns:" + prefix;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^String qname = "xmlns:" + nodePI;^214^^^^^199^229^String qname = "xmlns:" + prefix;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( s1 ) ;^221^^^^^206^236^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^Attr attr =  (  ( Element )  aNode )  .getAttribute ( XMLNS_NAMESPACE_URI )  ;^221^^^^^206^236^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^Attr attr =  (  ( Element )  aNode ) .setAttribute ( nodePI ) ;^221^^^^^206^236^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^aNode =  (  ( Document ) aNode )  .getElementById ( testPI )  ;^217^^^^^202^232^aNode =  (  ( Document ) aNode ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^if  ( prefix == null || namespace.equals ( "" )  )  {^229^^^^^214^244^if  ( namespace == null || namespace.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^if  ( namespace == null || namespace .equals ( ns )   )  {^229^^^^^214^244^if  ( namespace == null || namespace.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^if  ( ns == null || namespace.substring ( "" )  )  {^229^^^^^214^244^if  ( namespace == null || namespace.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^namespaces.put ( s2, namespace ) ;^234^^^^^219^249^namespaces.put ( prefix, namespace ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^namespaces.put ( prefix, testPrefix ) ;^234^^^^^219^249^namespaces.put ( prefix, namespace ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^namespaces.put (  namespace ) ;^234^^^^^219^249^namespaces.put ( prefix, namespace ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^namespaces.put ( prefix ) ;^234^^^^^219^249^namespaces.put ( prefix, namespace ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^namespaces.put ( namespace, prefix ) ;^234^^^^^219^249^namespaces.put ( prefix, namespace ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^namespaces.put ( s1, namespace ) ;^234^^^^^219^249^namespaces.put ( prefix, namespace ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P14_Delete_Statement]^^234^^^^^219^249^namespaces.put ( prefix, namespace ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P2_Replace_Operator]^if  ( namespace <= UNKNOWN_NAMESPACE )  {^235^^^^^220^250^if  ( namespace == UNKNOWN_NAMESPACE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^if  ( testPI == UNKNOWN_NAMESPACE )  {^235^^^^^220^250^if  ( namespace == UNKNOWN_NAMESPACE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^if  ( UNKNOWN_NAMESPACE == namespace )  {^235^^^^^220^250^if  ( namespace == UNKNOWN_NAMESPACE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^if  ( namespace == 3 )  {^235^^^^^220^250^if  ( namespace == UNKNOWN_NAMESPACE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P15_Unwrap_Block]^return null;^235^236^237^^^220^250^if  ( namespace == UNKNOWN_NAMESPACE )  { return null; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P16_Remove_Block]^^235^236^237^^^220^250^if  ( namespace == UNKNOWN_NAMESPACE )  { return null; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( index ==  ( -1 )  )  {     return null; }^235^^^^^220^250^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( node1 == node2 )  {     return 0; }^235^^^^^220^250^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( index ==  ( -1 )  )  {     return name; }^235^^^^^220^250^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( object ==  ( this )  )  {     return true; }^235^^^^^220^250^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( n == node2 )  {     return 1; }^235^^^^^220^250^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^return false;^236^^^^^221^251^return null;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^return prefix;^240^^^^^225^255^return namespace;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^return testPrefix;^240^^^^^225^255^return namespace;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   String prefix [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P2_Replace_Operator]^while  ( aNode == null )  {^249^^^^^243^265^while  ( aNode != null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^while  ( node != null )  {^249^^^^^243^265^while  ( aNode != null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P2_Replace_Operator]^if  ( aNode.getNodeType (  )  > Node.ELEMENT_NODE )  {^250^^^^^243^265^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^if  ( node.getNodeType (  )  == Node.ELEMENT_NODE )  {^250^^^^^243^265^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P6_Replace_Expression]^if  ( attr != null )  {^250^^^^^243^265^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^if  ( aNode.cloneNode (  )  == Node.ELEMENT_NODE )  {^250^^^^^243^265^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^if  ( node.cloneNode (  )  == Node.ELEMENT_NODE )  {^250^^^^^243^265^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  {^250^^^^^243^265^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( type == Node.ELEMENT_NODE )  {^250^^^^^243^265^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^250^^^^^243^265^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^250^^^^^243^265^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  == Node.DOCUMENT_NODE )  {^250^^^^^243^265^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( nodeType == Node.COMMENT_NODE )  {^250^^^^^243^265^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^250^^^^^243^265^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P15_Unwrap_Block]^org.w3c.dom.Attr attr = ((org.w3c.dom.Element) (aNode)).getAttributeNode("xmlns"); if (attr != null) {    defaultNamespace = attr.getValue();    break;};^250^251^252^253^254^243^265^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  { Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ; if  ( attr != null )  { defaultNamespace = attr.getValue (  ) ; break; }^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P16_Remove_Block]^^250^251^252^253^254^243^265^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  { Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ; if  ( attr != null )  { defaultNamespace = attr.getValue (  ) ; break; }^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  (  ( n.getNodeType (  )  )  ==  ( ELEMENT_NODE )  )  {     Element e =  (  ( Element )   ( n )  ) ;     String attr = e.getAttribute ( "xml:lang" ) ;     if  (  ( attr != null )  &&  ( ! ( attr.equals ( "" )  )  )  )  {         return attr;     } }^250^^^^^243^265^[Delete]^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  (  ( aNode.getNodeType (  )  )  ==  ( ELEMENT_NODE )  )  {     Attr attr =  (  ( Element )   ( aNode )  ) .getAttributeNode ( qname ) ;     if  ( attr != null )  {         namespace = attr.getValue (  ) ;         break;     } }^250^^^^^243^265^[Delete]^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  (  ( aNode.getNodeType (  )  )  ==  ( ELEMENT_NODE )  )  {     Attr attr =  (  ( Element )   ( aNode )  ) .getAttributeNode ( qname ) ;     if  ( attr != null )  {         return attr.getValue (  ) ;     } }^250^^^^^243^265^[Delete]^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P2_Replace_Operator]^if  ( attr == null )  {^252^^^^^243^265^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^if  ( attr != this )  {^252^^^^^243^265^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( factory == null )  {^252^^^^^243^265^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( element != null )  {^252^^^^^243^265^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( parent != null )  {^252^^^^^243^265^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( current == null )  {^252^^^^^243^265^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( namespaces == null )  {^252^^^^^243^265^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( uri != null )  {^252^^^^^243^265^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( s2 == null )  {^252^^^^^243^265^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( namespace == null )  {^252^^^^^243^265^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( prefix == null )  {^252^^^^^243^265^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( localName != null )  {^252^^^^^243^265^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( ns == null )  {^252^^^^^243^265^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( parent == null )  {^252^^^^^243^265^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( s1 == null )  {^252^^^^^243^265^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( id != null )  {^252^^^^^243^265^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( prefix != null )  {^252^^^^^243^265^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P15_Unwrap_Block]^defaultNamespace = attr.getValue(); break;^252^253^254^255^^243^265^if  ( attr != null )  { defaultNamespace = attr.getValue (  ) ; break; }^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P16_Remove_Block]^^252^253^254^255^^243^265^if  ( attr != null )  { defaultNamespace = attr.getValue (  ) ; break; }^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( attr != null )  {     namespace = attr.getValue (  ) ;     break; }^252^^^^^243^265^[Delete]^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( attr != null )  {     return attr.getValue (  ) ; }^252^^^^^243^265^[Delete]^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^defaultNamespace =  null.getValue (  ) ;^253^^^^^243^265^defaultNamespace = attr.getValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^namespace = attr.getValue (  ) ;defaultNamespace = attr.getValue (  ) ;^253^^^^^243^265^defaultNamespace = attr.getValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^defaultNamespace = "";defaultNamespace = attr.getValue (  ) ;^253^^^^^243^265^defaultNamespace = attr.getValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P14_Delete_Statement]^^253^254^^^^243^265^defaultNamespace = attr.getValue (  ) ; break;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^return attr.getValue (  ) ;defaultNamespace = attr.getValue (  ) ;^253^^^^^243^265^defaultNamespace = attr.getValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P3_Replace_Literal]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlnsn" ) ;^251^^^^^243^265^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^Attr attr =  (  ( Element )  aNode ) .setAttribute ( "xmlns" ) ;^251^^^^^243^265^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^String text =  (  ( Comment )  node ) .getData (  ) ;Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;^251^^^^^243^265^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;^251^^^^^243^265^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P3_Replace_Literal]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xm" ) ;^251^^^^^243^265^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^Attr attr =  (  ( Element )  aNode )  .getAttribute ( nodePI )  ;^251^^^^^243^265^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P14_Delete_Statement]^^251^^^^^243^265^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^defaultNamespace = attr .getValue (  )  ;^253^^^^^243^265^defaultNamespace = attr.getValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P14_Delete_Statement]^^253^^^^^243^265^defaultNamespace = attr.getValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^if  ( attr != true )  {^252^^^^^243^265^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^aNode = node.getParentNode (  ) ;^257^^^^^243^265^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^aNode = aNode.cloneNode (  ) ;^257^^^^^243^265^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^aNode = aNode .getNodeType (  )  ;^257^^^^^243^265^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^document = node.getOwnerDocument (  ) ;aNode = aNode.getParentNode (  ) ;^257^^^^^243^265^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^children = valueNode.getChildNodes (  ) ;aNode = aNode.getParentNode (  ) ;^257^^^^^243^265^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^n = n.getParentNode (  ) ;aNode = aNode.getParentNode (  ) ;^257^^^^^243^265^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P3_Replace_Literal]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "m" ) ;^251^^^^^243^265^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P3_Replace_Literal]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmln" ) ;^251^^^^^243^265^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^aNode = node .getNodeType (  )  ;^257^^^^^243^265^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P14_Delete_Statement]^^257^^^^^243^265^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^int type = node.getNodeType (  ) ;aNode = aNode.getParentNode (  ) ;^257^^^^^243^265^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^Node current = node.getFirstChild (  ) ;aNode = aNode.getParentNode (  ) ;^257^^^^^243^265^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^int t2 = node2.getNodeType (  ) ;aNode = aNode.getParentNode (  ) ;^257^^^^^243^265^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^NodeList children = node.getChildNodes (  ) ;aNode = aNode.getParentNode (  ) ;^257^^^^^243^265^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;aNode = aNode.getParentNode (  ) ;^257^^^^^243^265^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;aNode = aNode.getParentNode (  ) ;^257^^^^^243^265^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;aNode = aNode.getParentNode (  ) ;^257^^^^^243^265^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^int nodeType = node.getNodeType (  ) ;aNode = aNode.getParentNode (  ) ;^257^^^^^243^265^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^int t1 = node1.getNodeType (  ) ;aNode = aNode.getParentNode (  ) ;^257^^^^^243^265^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^Node n = node.getPreviousSibling (  ) ;aNode = aNode.getParentNode (  ) ;^257^^^^^243^265^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^NodeList list = node.getChildNodes (  ) ;aNode = aNode.getParentNode (  ) ;^257^^^^^243^265^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P2_Replace_Operator]^if  ( defaultNamespace != null )  {^244^^^^^243^265^if  ( defaultNamespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^if  ( s2 == null )  {^244^^^^^243^265^if  ( defaultNamespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P6_Replace_Expression]^if  ( aNode instanceof Document )  {^244^^^^^243^265^if  ( defaultNamespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P6_Replace_Expression]^if  ( aNode != null )  {^244^^^^^243^265^if  ( defaultNamespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P6_Replace_Expression]^if  ( aNode.getNodeType() == ELEMENT_NODE )  {^244^^^^^243^265^if  ( defaultNamespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P6_Replace_Expression]^if  ( attr != null )  {^244^^^^^243^265^if  ( defaultNamespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^if  ( ns == this )  {^244^^^^^243^265^if  ( defaultNamespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( localName != null )  {^244^^^^^243^265^if  ( defaultNamespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( namespaces == null )  {^244^^^^^243^265^if  ( defaultNamespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( namespace == null )  {^244^^^^^243^265^if  ( defaultNamespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P15_Unwrap_Block]^org.w3c.dom.Node aNode = node; if (aNode instanceof org.w3c.dom.Document) {    aNode = ((org.w3c.dom.Document) (aNode)).getDocumentElement();}; while (aNode != null) {    if ((aNode.getNodeType()) == (org.w3c.dom.Node.ELEMENT_NODE)) {        org.w3c.dom.Attr attr = ((org.w3c.dom.Element) (aNode)).getAttributeNode("xmlns");        if (attr != null) {            defaultNamespace = attr.getValue();            break;        }    }    aNode = aNode.getParentNode();} ;^244^245^246^247^248^243^265^if  ( defaultNamespace == null )  { Node aNode = node; if  ( aNode instanceof Document )  { aNode =  (  ( Document )  aNode ) .getDocumentElement (  ) ; }^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P16_Remove_Block]^^244^245^246^247^248^243^265^if  ( defaultNamespace == null )  { Node aNode = node; if  ( aNode instanceof Document )  { aNode =  (  ( Document )  aNode ) .getDocumentElement (  ) ; }^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P2_Replace_Operator]^if  ( aNode.getNodeType (  )  != Node.ELEMENT_NODE )  {^250^^^^^243^265^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P3_Replace_Literal]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlnsx" ) ;^251^^^^^243^265^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P3_Replace_Literal]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "" ) ;^251^^^^^243^265^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^Attr attr =  (  ( Element )  aNode )  .getAttribute ( s2 )  ;^251^^^^^243^265^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P3_Replace_Literal]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlnsmln" ) ;^251^^^^^243^265^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^Attr attr =  (  ( Element )  aNode )  .getAttribute ( prefix )  ;^251^^^^^243^265^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^if  ( aNode .getNodeName (  )   == Node.ELEMENT_NODE )  {^250^^^^^243^265^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P3_Replace_Literal]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "mmlns" ) ;^251^^^^^243^265^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P2_Replace_Operator]^if  ( aNode  ==  Document )  {^246^^^^^243^265^if  ( aNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^if  ( node instanceof Document )  {^246^^^^^243^265^if  ( aNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( ! ( node instanceof Element )  )  {^246^^^^^243^265^if  ( aNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( parent instanceof DOMNodePointer )  {^246^^^^^243^265^if  ( aNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( value instanceof Node )  {^246^^^^^243^265^if  ( aNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P15_Unwrap_Block]^aNode = ((org.w3c.dom.Document) (aNode)).getDocumentElement();^246^247^248^^^243^265^if  ( aNode instanceof Document )  { aNode =  (  ( Document )  aNode ) .getDocumentElement (  ) ; }^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P16_Remove_Block]^^246^247^248^^^243^265^if  ( aNode instanceof Document )  { aNode =  (  ( Document )  aNode ) .getDocumentElement (  ) ; }^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( node instanceof Document )  {     node =  (  ( Document )   ( node )  ) .getDocumentElement (  ) ; }^246^^^^^243^265^[Delete]^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  (  ( node.getNodeType (  )  )  ==  ( DOCUMENT_NODE )  )  {     document =  (  ( Document )   ( node )  ) ; }else {     document = node.getOwnerDocument (  ) ; }^246^^^^^243^265^[Delete]^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^aNode =  (  ( Document )  aNode ) .getElementById (  ) ;^247^^^^^243^265^aNode =  (  ( Document )  aNode ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^aNode =   (  ( Document )  aNode ) .getDocumentElement (  ) ;^247^^^^^243^265^aNode =  (  ( Document )  aNode ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^document = node.getOwnerDocument (  ) ;aNode =  (  ( Document )  aNode ) .getDocumentElement (  ) ;^247^^^^^243^265^aNode =  (  ( Document )  aNode ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^node =  (  ( Document )  node ) .getDocumentElement (  ) ;aNode =  (  ( Document )  aNode ) .getDocumentElement (  ) ;^247^^^^^243^265^aNode =  (  ( Document )  aNode ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( aNode instanceof Document )  {     aNode =  (  ( Document )   ( aNode )  ) .getDocumentElement (  ) ; }^247^^^^^243^265^[Delete]^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( node instanceof Document )  {     node =  (  ( Document )   ( node )  ) .getDocumentElement (  ) ; }^247^^^^^243^265^[Delete]^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P14_Delete_Statement]^^247^^^^^243^265^aNode =  (  ( Document )  aNode ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;aNode =  (  ( Document )  aNode ) .getDocumentElement (  ) ;^247^^^^^243^265^aNode =  (  ( Document )  aNode ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^String text =  (  ( Comment )  node ) .getData (  ) ;aNode =  (  ( Document )  aNode ) .getDocumentElement (  ) ;^247^^^^^243^265^aNode =  (  ( Document )  aNode ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;aNode =  (  ( Document )  aNode ) .getDocumentElement (  ) ;^247^^^^^243^265^aNode =  (  ( Document )  aNode ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^if  ( attr != false )  {^252^^^^^243^265^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P3_Replace_Literal]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "lnmlns" ) ;^251^^^^^243^265^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^aNode =  null.getParentNode (  ) ;^257^^^^^243^265^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^Node n = node;Node aNode = node;^245^^^^^243^265^Node aNode = node;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^Node valueNode =  ( Node )  value;Node aNode = node;^245^^^^^243^265^Node aNode = node;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^aNode =  (  ( Document )  aNode )  .getElementById ( testPrefix )  ;^247^^^^^243^265^aNode =  (  ( Document )  aNode ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P3_Replace_Literal]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "mlns" ) ;^251^^^^^243^265^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^Attr attr =  (  ( Element )  aNode )  .getAttribute ( namespace )  ;^251^^^^^243^265^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P2_Replace_Operator]^if  ( aNode  ||  Document )  {^246^^^^^243^265^if  ( aNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^if  ( aNode.getNodeType (  )  == Node.1 )  {^250^^^^^243^265^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P3_Replace_Literal]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "nmlns" ) ;^251^^^^^243^265^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P3_Replace_Literal]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "mlmlns" ) ;^251^^^^^243^265^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^aNode =  (  ( Document )  aNode )  .getElementById ( defaultNamespace )  ;^247^^^^^243^265^aNode =  (  ( Document )  aNode ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^aNode =  (  ( Document )  aNode )  .getElementById ( s1 )  ;^247^^^^^243^265^aNode =  (  ( Document )  aNode ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^Attr attr =  (  ( Element )  aNode )  .getAttribute ( ns )  ;^251^^^^^243^265^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^aNode = node.cloneNode (  ) ;^257^^^^^243^265^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P2_Replace_Operator]^if  ( defaultNamespace != null )  {^260^^^^^243^265^if  ( defaultNamespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^if  ( testPrefix == true )  {^260^^^^^243^265^if  ( defaultNamespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( localName != null )  {^260^^^^^243^265^if  ( defaultNamespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( namespaces == null )  {^260^^^^^243^265^if  ( defaultNamespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P9_Replace_Statement]^if  ( namespace == null )  {^260^^^^^243^265^if  ( defaultNamespace == null )  {^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P15_Unwrap_Block]^defaultNamespace = "";^260^261^262^^^243^265^if  ( defaultNamespace == null )  { defaultNamespace = ""; }^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P16_Remove_Block]^^260^261^262^^^243^265^if  ( defaultNamespace == null )  { defaultNamespace = ""; }^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P13_Insert_Block]^if  ( localName != null )  {     return localName; }^260^^^^^243^265^[Delete]^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^defaultNamespace  =  defaultNamespace ;^261^^^^^243^265^defaultNamespace = "";^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P11_Insert_Donor_Statement]^defaultNamespace = attr.getValue (  ) ;defaultNamespace = "";^261^^^^^243^265^defaultNamespace = "";^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P12_Insert_Condition]^if  ( defaultNamespace == null )  { defaultNamespace = ""; }^261^^^^^243^265^defaultNamespace = "";^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^defaultNamespace ;^261^^^^^243^265^defaultNamespace = "";^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^return defaultNamespace.startsWith ( "" )  ? null : defaultNamespace;^264^^^^^243^265^return defaultNamespace.equals ( "" )  ? null : defaultNamespace;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^return defaultNamespace .getLocale (  )   ? this : defaultNamespace;^264^^^^^243^265^return defaultNamespace.equals ( "" )  ? null : defaultNamespace;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P7_Replace_Invocation]^return defaultNamespace .getLocale (  )   ? null : defaultNamespace;^264^^^^^243^265^return defaultNamespace.equals ( "" )  ? null : defaultNamespace;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P8_Replace_Mix]^return prefix.equals ( "" )  ? null : defaultNamespace;^264^^^^^243^265^return defaultNamespace.equals ( "" )  ? null : defaultNamespace;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P14_Delete_Statement]^^264^^^^^243^265^return defaultNamespace.equals ( "" )  ? null : defaultNamespace;^[CLASS] DOMNodePointer  [METHOD] getDefaultNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Attr  attr  Node  aNode  node  
[P5_Replace_Variable]^return aNode;^268^^^^^267^269^return node;^[CLASS] DOMNodePointer  [METHOD] getBaseValue [RETURN_TYPE] Object   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P5_Replace_Variable]^return aNode;^272^^^^^271^273^return node;^[CLASS] DOMNodePointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P3_Replace_Literal]^return false;^276^^^^^275^277^return true;^[CLASS] DOMNodePointer  [METHOD] isActual [RETURN_TYPE] boolean   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P3_Replace_Literal]^return true;^280^^^^^279^281^return false;^[CLASS] DOMNodePointer  [METHOD] isCollection [RETURN_TYPE] boolean   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P3_Replace_Literal]^return -4;^284^^^^^283^285^return 1;^[CLASS] DOMNodePointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P8_Replace_Mix]^return 3;^284^^^^^283^285^return 1;^[CLASS] DOMNodePointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P7_Replace_Invocation]^return !node.getChildNodes (  ) ;^288^^^^^287^289^return !node.hasChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P14_Delete_Statement]^^288^^^^^287^289^return !node.hasChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  defaultNamespace  id  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P1_Replace_Type]^char current = getLanguage (  ) ;^297^^^^^296^302^String current = getLanguage (  ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P7_Replace_Invocation]^String current = getNamespaceURI (  ) ;^297^^^^^296^302^String current = getLanguage (  ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P11_Insert_Donor_Statement]^String nsURI = getNamespaceURI (  ) ;String current = getLanguage (  ) ;^297^^^^^296^302^String current = getLanguage (  ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P11_Insert_Donor_Statement]^String testPrefix = testName.getPrefix (  ) ;String current = getLanguage (  ) ;^297^^^^^296^302^String current = getLanguage (  ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;String current = getLanguage (  ) ;^297^^^^^296^302^String current = getLanguage (  ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P11_Insert_Donor_Statement]^String nm = n.getNodeName (  ) ;String current = getLanguage (  ) ;^297^^^^^296^302^String current = getLanguage (  ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;String current = getLanguage (  ) ;^297^^^^^296^302^String current = getLanguage (  ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P11_Insert_Donor_Statement]^String uri = element.getNamespaceURI (  ) ;String current = getLanguage (  ) ;^297^^^^^296^302^String current = getLanguage (  ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P11_Insert_Donor_Statement]^StringBuffer buffer = new StringBuffer (  ) ;String current = getLanguage (  ) ;^297^^^^^296^302^String current = getLanguage (  ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P11_Insert_Donor_Statement]^StringBuffer buf = new StringBuffer ( 16 ) ;String current = getLanguage (  ) ;^297^^^^^296^302^String current = getLanguage (  ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P11_Insert_Donor_Statement]^String localName = node.getLocalName (  ) ;String current = getLanguage (  ) ;^297^^^^^296^302^String current = getLanguage (  ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P14_Delete_Statement]^^297^^^^^296^302^String current = getLanguage (  ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P2_Replace_Operator]^if  ( current != null )  {^298^^^^^296^302^if  ( current == null )  {^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P8_Replace_Mix]^if  ( current == this )  {^298^^^^^296^302^if  ( current == null )  {^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P9_Replace_Statement]^if  ( factory == null )  {^298^^^^^296^302^if  ( current == null )  {^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P9_Replace_Statement]^if  ( element != null )  {^298^^^^^296^302^if  ( current == null )  {^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P9_Replace_Statement]^if  ( parent != null )  {^298^^^^^296^302^if  ( current == null )  {^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P9_Replace_Statement]^if  ( attr != null )  {^298^^^^^296^302^if  ( current == null )  {^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P15_Unwrap_Block]^return super.isLanguage(lang);^298^299^300^^^296^302^if  ( current == null )  { return super.isLanguage ( lang ) ; }^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P16_Remove_Block]^^298^299^300^^^296^302^if  ( current == null )  { return super.isLanguage ( lang ) ; }^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P13_Insert_Block]^if  ( uri != null )  {     return uri; }^298^^^^^296^302^[Delete]^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P13_Insert_Block]^if  ( prefix != null )  {     return prefix; }^298^^^^^296^302^[Delete]^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P13_Insert_Block]^if  ( index ==  ( -1 )  )  {     return null; }^298^^^^^296^302^[Delete]^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P13_Insert_Block]^if  ( localName != null )  {     return localName; }^298^^^^^296^302^[Delete]^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P13_Insert_Block]^if  ( current == node2 )  {     return 1; }^298^^^^^296^302^[Delete]^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P13_Insert_Block]^if  ( attr != null )  {     return attr.getValue (  ) ; }^298^^^^^296^302^[Delete]^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P13_Insert_Block]^if  ( index ==  ( -1 )  )  {     return name; }^298^^^^^296^302^[Delete]^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P13_Insert_Block]^if  (  ( parent )  != null )  {     buffer.append ( parent.asPath (  )  ) ; }^298^^^^^296^302^[Delete]^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P7_Replace_Invocation]^return super .equals ( ns )  ;^299^^^^^296^302^return super.isLanguage ( lang ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P14_Delete_Statement]^^299^^^^^296^302^return super.isLanguage ( lang ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P5_Replace_Variable]^return ns.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^301^^^^^296^302^return current.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P5_Replace_Variable]^return current.toUpperCase (  ) .startsWith ( prefix.toUpperCase (  )  ) ;^301^^^^^296^302^return current.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P5_Replace_Variable]^return lang.toUpperCase (  ) .startsWith ( current.toUpperCase (  )  ) ;^301^^^^^296^302^return current.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P7_Replace_Invocation]^return current.toUpperCase (  ) .substring ( lang.toUpperCase (  )  ) ;^301^^^^^296^302^return current.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P7_Replace_Invocation]^return current.substring (  ) .startsWith ( lang.toUpperCase (  )  ) ;^301^^^^^296^302^return current.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P5_Replace_Variable]^return qname.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^301^^^^^296^302^return current.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P5_Replace_Variable]^return current.toUpperCase (  ) .startsWith ( testPrefix.toUpperCase (  )  ) ;^301^^^^^296^302^return current.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P8_Replace_Mix]^return current .equals ( namespaceURI )  .startsWith ( testPrefix^301^^^^^296^302^return current.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P14_Delete_Statement]^^301^^^^^296^302^return current.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P8_Replace_Mix]^return ns.substring (  ) .startsWith ( lang.toUpperCase (  )  ) ;^301^^^^^296^302^return current.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P5_Replace_Variable]^return current.toUpperCase (  ) .startsWith ( s2.toUpperCase (  )  ) ;^301^^^^^296^302^return current.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P8_Replace_Mix]^return current .equals ( defaultNamespace )  .startsWith ( qname^301^^^^^296^302^return current.toUpperCase (  ) .startsWith ( lang.toUpperCase (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] isLanguage [RETURN_TYPE] boolean   String lang [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  node  
[P5_Replace_Variable]^Node n = aNode;^305^^^^^304^317^Node n = node;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P11_Insert_Donor_Statement]^Node aNode = node;Node n = node;^305^^^^^304^317^Node n = node;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P11_Insert_Donor_Statement]^NodeTest nodeTest;Node n = node;^305^^^^^304^317^Node n = node;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P2_Replace_Operator]^while  ( n == null )  {^306^^^^^304^317^while  ( n != null )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P5_Replace_Variable]^while  ( node != null )  {^306^^^^^304^317^while  ( n != null )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P2_Replace_Operator]^if  ( n.getNodeType (  )  > Node.ELEMENT_NODE )  {^307^^^^^304^317^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P5_Replace_Variable]^if  ( node.getNodeType (  )  == Node.ELEMENT_NODE )  {^307^^^^^304^317^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P6_Replace_Expression]^if  ( attr != null && !(attr.equals("")) )  {^307^^^^^304^317^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P6_Replace_Expression]^if  ( attr != null )  {^307^^^^^304^317^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P7_Replace_Invocation]^if  ( n.cloneNode (  )  == Node.ELEMENT_NODE )  {^307^^^^^304^317^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P7_Replace_Invocation]^if  ( n .getNodeName (  )   == Node.ELEMENT_NODE )  {^307^^^^^304^317^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  {^307^^^^^304^317^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P9_Replace_Statement]^if  ( type == Node.ELEMENT_NODE )  {^307^^^^^304^317^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^307^^^^^304^317^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P9_Replace_Statement]^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^307^^^^^304^317^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P9_Replace_Statement]^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^307^^^^^304^317^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  == Node.DOCUMENT_NODE )  {^307^^^^^304^317^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P9_Replace_Statement]^if  ( nodeType == Node.COMMENT_NODE )  {^307^^^^^304^317^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P15_Unwrap_Block]^org.w3c.dom.Element e = ((org.w3c.dom.Element) (n)); java.lang.String attr = e.getAttribute("xml:lang"); if ((attr != null) && (!(attr.equals("")))) {    return attr;};^307^308^309^310^311^304^317^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  { Element e =  ( Element )  n; String attr = e.getAttribute ( "xml:lang" ) ; if  ( attr != null && !attr.equals ( "" )  )  { return attr; }^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P16_Remove_Block]^^307^308^309^310^311^304^317^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  { Element e =  ( Element )  n; String attr = e.getAttribute ( "xml:lang" ) ; if  ( attr != null && !attr.equals ( "" )  )  { return attr; }^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P13_Insert_Block]^if  (  ( n.getNodeType (  )  )  ==  ( ELEMENT_NODE )  )  {     String nm = n.getNodeName (  ) ;     if  ( nm.equals ( node.getNodeName (  )  )  )  {         count++;     } }^307^^^^^304^317^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P13_Insert_Block]^if  (  ( aNode.getNodeType (  )  )  ==  ( ELEMENT_NODE )  )  {     Attr attr =  (  ( Element )   ( aNode )  ) .getAttributeNode ( qname ) ;     if  ( attr != null )  {         namespace = attr.getValue (  ) ;         break;     } }^307^^^^^304^317^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P13_Insert_Block]^if  (  ( aNode.getNodeType (  )  )  ==  ( ELEMENT_NODE )  )  {     Attr attr =  (  ( Element )   ( aNode )  ) .getAttributeNode ( "xmlns" ) ;     if  ( attr != null )  {         defaultNamespace = attr.getValue (  ) ;         break;     } }^307^^^^^304^317^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P13_Insert_Block]^if  (  ( aNode.getNodeType (  )  )  ==  ( ELEMENT_NODE )  )  {     Attr attr =  (  ( Element )   ( aNode )  ) .getAttributeNode ( qname ) ;     if  ( attr != null )  {         return attr.getValue (  ) ;     } }^307^^^^^304^317^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P2_Replace_Operator]^if  ( attr != null || !attr.equals ( "" )  )  {^310^^^^^304^317^if  ( attr != null && !attr.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P2_Replace_Operator]^if  ( attr == null && !attr.equals ( "" )  )  {^310^^^^^304^317^if  ( attr != null && !attr.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P5_Replace_Variable]^if  ( nodeNS != null && !attr.equals ( "" )  )  {^310^^^^^304^317^if  ( attr != null && !attr.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P6_Replace_Expression]^if  ( attr != null ) {^310^^^^^304^317^if  ( attr != null && !attr.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P6_Replace_Expression]^if  (  !attr.equals ( "" )  )  {^310^^^^^304^317^if  ( attr != null && !attr.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P7_Replace_Invocation]^if  ( attr != null && !attr.substring ( "" )  )  {^310^^^^^304^317^if  ( attr != null && !attr.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P7_Replace_Invocation]^if  ( attr != null && !attr .equals ( current )   )  {^310^^^^^304^317^if  ( attr != null && !attr.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P9_Replace_Statement]^if  ( namespace == null || namespace.equals ( "" )  )  {^310^^^^^304^317^if  ( attr != null && !attr.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P9_Replace_Statement]^if  ( prefix == null || prefix.equals ( "" )  )  {^310^^^^^304^317^if  ( attr != null && !attr.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P9_Replace_Statement]^if  ( string != null && !string.equals ( "" )  )  {^310^^^^^304^317^if  ( attr != null && !attr.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P15_Unwrap_Block]^return attr;^310^311^312^^^304^317^if  ( attr != null && !attr.equals ( "" )  )  { return attr; }^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P16_Remove_Block]^^310^311^312^^^304^317^if  ( attr != null && !attr.equals ( "" )  )  { return attr; }^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P13_Insert_Block]^if  (  ( s1 != null )  &&  ( ! ( s1.trim (  ) .equals ( s2.trim (  )  )  )  )  )  {     return false; }^310^^^^^304^317^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P13_Insert_Block]^if  (  ( it != null )  &&  ( it.setPosition (  ( index + 1 )  )  )  )  {     return it.getNodePointer (  ) ; }^310^^^^^304^317^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P13_Insert_Block]^if  (  ( prefix == null )  ||  ( prefix.equals ( "" )  )  )  {     return getDefaultNamespaceURI (  ) ; }^310^^^^^304^317^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P5_Replace_Variable]^return nodeNS;^311^^^^^304^317^return attr;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P8_Replace_Mix]^return ns;^311^^^^^304^317^return attr;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P11_Insert_Donor_Statement]^Element element =  ( Element )  node;Element e =  ( Element )  n;^308^^^^^304^317^Element e =  ( Element )  n;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P1_Replace_Type]^char attr = e.getAttribute ( "xml:lang" ) ;^309^^^^^304^317^String attr = e.getAttribute ( "xml:lang" ) ;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P7_Replace_Invocation]^String attr = e.setAttribute ( "xml:lang" ) ;^309^^^^^304^317^String attr = e.getAttribute ( "xml:lang" ) ;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P3_Replace_Literal]^String attr = e.getAttribute ( "xml" ) ;^309^^^^^304^317^String attr = e.getAttribute ( "xml:lang" ) ;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P14_Delete_Statement]^^309^^^^^304^317^String attr = e.getAttribute ( "xml:lang" ) ;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P5_Replace_Variable]^if  ( prefix != null && !attr.equals ( "" )  )  {^310^^^^^304^317^if  ( attr != null && !attr.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P8_Replace_Mix]^if  ( nodeNS != null && !attr .equals ( attr )   )  {^310^^^^^304^317^if  ( attr != null && !attr.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P5_Replace_Variable]^if  ( ns != null && !attr.equals ( "" )  )  {^310^^^^^304^317^if  ( attr != null && !attr.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P5_Replace_Variable]^return s1;^311^^^^^304^317^return attr;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P8_Replace_Mix]^return nodePI;^311^^^^^304^317^return attr;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P5_Replace_Variable]^n = node.getParentNode (  ) ;^314^^^^^304^317^n = n.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P7_Replace_Invocation]^n = n.cloneNode (  ) ;^314^^^^^304^317^n = n.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P7_Replace_Invocation]^n = n .getNodeType (  )  ;^314^^^^^304^317^n = n.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P8_Replace_Mix]^n =  node.getParenodetNode (  ) ;^314^^^^^304^317^n = n.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P11_Insert_Donor_Statement]^aNode = aNode.getParentNode (  ) ;n = n.getParentNode (  ) ;^314^^^^^304^317^n = n.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P11_Insert_Donor_Statement]^n = n.getPreviousSibling (  ) ;n = n.getParentNode (  ) ;^314^^^^^304^317^n = n.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P3_Replace_Literal]^String attr = e.getAttribute ( "xml:langxml" ) ;^309^^^^^304^317^String attr = e.getAttribute ( "xml:lang" ) ;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P3_Replace_Literal]^String attr = e.getAttribute ( "l:ml:lang" ) ;^309^^^^^304^317^String attr = e.getAttribute ( "xml:lang" ) ;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P5_Replace_Variable]^if  ( qname != null && !attr.equals ( "" )  )  {^310^^^^^304^317^if  ( attr != null && !attr.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P8_Replace_Mix]^if  ( testPrefix != null && !attr.equals ( "" )  )  {^310^^^^^304^317^if  ( attr != null && !attr.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P14_Delete_Statement]^^314^^^^^304^317^n = n.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;n = n.getParentNode (  ) ;^314^^^^^304^317^n = n.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P11_Insert_Donor_Statement]^int t1 = node1.getNodeType (  ) ;n = n.getParentNode (  ) ;^314^^^^^304^317^n = n.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P11_Insert_Donor_Statement]^int t2 = node2.getNodeType (  ) ;n = n.getParentNode (  ) ;^314^^^^^304^317^n = n.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P11_Insert_Donor_Statement]^String nm = n.getNodeName (  ) ;n = n.getParentNode (  ) ;^314^^^^^304^317^n = n.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P2_Replace_Operator]^if  ( n.getNodeType (  )  != Node.ELEMENT_NODE )  {^307^^^^^304^317^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P5_Replace_Variable]^if  ( n.getNodeType (  )  == Node.3 )  {^307^^^^^304^317^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P8_Replace_Mix]^if  ( attr != false ) {^310^^^^^304^317^if  ( attr != null && !attr.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P5_Replace_Variable]^return qname;^311^^^^^304^317^return attr;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P3_Replace_Literal]^String attr = e.getAttribute ( "xm" ) ;^309^^^^^304^317^String attr = e.getAttribute ( "xml:lang" ) ;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P3_Replace_Literal]^String attr = e.getAttribute ( "xml:langxml:l" ) ;^309^^^^^304^317^String attr = e.getAttribute ( "xml:lang" ) ;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P7_Replace_Invocation]^if  ( attr != null && !attr .equals ( qname )   )  {^310^^^^^304^317^if  ( attr != null && !attr.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P5_Replace_Variable]^if  ( nodePI != null && !attr.equals ( "" )  )  {^310^^^^^304^317^if  ( attr != null && !attr.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P7_Replace_Invocation]^if  ( attr != null && !attr .equals ( s1 )   )  {^310^^^^^304^317^if  ( attr != null && !attr.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P8_Replace_Mix]^if  ( attr != this ) {^310^^^^^304^317^if  ( attr != null && !attr.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P8_Replace_Mix]^n =  null.getParenulltNode (  ) ;^314^^^^^304^317^n = n.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P3_Replace_Literal]^String attr = e.getAttribute ( "aml:lang" ) ;^309^^^^^304^317^String attr = e.getAttribute ( "xml:lang" ) ;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P7_Replace_Invocation]^String attr = e .setAttribute ( XML_NAMESPACE_URI , testPI )  ;^309^^^^^304^317^String attr = e.getAttribute ( "xml:lang" ) ;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P8_Replace_Mix]^n = node.cloneNode (  ) ;^314^^^^^304^317^n = n.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P8_Replace_Mix]^return this;^316^^^^^304^317^return null;^[CLASS] DOMNodePointer  [METHOD] getLanguage [RETURN_TYPE] String   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  n  node  Element  e  
[P2_Replace_Operator]^if  ( node.getNodeType (  )  == Node.TEXT_NODE && node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^326^327^^^^311^341^if  ( node.getNodeType (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^if  ( node.getNodeType (  )  <= Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^326^327^^^^311^341^if  ( node.getNodeType (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^if  ( valueNode.getNodeType (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^326^327^^^^311^341^if  ( node.getNodeType (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  ( node.getNodeType (  )  == Node.TEXT_NODE ) {^326^327^^^^311^341^if  ( node.getNodeType (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  (  node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^326^327^^^^311^341^if  ( node.getNodeType (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  ( node.getNodeType (  )  == TEXT_NODE )  {^326^327^^^^311^341^if  ( node.getNodeType (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  ( node.getNodeType (  )  == CDATA_SECTION_NODE )  {^326^327^^^^311^341^if  ( node.getNodeType (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  ( string != null && !(string.equals("")) )  {^326^327^^^^311^341^if  ( node.getNodeType (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  ( string != null )  {^326^327^^^^311^341^if  ( node.getNodeType (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  ( --i >= 0 )  {^326^327^^^^311^341^if  ( node.getNodeType (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  ( value instanceof Node )  {^326^327^^^^311^341^if  ( node.getNodeType (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  ( valueNode instanceof Element || valueNode instanceof Document )  {^326^327^^^^311^341^if  ( node.getNodeType (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  ( valueNode instanceof Element )  {^326^327^^^^311^341^if  ( node.getNodeType (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  ( valueNode instanceof Document )  {^326^327^^^^311^341^if  ( node.getNodeType (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  ( i < children.getLength() )  {^326^327^^^^311^341^if  ( node.getNodeType (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^if  ( node.getNodeName (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^326^327^^^^311^341^if  ( node.getNodeType (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^if  ( node.getNodeType (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.0 )  {^326^327^^^^311^341^if  ( node.getNodeType (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P9_Replace_Statement]^if  ( n.getNodeType (  )  == Node.TEXT_NODE || n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^326^327^^^^311^341^if  ( node.getNodeType (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P15_Unwrap_Block]^java.lang.String string = ((java.lang.String) (org.apache.commons.jxpath.util.TypeUtils.convert(value, java.lang.String.class))); if ((string != null) && (!(string.equals("")))) {    node.setNodeValue(string);}else {    node.getParentNode().removeChild(node);};^326^327^328^329^330^311^341^if  ( node.getNodeType (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  { String string =  ( String )  TypeUtils.convert ( value, String.class ) ; if  ( string != null && !string.equals ( "" )  )  { node.setNodeValue ( string ) ; }^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P16_Remove_Block]^^326^327^328^329^330^311^341^if  ( node.getNodeType (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  { String string =  ( String )  TypeUtils.convert ( value, String.class ) ; if  ( string != null && !string.equals ( "" )  )  { node.setNodeValue ( string ) ; }^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^if  ( value  ||  Node )  {^344^^^^^329^359^if  ( value instanceof Node )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^if  ( value  >=  Node )  {^344^^^^^329^359^if  ( value instanceof Node )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^if  ( value  <=  Node )  {^344^^^^^329^359^if  ( value instanceof Node )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^if  ( value countnstanceof Node )  {^344^^^^^329^359^if  ( value instanceof Node )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^if  ( i valuenstanceof Node )  {^344^^^^^329^359^if  ( value instanceof Node )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  ( valueNode instanceof Element || valueNode instanceof Document )  {^344^^^^^329^359^if  ( value instanceof Node )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  ( valueNode instanceof Element )  {^344^^^^^329^359^if  ( value instanceof Node )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  ( valueNode instanceof Document )  {^344^^^^^329^359^if  ( value instanceof Node )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  ( i < children.getLength() )  {^344^^^^^329^359^if  ( value instanceof Node )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  ( string != null && !(string.equals("")) )  {^344^^^^^329^359^if  ( value instanceof Node )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  ( string != null )  {^344^^^^^329^359^if  ( value instanceof Node )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P9_Replace_Statement]^if  ( aNode instanceof Document )  {^344^^^^^329^359^if  ( value instanceof Node )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P9_Replace_Statement]^if  ( parent instanceof DOMNodePointer )  {^344^^^^^329^359^if  ( value instanceof Node )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P9_Replace_Statement]^if  ( node instanceof Document )  {^344^^^^^329^359^if  ( value instanceof Node )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^if  ( string != null || !string.equals ( "" )  )  {^360^^^^^344^365^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^if  ( string == null && !string.equals ( "" )  )  {^360^^^^^344^365^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^if  ( prefix != null && !string.equals ( "" )  )  {^360^^^^^344^365^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  ( string != null ) {^360^^^^^344^365^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  (  !string.equals ( "" )  )  {^360^^^^^344^365^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^if  ( string != null && !string.substring ( "" )  )  {^360^^^^^344^365^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^if  ( string != false ) {^360^^^^^344^365^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P9_Replace_Statement]^if  ( attr != null && !attr.equals ( "" )  )  {^360^^^^^344^365^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P9_Replace_Statement]^if  ( prefix == null || prefix.equals ( "" )  )  {^360^^^^^344^365^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P15_Unwrap_Block]^org.w3c.dom.Node textNode = node.getOwnerDocument().createTextNode(string); node.appendChild(textNode);^360^361^362^363^364^344^365^if  ( string != null && !string.equals ( "" )  )  { Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ; node.appendChild ( textNode ) ; }^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P16_Remove_Block]^^360^361^362^363^364^344^365^if  ( string != null && !string.equals ( "" )  )  { Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ; node.appendChild ( textNode ) ; }^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P13_Insert_Block]^if  (  ( string != null )  &&  ( ! ( string.equals ( "" )  )  )  )  {     node.setNodeValue ( string ) ; }else {     node.getParentNode (  ) .removeChild ( node ) ; }^360^^^^^344^365^[Delete]^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^Node textNode = node.getOwnerDocument (  ) .createTextNode ( testPrefix ) ;^361^362^^^^344^365^Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^Node textNode = valueNode.getOwnerDocument (  ) .createTextNode ( string ) ;^361^362^^^^344^365^Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^Node textNode = string.getOwnerDocument (  ) .createTextNode ( node ) ;^361^362^^^^344^365^Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^Node textNode = node.getOwnerDocument (  ) .getElementById ( string ) ;^361^362^^^^344^365^Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^Node textNode = node.getOwnerDocument (  )  .getDocumentElement (  )  ;^361^362^^^^344^365^Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^Node textNode = node.getNodeName (  ) .createTextNode ( string ) ;^361^362^^^^344^365^Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^Node textNode = node.getOwnerDocument (  ) .createTextNode ( ns ) ;^361^362^^^^344^365^Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.getOwnerDocument (  ) .createTextNode ( nodeNS ) ;^362^^^^^344^365^node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node.getOwnerDocument (  ) .getElementById ( string ) ;^362^^^^^344^365^node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node.getOwnerDocument (  )  .getDocumentElement (  )  ;^362^^^^^344^365^node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node.getNodeName (  ) .createTextNode ( string ) ;^362^^^^^344^365^node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^node.getNodeName (  ) .createTextNode ( nodeNS ) ;^362^^^^^344^365^node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^362^^^^^344^365^node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^node.getParentNode (  ) .removeChild ( node ) ;node.getOwnerDocument (  ) .createTextNode ( string ) ;^362^^^^^344^365^node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.appendChild ( valueNode ) ;^363^^^^^344^365^node.appendChild ( textNode ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node.removeChild ( textNode ) ;^363^^^^^344^365^node.appendChild ( textNode ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node .removeChild ( valueNode )  ;^363^^^^^344^365^node.appendChild ( textNode ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^363^^^^^344^365^node.appendChild ( textNode ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^parent.removeChild ( node ) ;node.appendChild ( textNode ) ;^363^^^^^344^365^node.appendChild ( textNode ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^node.appendChild ( child.cloneNode ( true )  ) ;node.appendChild ( textNode ) ;^363^^^^^344^365^node.appendChild ( textNode ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^node.appendChild ( valueNode.cloneNode ( true )  ) ;node.appendChild ( textNode ) ;^363^^^^^344^365^node.appendChild ( textNode ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^node.removeChild ( child ) ;node.appendChild ( textNode ) ;^363^^^^^344^365^node.appendChild ( textNode ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P1_Replace_Type]^char string =  ( char )  TypeUtils.convert ( value, String.class ) ;^359^^^^^344^365^String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^String string =  ( String )  TypeUtils.convert (  String.class ) ;^359^^^^^344^365^String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^Node textNode = node.getOwnerDocument (  ) .createTextNode ( nodePI ) ;^361^362^^^^344^365^Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^359^^^^^344^365^String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^|| node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  { String string =  ( String )  TypeUtils.convert ( value, String.class ) ;String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^359^^^^^344^365^String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^if  ( nodeNS != null && !string.equals ( "" )  )  {^360^^^^^344^365^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^if  ( s1 != null && !string.equals ( "" )  )  {^360^^^^^344^365^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.getOwnerDocument (  ) .createTextNode ( qname ) ;^362^^^^^344^365^node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^362^363^^^^344^365^node.getOwnerDocument (  ) .createTextNode ( string ) ; node.appendChild ( textNode ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^if  ( valueNode instanceof Element && valueNode instanceof Document )  {^346^347^^^^331^361^if  ( valueNode instanceof Element || valueNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^if  ( valueNode  !=  Element || valueNode instanceof Document )  {^346^347^^^^331^361^if  ( valueNode instanceof Element || valueNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^if  ( valueNode instanceof Element || valueNode  ^  Document )  {^346^347^^^^331^361^if  ( valueNode instanceof Element || valueNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^if  ( textNode instanceof Element || valueNode instanceof Document )  {^346^347^^^^331^361^if  ( valueNode instanceof Element || valueNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  ( valueNode instanceof Element ) {^346^347^^^^331^361^if  ( valueNode instanceof Element || valueNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  (  valueNode instanceof Document )  {^346^347^^^^331^361^if  ( valueNode instanceof Element || valueNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  ( i < children.getLength() )  {^346^347^^^^331^361^if  ( valueNode instanceof Element || valueNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P3_Replace_Literal]^node.appendChild ( valueNode.cloneNode ( false )  ) ;^355^^^^^346^356^node.appendChild ( valueNode.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.appendChild ( textNode.cloneNode ( true )  ) ;^355^^^^^346^356^node.appendChild ( valueNode.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node .removeChild ( node )  ;^355^^^^^346^356^node.appendChild ( valueNode.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^355^^^^^346^356^node.appendChild ( valueNode.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^node.appendChild ( textNode ) ;node.appendChild ( valueNode.cloneNode ( true )  ) ;^355^^^^^346^356^node.appendChild ( valueNode.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^node.appendChild ( child.cloneNode ( true )  ) ;node.appendChild ( valueNode.cloneNode ( true )  ) ;^355^^^^^346^356^node.appendChild ( valueNode.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node.appendChild ( valueNode .getParentNode (  )   ) ;^355^^^^^346^356^node.appendChild ( valueNode.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P1_Replace_Type]^for  (  short  i = 0; i < children.getLength (  ) ; i++ )  {^349^^^^^346^356^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^for  ( int i = 0; i > children.getLength (  ) ; i++ )  {^349^^^^^346^356^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P3_Replace_Literal]^for  ( int i = -3; i < children.getLength (  ) ; i++ )  {^349^^^^^346^356^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^for  ( countnt i = 0; i < children.getLength (  ) ; i++ )  {^349^^^^^346^356^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^for  ( int i = 0; i < textNoderen.getLength (  ) ; i++ )  {^349^^^^^346^356^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^for  ( childrennt i = 0; i < i.getLength (  ) ; i++ )  {^349^^^^^346^356^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^for  ( int i = 0; i < children.item (  ) ; i++ )  {^349^^^^^346^356^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^Node child = children.item ( count ) ;^350^^^^^346^356^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^Node child = i.item ( children ) ;^350^^^^^346^356^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^Node child = children .getLength (  )  ;^350^^^^^346^356^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^Node n = map.item ( i ) ;Node child = children.item ( i ) ;^350^^^^^346^356^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^Node child = list.item ( i ) ;Node child = children.item ( i ) ;^350^^^^^346^356^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^NodeList children = node.getChildNodes (  ) ;Node child = children.item ( i ) ;^350^^^^^346^356^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^int count = children.getLength (  ) ;Node child = children.item ( i ) ;^350^^^^^346^356^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^350^351^^^^346^356^Node child = children.item ( i ) ; node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P3_Replace_Literal]^node.appendChild ( child.cloneNode ( false )  ) ;^351^^^^^346^356^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.appendChild ( valueNode.cloneNode ( true )  ) ;^351^^^^^346^356^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node.appendChild ( child .getParentNode (  )   ) ;^351^^^^^346^356^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^351^^^^^346^356^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^node.appendChild ( textNode ) ;node.appendChild ( child.cloneNode ( true )  ) ;^351^^^^^346^356^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^buf.append ( child.getNodeValue (  )  ) ;node.appendChild ( child.cloneNode ( true )  ) ;^351^^^^^346^356^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^node.appendChild ( valueNode.cloneNode ( true )  ) ;node.appendChild ( child.cloneNode ( true )  ) ;^351^^^^^346^356^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^children = node.getChildNodes (  ) ;^348^^^^^346^356^children = valueNode.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^children = valueNode.cloneNode (  ) ;^348^^^^^346^356^children = valueNode.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^children = valueNode .hasChildNodes (  )  ;^348^^^^^346^356^children = valueNode.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^children =  textNode.getChildNodes (  ) ;^348^^^^^346^356^children = valueNode.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^aNode = aNode.getParentNode (  ) ;children = valueNode.getChildNodes (  ) ;^348^^^^^346^356^children = valueNode.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P3_Replace_Literal]^for  ( int i = -9; i < children.getLength (  ) ; i++ )  {^349^^^^^346^356^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^children = textNode .hasChildNodes (  )  ;^348^^^^^346^356^children = valueNode.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^348^^^^^346^356^children = valueNode.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;children = valueNode.getChildNodes (  ) ;^348^^^^^346^356^children = valueNode.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^return !node.hasChildNodes (  ) ;children = valueNode.getChildNodes (  ) ;^348^^^^^346^356^children = valueNode.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^NodeList list = node.getChildNodes (  ) ;children = valueNode.getChildNodes (  ) ;^348^^^^^346^356^children = valueNode.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^NodeList children = node.getChildNodes (  ) ;children = valueNode.getChildNodes (  ) ;^348^^^^^346^356^children = valueNode.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^349^350^351^352^^346^356^for  ( int i = 0; i < children.getLength (  ) ; i++ )  { Node child = children.item ( i ) ; node.appendChild ( child.cloneNode ( true )  ) ; }^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^350^^^^^346^356^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P1_Replace_Type]^for  (  long  i = 0; i < children.getLength (  ) ; i++ )  {^349^^^^^334^364^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= children.getLength (  ) ; i++ )  {^349^^^^^334^364^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P3_Replace_Literal]^for  ( int i = -6; i < children.getLength (  ) ; i++ )  {^349^^^^^334^364^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^for  ( countnt i = 0; i < children.getLength (  ) ; i++ )  {^349^^^^^334^364^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^for  ( int i = 0; i < valueNoderen.getLength (  ) ; i++ )  {^349^^^^^334^364^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^for  ( childrennt i = 0; i < i.getLength (  ) ; i++ )  {^349^^^^^334^364^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^for  ( childnt i = 0; i < iren.getLength (  ) ; i++ )  {^349^^^^^334^364^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^for  ( int i = 0; i < children.item (  ) ; i++ )  {^349^^^^^334^364^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^Node child = children.item ( count ) ;^350^^^^^335^365^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^Node child = i.item ( children ) ;^350^^^^^335^365^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^Node n = map.item ( i ) ;Node child = children.item ( i ) ;^350^^^^^335^365^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^Node child = list.item ( i ) ;Node child = children.item ( i ) ;^350^^^^^335^365^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^NodeList children = node.getChildNodes (  ) ;Node child = children.item ( i ) ;^350^^^^^335^365^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^int count = children.getLength (  ) ;Node child = children.item ( i ) ;^350^^^^^335^365^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^350^351^^^^335^365^Node child = children.item ( i ) ; node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P3_Replace_Literal]^node.appendChild ( child.cloneNode ( false )  ) ;^351^^^^^336^366^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.appendChild ( valueNode.cloneNode ( true )  ) ;^351^^^^^336^366^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node .removeChild ( aNode )  ;^351^^^^^336^366^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node.appendChild ( child .getParentNode (  )   ) ;^351^^^^^336^366^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^node.appendChild ( valueNode .getParentNode (  )   ) ;^351^^^^^336^366^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^351^^^^^336^366^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^node.appendChild ( textNode ) ;node.appendChild ( child.cloneNode ( true )  ) ;^351^^^^^336^366^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^buf.append ( child.getNodeValue (  )  ) ;node.appendChild ( child.cloneNode ( true )  ) ;^351^^^^^336^366^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^node.appendChild ( valueNode.cloneNode ( true )  ) ;node.appendChild ( child.cloneNode ( true )  ) ;^351^^^^^336^366^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^children = textNode.getChildNodes (  ) ;^348^^^^^333^363^children = valueNode.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^children = valueNode.cloneNode (  ) ;^348^^^^^333^363^children = valueNode.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^children =  node.getChildNodes (  ) ;^348^^^^^333^363^children = valueNode.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^aNode = aNode.getParentNode (  ) ;children = valueNode.getChildNodes (  ) ;^348^^^^^333^363^children = valueNode.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^Node aNode = node;Node valueNode =  ( Node )  value;^345^^^^^330^360^Node valueNode =  ( Node )  value;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P1_Replace_Type]^for  (  short  i = 0; i < children.getLength (  ) ; i++ )  {^349^^^^^334^364^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P3_Replace_Literal]^for  ( int i = -3; i < children.getLength (  ) ; i++ )  {^349^^^^^334^364^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^children = valueNode .hasChildNodes (  )  ;^348^^^^^333^363^children = valueNode.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^348^^^^^333^363^children = valueNode.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;children = valueNode.getChildNodes (  ) ;^348^^^^^333^363^children = valueNode.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^return !node.hasChildNodes (  ) ;children = valueNode.getChildNodes (  ) ;^348^^^^^333^363^children = valueNode.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^NodeList list = node.getChildNodes (  ) ;children = valueNode.getChildNodes (  ) ;^348^^^^^333^363^children = valueNode.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^NodeList children = node.getChildNodes (  ) ;children = valueNode.getChildNodes (  ) ;^348^^^^^333^363^children = valueNode.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^for  ( int i = 0; i < children .item ( i )  ; i++ )  {^349^^^^^334^364^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^349^350^351^352^^334^364^for  ( int i = 0; i < children.getLength (  ) ; i++ )  { Node child = children.item ( i ) ; node.appendChild ( child.cloneNode ( true )  ) ; }^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^Node child = children .getLength (  )  ;^350^^^^^335^365^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P3_Replace_Literal]^node.appendChild ( valueNode.cloneNode ( false )  ) ;^355^^^^^340^370^node.appendChild ( valueNode.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.appendChild ( textNode.cloneNode ( true )  ) ;^355^^^^^340^370^node.appendChild ( valueNode.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^355^^^^^340^370^node.appendChild ( valueNode.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^node.appendChild ( textNode ) ;node.appendChild ( valueNode.cloneNode ( true )  ) ;^355^^^^^340^370^node.appendChild ( valueNode.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^node.appendChild ( child.cloneNode ( true )  ) ;node.appendChild ( valueNode.cloneNode ( true )  ) ;^355^^^^^340^370^node.appendChild ( valueNode.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node.appendChild ( valueNode .getParentNode (  )   ) ;^355^^^^^340^370^node.appendChild ( valueNode.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^if  ( valueNode  ||  Element || valueNode instanceof Document )  {^346^347^^^^331^361^if  ( valueNode instanceof Element || valueNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^if  ( valueNode instanceof Element || valueNode  &&  Document )  {^346^347^^^^331^361^if  ( valueNode instanceof Element || valueNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^if  ( i valueNodenstanceof Element || valueNode instanceof Document )  {^346^347^^^^331^361^if  ( valueNode instanceof Element || valueNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.appendChild ( node.cloneNode ( true )  ) ;^355^^^^^346^356^node.appendChild ( valueNode.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= children.getLength (  ) ; i++ )  {^349^^^^^346^356^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P3_Replace_Literal]^for  ( int i = 4; i < children.getLength (  ) ; i++ )  {^349^^^^^346^356^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^for  ( int i = 0; i < childrenren.getLength (  ) ; i++ )  {^349^^^^^346^356^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^for  ( int i = 0; i < valueNoderen.item (  ) ; i++ )  {^349^^^^^346^356^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^node .removeChild ( node )  ;^351^^^^^346^356^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^for  ( int i = 0; i < children .item ( count )  ; i++ )  {^349^^^^^346^356^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node .removeChild ( child )  ;^351^^^^^346^356^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^node.appendChild ( textNode.cloneNode ( true )  ) ;^351^^^^^346^356^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^if  ( string != null || !string.equals ( "" )  )  {^360^^^^^345^375^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^if  ( string == null && !string.equals ( "" )  )  {^360^^^^^345^375^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^if  ( nodeNS != null && !string.equals ( "" )  )  {^360^^^^^345^375^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  ( string != null ) {^360^^^^^345^375^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  (  !string.equals ( "" )  )  {^360^^^^^345^375^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^if  ( string != null && !string.substring ( "" )  )  {^360^^^^^345^375^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P9_Replace_Statement]^if  ( attr != null && !attr.equals ( "" )  )  {^360^^^^^345^375^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P9_Replace_Statement]^if  ( prefix == null || prefix.equals ( "" )  )  {^360^^^^^345^375^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P15_Unwrap_Block]^org.w3c.dom.Node textNode = node.getOwnerDocument().createTextNode(string); node.appendChild(textNode);^360^361^362^363^364^345^375^if  ( string != null && !string.equals ( "" )  )  { Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ; node.appendChild ( textNode ) ; }^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P16_Remove_Block]^^360^361^362^363^364^345^375^if  ( string != null && !string.equals ( "" )  )  { Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ; node.appendChild ( textNode ) ; }^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P13_Insert_Block]^if  (  ( string != null )  &&  ( ! ( string.equals ( "" )  )  )  )  {     node.setNodeValue ( string ) ; }else {     node.getParentNode (  ) .removeChild ( node ) ; }^360^^^^^345^375^[Delete]^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^Node textNode = node.getOwnerDocument (  ) .createTextNode ( ns ) ;^361^362^^^^346^376^Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^Node textNode = valueNode.getOwnerDocument (  ) .createTextNode ( string ) ;^361^362^^^^346^376^Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^Node textNode = string.getOwnerDocument (  ) .createTextNode ( node ) ;^361^362^^^^346^376^Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^Node textNode = node.getOwnerDocument (  ) .getElementById ( string ) ;^361^362^^^^346^376^Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^Node textNode = node.getOwnerDocument (  )  .getDocumentElement (  )  ;^361^362^^^^346^376^Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^Node textNode = node.getNodeName (  ) .createTextNode ( string ) ;^361^362^^^^346^376^Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.getOwnerDocument (  ) .createTextNode ( ns ) ;^362^^^^^347^377^node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node.getOwnerDocument (  ) .getElementById ( string ) ;^362^^^^^347^377^node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node.getOwnerDocument (  )  .getDocumentElement (  )  ;^362^^^^^347^377^node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node.getNodeName (  ) .createTextNode ( string ) ;^362^^^^^347^377^node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^node.getOwnerDocument (  ) .createTextNode ( nodeNS ) ;^362^^^^^347^377^node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^362^^^^^347^377^node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^node.getParentNode (  ) .removeChild ( node ) ;node.getOwnerDocument (  ) .createTextNode ( string ) ;^362^^^^^347^377^node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^362^363^^^^347^377^node.getOwnerDocument (  ) .createTextNode ( string ) ; node.appendChild ( textNode ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.appendChild ( valueNode ) ;^363^^^^^348^378^node.appendChild ( textNode ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node.removeChild ( textNode ) ;^363^^^^^348^378^node.appendChild ( textNode ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^363^^^^^348^378^node.appendChild ( textNode ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^parent.removeChild ( node ) ;node.appendChild ( textNode ) ;^363^^^^^348^378^node.appendChild ( textNode ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^node.appendChild ( child.cloneNode ( true )  ) ;node.appendChild ( textNode ) ;^363^^^^^348^378^node.appendChild ( textNode ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^node.appendChild ( valueNode.cloneNode ( true )  ) ;node.appendChild ( textNode ) ;^363^^^^^348^378^node.appendChild ( textNode ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^node.removeChild ( child ) ;node.appendChild ( textNode ) ;^363^^^^^348^378^node.appendChild ( textNode ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P1_Replace_Type]^for  (  short  i = count; --i >= 0; )  {^339^^^^^324^354^for  ( int i = count; --i >= 0; )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^for  ( int i = count; --i > 0; )  {^339^^^^^324^354^for  ( int i = count; --i >= 0; )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P3_Replace_Literal]^for  ( int i = count; --i >= count; )  {^339^^^^^324^354^for  ( int i = count; --i >= 0; )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^for  ( countnt i = count; --i >= 0; )  {^339^^^^^324^354^for  ( int i = count; --i >= 0; )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^Node child = children.item ( count ) ;^340^^^^^325^355^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^Node child = i.item ( children ) ;^340^^^^^325^355^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^Node child = children .getLength (  )  ;^340^^^^^325^355^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^Node n = map.item ( i ) ;Node child = children.item ( i ) ;^340^^^^^325^355^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^Node child = list.item ( i ) ;Node child = children.item ( i ) ;^340^^^^^325^355^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^NodeList children = node.getChildNodes (  ) ;Node child = children.item ( i ) ;^340^^^^^325^355^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^int count = children.getLength (  ) ;Node child = children.item ( i ) ;^340^^^^^325^355^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^340^^^^^325^355^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.removeChild ( valueNode ) ;^341^^^^^326^356^node.removeChild ( child ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node.appendChild ( child ) ;^341^^^^^326^356^node.removeChild ( child ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^node.appendChild ( valueNode ) ;^341^^^^^326^356^node.removeChild ( child ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^341^^^^^326^356^node.removeChild ( child ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^parent.removeChild ( node ) ;node.removeChild ( child ) ;^341^^^^^326^356^node.removeChild ( child ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^node.appendChild ( textNode ) ;node.removeChild ( child ) ;^341^^^^^326^356^node.removeChild ( child ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^node.setNodeValue ( string ) ;node.removeChild ( child ) ;^341^^^^^326^356^node.removeChild ( child ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^for  ( int i = 0; i > children.getLength (  ) ; i++ )  {^349^^^^^334^364^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^for  ( int i = 0; i < textNoderen.getLength (  ) ; i++ )  {^349^^^^^334^364^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^for  ( int i = 0; i < childrenren.getLength (  ) ; i++ )  {^349^^^^^334^364^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.appendChild ( textNode.cloneNode ( true )  ) ;^351^^^^^336^366^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^NodeList children = textNode.getChildNodes (  ) ;^337^^^^^322^352^NodeList children = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^NodeList children = node.hasChildNodes (  ) ;^337^^^^^322^352^NodeList children = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;NodeList children = node.getChildNodes (  ) ;^337^^^^^322^352^NodeList children = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^int type = node.getNodeType (  ) ;NodeList children = node.getChildNodes (  ) ;^337^^^^^322^352^NodeList children = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^Node current = node.getFirstChild (  ) ;NodeList children = node.getChildNodes (  ) ;^337^^^^^322^352^NodeList children = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^NodeList list = node.getChildNodes (  ) ;NodeList children = node.getChildNodes (  ) ;^337^^^^^322^352^NodeList children = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;NodeList children = node.getChildNodes (  ) ;^337^^^^^322^352^NodeList children = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^Node child = children.item ( i ) ;NodeList children = node.getChildNodes (  ) ;^337^^^^^322^352^NodeList children = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P1_Replace_Type]^long  count = children.getLength (  ) ;^338^^^^^323^353^int count = children.getLength (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^int count = children.item (  ) ;^338^^^^^323^353^int count = children.getLength (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^int count = children .item ( i )  ;^338^^^^^323^353^int count = children.getLength (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^int type = node.getNodeType (  ) ;int count = children.getLength (  ) ;^338^^^^^323^353^int count = children.getLength (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^int t1 = node1.getNodeType (  ) ;int count = children.getLength (  ) ;^338^^^^^323^353^int count = children.getLength (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^int t2 = node2.getNodeType (  ) ;int count = children.getLength (  ) ;^338^^^^^323^353^int count = children.getLength (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^int length = map.getLength (  ) ;int count = children.getLength (  ) ;^338^^^^^323^353^int count = children.getLength (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^Node child = children.item ( i ) ;int count = children.getLength (  ) ;^338^^^^^323^353^int count = children.getLength (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P1_Replace_Type]^for  (  long  i = count; --i >= 0; )  {^339^^^^^324^354^for  ( int i = count; --i >= 0; )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P3_Replace_Literal]^for  ( int i = 3; i < children.getLength (  ) ; i++ )  {^349^^^^^334^364^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P1_Replace_Type]^char string =  ( char )  TypeUtils.convert ( value, String.class ) ;^359^^^^^344^374^String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^String string =  ( String )  TypeUtils.convert (  String.class ) ;^359^^^^^344^374^String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^Node textNode = node.getOwnerDocument (  ) .createTextNode ( nodeNS ) ;^361^362^^^^346^376^Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^Node textNode = node .getNodeName (  )  .createTextNode ( s1 ) ;^361^362^^^^346^376^Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^NodeList children = valueNode.getChildNodes (  ) ;^337^^^^^322^352^NodeList children = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^337^338^^^^322^352^NodeList children = node.getChildNodes (  ) ; int count = children.getLength (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^aNode = aNode.getParentNode (  ) ;NodeList children = node.getChildNodes (  ) ;^337^^^^^322^352^NodeList children = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^children = valueNode.getChildNodes (  ) ;NodeList children = node.getChildNodes (  ) ;^337^^^^^322^352^NodeList children = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^return !node.hasChildNodes (  ) ;NodeList children = node.getChildNodes (  ) ;^337^^^^^322^352^NodeList children = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^338^^^^^323^353^int count = children.getLength (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node .getFirstChild (  )  ;^341^^^^^326^356^node.removeChild ( child ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^children = node.cloneNode (  ) ;^348^^^^^333^363^children = valueNode.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node .removeChild ( child )  ;^351^^^^^336^366^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^359^^^^^344^374^String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^|| node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  { String string =  ( String )  TypeUtils.convert ( value, String.class ) ;String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^359^^^^^344^374^String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^if  ( ns != null && !string.equals ( "" )  )  {^360^^^^^345^375^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^if  ( string != null && !string .equals ( s1 )   )  {^360^^^^^345^375^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^if  ( nodePI != null && !string.substring ( "" )  )  {^360^^^^^345^375^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.getOwnerDocument (  ) .createTextNode ( s1 ) ;^362^^^^^347^377^node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^node.removeChild ( valueNode ) ;^363^^^^^348^378^node.appendChild ( textNode ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^if  ( string != null || !string.equals ( "" )  )  {^329^^^^^314^344^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^if  ( string == null && !string.equals ( "" )  )  {^329^^^^^314^344^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^if  ( nodeNS != null && !string.equals ( "" )  )  {^329^^^^^314^344^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  ( string != null ) {^329^^^^^314^344^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P6_Replace_Expression]^if  (  !string.equals ( "" )  )  {^329^^^^^314^344^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^if  ( string != null && !string.substring ( "" )  )  {^329^^^^^314^344^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P9_Replace_Statement]^if  ( attr != null && !attr.equals ( "" )  )  {^329^^^^^314^344^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P9_Replace_Statement]^if  ( prefix == null || prefix.equals ( "" )  )  {^329^^^^^314^344^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P15_Unwrap_Block]^node.setNodeValue(string);^329^330^331^^^314^344^if  ( string != null && !string.equals ( "" )  )  { node.setNodeValue ( string ) ; }^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P16_Remove_Block]^^329^330^331^^^314^344^if  ( string != null && !string.equals ( "" )  )  { node.setNodeValue ( string ) ; }^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P13_Insert_Block]^if  (  ( string != null )  &&  ( ! ( string.equals ( "" )  )  )  )  {     Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;     node.appendChild ( textNode ) ; }^329^^^^^314^344^[Delete]^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.getParentNode (  ) .removeChild ( valueNode ) ;^333^^^^^329^334^node.getParentNode (  ) .removeChild ( node ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node.getParentNode (  ) .getChildNodes ( node ) ;^333^^^^^329^334^node.getParentNode (  ) .removeChild ( node ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node.getNodeType (  ) .removeChild ( node ) ;^333^^^^^329^334^node.getParentNode (  ) .removeChild ( node ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^333^^^^^329^334^node.getParentNode (  ) .removeChild ( node ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^parent.removeChild ( node ) ;node.getParentNode (  ) .removeChild ( node ) ;^333^^^^^329^334^node.getParentNode (  ) .removeChild ( node ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^node.getOwnerDocument (  ) .createTextNode ( string ) ;node.getParentNode (  ) .removeChild ( node ) ;^333^^^^^329^334^node.getParentNode (  ) .removeChild ( node ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.setNodeValue ( nodeNS ) ;^330^^^^^315^345^node.setNodeValue ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node.cloneNode ( string ) ;^330^^^^^315^345^node.setNodeValue ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node .getNodeValue (  )  ;^330^^^^^315^345^node.setNodeValue ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^node.cloneNode ( ns ) ;^330^^^^^315^345^node.setNodeValue ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^330^^^^^315^345^node.setNodeValue ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^ptr.setValue ( value ) ;node.setNodeValue ( string ) ;^330^^^^^315^345^node.setNodeValue ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^node.removeChild ( child ) ;node.setNodeValue ( string ) ;^330^^^^^315^345^node.setNodeValue ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P1_Replace_Type]^char string =  ( char )  TypeUtils.convert ( value, String.class ) ;^328^^^^^313^343^String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^String string =  ( String )  TypeUtils.convert (  String.class ) ;^328^^^^^313^343^String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^328^^^^^313^343^String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^|| node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  { String string =  ( String )  TypeUtils.convert ( value, String.class ) ;String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^328^^^^^313^343^String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^if  ( string != null && !string .equals ( XML_NAMESPACE_URI )   )  {^329^^^^^314^344^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.setNodeValue ( testPI ) ;^330^^^^^315^345^node.setNodeValue ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.getParentNode (  ) .removeChild ( valueNode ) ;^333^^^^^318^348^node.getParentNode (  ) .removeChild ( node ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node.getParentNode (  ) .getChildNodes ( node ) ;^333^^^^^318^348^node.getParentNode (  ) .removeChild ( node ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node.getNodeType (  ) .removeChild ( node ) ;^333^^^^^318^348^node.getParentNode (  ) .removeChild ( node ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^333^^^^^318^348^node.getParentNode (  ) .removeChild ( node ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^parent.removeChild ( node ) ;node.getParentNode (  ) .removeChild ( node ) ;^333^^^^^318^348^node.getParentNode (  ) .removeChild ( node ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P11_Insert_Donor_Statement]^node.getOwnerDocument (  ) .createTextNode ( string ) ;node.getParentNode (  ) .removeChild ( node ) ;^333^^^^^318^348^node.getParentNode (  ) .removeChild ( node ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.getParentNode (  ) .removeChild ( textNode ) ;^333^^^^^318^348^node.getParentNode (  ) .removeChild ( node ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^if  ( string != this && !string.equals ( "" )  )  {^329^^^^^314^344^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.getParentNode (  ) .removeChild ( textNode ) ;^333^^^^^329^334^node.getParentNode (  ) .removeChild ( node ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^node .getNodeType (  )  .removeChild ( valueNode ) ;^333^^^^^329^334^node.getParentNode (  ) .removeChild ( node ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.setNodeValue ( qname ) ;^330^^^^^315^345^node.setNodeValue ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^node.setNodeValue ( prefix ) ;^330^^^^^315^345^node.setNodeValue ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^if  ( value  &&  Node )  {^344^^^^^329^359^if  ( value instanceof Node )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^if  ( value  >>  Node )  {^344^^^^^329^359^if  ( value instanceof Node )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.getOwnerDocument (  ) .createTextNode ( testPrefix ) ;^362^^^^^344^365^node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^node.getOwnerDocument (  ) .createTextNode ( ns ) ;^362^^^^^344^365^node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^String string =  ( String )  TypeUtils.convert ( value, String.null ) ;^359^^^^^344^365^String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^Node textNode = node.getOwnerDocument (  ) .createTextNode ( nodeNS ) ;^361^362^^^^344^365^Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^if  ( qname != null && !string.equals ( "" )  )  {^360^^^^^344^365^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^if  ( string != null && !string .equals ( testPI )   )  {^360^^^^^344^365^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^if  ( qname != null && !string .equals ( namespaceURI )   )  {^360^^^^^344^365^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.getOwnerDocument (  ) .createTextNode ( nodePI ) ;^362^^^^^344^365^node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node .removeChild ( aNode )  ;^363^^^^^344^365^node.appendChild ( textNode ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^if  ( valueNode instanceof Element || valueNode  ||  Document )  {^346^347^^^^331^361^if  ( valueNode instanceof Element || valueNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node .removeChild ( textNode )  ;^355^^^^^346^356^node.appendChild ( valueNode.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P3_Replace_Literal]^for  ( int i = i; i < children.getLength (  ) ; i++ )  {^349^^^^^346^356^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^for  ( int i = 0; i < valueNoderen.getLength (  ) ; i++ )  {^349^^^^^346^356^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^for  ( childnt i = 0; i < iren.getLength (  ) ; i++ )  {^349^^^^^346^356^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^node.appendChild ( valueNode .getParentNode (  )   ) ;^351^^^^^346^356^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^for  ( int i = 0; i < children .item ( i )  ; i++ )  {^349^^^^^346^356^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node .removeChild ( n )  ;^351^^^^^346^356^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P3_Replace_Literal]^for  ( int i = ; i < children.getLength (  ) ; i++ )  {^349^^^^^334^364^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^for  ( int i = 0; i < children .item ( count )  ; i++ )  {^349^^^^^334^364^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node .removeChild ( node )  ;^351^^^^^336^366^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P3_Replace_Literal]^for  ( int i = count; i < children.getLength (  ) ; i++ )  {^349^^^^^334^364^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^350^^^^^335^365^Node child = children.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node .removeChild ( valueNode )  ;^351^^^^^336^366^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^node .removeChild ( child )  ;^355^^^^^340^370^node.appendChild ( valueNode.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^if  ( valueNode  <=  Element || valueNode instanceof Document )  {^346^347^^^^331^361^if  ( valueNode instanceof Element || valueNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^if  ( valueNode instanceof Element || valueNode  >  Document )  {^346^347^^^^331^361^if  ( valueNode instanceof Element || valueNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^if  ( valueNode countnstanceof Element || valueNode instanceof Document )  {^346^347^^^^331^361^if  ( valueNode instanceof Element || valueNode instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node .removeChild ( n )  ;^355^^^^^346^356^node.appendChild ( valueNode.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P3_Replace_Literal]^for  ( int i = 7; i < children.getLength (  ) ; i++ )  {^349^^^^^346^356^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^for  ( int i = 0; i < child.getLength (  ) ; i++ )  {^349^^^^^346^356^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node .removeChild ( aNode )  ;^351^^^^^346^356^node.appendChild ( child.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P3_Replace_Literal]^for  ( int i = ; i < children.getLength (  ) ; i++ )  {^349^^^^^346^356^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^if  ( string != false && !string.equals ( "" )  )  {^360^^^^^345^375^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.getOwnerDocument (  ) .createTextNode ( nodePI ) ;^362^^^^^347^377^node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^node .removeChild ( n )  ;^363^^^^^348^378^node.appendChild ( textNode ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P3_Replace_Literal]^for  ( int i = count; --i >= i; )  {^339^^^^^324^354^for  ( int i = count; --i >= 0; )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^for  ( countnt i = i; --i >= 0; )  {^339^^^^^324^354^for  ( int i = count; --i >= 0; )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^340^341^^^^325^355^Node child = children.item ( i ) ; node.removeChild ( child ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P3_Replace_Literal]^for  ( int i = i; i < children.getLength (  ) ; i++ )  {^349^^^^^334^364^for  ( int i = 0; i < children.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^NodeList children = valueNode.hasChildNodes (  ) ;^337^^^^^322^352^NodeList children = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P1_Replace_Type]^short  count = children.getLength (  ) ;^338^^^^^323^353^int count = children.getLength (  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^Node textNode = node.getOwnerDocument (  ) .createTextNode ( qname ) ;^361^362^^^^346^376^Node textNode = node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^if  ( node .getNodeName (  )   == Node.TEXT_NODE || node^326^327^^^^311^341^if  ( node.getNodeType (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^|| valueNode.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^327^^^^^312^342^|| node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^|| node.getNodeName (  )  == Node.CDATA_SECTION_NODE )  {^327^^^^^312^342^|| node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P14_Delete_Statement]^^327^328^^^^312^342^|| node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  { String string =  ( String )  TypeUtils.convert ( value, String.class ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^if  ( testPrefix != null && !string.equals ( "" )  )  {^329^^^^^314^344^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^if  ( string != null && !string .equals ( ln )   )  {^329^^^^^314^344^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.setNodeValue ( nodePI ) ;^330^^^^^315^345^node.setNodeValue ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.appendChild ( node.cloneNode ( true )  ) ;^355^^^^^340^370^node.appendChild ( valueNode.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^node.appendChild ( textNode .getParentNode (  )   ) ;^355^^^^^340^370^node.appendChild ( valueNode.cloneNode ( true )  ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P7_Replace_Invocation]^if  ( string != null && !string .equals ( attr )   )  {^360^^^^^345^375^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P8_Replace_Mix]^if  ( nodeNS != null && !string.substring ( "" )  )  {^360^^^^^345^375^if  ( string != null && !string.equals ( "" )  )  {^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P5_Replace_Variable]^node.getOwnerDocument (  ) .createTextNode ( qname ) ;^362^^^^^347^377^node.getOwnerDocument (  ) .createTextNode ( string ) ;^[CLASS] DOMNodePointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] boolean  Node  aNode  child  n  node  textNode  valueNode  NodeList  children  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  count  i  
[P2_Replace_Operator]^if  ( index < WHOLE_COLLECTION )  {^374^^^^^373^400^if  ( index == WHOLE_COLLECTION )  {^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P5_Replace_Variable]^if  ( WHOLE_COLLECTION == index )  {^374^^^^^373^400^if  ( index == WHOLE_COLLECTION )  {^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P15_Unwrap_Block]^index = 0;^374^375^376^^^373^400^if  ( index == WHOLE_COLLECTION )  { index = 0; }^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P16_Remove_Block]^^374^375^376^^^373^400^if  ( index == WHOLE_COLLECTION )  { index = 0; }^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P3_Replace_Literal]^index = index;^375^^^^^373^400^index = 0;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P8_Replace_Mix]^index = 4;^375^^^^^373^400^index = 0;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P3_Replace_Literal]^index = -9;^375^^^^^373^400^index = 0;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P8_Replace_Mix]^index = 0 - 2;^375^^^^^373^400^index = 0;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P5_Replace_Variable]^boolean success = getAbstractFactory ( context ) .createObject (  this,^377^378^379^380^^373^400^boolean success = getAbstractFactory ( context ) .createObject ( context, this,^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P7_Replace_Invocation]^boolean success = getAbstractFactory ( context )  .getTarget (  )  ( context, this,^377^378^379^380^^373^400^boolean success = getAbstractFactory ( context ) .createObject ( context, this,^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P7_Replace_Invocation]^boolean success = attributeIterator ( context ) .createObject ( context, this,^377^378^379^380^^373^400^boolean success = getAbstractFactory ( context ) .createObject ( context, this,^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P5_Replace_Variable]^getAbstractFactory ( context ) .createObject (  this, node,^378^379^380^381^^373^400^getAbstractFactory ( context ) .createObject ( context, this, node,^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P5_Replace_Variable]^getAbstractFactory ( context ) .createObject ( context, this,^378^379^380^381^^373^400^getAbstractFactory ( context ) .createObject ( context, this, node,^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P5_Replace_Variable]^getAbstractFactory ( node ) .createObject ( context, this, context,^378^379^380^381^^373^400^getAbstractFactory ( context ) .createObject ( context, this, node,^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P7_Replace_Invocation]^attributeIterator ( context ) .createObject ( context, this, node,^378^379^380^381^^373^400^getAbstractFactory ( context ) .createObject ( context, this, node,^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P8_Replace_Mix]^attributeIterator ( context ) .createObject ( context, this, valueNode,^378^379^380^381^^373^400^getAbstractFactory ( context ) .createObject ( context, this, node,^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P7_Replace_Invocation]^name .getName (  )  , index ) ;^382^383^^^^373^400^name.toString (  ) , index ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P14_Delete_Statement]^^382^383^^^^373^400^name.toString (  ) , index ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^return name.substring ( 0, index ) ;name.toString (  ) , index ) ;^382^383^^^^373^400^name.toString (  ) , index ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^return buf.toString (  ) .trim (  ) ;name.toString (  ) , index ) ;^382^383^^^^373^400^name.toString (  ) , index ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P6_Replace_Expression]^if  ( it != null && it.setPosition((index + 1)) )  {^384^^^^^373^400^if  ( success )  {^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P6_Replace_Expression]^if  ( it != null )  {^384^^^^^373^400^if  ( success )  {^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P6_Replace_Expression]^if  ( index + 1 )  {^384^^^^^373^400^if  ( success )  {^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P2_Replace_Operator]^if  ( it != null || it.setPosition ( index + 1 )  )  {^393^^^^^373^400^if  ( it != null && it.setPosition ( index + 1 )  )  {^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P2_Replace_Operator]^if  ( it == null && it.setPosition ( index + 1 )  )  {^393^^^^^373^400^if  ( it != null && it.setPosition ( index + 1 )  )  {^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P2_Replace_Operator]^if  ( it != null && it.setPosition ( index  <=  1 )  )  {^393^^^^^373^400^if  ( it != null && it.setPosition ( index + 1 )  )  {^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P3_Replace_Literal]^if  ( it != null && it.setPosition ( index  )  )  {^393^^^^^373^400^if  ( it != null && it.setPosition ( index + 1 )  )  {^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P5_Replace_Variable]^if  ( index != null && it.setPosition ( it + 1 )  )  {^393^^^^^373^400^if  ( it != null && it.setPosition ( index + 1 )  )  {^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P6_Replace_Expression]^if  ( it != null ) {^393^^^^^373^400^if  ( it != null && it.setPosition ( index + 1 )  )  {^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P6_Replace_Expression]^if  (  it.setPosition ( index + 1 )  )  {^393^^^^^373^400^if  ( it != null && it.setPosition ( index + 1 )  )  {^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P6_Replace_Expression]^if  ( index + 1 )  {^393^^^^^373^400^if  ( it != null && it.setPosition ( index + 1 )  )  {^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P15_Unwrap_Block]^return it.getNodePointer();^393^394^395^^^373^400^if  ( it != null && it.setPosition ( index + 1 )  )  { return it.getNodePointer (  ) ; }^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P16_Remove_Block]^^393^394^395^^^373^400^if  ( it != null && it.setPosition ( index + 1 )  )  { return it.getNodePointer (  ) ; }^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P13_Insert_Block]^if  (  ( attr != null )  &&  ( ! ( attr.equals ( "" )  )  )  )  {     return attr; }^393^^^^^373^400^[Delete]^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P7_Replace_Invocation]^return it.setPosition (  ) ;^394^^^^^373^400^return it.getNodePointer (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P7_Replace_Invocation]^return it .setPosition ( index )  ;^394^^^^^373^400^return it.getNodePointer (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P14_Delete_Statement]^^394^^^^^373^400^return it.getNodePointer (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P4_Replace_Constructor]^nodeTest = new NodeNameTest (  namespaceURI ) ;^390^^^^^373^400^nodeTest = new NodeNameTest ( name, namespaceURI ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P4_Replace_Constructor]^nodeTest = new NodeNameTest ( name ) ;^390^^^^^373^400^nodeTest = new NodeNameTest ( name, namespaceURI ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P5_Replace_Variable]^nodeTest = new NodeNameTest ( namespaceURI, name ) ;^390^^^^^373^400^nodeTest = new NodeNameTest ( name, namespaceURI ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P8_Replace_Mix]^nodeTest =  new NodeNameTest ( null, nullspaceURI ) ;^390^^^^^373^400^nodeTest = new NodeNameTest ( name, namespaceURI ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P5_Replace_Variable]^nodeTest = new NodeNameTest ( name, nodePI ) ;^390^^^^^373^400^nodeTest = new NodeNameTest ( name, namespaceURI ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P8_Replace_Mix]^nodeTest = new NodeNameTest ( name, string ) ;^390^^^^^373^400^nodeTest = new NodeNameTest ( name, namespaceURI ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^Node n = node;NodeTest nodeTest;^385^^^^^373^400^NodeTest nodeTest;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P1_Replace_Type]^char prefix = name.getPrefix (  ) ;^386^^^^^373^400^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P8_Replace_Mix]^String prefix = name .getName (  )  ;^386^^^^^373^400^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;String prefix = name.getPrefix (  ) ;^386^^^^^373^400^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;String prefix = name.getPrefix (  ) ;^386^^^^^373^400^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^String prefix = getPrefix ( node ) ;String prefix = name.getPrefix (  ) ;^386^^^^^373^400^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^String nsURI = getNamespaceURI (  ) ;String prefix = name.getPrefix (  ) ;^386^^^^^373^400^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^String testPrefix = testName.getPrefix (  ) ;String prefix = name.getPrefix (  ) ;^386^^^^^373^400^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;String prefix = name.getPrefix (  ) ;^386^^^^^373^400^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^String nm = n.getNodeName (  ) ;String prefix = name.getPrefix (  ) ;^386^^^^^373^400^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;String prefix = name.getPrefix (  ) ;^386^^^^^373^400^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^String prefix = node.getPrefix (  ) ;String prefix = name.getPrefix (  ) ;^386^^^^^373^400^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^String uri = element.getNamespaceURI (  ) ;String prefix = name.getPrefix (  ) ;^386^^^^^373^400^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;String prefix = name.getPrefix (  ) ;^386^^^^^373^400^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^String localName = node.getLocalName (  ) ;String prefix = name.getPrefix (  ) ;^386^^^^^373^400^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P1_Replace_Type]^char namespaceURI = prefix != null ? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^387^388^389^^^373^400^String namespaceURI = prefix != null ? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P2_Replace_Operator]^String namespaceURI = prefix == null ? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^387^388^389^^^373^400^String namespaceURI = prefix != null ? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P5_Replace_Variable]^String namespaceURI = nodePI != null ? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^387^388^389^^^373^400^String namespaceURI = prefix != null ? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P5_Replace_Variable]^String namespaceURI = context != null ? prefix.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^387^388^389^^^373^400^String namespaceURI = prefix != null ? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P6_Replace_Expression]^String namespaceURI  =  context.getDefaultNamespaceURI (  ) ;^387^388^389^^^373^400^String namespaceURI = prefix != null ? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P6_Replace_Expression]^String namespaceURI  =  context.getNamespaceURI ( prefix ) ;^387^388^389^^^373^400^String namespaceURI = prefix != null ? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P7_Replace_Invocation]^String namespaceURI = prefix != null ? context .getNamespaceURI (  )  : context.getDefaultNamespaceURI (  ) ;^387^388^389^^^373^400^String namespaceURI = prefix != null ? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P7_Replace_Invocation]^String namespaceURI = prefix != null ? context.getNamespaceURI ( prefix ) : context.getNamespaceURI (  ) ;^387^388^389^^^373^400^String namespaceURI = prefix != null ? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P8_Replace_Mix]^String namespaceURI = qname != null ? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^387^388^389^^^373^400^String namespaceURI = prefix != null ? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P3_Replace_Literal]^NodeIterator it = childIterator ( nodeTest, true, null ) ;^392^^^^^373^400^NodeIterator it = childIterator ( nodeTest, false, null ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P7_Replace_Invocation]^NodeIterator it = createChild ( nodeTest, false, null ) ;^392^^^^^373^400^NodeIterator it = childIterator ( nodeTest, false, null ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^NodePointer ptr = createChild ( context, name, index ) ;NodeIterator it = childIterator ( nodeTest, false, null ) ;^392^^^^^373^400^NodeIterator it = childIterator ( nodeTest, false, null ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^NodeIterator it = attributeIterator ( name ) ;NodeIterator it = childIterator ( nodeTest, false, null ) ;^392^^^^^373^400^NodeIterator it = childIterator ( nodeTest, false, null ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P14_Delete_Statement]^^386^^^^^373^400^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P5_Replace_Variable]^? context.getNamespaceURI ( nodePI ) : context.getDefaultNamespaceURI (  ) ;^388^389^^^^373^400^? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P5_Replace_Variable]^? prefix.getNamespaceURI ( context ) : context.getDefaultNamespaceURI (  ) ;^388^389^^^^373^400^? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P14_Delete_Statement]^^388^389^^^^373^400^? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^: context.getDefaultNamespaceURI (  ) ;? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^388^389^^^^373^400^? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^388^389^^^^373^400^? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P7_Replace_Invocation]^: context.getNamespaceURI (  ) ;^389^^^^^373^400^: context.getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P14_Delete_Statement]^^389^390^^^^373^400^: context.getDefaultNamespaceURI (  ) ; nodeTest = new NodeNameTest ( name, namespaceURI ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^String nsURI = getNamespaceURI (  ) ;: context.getDefaultNamespaceURI (  ) ;^389^^^^^373^400^: context.getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^return getDefaultNamespaceURI (  ) ;: context.getDefaultNamespaceURI (  ) ;^389^^^^^373^400^: context.getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;: context.getDefaultNamespaceURI (  ) ;^389^^^^^373^400^: context.getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^String uri = element.getNamespaceURI (  ) ;: context.getDefaultNamespaceURI (  ) ;^389^^^^^373^400^: context.getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P14_Delete_Statement]^^392^^^^^373^400^NodeIterator it = childIterator ( nodeTest, false, null ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P2_Replace_Operator]^if  ( it != null && it.setPosition ( index  ||  1 )  )  {^393^^^^^373^400^if  ( it != null && it.setPosition ( index + 1 )  )  {^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P3_Replace_Literal]^if  ( it != null && it.setPosition ( index + index )  )  {^393^^^^^373^400^if  ( it != null && it.setPosition ( index + 1 )  )  {^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P8_Replace_Mix]^if  ( it != null && it .getNodePointer (  )   )  {^393^^^^^373^400^if  ( it != null && it.setPosition ( index + 1 )  )  {^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P2_Replace_Operator]^if  ( it != null && it.setPosition ( index  >=  1 )  )  {^393^^^^^373^400^if  ( it != null && it.setPosition ( index + 1 )  )  {^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P5_Replace_Variable]^nodeTest = new NodeNameTest ( name, prefix ) ;^390^^^^^373^400^nodeTest = new NodeNameTest ( name, namespaceURI ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P8_Replace_Mix]^nodeTest = new NodeNameTest ( name, ns ) ;^390^^^^^373^400^nodeTest = new NodeNameTest ( name, namespaceURI ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P5_Replace_Variable]^? context.getNamespaceURI ( ns ) : context.getDefaultNamespaceURI (  ) ;^388^389^^^^373^400^? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P7_Replace_Invocation]^? context .getNamespaceURI (  )  : context.getDefaultNamespaceURI (  ) ;^388^389^^^^373^400^? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P8_Replace_Mix]^? context.getNamespaceURI ( testPrefix ) : context.getDefaultNamespaceURI (  ) ;^388^389^^^^373^400^? context.getNamespaceURI ( prefix ) : context.getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P14_Delete_Statement]^^389^^^^^373^400^: context.getDefaultNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P2_Replace_Operator]^if  ( it != null && it.setPosition ( index   instanceof   1 )  )  {^393^^^^^373^400^if  ( it != null && it.setPosition ( index + 1 )  )  {^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  <=  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^397^398^399^^^373^400^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  &&  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^397^398^399^^^373^400^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  !=  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^397^398^399^^^373^400^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: "  &  asPath (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^397^398^399^^^373^400^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ) + "/" + name + "[" +  ( index  |  1 )  + "]" ) ;^397^398^399^^^373^400^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( " a ch" + asPath (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^397^398^399^^^373^400^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ) + "/" + name + "[" +  ( index  )  + "]" ) ;^397^398^399^^^373^400^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P5_Replace_Variable]^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ) + "/" + index + "[" +  ( name + 1 )  + "]" ) ;^397^398^399^^^373^400^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P7_Replace_Invocation]^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + getLanguage (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^397^398^399^^^373^400^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ==  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^397^398^399^^^373^400^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (   instanceof   ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^397^398^399^^^373^400^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  >  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^397^398^399^^^373^400^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  >=  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^397^398^399^^^373^400^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ) + "/" + name + "[" +  ( index  &  1 )  + "]" ) ;^397^398^399^^^373^400^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "ctory couldactory could not create a child node for path: " + asPath (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^397^398^399^^^373^400^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ) + "" + name + "[" +  ( index + 1 )  + "]" ) ;^397^398^399^^^373^400^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P8_Replace_Mix]^return ;^397^398^399^^^373^400^throw new JXPathAbstractFactoryException ( "Factory could not create a child node for path: " + asPath (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P7_Replace_Invocation]^"Factory could not create a child node for path: " + getLanguage (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^398^399^^^^373^400^"Factory could not create a child node for path: " + asPath (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P14_Delete_Statement]^^398^399^400^^^373^400^"Factory could not create a child node for path: " + asPath (  ) + "/" + name + "[" +  ( index + 1 )  + "]" ) ; }^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] NodeIterator  it  boolean  success  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  int  index  NodeTest  nodeTest  
[P5_Replace_Variable]^NodePointer ptr = createChild (  name, index ) ;^405^^^^^402^408^NodePointer ptr = createChild ( context, name, index ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  NodePointer  ptr  Map  namespaces  long  serialVersionUID  int  index  
[P5_Replace_Variable]^NodePointer ptr = createChild ( context,  index ) ;^405^^^^^402^408^NodePointer ptr = createChild ( context, name, index ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  NodePointer  ptr  Map  namespaces  long  serialVersionUID  int  index  
[P5_Replace_Variable]^NodePointer ptr = createChild ( context, name ) ;^405^^^^^402^408^NodePointer ptr = createChild ( context, name, index ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  NodePointer  ptr  Map  namespaces  long  serialVersionUID  int  index  
[P5_Replace_Variable]^NodePointer ptr = createChild ( name, context, index ) ;^405^^^^^402^408^NodePointer ptr = createChild ( context, name, index ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  NodePointer  ptr  Map  namespaces  long  serialVersionUID  int  index  
[P5_Replace_Variable]^NodePointer ptr = createChild ( index, name, context ) ;^405^^^^^402^408^NodePointer ptr = createChild ( context, name, index ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  NodePointer  ptr  Map  namespaces  long  serialVersionUID  int  index  
[P7_Replace_Invocation]^NodePointer ptr = childIterator ( context, name, index ) ;^405^^^^^402^408^NodePointer ptr = createChild ( context, name, index ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  NodePointer  ptr  Map  namespaces  long  serialVersionUID  int  index  
[P11_Insert_Donor_Statement]^NodeIterator it = childIterator ( nodeTest, false, null ) ;NodePointer ptr = createChild ( context, name, index ) ;^405^^^^^402^408^NodePointer ptr = createChild ( context, name, index ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  NodePointer  ptr  Map  namespaces  long  serialVersionUID  int  index  
[P5_Replace_Variable]^NodePointer ptr = createChild ( context, index, name ) ;^405^^^^^402^408^NodePointer ptr = createChild ( context, name, index ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  NodePointer  ptr  Map  namespaces  long  serialVersionUID  int  index  
[P14_Delete_Statement]^^405^406^^^^402^408^NodePointer ptr = createChild ( context, name, index ) ; ptr.setValue ( value ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  NodePointer  ptr  Map  namespaces  long  serialVersionUID  int  index  
[P7_Replace_Invocation]^ptr.NodePointer ( value ) ;^406^^^^^402^408^ptr.setValue ( value ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  NodePointer  ptr  Map  namespaces  long  serialVersionUID  int  index  
[P14_Delete_Statement]^^406^407^^^^402^408^ptr.setValue ( value ) ; return ptr;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  NodePointer  ptr  Map  namespaces  long  serialVersionUID  int  index  
[P11_Insert_Donor_Statement]^return stringValue ( node ) ;ptr.setValue ( value ) ;^406^^^^^402^408^ptr.setValue ( value ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  NodePointer  ptr  Map  namespaces  long  serialVersionUID  int  index  
[P11_Insert_Donor_Statement]^node.setNodeValue ( string ) ;ptr.setValue ( value ) ;^406^^^^^402^408^ptr.setValue ( value ) ;^[CLASS] DOMNodePointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Object  value  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  NodePointer  ptr  Map  namespaces  long  serialVersionUID  int  index  
[P2_Replace_Operator]^if  ( ! ( node  <  Element )  )  {^411^^^^^410^432^if  ( ! ( node instanceof Element )  )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^if  (  ( node instanceof Element )  )  {^411^^^^^410^432^if  ( ! ( node instanceof Element )  )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( ! ( object instanceof DOMNodePointer )  )  {^411^^^^^410^432^if  ( ! ( node instanceof Element )  )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( aNode instanceof Document )  {^411^^^^^410^432^if  ( ! ( node instanceof Element )  )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( node instanceof Document )  {^411^^^^^410^432^if  ( ! ( node instanceof Element )  )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P15_Unwrap_Block]^return super.createAttribute(context, name);^411^412^413^^^410^432^if  ( ! ( node instanceof Element )  )  { return super.createAttribute ( context, name ) ; }^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P16_Remove_Block]^^411^412^413^^^410^432^if  ( ! ( node instanceof Element )  )  { return super.createAttribute ( context, name ) ; }^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P5_Replace_Variable]^return super.createAttribute (  name ) ;^412^^^^^410^432^return super.createAttribute ( context, name ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P5_Replace_Variable]^return super.createAttribute ( context ) ;^412^^^^^410^432^return super.createAttribute ( context, name ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P14_Delete_Statement]^^412^^^^^410^432^return super.createAttribute ( context, name ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^Element e =  ( Element )  n;Element element =  ( Element )  node;^414^^^^^410^432^Element element =  ( Element )  node;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^Element element = document.getElementById ( id ) ;Element element =  ( Element )  node;^414^^^^^410^432^Element element =  ( Element )  node;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P1_Replace_Type]^char prefix = name.getPrefix (  ) ;^415^^^^^410^432^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^String prefix = name .getName (  )  ;^415^^^^^410^432^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;String prefix = name.getPrefix (  ) ;^415^^^^^410^432^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;String prefix = name.getPrefix (  ) ;^415^^^^^410^432^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^String prefix = getPrefix ( node ) ;String prefix = name.getPrefix (  ) ;^415^^^^^410^432^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^String nsURI = getNamespaceURI (  ) ;String prefix = name.getPrefix (  ) ;^415^^^^^410^432^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^String testPrefix = testName.getPrefix (  ) ;String prefix = name.getPrefix (  ) ;^415^^^^^410^432^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;String prefix = name.getPrefix (  ) ;^415^^^^^410^432^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^String nm = n.getNodeName (  ) ;String prefix = name.getPrefix (  ) ;^415^^^^^410^432^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;String prefix = name.getPrefix (  ) ;^415^^^^^410^432^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^String prefix = node.getPrefix (  ) ;String prefix = name.getPrefix (  ) ;^415^^^^^410^432^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^String uri = element.getNamespaceURI (  ) ;String prefix = name.getPrefix (  ) ;^415^^^^^410^432^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;String prefix = name.getPrefix (  ) ;^415^^^^^410^432^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^String localName = node.getLocalName (  ) ;String prefix = name.getPrefix (  ) ;^415^^^^^410^432^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P14_Delete_Statement]^^415^^^^^410^432^String prefix = name.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P2_Replace_Operator]^if  ( prefix == null )  {^416^^^^^410^432^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P6_Replace_Expression]^if  ( ns == null )  {^416^^^^^410^432^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P6_Replace_Expression]^if  ( "Unknown namespace prefix: " + prefix )  {^416^^^^^410^432^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^if  ( prefix != false )  {^416^^^^^410^432^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( factory == null )  {^416^^^^^410^432^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( element != null )  {^416^^^^^410^432^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( parent != null )  {^416^^^^^410^432^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( attr != null )  {^416^^^^^410^432^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( current == null )  {^416^^^^^410^432^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( namespaces == null )  {^416^^^^^410^432^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( uri != null )  {^416^^^^^410^432^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( s2 == null )  {^416^^^^^410^432^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( namespace == null )  {^416^^^^^410^432^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( localName != null )  {^416^^^^^410^432^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( parent == null )  {^416^^^^^410^432^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( s1 == null )  {^416^^^^^410^432^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( id != null )  {^416^^^^^410^432^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P15_Unwrap_Block]^java.lang.String ns = getNamespaceURI(prefix); if (ns == null) {    throw new org.apache.commons.jxpath.JXPathException(("Unknown namespace prefix: " + prefix));}; element.setAttributeNS(ns, name.toString(), "");^416^417^418^419^420^410^432^if  ( prefix != null )  { String ns = getNamespaceURI ( prefix ) ; if  ( ns == null )  { throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ; }^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P16_Remove_Block]^^416^417^418^419^420^410^432^if  ( prefix != null )  { String ns = getNamespaceURI ( prefix ) ; if  ( ns == null )  { throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ; }^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !element.setAttribute ( name.getName (  )  )  )  {^425^^^^^410^432^if  ( !element.hasAttribute ( name.getName (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !element .getAttribute ( current )   )  {^425^^^^^410^432^if  ( !element.hasAttribute ( name.getName (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !element.hasAttribute ( name .QName ( defaultNamespace , prefix )   )  )  {^425^^^^^410^432^if  ( !element.hasAttribute ( name.getName (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P15_Unwrap_Block]^element.setAttribute(name.getName(), "");^425^426^427^^^410^432^if  ( !element.hasAttribute ( name.getName (  )  )  )  { element.setAttribute ( name.getName (  ) , "" ) ; }^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P16_Remove_Block]^^425^426^427^^^410^432^if  ( !element.hasAttribute ( name.getName (  )  )  )  { element.setAttribute ( name.getName (  ) , "" ) ; }^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P7_Replace_Invocation]^element.setAttributeNS ( name.getName (  ) , "" ) ;^426^^^^^410^432^element.setAttribute ( name.getName (  ) , "" ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P7_Replace_Invocation]^element.setAttribute ( name .QName ( s2 , namespace )  , "" ) ;^426^^^^^410^432^element.setAttribute ( name.getName (  ) , "" ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^element.setAttribute ( name .QName ( ln , XML_NAMESPACE_URI )  , "" ) ;^426^^^^^410^432^element.setAttribute ( name.getName (  ) , "" ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P14_Delete_Statement]^^426^^^^^410^432^element.setAttribute ( name.getName (  ) , "" ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^element.setAttributeNS ( ns, name.toString (  ) , "" ) ;element.setAttribute ( name.getName (  ) , "" ) ;^426^^^^^410^432^element.setAttribute ( name.getName (  ) , "" ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P12_Insert_Condition]^if  ( !element.hasAttribute ( name.getName (  )  )  )  { element.setAttribute ( name.getName (  ) , "" ) ; }^426^^^^^410^432^element.setAttribute ( name.getName (  ) , "" ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P7_Replace_Invocation]^element.setAttribute ( name .QName ( id , s2 )  , "" ) ;^426^^^^^410^432^element.setAttribute ( name.getName (  ) , "" ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P2_Replace_Operator]^if  ( ns != null )  {^418^^^^^410^432^if  ( ns == null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P5_Replace_Variable]^if  ( testPI == null )  {^418^^^^^410^432^if  ( ns == null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P6_Replace_Expression]^if  ( "Unknown namespace prefix: " + prefix )  {^418^^^^^410^432^if  ( ns == null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^if  ( ns == this )  {^418^^^^^410^432^if  ( ns == null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( factory == null )  {^418^^^^^410^432^if  ( ns == null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( element != null )  {^418^^^^^410^432^if  ( ns == null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( parent != null )  {^418^^^^^410^432^if  ( ns == null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( attr != null )  {^418^^^^^410^432^if  ( ns == null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( current == null )  {^418^^^^^410^432^if  ( ns == null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( namespaces == null )  {^418^^^^^410^432^if  ( ns == null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( uri != null )  {^418^^^^^410^432^if  ( ns == null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( s2 == null )  {^418^^^^^410^432^if  ( ns == null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( namespace == null )  {^418^^^^^410^432^if  ( ns == null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( prefix == null )  {^418^^^^^410^432^if  ( ns == null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( localName != null )  {^418^^^^^410^432^if  ( ns == null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( parent == null )  {^418^^^^^410^432^if  ( ns == null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( s1 == null )  {^418^^^^^410^432^if  ( ns == null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( id != null )  {^418^^^^^410^432^if  ( ns == null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( n == node1 )  {^418^^^^^410^432^if  ( ns == null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( prefix != null )  {^418^^^^^410^432^if  ( ns == null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( node1 == node2 )  {^418^^^^^410^432^if  ( ns == null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P15_Unwrap_Block]^throw new org.apache.commons.jxpath.JXPathException(("Unknown namespace prefix: " + prefix));^418^419^420^421^^410^432^if  ( ns == null )  { throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ; }^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P16_Remove_Block]^^418^419^420^421^^410^432^if  ( ns == null )  { throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ; }^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P13_Insert_Block]^if  ( factory == null )  {     throw new JXPathException (  (  ( "Factory is not set on the JXPathContext - " + "cannot create path: " )  +  ( asPath (  )  )  )  ) ; }^418^^^^^410^432^[Delete]^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P13_Insert_Block]^if  ( parent == null )  {     throw new JXPathException ( "Cannot remove root DOM node" ) ; }^418^^^^^410^432^[Delete]^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P2_Replace_Operator]^throw new JXPathException ( "Unknown namespace prefix: "  >  prefix ) ;^419^420^^^^410^432^throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P3_Replace_Literal]^throw new JXPathException ( "known" + prefix ) ;^419^420^^^^410^432^throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P5_Replace_Variable]^throw new JXPathException ( "Unknown namespace testPI: " + prefix ) ;^419^420^^^^410^432^throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^throw new JXPathException ( "Unknown namespace qname: " + prefix ) ;^419^420^^^^410^432^throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P13_Insert_Block]^if  ( ns == null )  {     throw new JXPathException (  ( "Unknown namespace prefix: " + prefix )  ) ; }^419^^^^^410^432^[Delete]^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P2_Replace_Operator]^throw new JXPathException ( "Unknown namespace prefix: "  <<  prefix ) ;^419^420^^^^410^432^throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P3_Replace_Literal]^throw new JXPathException ( "wn n" + prefix ) ;^419^420^^^^410^432^throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P5_Replace_Variable]^throw new JXPathException ( "Unknown namespace ns: " + prefix ) ;^419^420^^^^410^432^throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P2_Replace_Operator]^throw new JXPathException ( "Unknown namespace prefix: "  ==  prefix ) ;^419^420^^^^410^432^throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P3_Replace_Literal]^throw new JXPathException ( "Unknown namespace prefix: nknown namespace pref" + prefix ) ;^419^420^^^^410^432^throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P1_Replace_Type]^char ns = getNamespaceURI ( prefix ) ;^417^^^^^410^432^String ns = getNamespaceURI ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P5_Replace_Variable]^String ns = getNamespaceURI ( nodeNS ) ;^417^^^^^410^432^String ns = getNamespaceURI ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P7_Replace_Invocation]^String ns = namespacePointer ( prefix ) ;^417^^^^^410^432^String ns = getNamespaceURI ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^String ns = getNamespaceURI ( qname ) ;^417^^^^^410^432^String ns = getNamespaceURI ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;String ns = getNamespaceURI ( prefix ) ;^417^^^^^410^432^String ns = getNamespaceURI ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^String nsURI = getNamespaceURI (  ) ;String ns = getNamespaceURI ( prefix ) ;^417^^^^^410^432^String ns = getNamespaceURI ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^String nm = n.getNodeName (  ) ;String ns = getNamespaceURI ( prefix ) ;^417^^^^^410^432^String ns = getNamespaceURI ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^String uri = element.getNamespaceURI (  ) ;String ns = getNamespaceURI ( prefix ) ;^417^^^^^410^432^String ns = getNamespaceURI ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;String ns = getNamespaceURI ( prefix ) ;^417^^^^^410^432^String ns = getNamespaceURI ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P3_Replace_Literal]^throw new JXPathException ( "nkno" + prefix ) ;^419^420^^^^410^432^throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P5_Replace_Variable]^throw new JXPathException ( "Unknown namespace nodeNS: " + prefix ) ;^419^420^^^^410^432^throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P5_Replace_Variable]^String ns = getNamespaceURI ( s2 ) ;^417^^^^^410^432^String ns = getNamespaceURI ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P14_Delete_Statement]^^417^^^^^410^432^String ns = getNamespaceURI ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^return getDefaultNamespaceURI (  ) ;String ns = getNamespaceURI ( prefix ) ;^417^^^^^410^432^String ns = getNamespaceURI ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^return getNamespaceURI ( node ) ;String ns = getNamespaceURI ( prefix ) ;^417^^^^^410^432^String ns = getNamespaceURI ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P5_Replace_Variable]^element.setAttributeNS ( nodeNS, name.toString (  ) , "" ) ;^422^^^^^410^432^element.setAttributeNS ( ns, name.toString (  ) , "" ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P5_Replace_Variable]^element.setAttributeNS (  name.toString (  ) , "" ) ;^422^^^^^410^432^element.setAttributeNS ( ns, name.toString (  ) , "" ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P5_Replace_Variable]^element.setAttributeNS ( ns.toString (  ) , "" ) ;^422^^^^^410^432^element.setAttributeNS ( ns, name.toString (  ) , "" ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P5_Replace_Variable]^element.setAttributeNS ( name, ns.toString (  ) , "" ) ;^422^^^^^410^432^element.setAttributeNS ( ns, name.toString (  ) , "" ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^element.setAttributeNS ( nodePI, name.toString (  ) , "" ) ;^422^^^^^410^432^element.setAttributeNS ( ns, name.toString (  ) , "" ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P14_Delete_Statement]^^422^^^^^410^432^element.setAttributeNS ( ns, name.toString (  ) , "" ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^element.setAttribute ( name.getName (  ) , "" ) ;element.setAttributeNS ( ns, name.toString (  ) , "" ) ;^422^^^^^410^432^element.setAttributeNS ( ns, name.toString (  ) , "" ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P5_Replace_Variable]^if  ( nodeNS == null )  {^418^^^^^410^432^if  ( ns == null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^if  ( ns == true )  {^418^^^^^410^432^if  ( ns == null )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P2_Replace_Operator]^throw new JXPathException ( "Unknown namespace prefix: "  &  prefix ) ;^419^420^^^^410^432^throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P2_Replace_Operator]^throw new JXPathException ( "Unknown namespace prefix: "  &&  prefix ) ;^419^420^^^^410^432^throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P3_Replace_Literal]^throw new JXPathException ( "nknown nnknown namespace prefix: " + prefix ) ;^419^420^^^^410^432^throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P5_Replace_Variable]^throw new JXPathException ( "Unknown namespace nodePI: " + prefix ) ;^419^420^^^^410^432^throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^if  ( !element .getAttribute ( namespace )   )  {^425^^^^^410^432^if  ( !element.hasAttribute ( name.getName (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P7_Replace_Invocation]^element.setAttribute ( name .QName ( s2 , nodePI )  , "" ) ;^426^^^^^410^432^element.setAttribute ( name.getName (  ) , "" ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^element.setAttribute ( name .QName ( testPrefix , XML_NAMESPACE_URI )  , "" ) ;^426^^^^^410^432^element.setAttribute ( name.getName (  ) , "" ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P3_Replace_Literal]^throw new JXPathException ( "Unknown namespace prefix: n na" + prefix ) ;^419^420^^^^410^432^throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P5_Replace_Variable]^String ns = getNamespaceURI ( string ) ;^417^^^^^410^432^String ns = getNamespaceURI ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^String ns = getNamespaceURI ( testPrefix ) ;^417^^^^^410^432^String ns = getNamespaceURI ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P2_Replace_Operator]^throw new JXPathException ( "Unknown namespace prefix: "  <=  prefix ) ;^419^420^^^^410^432^throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P3_Replace_Literal]^throw new JXPathException ( "Unknown namespace prefix: pace prefi" + prefix ) ;^419^420^^^^410^432^throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P5_Replace_Variable]^throw new JXPathException ( "Unknown namespace s2: " + prefix ) ;^419^420^^^^410^432^throw new JXPathException ( "Unknown namespace prefix: " + prefix ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^element.setAttributeNS ( s1, name.toString (  ) , "" ) ;^422^^^^^410^432^element.setAttributeNS ( ns, name.toString (  ) , "" ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( !element .getAttribute ( qname )   )  {^425^^^^^410^432^if  ( !element.hasAttribute ( name.getName (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^if  ( !element.hasAttribute ( name .QName ( ln , lang )   )  )  {^425^^^^^410^432^if  ( !element.hasAttribute ( name.getName (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P7_Replace_Invocation]^NodeIterator it = getAbstractFactory ( name ) ;^429^^^^^410^432^NodeIterator it = attributeIterator ( name ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^NodeIterator it = childIterator ( nodeTest, false, null ) ;NodeIterator it = attributeIterator ( name ) ;^429^^^^^410^432^NodeIterator it = attributeIterator ( name ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P14_Delete_Statement]^^429^^^^^410^432^NodeIterator it = attributeIterator ( name ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P3_Replace_Literal]^it.setPosition ( -7 ) ;^430^^^^^410^432^it.setPosition ( 1 ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P14_Delete_Statement]^^430^431^^^^410^432^it.setPosition ( 1 ) ; return it.getNodePointer (  ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P7_Replace_Invocation]^return it.setPosition (  ) ;^431^^^^^410^432^return it.getNodePointer (  ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P14_Delete_Statement]^^431^^^^^410^432^return it.getNodePointer (  ) ;^[CLASS] DOMNodePointer  [METHOD] createAttribute [RETURN_TYPE] NodePointer   JXPathContext context QName name [VARIABLES] NodeIterator  it  boolean  JXPathContext  context  QName  name  Node  aNode  child  n  node  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  Map  namespaces  long  serialVersionUID  
[P7_Replace_Invocation]^Node parent = node.getNodeType (  ) ;^435^^^^^434^440^Node parent = node.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^Node parent = valueNode.getNodeType (  ) ;^435^^^^^434^440^Node parent = node.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int type = node.getNodeType (  ) ;Node parent = node.getParentNode (  ) ;^435^^^^^434^440^Node parent = node.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^Node current = node.getFirstChild (  ) ;Node parent = node.getParentNode (  ) ;^435^^^^^434^440^Node parent = node.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int t2 = node2.getNodeType (  ) ;Node parent = node.getParentNode (  ) ;^435^^^^^434^440^Node parent = node.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^NodeList children = node.getChildNodes (  ) ;Node parent = node.getParentNode (  ) ;^435^^^^^434^440^Node parent = node.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;Node parent = node.getParentNode (  ) ;^435^^^^^434^440^Node parent = node.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;Node parent = node.getParentNode (  ) ;^435^^^^^434^440^Node parent = node.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String prefix = name.getPrefix (  ) ;Node parent = node.getParentNode (  ) ;^435^^^^^434^440^Node parent = node.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int nodeType = node.getNodeType (  ) ;Node parent = node.getParentNode (  ) ;^435^^^^^434^440^Node parent = node.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int t1 = node1.getNodeType (  ) ;Node parent = node.getParentNode (  ) ;^435^^^^^434^440^Node parent = node.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^Node n = node.getPreviousSibling (  ) ;Node parent = node.getParentNode (  ) ;^435^^^^^434^440^Node parent = node.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^NodeList list = node.getChildNodes (  ) ;Node parent = node.getParentNode (  ) ;^435^^^^^434^440^Node parent = node.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^QName testName = nodeNameTest.getNodeName (  ) ;Node parent = node.getParentNode (  ) ;^435^^^^^434^440^Node parent = node.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String prefix = node.getPrefix (  ) ;Node parent = node.getParentNode (  ) ;^435^^^^^434^440^Node parent = node.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^Node parent = valueNode.getParentNode (  ) ;^435^^^^^434^440^Node parent = node.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^435^^^^^434^440^Node parent = node.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^aNode = aNode.getParentNode (  ) ;Node parent = node.getParentNode (  ) ;^435^^^^^434^440^Node parent = node.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^document = node.getOwnerDocument (  ) ;Node parent = node.getParentNode (  ) ;^435^^^^^434^440^Node parent = node.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^children = valueNode.getChildNodes (  ) ;Node parent = node.getParentNode (  ) ;^435^^^^^434^440^Node parent = node.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^namespace = attr.getValue (  ) ;Node parent = node.getParentNode (  ) ;^435^^^^^434^440^Node parent = node.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^n = n.getParentNode (  ) ;Node parent = node.getParentNode (  ) ;^435^^^^^434^440^Node parent = node.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( parent != null )  {^436^^^^^434^440^if  ( parent == null )  {^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( textNode == null )  {^436^^^^^434^440^if  ( parent == null )  {^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^if  ( parent == false )  {^436^^^^^434^440^if  ( parent == null )  {^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( factory == null )  {^436^^^^^434^440^if  ( parent == null )  {^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( element != null )  {^436^^^^^434^440^if  ( parent == null )  {^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( attr != null )  {^436^^^^^434^440^if  ( parent == null )  {^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( current == null )  {^436^^^^^434^440^if  ( parent == null )  {^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( namespaces == null )  {^436^^^^^434^440^if  ( parent == null )  {^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( uri != null )  {^436^^^^^434^440^if  ( parent == null )  {^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( s2 == null )  {^436^^^^^434^440^if  ( parent == null )  {^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( namespace == null )  {^436^^^^^434^440^if  ( parent == null )  {^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( prefix == null )  {^436^^^^^434^440^if  ( parent == null )  {^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( object == this )  {^436^^^^^434^440^if  ( parent == null )  {^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( localName != null )  {^436^^^^^434^440^if  ( parent == null )  {^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( ns == null )  {^436^^^^^434^440^if  ( parent == null )  {^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( current == node1 )  {^436^^^^^434^440^if  ( parent == null )  {^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( s1 == null )  {^436^^^^^434^440^if  ( parent == null )  {^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( id != null )  {^436^^^^^434^440^if  ( parent == null )  {^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( prefix != null )  {^436^^^^^434^440^if  ( parent == null )  {^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P15_Unwrap_Block]^throw new org.apache.commons.jxpath.JXPathException("Cannot remove root DOM node");^436^437^438^^^434^440^if  ( parent == null )  { throw new JXPathException  (" ")  ; }^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P16_Remove_Block]^^436^437^438^^^434^440^if  ( parent == null )  { throw new JXPathException  (" ")  ; }^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( factory == null )  {     throw new JXPathException (  (  ( "Factory is not set on the JXPathContext - " + "cannot create path: " )  +  ( asPath (  )  )  )  ) ; }^436^^^^^434^440^[Delete]^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( ns == null )  {     throw new JXPathException (  ( "Unknown namespace prefix: " + prefix )  ) ; }^436^^^^^434^440^[Delete]^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( parent == null )  {     throw new JXPathException ( "Cannot remove root DOM node" ) ; }^437^^^^^434^440^[Delete]^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( ns == null )  {     throw new JXPathException (  ( "Unknown namespace prefix: " + prefix )  ) ; }^437^^^^^434^440^[Delete]^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^parent.removeChild ( valueNode ) ;^439^^^^^434^440^parent.removeChild ( node ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^parent.appendChild ( node ) ;^439^^^^^434^440^parent.removeChild ( node ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^parent.removeChild ( textNode ) ;^439^^^^^434^440^parent.removeChild ( node ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^439^^^^^434^440^parent.removeChild ( node ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^node.appendChild ( textNode ) ;parent.removeChild ( node ) ;^439^^^^^434^440^parent.removeChild ( node ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^node.getParentNode (  ) .removeChild ( node ) ;parent.removeChild ( node ) ;^439^^^^^434^440^parent.removeChild ( node ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^node.removeChild ( child ) ;parent.removeChild ( node ) ;^439^^^^^434^440^parent.removeChild ( node ) ;^[CLASS] DOMNodePointer  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  prefix  qname  s1  s2  string  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( id == null )  {^443^^^^^428^458^if  ( id != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( ns != null )  {^443^^^^^428^458^if  ( id != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P6_Replace_Expression]^if  ( "id('" + escape(id) + "')" )  {^443^^^^^428^458^if  ( id != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P6_Replace_Expression]^if  ( "id ( '" + escape ( id ) )  {^443^^^^^428^458^if  ( id != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^if  ( id != false )  {^443^^^^^428^458^if  ( id != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( factory == null )  {^443^^^^^428^458^if  ( id != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( element != null )  {^443^^^^^428^458^if  ( id != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( parent != null )  {^443^^^^^428^458^if  ( id != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( attr != null )  {^443^^^^^428^458^if  ( id != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( current == null )  {^443^^^^^428^458^if  ( id != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( uri != null )  {^443^^^^^428^458^if  ( id != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( s2 == null )  {^443^^^^^428^458^if  ( id != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( prefix == null )  {^443^^^^^428^458^if  ( id != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( localName != null )  {^443^^^^^428^458^if  ( id != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( ns == null )  {^443^^^^^428^458^if  ( id != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( parent == null )  {^443^^^^^428^458^if  ( id != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( s1 == null )  {^443^^^^^428^458^if  ( id != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( n == node1 )  {^443^^^^^428^458^if  ( id != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( prefix != null )  {^443^^^^^428^458^if  ( id != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P15_Unwrap_Block]^return ("id('" + (escape(id))) + "')";^443^444^445^^^428^458^if  ( id != null )  { return "id ( '" + escape ( id )  + "' ) "; }^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P16_Remove_Block]^^443^444^445^^^428^458^if  ( id != null )  { return "id ( '" + escape ( id )  + "' ) "; }^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( attr != null )  {     return attr.getValue (  ) ; }^443^^^^^428^458^[Delete]^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^return "id ( '" + escape ( id )  &&  + "' ) ";^444^^^^^429^459^return "id ( '" + escape ( id )  + "' ) ";^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^return "id ( '"  |  escape ( id )  + "' ) ";^444^^^^^429^459^return "id ( '" + escape ( id )  + "' ) ";^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^return "id ( '" + escape ( nsURI )  + "' ) ";^444^^^^^429^459^return "id ( '" + escape ( id )  + "' ) ";^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^return "id ( '" + getLanguage ( id )  + "' ) ";^444^^^^^429^459^return "id ( '" + escape ( id )  + "' ) ";^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  (  ( id )  != null )  {     return  ( "id ( '" +  ( escape ( id )  )  )  + "' ) "; }^444^^^^^429^459^[Delete]^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^return "id ( '" + escape ( prefix )  + "' ) ";^444^^^^^429^459^return "id ( '" + escape ( id )  + "' ) ";^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^return "id ( '" + getLanguage ( nsURI )  + "' ) ";^444^^^^^429^459^return "id ( '" + escape ( id )  + "' ) ";^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^444^^^^^429^459^return "id ( '" + escape ( id )  + "' ) ";^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^return "id ( '" + escape ( id )  |  + "' ) ";^444^^^^^429^459^return "id ( '" + escape ( id )  + "' ) ";^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^return "id ( '"  &  escape ( id )  + "' ) ";^444^^^^^429^459^return "id ( '" + escape ( id )  + "' ) ";^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^return "id ( '" + escape ( ns )  + "' ) ";^444^^^^^429^459^return "id ( '" + escape ( id )  + "' ) ";^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^return "id ( '" + getLanguage ( ns )  + "' ) ";^444^^^^^429^459^return "id ( '" + escape ( id )  + "' ) ";^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P4_Replace_Constructor]^StringBuffer buffer = new StringBuffer ( 16 )  ;^447^^^^^432^462^StringBuffer buffer = new StringBuffer (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String current = getLanguage (  ) ;StringBuffer buffer = new StringBuffer (  ) ;^447^^^^^432^462^StringBuffer buffer = new StringBuffer (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^StringBuffer buf = new StringBuffer ( 16 ) ;StringBuffer buffer = new StringBuffer (  ) ;^447^^^^^432^462^StringBuffer buffer = new StringBuffer (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( parent == null )  {^448^^^^^433^463^if  ( parent != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^if  ( parent != this )  {^448^^^^^433^463^if  ( parent != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( factory == null )  {^448^^^^^433^463^if  ( parent != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( element != null )  {^448^^^^^433^463^if  ( parent != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( attr != null )  {^448^^^^^433^463^if  ( parent != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( current == null )  {^448^^^^^433^463^if  ( parent != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( namespaces == null )  {^448^^^^^433^463^if  ( parent != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( uri != null )  {^448^^^^^433^463^if  ( parent != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( s2 == null )  {^448^^^^^433^463^if  ( parent != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( namespace == null )  {^448^^^^^433^463^if  ( parent != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( prefix == null )  {^448^^^^^433^463^if  ( parent != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( localName != null )  {^448^^^^^433^463^if  ( parent != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( ns == null )  {^448^^^^^433^463^if  ( parent != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( current == node1 )  {^448^^^^^433^463^if  ( parent != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( s1 == null )  {^448^^^^^433^463^if  ( parent != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( id != null )  {^448^^^^^433^463^if  ( parent != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( prefix != null )  {^448^^^^^433^463^if  ( parent != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P15_Unwrap_Block]^buffer.append(parent.asPath());^448^449^450^^^433^463^if  ( parent != null )  { buffer.append ( parent.asPath (  )  ) ; }^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P16_Remove_Block]^^448^449^450^^^433^463^if  ( parent != null )  { buffer.append ( parent.asPath (  )  ) ; }^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( prefix != null )  {     return prefix; }^448^^^^^433^463^[Delete]^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( attr != null )  {     return attr.getValue (  ) ; }^448^^^^^433^463^[Delete]^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( current == null )  {     return super.isLanguage ( lang ) ; }^448^^^^^433^463^[Delete]^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^buffer.append ( parent .escape ( ln )   ) ;^449^^^^^434^464^buffer.append ( parent.asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^buffer.append ( 2.asPath (  )  ) ;^449^^^^^434^464^buffer.append ( parent.asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^449^^^^^434^464^buffer.append ( parent.asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( parent.asPath (  )  ) ;^449^^^^^434^464^buffer.append ( parent.asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ln ) ;buffer.append ( parent.asPath (  )  ) ;^449^^^^^434^464^buffer.append ( parent.asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( parent.asPath (  )  ) ;^449^^^^^434^464^buffer.append ( parent.asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionByName (  )  ) ;buffer.append ( parent.asPath (  )  ) ;^449^^^^^434^464^buffer.append ( parent.asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( parent.asPath (  )  ) ;^449^^^^^434^464^buffer.append ( parent.asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buf.append ( child.getNodeValue (  )  ) ;buffer.append ( parent.asPath (  )  ) ;^449^^^^^434^464^buffer.append ( parent.asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfElement (  )  ) ;buffer.append ( parent.asPath (  )  ) ;^449^^^^^434^464^buffer.append ( parent.asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( parent.asPath (  )  ) ;^449^^^^^434^464^buffer.append ( parent.asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( parent.asPath (  )  ) ;^449^^^^^434^464^buffer.append ( parent.asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/processing-instruction ( \'" ) ;buffer.append ( parent.asPath (  )  ) ;^449^^^^^434^464^buffer.append ( parent.asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buf.append ( stringValue ( child )  ) ;buffer.append ( parent.asPath (  )  ) ;^449^^^^^434^464^buffer.append ( parent.asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( parent.asPath (  )  ) ;^449^^^^^434^464^buffer.append ( parent.asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( target ) .append ( "' ) " ) ;buffer.append ( parent.asPath (  )  ) ;^449^^^^^434^464^buffer.append ( parent.asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( parent.asPath (  )  ) ;^449^^^^^434^464^buffer.append ( parent.asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^buffer.append ( parent .escape ( target )   ) ;^449^^^^^434^464^buffer.append ( parent.asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^buffer .toString (  )  ;^449^^^^^434^464^buffer.append ( parent.asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( parent  >=  DOMNodePointer )  {^456^^^^^441^471^if  ( parent instanceof DOMNodePointer )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P6_Replace_Expression]^if  ( buffer.length() == 0 || length() - 1))) != '/' )  {^456^^^^^441^471^if  ( parent instanceof DOMNodePointer )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P6_Replace_Expression]^if  ( buffer.length (  )  == 0 )  {^456^^^^^441^471^if  ( parent instanceof DOMNodePointer )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P6_Replace_Expression]^if  ( buffer.charAt (  (  ( buffer.length (  )  )  - 1 )  )  != '/' )  {^456^^^^^441^471^if  ( parent instanceof DOMNodePointer )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P6_Replace_Expression]^if  ( buffer.length (  )  - 1 )  {^456^^^^^441^471^if  ( parent instanceof DOMNodePointer )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P6_Replace_Expression]^if  ( prefix != null )  {^456^^^^^441^471^if  ( parent instanceof DOMNodePointer )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( ! ( object instanceof DOMNodePointer )  )  {^456^^^^^441^471^if  ( parent instanceof DOMNodePointer )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( aNode instanceof Document )  {^456^^^^^441^471^if  ( parent instanceof DOMNodePointer )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( node instanceof Document )  {^456^^^^^441^471^if  ( parent instanceof DOMNodePointer )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( value instanceof Node )  {^456^^^^^441^471^if  ( parent instanceof DOMNodePointer )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P15_Unwrap_Block]^if (((buffer.length()) == 0) || ((buffer.charAt(((buffer.length()) - 1))) != '/')) {    buffer.append('/');}; java.lang.String ln = org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.getLocalName(node); java.lang.String nsURI = getNamespaceURI(); if (org.apache.commons.jxpath.ri.model.dom.DOMNodePointer.equalStrings(nsURI, getNamespaceResolver().getDefaultNamespaceURI())) {    buffer.append(ln);    buffer.append('[');    buffer.append(getRelativePositionByName()).append(']');}else {    java.lang.String prefix = getNamespaceResolver().getPrefix(nsURI);    if (prefix != null) {        buffer.append(prefix);        buffer.append(':');        buffer.append(ln);        buffer.append('[');        buffer.append(getRelativePositionByName());        buffer.append(']');    }else {        buffer.append("node()");        buffer.append('[');        buffer.append(getRelativePositionOfElement());        buffer.append(']');    }};^456^457^458^459^460^441^471^if  ( parent instanceof DOMNodePointer )  { if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  { buffer.append ( '/' ) ; }^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P16_Remove_Block]^^456^457^458^459^460^441^471^if  ( parent instanceof DOMNodePointer )  { if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  { buffer.append ( '/' ) ; }^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( buffer.length (  )  == 0 && buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^457^458^^^^442^472^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( buffer.length (  )  >= 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^457^458^^^^442^472^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  <= '/' )  {^457^458^^^^442^472^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )   >>  1 )  != '/' )  {^457^458^^^^442^472^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^if  ( buffer.length (  )  == -2 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^457^458^^^^442^472^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )   )  != '/' )  {^457^458^^^^442^472^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^if  ( buffer.length() + 8  == 0 || buffer.charAt ( buffer.length() + 8  - 1 )  != '/' )  {^457^458^^^^442^472^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P6_Replace_Expression]^if  ( buffer.length (  )  == 0 ) {^457^458^^^^442^472^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P6_Replace_Expression]^if  (  buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^457^458^^^^442^472^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P6_Replace_Expression]^if  ( buffer.charAt (  (  ( buffer.length (  )  )  - 1 )  )  != '/' )  {^457^458^^^^442^472^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P6_Replace_Expression]^if  ( buffer.length (  )  - 1 )  {^457^458^^^^442^472^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^if  ( buffer.append (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^457^458^^^^442^472^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^if  ( buffer .startsWith ( XMLNS_NAMESPACE_URI )   == 0 || buffer.charAt ( buffer^457^458^^^^442^472^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P15_Unwrap_Block]^buffer.append('/');^457^458^459^460^^442^472^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  { buffer.append ( '/' ) ; }^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P16_Remove_Block]^^457^458^459^460^^442^472^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  { buffer.append ( '/' ) ; }^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^459^^^^^457^460^buffer.append ( '/' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( '/' ) ;^459^^^^^457^460^buffer.append ( '/' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ln ) ;buffer.append ( '/' ) ;^459^^^^^457^460^buffer.append ( '/' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( '/' ) ;^459^^^^^457^460^buffer.append ( '/' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( '/' ) ;^459^^^^^457^460^buffer.append ( '/' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( '/' ) ;^459^^^^^457^460^buffer.append ( '/' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( '/' ) ;^459^^^^^457^460^buffer.append ( '/' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( '/' ) ;^459^^^^^457^460^buffer.append ( '/' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( '/' ) ;^459^^^^^457^460^buffer.append ( '/' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( equalStrings ( ns, getNamespaceResolver (  ) .getDefaultNamespaceURI (  )  )  )  {^463^464^^^^448^478^if  ( equalStrings ( nsURI, getNamespaceResolver (  ) .getDefaultNamespaceURI (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( equalStrings (  getNamespaceResolver (  ) .getDefaultNamespaceURI (  )  )  )  {^463^464^^^^448^478^if  ( equalStrings ( nsURI, getNamespaceResolver (  ) .getDefaultNamespaceURI (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^if  ( isLanguage ( nsURI, getNamespaceResolver (  ) .getDefaultNamespaceURI (  )  )  )  {^463^464^^^^448^478^if  ( equalStrings ( nsURI, getNamespaceResolver (  ) .getDefaultNamespaceURI (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^if  ( equalStrings ( nsURI, getNamespaceResolver (  ) .getNamespaceResolver (  )  )  )  {^463^464^^^^448^478^if  ( equalStrings ( nsURI, getNamespaceResolver (  ) .getDefaultNamespaceURI (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^if  ( equalStrings ( nsURI, getNamespaceResolver (  )  .getNamespaceURI (  )   )  )  {^463^464^^^^448^478^if  ( equalStrings ( nsURI, getNamespaceResolver (  ) .getDefaultNamespaceURI (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^if  ( equalStrings ( nsURI, getDefaultNamespaceURI (  ) .getDefaultNamespaceURI (  )  )  )  {^463^464^^^^448^478^if  ( equalStrings ( nsURI, getNamespaceResolver (  ) .getDefaultNamespaceURI (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^if  ( equalStrings ( s1, getDefaultNamespaceURI (  ) .getDefaultNamespaceURI (  )  )  )  {^463^464^^^^448^478^if  ( equalStrings ( nsURI, getNamespaceResolver (  ) .getDefaultNamespaceURI (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P15_Unwrap_Block]^buffer.append(ln); buffer.append('['); buffer.append(getRelativePositionByName()).append(']');^463^464^465^466^467^448^478^if  ( equalStrings ( nsURI, getNamespaceResolver (  ) .getDefaultNamespaceURI (  )  )  )  { buffer.append ( ln ) ; buffer.append ( '[' ) ; buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ; }^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P16_Remove_Block]^^463^464^465^466^467^448^478^if  ( equalStrings ( nsURI, getNamespaceResolver (  ) .getDefaultNamespaceURI (  )  )  )  { buffer.append ( ln ) ; buffer.append ( '[' ) ; buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ; }^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( prefix == null )  {^471^^^^^463^485^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( nodePI != null )  {^471^^^^^463^485^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^if  ( prefix != true )  {^471^^^^^463^485^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( factory == null )  {^471^^^^^463^485^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( element != null )  {^471^^^^^463^485^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( parent != null )  {^471^^^^^463^485^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( attr != null )  {^471^^^^^463^485^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( current == null )  {^471^^^^^463^485^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( namespaces == null )  {^471^^^^^463^485^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( uri != null )  {^471^^^^^463^485^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( s2 == null )  {^471^^^^^463^485^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( namespace == null )  {^471^^^^^463^485^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( localName != null )  {^471^^^^^463^485^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( ns == null )  {^471^^^^^463^485^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( parent == null )  {^471^^^^^463^485^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( s1 == null )  {^471^^^^^463^485^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( id != null )  {^471^^^^^463^485^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^480^^^^^463^485^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( "node (  ) " ) ;^480^^^^^463^485^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ln ) ;buffer.append ( "node (  ) " ) ;^480^^^^^463^485^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( "node (  ) " ) ;^480^^^^^463^485^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionByName (  )  ) ;buffer.append ( "node (  ) " ) ;^480^^^^^463^485^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( "node (  ) " ) ;^480^^^^^463^485^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buf.append ( child.getNodeValue (  )  ) ;buffer.append ( "node (  ) " ) ;^480^^^^^463^485^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfElement (  )  ) ;buffer.append ( "node (  ) " ) ;^480^^^^^463^485^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( "node (  ) " ) ;^480^^^^^463^485^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/processing-instruction ( \'" ) ;buffer.append ( "node (  ) " ) ;^480^^^^^463^485^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( "node (  ) " ) ;^480^^^^^463^485^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buf.append ( stringValue ( child )  ) ;buffer.append ( "node (  ) " ) ;^480^^^^^463^485^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( "node (  ) " ) ;^480^^^^^463^485^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( target ) .append ( "' ) " ) ;buffer.append ( "node (  ) " ) ;^480^^^^^463^485^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( "node (  ) " ) ;^480^^^^^463^485^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^481^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( '[' ) ;^481^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ln ) ;buffer.append ( '[' ) ;^481^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( '[' ) ;^481^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( '[' ) ;^481^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( '[' ) ;^481^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( '[' ) ;^481^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( '[' ) ;^481^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( '[' ) ;^481^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^buffer .toString (  )  ;^482^^^^^463^485^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^buffer.append ( getRelativePositionOfTextNode (  )  ) ;^482^^^^^463^485^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^482^483^^^^463^485^buffer.append ( getRelativePositionOfElement (  )  ) ; buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionByName (  )  ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^463^485^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^463^485^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buf.append ( child.getNodeValue (  )  ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^463^485^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^463^485^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^463^485^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^463^485^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( target ) .append ( "' ) " ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^463^485^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^463^485^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^463^485^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^482^^^^^463^485^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^buffer .append ( this )  ;^483^^^^^463^485^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^483^^^^^463^485^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ln ) ;buffer.append ( ']' ) ;^483^^^^^463^485^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( ']' ) ;^483^^^^^463^485^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( ']' ) ;^483^^^^^463^485^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( ']' ) ;^483^^^^^463^485^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( ']' ) ;^483^^^^^463^485^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( ']' ) ;^483^^^^^463^485^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( ']' ) ;^483^^^^^463^485^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( ']' ) ;^483^^^^^463^485^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^buffer.append ( s1 ) ;^472^^^^^463^485^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^buffer.append ( string ) ;^472^^^^^463^485^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^472^473^^^^463^485^buffer.append ( prefix ) ; buffer.append ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( prefix ) ;^472^^^^^463^485^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ln ) ;buffer.append ( prefix ) ;^472^^^^^463^485^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( prefix ) ;^472^^^^^463^485^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( prefix ) ;^472^^^^^463^485^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( prefix ) ;^472^^^^^463^485^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( prefix ) ;^472^^^^^463^485^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( prefix ) ;^472^^^^^463^485^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( prefix ) ;^472^^^^^463^485^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^473^^^^^463^485^buffer.append ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( ':' ) ;^473^^^^^463^485^buffer.append ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ln ) ;buffer.append ( ':' ) ;^473^^^^^463^485^buffer.append ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( ':' ) ;^473^^^^^463^485^buffer.append ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( ':' ) ;^473^^^^^463^485^buffer.append ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( ':' ) ;^473^^^^^463^485^buffer.append ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( ':' ) ;^473^^^^^463^485^buffer.append ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( ':' ) ;^473^^^^^463^485^buffer.append ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( ':' ) ;^473^^^^^463^485^buffer.append ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^buffer.append ( nsURI ) ;^474^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^buffer.append ( ns ) ;^474^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^474^475^^^^463^485^buffer.append ( ln ) ; buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( ln ) ;^474^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( ln ) ;^474^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( ln ) ;^474^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( ln ) ;^474^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( ln ) ;^474^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( ln ) ;^474^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( ln ) ;^474^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( ln ) ;^474^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^475^476^^^^463^485^buffer.append ( '[' ) ; buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( '[' ) ;^475^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ln ) ;buffer.append ( '[' ) ;^475^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( '[' ) ;^475^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( '[' ) ;^475^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( '[' ) ;^475^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( '[' ) ;^475^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( '[' ) ;^475^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( '[' ) ;^475^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^buffer .toString (  )  ;^476^^^^^463^485^buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^buffer.append ( getRelativePositionOfElement (  )  ) ;^476^^^^^463^485^buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^476^477^^^^463^485^buffer.append ( getRelativePositionByName (  )  ) ; buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' ) ;buffer.append ( getRelativePositionByName (  )  ) ;^476^^^^^463^485^buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buf.append ( child.getNodeValue (  )  ) ;buffer.append ( getRelativePositionByName (  )  ) ;^476^^^^^463^485^buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfElement (  )  ) ;buffer.append ( getRelativePositionByName (  )  ) ;^476^^^^^463^485^buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( getRelativePositionByName (  )  ) ;^476^^^^^463^485^buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;buffer.append ( getRelativePositionByName (  )  ) ;^476^^^^^463^485^buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( getRelativePositionByName (  )  ) ;^476^^^^^463^485^buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( target ) .append ( "' ) " ) ;buffer.append ( getRelativePositionByName (  )  ) ;^476^^^^^463^485^buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( getRelativePositionByName (  )  ) ;^476^^^^^463^485^buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;buffer.append ( getRelativePositionByName (  )  ) ;^476^^^^^463^485^buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^476^^^^^463^485^buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^477^^^^^463^485^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ln ) ;buffer.append ( ']' ) ;^477^^^^^463^485^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( ']' ) ;^477^^^^^463^485^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( ']' ) ;^477^^^^^463^485^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( ']' ) ;^477^^^^^463^485^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( ']' ) ;^477^^^^^463^485^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( ']' ) ;^477^^^^^463^485^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( ']' ) ;^477^^^^^463^485^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( ']' ) ;^477^^^^^463^485^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P1_Replace_Type]^char prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^470^^^^^463^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^String prefix = getNamespaceResolver (  ) .getPrefix ( ns ) ;^470^^^^^463^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^String prefix = getNamespaceResolver (  ) .equals ( nsURI ) ;^470^^^^^463^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^String prefix = getDefaultNamespaceURI (  ) .getPrefix ( nsURI ) ;^470^^^^^463^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String prefix = getPrefix ( node ) ;String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^470^^^^^463^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String prefix = name.getPrefix (  ) ;String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^470^^^^^463^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String testPrefix = testName.getPrefix (  ) ;String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^470^^^^^463^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String prefix = node.getPrefix (  ) ;String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^470^^^^^463^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String ns = getNamespaceURI ( prefix ) ;String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^470^^^^^463^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P12_Insert_Condition]^if  ( equalStrings ( nsURI, getNamespaceResolver (  ) .getDefaultNamespaceURI (  )  )  )  { String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ; }^470^^^^^463^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^String prefix = getNamespaceResolver (  ) .getPrefix ( nodePI ) ;^470^^^^^463^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^String prefix = getNamespaceResolver (  )  .getName (  )  ;^470^^^^^463^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^470^^^^^463^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^buffer.append ( testPrefix ) ;^472^^^^^463^485^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^472^^^^^463^485^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^473^474^^^^463^485^buffer.append ( ':' ) ; buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^buffer.append ( s2 ) ;^474^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^474^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^480^481^^^^463^485^buffer.append ( "node (  ) " ) ; buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^buffer .append ( null )  ;^483^^^^^463^485^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^buffer.append ( nsURI ) ;^465^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^465^466^^^^463^485^buffer.append ( ln ) ; buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( ln ) ;^465^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( ln ) ;^465^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( ln ) ;^465^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( ln ) ;^465^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( ln ) ;^465^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( ln ) ;^465^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( ln ) ;^465^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( ln ) ;^465^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^466^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( '[' ) ;^466^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ln ) ;buffer.append ( '[' ) ;^466^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( '[' ) ;^466^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( '[' ) ;^466^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( '[' ) ;^466^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( '[' ) ;^466^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( '[' ) ;^466^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( '[' ) ;^466^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^buffer.append ( getRelativePositionOfElement (  )  ) .append ( ']' ) ;^467^^^^^463^485^buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^467^^^^^463^485^buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionByName (  )  ) ;buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^467^^^^^463^485^buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' ) ;buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^467^^^^^463^485^buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfElement (  )  ) ;buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^467^^^^^463^485^buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^467^^^^^463^485^buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( target ) .append ( "' ) " ) ;buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^467^^^^^463^485^buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( prefix == null )  {^471^^^^^456^486^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( nsURI != null )  {^471^^^^^456^486^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^if  ( s2 != false )  {^471^^^^^456^486^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( factory == null )  {^471^^^^^456^486^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( element != null )  {^471^^^^^456^486^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( parent != null )  {^471^^^^^456^486^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( attr != null )  {^471^^^^^456^486^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( current == null )  {^471^^^^^456^486^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( namespaces == null )  {^471^^^^^456^486^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( uri != null )  {^471^^^^^456^486^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( s2 == null )  {^471^^^^^456^486^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( namespace == null )  {^471^^^^^456^486^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( localName != null )  {^471^^^^^456^486^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( ns == null )  {^471^^^^^456^486^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( parent == null )  {^471^^^^^456^486^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( s1 == null )  {^471^^^^^456^486^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( id != null )  {^471^^^^^456^486^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^480^481^^^^471^484^buffer.append ( "node (  ) " ) ; buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( "node (  ) " ) ;^480^^^^^471^484^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ln ) ;buffer.append ( "node (  ) " ) ;^480^^^^^471^484^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( "node (  ) " ) ;^480^^^^^471^484^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionByName (  )  ) ;buffer.append ( "node (  ) " ) ;^480^^^^^471^484^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( "node (  ) " ) ;^480^^^^^471^484^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buf.append ( child.getNodeValue (  )  ) ;buffer.append ( "node (  ) " ) ;^480^^^^^471^484^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfElement (  )  ) ;buffer.append ( "node (  ) " ) ;^480^^^^^471^484^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( "node (  ) " ) ;^480^^^^^471^484^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/processing-instruction ( \'" ) ;buffer.append ( "node (  ) " ) ;^480^^^^^471^484^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( "node (  ) " ) ;^480^^^^^471^484^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buf.append ( stringValue ( child )  ) ;buffer.append ( "node (  ) " ) ;^480^^^^^471^484^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( "node (  ) " ) ;^480^^^^^471^484^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( target ) .append ( "' ) " ) ;buffer.append ( "node (  ) " ) ;^480^^^^^471^484^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( "node (  ) " ) ;^480^^^^^471^484^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^481^^^^^471^484^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( '[' ) ;^481^^^^^471^484^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ln ) ;buffer.append ( '[' ) ;^481^^^^^471^484^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( '[' ) ;^481^^^^^471^484^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( '[' ) ;^481^^^^^471^484^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( '[' ) ;^481^^^^^471^484^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( '[' ) ;^481^^^^^471^484^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( '[' ) ;^481^^^^^471^484^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( '[' ) ;^481^^^^^471^484^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^buffer.append ( getRelativePositionOfTextNode (  )  ) ;^482^^^^^471^484^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^482^483^^^^471^484^buffer.append ( getRelativePositionOfElement (  )  ) ; buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionByName (  )  ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^471^484^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^471^484^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buf.append ( child.getNodeValue (  )  ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^471^484^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^471^484^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^471^484^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^471^484^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( target ) .append ( "' ) " ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^471^484^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^471^484^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^471^484^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^482^^^^^471^484^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^483^^^^^471^484^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ln ) ;buffer.append ( ']' ) ;^483^^^^^471^484^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( ']' ) ;^483^^^^^471^484^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( ']' ) ;^483^^^^^471^484^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( ']' ) ;^483^^^^^471^484^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( ']' ) ;^483^^^^^471^484^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( ']' ) ;^483^^^^^471^484^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( ']' ) ;^483^^^^^471^484^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( ']' ) ;^483^^^^^471^484^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^buffer.append ( ns ) ;^472^^^^^457^487^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^buffer.append ( nodePI ) ;^472^^^^^457^487^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^472^473^^^^457^487^buffer.append ( prefix ) ; buffer.append ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( prefix ) ;^472^^^^^457^487^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ln ) ;buffer.append ( prefix ) ;^472^^^^^457^487^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( prefix ) ;^472^^^^^457^487^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( prefix ) ;^472^^^^^457^487^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( prefix ) ;^472^^^^^457^487^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( prefix ) ;^472^^^^^457^487^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( prefix ) ;^472^^^^^457^487^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( prefix ) ;^472^^^^^457^487^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^473^474^^^^458^488^buffer.append ( ':' ) ; buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( ':' ) ;^473^^^^^458^488^buffer.append ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ln ) ;buffer.append ( ':' ) ;^473^^^^^458^488^buffer.append ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( ':' ) ;^473^^^^^458^488^buffer.append ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( ':' ) ;^473^^^^^458^488^buffer.append ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( ':' ) ;^473^^^^^458^488^buffer.append ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( ':' ) ;^473^^^^^458^488^buffer.append ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( ':' ) ;^473^^^^^458^488^buffer.append ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( ':' ) ;^473^^^^^458^488^buffer.append ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^buffer.append ( s1 ) ;^474^^^^^459^489^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^buffer.append ( ns ) ;^474^^^^^459^489^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^474^475^^^^459^489^buffer.append ( ln ) ; buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( ln ) ;^474^^^^^459^489^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( ln ) ;^474^^^^^459^489^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( ln ) ;^474^^^^^459^489^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( ln ) ;^474^^^^^459^489^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( ln ) ;^474^^^^^459^489^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( ln ) ;^474^^^^^459^489^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( ln ) ;^474^^^^^459^489^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( ln ) ;^474^^^^^459^489^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^buffer .append ( 0 )  ;^475^^^^^460^490^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^475^^^^^460^490^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( '[' ) ;^475^^^^^460^490^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ln ) ;buffer.append ( '[' ) ;^475^^^^^460^490^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( '[' ) ;^475^^^^^460^490^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( '[' ) ;^475^^^^^460^490^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( '[' ) ;^475^^^^^460^490^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( '[' ) ;^475^^^^^460^490^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( '[' ) ;^475^^^^^460^490^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( '[' ) ;^475^^^^^460^490^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^buffer.append ( getRelativePositionOfElement (  )  ) ;^476^^^^^461^491^buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^476^477^^^^461^491^buffer.append ( getRelativePositionByName (  )  ) ; buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' ) ;buffer.append ( getRelativePositionByName (  )  ) ;^476^^^^^461^491^buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buf.append ( child.getNodeValue (  )  ) ;buffer.append ( getRelativePositionByName (  )  ) ;^476^^^^^461^491^buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfElement (  )  ) ;buffer.append ( getRelativePositionByName (  )  ) ;^476^^^^^461^491^buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( getRelativePositionByName (  )  ) ;^476^^^^^461^491^buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;buffer.append ( getRelativePositionByName (  )  ) ;^476^^^^^461^491^buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( getRelativePositionByName (  )  ) ;^476^^^^^461^491^buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( target ) .append ( "' ) " ) ;buffer.append ( getRelativePositionByName (  )  ) ;^476^^^^^461^491^buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( getRelativePositionByName (  )  ) ;^476^^^^^461^491^buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;buffer.append ( getRelativePositionByName (  )  ) ;^476^^^^^461^491^buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^476^^^^^461^491^buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^477^^^^^462^492^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ln ) ;buffer.append ( ']' ) ;^477^^^^^462^492^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( ']' ) ;^477^^^^^462^492^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( ']' ) ;^477^^^^^462^492^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( ']' ) ;^477^^^^^462^492^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( ']' ) ;^477^^^^^462^492^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( ']' ) ;^477^^^^^462^492^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( ']' ) ;^477^^^^^462^492^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( ']' ) ;^477^^^^^462^492^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P1_Replace_Type]^char ln = DOMNodePointer.getLocalName ( node ) ;^461^^^^^446^476^String ln = DOMNodePointer.getLocalName ( node ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^String ln = DOMNodePointer.getLocalName ( textNode ) ;^461^^^^^446^476^String ln = DOMNodePointer.getLocalName ( node ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^String ln = DOMNodePointer.getRelativePositionOfTextNode ( node ) ;^461^^^^^446^476^String ln = DOMNodePointer.getLocalName ( node ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String nm = n.getNodeName (  ) ;String ln = DOMNodePointer.getLocalName ( node ) ;^461^^^^^446^476^String ln = DOMNodePointer.getLocalName ( node ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;String ln = DOMNodePointer.getLocalName ( node ) ;^461^^^^^446^476^String ln = DOMNodePointer.getLocalName ( node ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String localName = node.getLocalName (  ) ;String ln = DOMNodePointer.getLocalName ( node ) ;^461^^^^^446^476^String ln = DOMNodePointer.getLocalName ( node ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;String ln = DOMNodePointer.getLocalName ( node ) ;^461^^^^^446^476^String ln = DOMNodePointer.getLocalName ( node ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P1_Replace_Type]^char nsURI = getNamespaceURI (  ) ;^462^^^^^447^477^String nsURI = getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^String nsURI = getDefaultNamespaceURI (  ) ;^462^^^^^447^477^String nsURI = getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String current = getLanguage (  ) ;String nsURI = getNamespaceURI (  ) ;^462^^^^^447^477^String nsURI = getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String prefix = name.getPrefix (  ) ;String nsURI = getNamespaceURI (  ) ;^462^^^^^447^477^String nsURI = getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String testPrefix = testName.getPrefix (  ) ;String nsURI = getNamespaceURI (  ) ;^462^^^^^447^477^String nsURI = getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;String nsURI = getNamespaceURI (  ) ;^462^^^^^447^477^String nsURI = getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String nm = n.getNodeName (  ) ;String nsURI = getNamespaceURI (  ) ;^462^^^^^447^477^String nsURI = getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;String nsURI = getNamespaceURI (  ) ;^462^^^^^447^477^String nsURI = getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String prefix = node.getPrefix (  ) ;String nsURI = getNamespaceURI (  ) ;^462^^^^^447^477^String nsURI = getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String uri = element.getNamespaceURI (  ) ;String nsURI = getNamespaceURI (  ) ;^462^^^^^447^477^String nsURI = getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;String nsURI = getNamespaceURI (  ) ;^462^^^^^447^477^String nsURI = getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;String nsURI = getNamespaceURI (  ) ;^462^^^^^447^477^String nsURI = getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String ns = getNamespaceURI ( prefix ) ;String nsURI = getNamespaceURI (  ) ;^462^^^^^447^477^String nsURI = getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P1_Replace_Type]^char prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^470^^^^^455^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^String prefix = getNamespaceResolver (  ) .equals ( nsURI ) ;^470^^^^^455^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^String prefix = getDefaultNamespaceURI (  ) .getPrefix ( nsURI ) ;^470^^^^^455^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^String prefix = getNamespaceResolver (  ) .getPrefix ( nodePI ) ;^470^^^^^455^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String prefix = getPrefix ( node ) ;String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^470^^^^^455^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String prefix = name.getPrefix (  ) ;String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^470^^^^^455^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String testPrefix = testName.getPrefix (  ) ;String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^470^^^^^455^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String prefix = node.getPrefix (  ) ;String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^470^^^^^455^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String ns = getNamespaceURI ( prefix ) ;String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^470^^^^^455^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P12_Insert_Condition]^if  ( equalStrings ( nsURI, getNamespaceResolver (  ) .getDefaultNamespaceURI (  )  )  )  { String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ; }^470^^^^^455^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^if  ( buffer.length() - 4  == 0 || buffer.charAt ( buffer.length() - 4  - 1 )  != '/' )  {^457^458^^^^442^472^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^|| buffer.charAt ( buffer.length (  )   ==  1 )  != '/' )  {^458^^^^^443^473^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^|| buffer.charAt ( buffer.length (  )   )  != '/' )  {^458^^^^^443^473^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^|| buffer.charAt ( buffer.length() + 2  - 1 )  != '/' )  {^458^^^^^443^473^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^|| buffer.charAt ( buffer.append (  )  - 1 )  != '/' )  {^458^^^^^443^473^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^|| buffer .toString (  )   != '/' )  {^458^^^^^443^473^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^458^459^^^^443^473^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  { buffer.append ( '/' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^|| buffer.charAt ( buffer.length() - 8  - 1 )  != '/' )  {^458^^^^^443^473^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^459^^^^^444^474^buffer.append ( '/' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( '/' ) ;^459^^^^^444^474^buffer.append ( '/' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ln ) ;buffer.append ( '/' ) ;^459^^^^^444^474^buffer.append ( '/' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( '/' ) ;^459^^^^^444^474^buffer.append ( '/' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( '/' ) ;^459^^^^^444^474^buffer.append ( '/' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( '/' ) ;^459^^^^^444^474^buffer.append ( '/' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( '/' ) ;^459^^^^^444^474^buffer.append ( '/' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( '/' ) ;^459^^^^^444^474^buffer.append ( '/' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( '/' ) ;^459^^^^^444^474^buffer.append ( '/' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^String ln = DOMNodePointer.getLocalName ( valueNode ) ;^461^^^^^446^476^String ln = DOMNodePointer.getLocalName ( node ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^String ln = DOMNodePointer.getLocalName ( parent ) ;^461^^^^^446^476^String ln = DOMNodePointer.getLocalName ( node ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^461^462^^^^446^476^String ln = DOMNodePointer.getLocalName ( node ) ; String nsURI = getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^462^^^^^447^477^String nsURI = getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^return getNamespaceURI ( node ) ;String nsURI = getNamespaceURI (  ) ;^462^^^^^447^477^String nsURI = getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^return getDefaultNamespaceURI (  ) ;String nsURI = getNamespaceURI (  ) ;^462^^^^^447^477^String nsURI = getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^: context.getDefaultNamespaceURI (  ) ;String nsURI = getNamespaceURI (  ) ;^462^^^^^447^477^String nsURI = getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^getNamespaceResolver (  ) .getNamespaceResolver (  )  )  )  {^464^^^^^449^479^getNamespaceResolver (  ) .getDefaultNamespaceURI (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^getDefaultNamespaceURI (  ) .getDefaultNamespaceURI (  )  )  )  {^464^^^^^449^479^getNamespaceResolver (  ) .getDefaultNamespaceURI (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^464^465^^^^449^479^getNamespaceResolver (  ) .getDefaultNamespaceURI (  )  )  )  { buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^buffer.append ( prefix ) ;^465^^^^^450^480^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^buffer.append ( nsURI ) ;^465^^^^^450^480^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^465^466^^^^450^480^buffer.append ( ln ) ; buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( ln ) ;^465^^^^^450^480^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( ln ) ;^465^^^^^450^480^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( ln ) ;^465^^^^^450^480^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( ln ) ;^465^^^^^450^480^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( ln ) ;^465^^^^^450^480^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( ln ) ;^465^^^^^450^480^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( ln ) ;^465^^^^^450^480^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( ln ) ;^465^^^^^450^480^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^466^467^^^^451^481^buffer.append ( '[' ) ; buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( '[' ) ;^466^^^^^451^481^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ln ) ;buffer.append ( '[' ) ;^466^^^^^451^481^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( '[' ) ;^466^^^^^451^481^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( '[' ) ;^466^^^^^451^481^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( '[' ) ;^466^^^^^451^481^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( '[' ) ;^466^^^^^451^481^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( '[' ) ;^466^^^^^451^481^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( '[' ) ;^466^^^^^451^481^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^buffer.append ( getRelativePositionOfElement (  )  ) .append ( ']' ) ;^467^^^^^452^482^buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^467^^^^^452^482^buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionByName (  )  ) ;buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^467^^^^^452^482^buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' ) ;buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^467^^^^^452^482^buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfElement (  )  ) ;buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^467^^^^^452^482^buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^467^^^^^452^482^buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( target ) .append ( "' ) " ) ;buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^467^^^^^452^482^buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^buffer .toString (  )^467^^^^^452^482^buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^String prefix = getNamespaceResolver (  )  .getName (  )  ;^470^^^^^455^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^String prefix = getNamespaceResolver (  ) .getPrefix ( ns ) ;^470^^^^^455^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^470^^^^^455^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^buffer.append ( testPI ) ;^472^^^^^457^487^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^buffer.append ( qname ) ;^472^^^^^457^487^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^472^^^^^457^487^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^buffer .append ( 3 )  ;^473^^^^^458^488^buffer.append ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^473^^^^^458^488^buffer.append ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^buffer.append ( testPrefix ) ;^474^^^^^459^489^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^buffer.append ( s2 ) ;^474^^^^^459^489^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^474^^^^^459^489^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^475^476^^^^460^490^buffer.append ( '[' ) ; buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^buffer .toString (  )  ;^476^^^^^461^491^buffer.append ( getRelativePositionByName (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^480^481^^^^465^495^buffer.append ( "node (  ) " ) ; buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( "node (  ) " ) ;^480^^^^^465^495^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ln ) ;buffer.append ( "node (  ) " ) ;^480^^^^^465^495^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( "node (  ) " ) ;^480^^^^^465^495^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionByName (  )  ) ;buffer.append ( "node (  ) " ) ;^480^^^^^465^495^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( "node (  ) " ) ;^480^^^^^465^495^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buf.append ( child.getNodeValue (  )  ) ;buffer.append ( "node (  ) " ) ;^480^^^^^465^495^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfElement (  )  ) ;buffer.append ( "node (  ) " ) ;^480^^^^^465^495^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( "node (  ) " ) ;^480^^^^^465^495^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/processing-instruction ( \'" ) ;buffer.append ( "node (  ) " ) ;^480^^^^^465^495^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( "node (  ) " ) ;^480^^^^^465^495^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buf.append ( stringValue ( child )  ) ;buffer.append ( "node (  ) " ) ;^480^^^^^465^495^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( "node (  ) " ) ;^480^^^^^465^495^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( target ) .append ( "' ) " ) ;buffer.append ( "node (  ) " ) ;^480^^^^^465^495^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( "node (  ) " ) ;^480^^^^^465^495^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^481^482^^^^466^496^buffer.append ( '[' ) ; buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( '[' ) ;^481^^^^^466^496^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ln ) ;buffer.append ( '[' ) ;^481^^^^^466^496^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( '[' ) ;^481^^^^^466^496^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( '[' ) ;^481^^^^^466^496^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( '[' ) ;^481^^^^^466^496^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( '[' ) ;^481^^^^^466^496^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( '[' ) ;^481^^^^^466^496^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( '[' ) ;^481^^^^^466^496^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^buffer.append ( getRelativePositionOfTextNode (  )  ) ;^482^^^^^467^497^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^482^483^^^^467^497^buffer.append ( getRelativePositionOfElement (  )  ) ; buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionByName (  )  ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^467^497^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^467^497^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buf.append ( child.getNodeValue (  )  ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^467^497^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^467^497^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^467^497^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^467^497^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( target ) .append ( "' ) " ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^467^497^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^467^497^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;buffer.append ( getRelativePositionOfElement (  )  ) ;^482^^^^^467^497^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^483^^^^^468^498^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ln ) ;buffer.append ( ']' ) ;^483^^^^^468^498^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( ']' ) ;^483^^^^^468^498^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( ']' ) ;^483^^^^^468^498^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( ']' ) ;^483^^^^^468^498^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( ']' ) ;^483^^^^^468^498^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( ']' ) ;^483^^^^^468^498^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( ']' ) ;^483^^^^^468^498^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( ']' ) ;^483^^^^^468^498^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  == '/' )  {^457^458^^^^442^472^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )    instanceof   1 )  != '/' )  {^457^458^^^^442^472^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^if  ( buffer.length (  )  == 8 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^457^458^^^^442^472^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^if  ( buffer.length() - 9  == 0 || buffer.charAt ( buffer.length() - 9  - 1 )  != '/' )  {^457^458^^^^442^472^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^if  ( buffer .startsWith ( attr )   == 0 || buffer.charAt ( buffer^457^458^^^^442^472^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( equalStrings ( nodePI, getNamespaceResolver (  ) .getDefaultNamespaceURI (  )  )  )  {^463^464^^^^448^478^if  ( equalStrings ( nsURI, getNamespaceResolver (  ) .getDefaultNamespaceURI (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( ns != null )  {^471^^^^^463^485^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^if  ( prefix != this )  {^471^^^^^463^485^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^481^482^^^^463^485^buffer.append ( '[' ) ; buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^buffer.append ( nsURI ) ;^472^^^^^463^485^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^475^^^^^463^485^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^String prefix = getNamespaceResolver (  ) .equals ( nodePI ) ;^470^^^^^463^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^buffer.append ( qname ) ;^472^^^^^463^485^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^buffer.append ( qname ) ;^474^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^buffer.append ( prefix ) ;^474^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^buffer.append ( s2 ) ;^465^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^buffer.append ( target ) ;^465^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^465^^^^^463^485^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^466^467^^^^463^485^buffer.append ( '[' ) ; buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( ns != null )  {^471^^^^^456^486^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^if  ( prefix != false )  {^471^^^^^456^486^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^481^482^^^^471^484^buffer.append ( '[' ) ; buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^buffer.append ( testPI ) ;^474^^^^^459^489^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^buffer.append ( qname ) ;^474^^^^^459^489^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^String ln = DOMNodePointer .getLocalName ( n )  ;^461^^^^^446^476^String ln = DOMNodePointer.getLocalName ( node ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^String prefix = getNamespaceResolver (  ) .equals ( testPrefix ) ;^470^^^^^455^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P1_Replace_Type]^char target =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^495^^^^^480^510^String target =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^String target =  (  ( ProcessingInstruction )  node ) .getData (  ) ;^495^^^^^480^510^String target =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^String target =  (  ( ProcessingInstruction )  node )  .getNode (  )  ;^495^^^^^480^510^String target =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String text =  (  ( Comment )  node ) .getData (  ) ;String target =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^495^^^^^480^510^String target =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;String target =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^495^^^^^480^510^String target =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ;String target =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^495^^^^^480^510^String target =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String text =  (  ( ProcessingInstruction )  node ) .getData (  ) ;String target =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^495^^^^^480^510^String target =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^switch  ( valueNode.getNodeType (  )  )  {^451^^^^^436^466^switch  ( node.getNodeType (  )  )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^switch  ( node.getNodeName (  )  )  {^451^^^^^436^466^switch  ( node.getNodeType (  )  )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^switch  ( parent.getNodeName (  )  )  {^451^^^^^436^466^switch  ( node.getNodeType (  )  )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^if  ( buffer.length() + 6  == 0 || buffer.charAt ( buffer.length() + 6  - 1 )  != '/' )  {^457^458^^^^442^472^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^if  ( buffer .startsWith ( target )   == 0 || buffer.charAt ( buffer^457^458^^^^442^472^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^|| buffer.charAt ( buffer.length (  )   >  1 )  != '/' )  {^458^^^^^443^473^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^|| buffer.charAt ( buffer.length() + 8  - 1 )  != '/' )  {^458^^^^^443^473^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^|| buffer.charAt ( buffer .startsWith ( current )   - 1 )  != '/' )  {^458^^^^^443^473^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^|| buffer.charAt ( buffer .startsWith ( XML_NAMESPACE_URI )   - 1 )  != '/' )  {^458^^^^^443^473^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^|| buffer.charAt ( buffer.length() + 6  - 1 )  != '/' )  {^458^^^^^443^473^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^String ln = DOMNodePointer .getLocalName ( aNode )  ;^461^^^^^446^476^String ln = DOMNodePointer.getLocalName ( node ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( equalStrings ( s1, getNamespaceResolver (  ) .getDefaultNamespaceURI (  )  )  )  {^463^464^^^^448^478^if  ( equalStrings ( nsURI, getNamespaceResolver (  ) .getDefaultNamespaceURI (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^465^^^^^450^480^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^466^^^^^451^481^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^buffer .append ( 2 )^467^^^^^452^482^buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^String prefix = getNamespaceResolver (  ) .getPrefix ( qname ) ;^470^^^^^455^485^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^buffer.append ( s1 ) ;^472^^^^^457^487^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^buffer.append ( target ) ;^472^^^^^457^487^buffer.append ( prefix ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^buffer.append ( string ) ;^474^^^^^459^489^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^buffer.append ( nsURI ) ;^474^^^^^459^489^buffer.append ( ln ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^buffer .append ( this )  ;^477^^^^^462^492^buffer.append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^480^^^^^465^495^buffer.append ( "node (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^482^^^^^467^497^buffer.append ( getRelativePositionOfElement (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^490^^^^^475^505^buffer.append ( "/text (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( "/text (  ) " ) ;^490^^^^^475^505^buffer.append ( "/text (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ln ) ;buffer.append ( "/text (  ) " ) ;^490^^^^^475^505^buffer.append ( "/text (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( "/text (  ) " ) ;^490^^^^^475^505^buffer.append ( "/text (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionByName (  )  ) ;buffer.append ( "/text (  ) " ) ;^490^^^^^475^505^buffer.append ( "/text (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( "/text (  ) " ) ;^490^^^^^475^505^buffer.append ( "/text (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buf.append ( child.getNodeValue (  )  ) ;buffer.append ( "/text (  ) " ) ;^490^^^^^475^505^buffer.append ( "/text (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfElement (  )  ) ;buffer.append ( "/text (  ) " ) ;^490^^^^^475^505^buffer.append ( "/text (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( "/text (  ) " ) ;^490^^^^^475^505^buffer.append ( "/text (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/processing-instruction ( \'" ) ;buffer.append ( "/text (  ) " ) ;^490^^^^^475^505^buffer.append ( "/text (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( "/text (  ) " ) ;^490^^^^^475^505^buffer.append ( "/text (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( "/text (  ) " ) ;^490^^^^^475^505^buffer.append ( "/text (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( target ) .append ( "' ) " ) ;buffer.append ( "/text (  ) " ) ;^490^^^^^475^505^buffer.append ( "/text (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( "/text (  ) " ) ;^490^^^^^475^505^buffer.append ( "/text (  ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^491^492^^^^476^506^buffer.append ( '[' ) ; buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( '[' ) ;^491^^^^^476^506^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ln ) ;buffer.append ( '[' ) ;^491^^^^^476^506^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( '[' ) ;^491^^^^^476^506^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( '[' ) ;^491^^^^^476^506^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( '[' ) ;^491^^^^^476^506^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( '[' ) ;^491^^^^^476^506^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( '[' ) ;^491^^^^^476^506^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( '[' ) ;^491^^^^^476^506^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^buffer.append ( getRelativePositionOfElement (  )  ) .append ( ']' ) ;^492^^^^^477^507^buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^492^^^^^477^507^buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionByName (  )  ) ;buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' ) ;^492^^^^^477^507^buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfElement (  )  ) ;buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' ) ;^492^^^^^477^507^buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' ) ;^492^^^^^477^507^buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' ) ;^492^^^^^477^507^buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^492^493^^^^477^507^buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' ) ; break;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^495^496^^^^480^510^String target =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ; buffer.append ( "/processing-instruction ( \'" ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^ln =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;String target =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^495^^^^^480^510^String target =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^496^497^^^^481^511^buffer.append ( "/processing-instruction ( \'" ) ; buffer.append ( target ) .append ( "' ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( "/processing-instruction ( \'" ) ;^496^^^^^481^511^buffer.append ( "/processing-instruction ( \'" ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( "/processing-instruction ( \'" ) ;^496^^^^^481^511^buffer.append ( "/processing-instruction ( \'" ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( "/processing-instruction ( \'" ) ;^496^^^^^481^511^buffer.append ( "/processing-instruction ( \'" ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^buffer.append ( nsURI ) .append ( "' ) " ) ;^497^^^^^482^512^buffer.append ( target ) .append ( "' ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^buffer.append ( prefix ) .append ( "' ) " ) ;^497^^^^^482^512^buffer.append ( target ) .append ( "' ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^497^^^^^482^512^buffer.append ( target ) .append ( "' ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionByName (  )  ) ;buffer.append ( target ) .append ( "' ) " ) ;^497^^^^^482^512^buffer.append ( target ) .append ( "' ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buf.append ( child.getNodeValue (  )  ) ;buffer.append ( target ) .append ( "' ) " ) ;^497^^^^^482^512^buffer.append ( target ) .append ( "' ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfElement (  )  ) ;buffer.append ( target ) .append ( "' ) " ) ;^497^^^^^482^512^buffer.append ( target ) .append ( "' ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( target ) .append ( "' ) " ) ;^497^^^^^482^512^buffer.append ( target ) .append ( "' ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;buffer.append ( target ) .append ( "' ) " ) ;^497^^^^^482^512^buffer.append ( target ) .append ( "' ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( target ) .append ( "' ) " ) ;^497^^^^^482^512^buffer.append ( target ) .append ( "' ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( target ) .append ( "' ) " ) ;^497^^^^^482^512^buffer.append ( target ) .append ( "' ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buf.append ( stringValue ( child )  ) ;buffer.append ( target ) .append ( "' ) " ) ;^497^^^^^482^512^buffer.append ( target ) .append ( "' ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;buffer.append ( target ) .append ( "' ) " ) ;^497^^^^^482^512^buffer.append ( target ) .append ( "' ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^buffer .append ( 0 )^497^^^^^482^512^buffer.append ( target ) .append ( "' ) " ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^497^498^^^^482^512^buffer.append ( target ) .append ( "' ) " ) ; buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^498^499^^^^483^513^buffer.append ( '[' ) ; buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( '[' ) ;^498^^^^^483^513^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ln ) ;buffer.append ( '[' ) ;^498^^^^^483^513^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( ':' ) ;buffer.append ( '[' ) ;^498^^^^^483^513^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( '[' ) ;^498^^^^^483^513^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( '[' ) ;^498^^^^^483^513^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buffer.append ( '[' ) ;^498^^^^^483^513^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buffer.append ( '[' ) ;^498^^^^^483^513^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( '[' ) ;^498^^^^^483^513^buffer.append ( '[' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^buffer.append ( getRelativePositionOfPI ( prefix )  ) .append ( ']' ) ;^499^^^^^484^514^buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^buffer.append ( getNamespaceURI ( target )  ) .append ( ']' ) ;^499^^^^^484^514^buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^buffer.append ( getRelativePositionOfPI ( s1 )  ) .append ( ']' ) ;^499^^^^^484^514^buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^499^^^^^484^514^buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionByName (  )  ) ;buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;^499^^^^^484^514^buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfTextNode (  )  ) .append ( ']' ) ;buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;^499^^^^^484^514^buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfElement (  )  ) ;buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;^499^^^^^484^514^buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( target ) .append ( "' ) " ) ;buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;^499^^^^^484^514^buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionByName (  )  ) .append ( ']' ) ;buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;^499^^^^^484^514^buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^buffer.append ( getRelativePositionOfPI ( ns )  ) .append ( ']' ) ;^499^^^^^484^514^buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^buffer.append ( getRelativePositionOfPI ( nodePI )  ) .append ( ']' ) ;^499^^^^^484^514^buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^499^500^^^^484^514^buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ; break;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^buffer.append ( getRelativePositionOfPI ( nsURI )  ) .append ( ']' ) ;^499^^^^^484^514^buffer.append ( getRelativePositionOfPI ( target )  ) .append ( ']' ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^return buffer.charAt (  ) ;^504^^^^^489^519^return buffer.toString (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^return buffer .getName (  )  ;^504^^^^^489^519^return buffer.toString (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^504^^^^^489^519^return buffer.toString (  ) ;^[CLASS] DOMNodePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P1_Replace_Type]^short  index = string.indexOf ( '\'' ) ;^508^^^^^507^525^int index = string.indexOf ( '\'' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^int index = nsURI.indexOf ( '\'' ) ;^508^^^^^507^525^int index = string.indexOf ( '\'' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^int index = string.substring ( '\'' ) ;^508^^^^^507^525^int index = string.indexOf ( '\'' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^int index = string .lastIndexOf ( index )  ;^508^^^^^507^525^int index = string.indexOf ( '\'' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^int index = ns .lastIndexOf ( index )  ;^508^^^^^507^525^int index = string.indexOf ( '\'' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int index = name.lastIndexOf ( ':' ) ;int index = string.indexOf ( '\'' ) ;^508^^^^^507^525^int index = string.indexOf ( '\'' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^int index = ns.indexOf ( '\'' ) ;^508^^^^^507^525^int index = string.indexOf ( '\'' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^508^^^^^507^525^int index = string.indexOf ( '\'' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^index = string.indexOf ( '\'' ) ;int index = string.indexOf ( '\'' ) ;^508^^^^^507^525^int index = string.indexOf ( '\'' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^index = string.indexOf ( '\"' ) ;int index = string.indexOf ( '\'' ) ;^508^^^^^507^525^int index = string.indexOf ( '\'' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^while  ( index == -1 )  {^509^^^^^507^525^while  ( index != -1 )  {^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^while  ( index != -2 )  {^509^^^^^507^525^while  ( index != -1 )  {^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^while  ( index != -index )  {^509^^^^^507^525^while  ( index != -1 )  {^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^string = string.substring ( 0, index ) + "&apos;" + string.substring ( index  >>  1 ) ;^510^511^512^513^^507^525^string = string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^string = string.substring ( 6, index ) + "&apos;" + string.substring ( index + 1 ) ;^510^511^512^513^^507^525^string = string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^string = string.substring ( 0, index ) + "&apo" + string.substring ( index + 1 ) ;^510^511^512^513^^507^525^string = string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^string = string.substring ( 0, index ) + "&apos;" + string.substring ( index +  ) ;^510^511^512^513^^507^525^string = string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^string = nsURI.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^510^511^512^513^^507^525^string = string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^string = string.substring ( 0 ) + "&apos;" + string.substring ( index + 1 ) ;^510^511^512^513^^507^525^string = string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^string = index.substring ( 0, string ) + "&apos;" + string.substring ( index + 1 ) ;^510^511^512^513^^507^525^string = string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^string = string.substring ( 0 / 1, index ) + "&apos;" + string.substring ( index + 1 ) ;^510^511^512^513^^507^525^string = string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^index = prefix.indexOf ( '\'' ) ;^514^^^^^507^525^index = string.indexOf ( '\'' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^index = string.substring ( '\'' ) ;^514^^^^^507^525^index = string.indexOf ( '\'' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^index = string .lastIndexOf ( index )  ;^514^^^^^507^525^index = string.indexOf ( '\'' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^index =  nodePI.indexOf ( '\'' ) ;^514^^^^^507^525^index = string.indexOf ( '\'' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^index = string.indexOf ( '\"' ) ;index = string.indexOf ( '\'' ) ;^514^^^^^507^525^index = string.indexOf ( '\'' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^string.substring ( index, index ) + "&apos;" + string.substring ( index + 1 ) ;^511^512^513^^^507^525^string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^string.substring ( 0, index ) + "&apos;" + nsURI.substring ( index + 1 ) ;^511^512^513^^^507^525^string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^string.substring ( 0 ) + "&apos;" + string.substring ( index + 1 ) ;^511^512^513^^^507^525^string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^string.substring ( 0, string ) + "&apos;" + index.substring ( index + 1 ) ;^511^512^513^^^507^525^string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^string .substring ( index , index )  + "&apos;" + string^511^512^513^^^507^525^string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^string.substring ( 0, index ) + "&apos;" + nodePI.substring ( index + 1 ) ;^511^512^513^^^507^525^string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^511^512^513^^^507^525^string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^+ string.substring ( index  |  1 ) ;^513^^^^^507^525^+ string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^+ string.substring ( index  ) ;^513^^^^^507^525^+ string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^+ qname.substring ( index + 1 ) ;^513^^^^^507^525^+ string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^+ index.substring ( string + 1 ) ;^513^^^^^507^525^+ string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^+ string .substring ( index , index )  ;^513^^^^^507^525^+ string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^+ nsURI.substring ( index + 1 ) ;^513^^^^^507^525^+ string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^513^^^^^507^525^+ string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^514^^^^^507^525^index = string.indexOf ( '\'' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int index = string.indexOf ( '\'' ) ;index = string.indexOf ( '\'' ) ;^514^^^^^507^525^index = string.indexOf ( '\'' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int index = name.lastIndexOf ( ':' ) ;index = string.indexOf ( '\'' ) ;^514^^^^^507^525^index = string.indexOf ( '\'' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^string = string.substring ( 0, index ) + "&apos;" + string.substring ( index  <<  1 ) ;^510^511^512^513^^507^525^string = string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^string = string.substring ( 7, index ) + "&apos;" + string.substring ( index + 1 ) ;^510^511^512^513^^507^525^string = string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^string = string.substring ( 0, index ) + "p" + string.substring ( index + 1 ) ;^510^511^512^513^^507^525^string = string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^string = string.substring ( 0, index ) + "&apos;" + string.substring ( index + index ) ;^510^511^512^513^^507^525^string = string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^string = s1.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^510^511^512^513^^507^525^string = string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^string = string .substring ( index , index )  + "&apos;" + string^510^511^512^513^^507^525^string = string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^string = string.substring ( 0 * 4, index ) + "&apos;" + string.substring ( index + 1 ) ;^510^511^512^513^^507^525^string = string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^index = nsURI.indexOf ( '\'' ) ;^514^^^^^507^525^index = string.indexOf ( '\'' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^string.substring ( 9, index ) + "&apos;" + string.substring ( index + 1 ) ;^511^512^513^^^507^525^string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^string.substring ( 0, index ) + "&apos;" + s1.substring ( index + 1 ) ;^511^512^513^^^507^525^string.substring ( 0, index ) + "&apos;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^+ string.substring ( index  ||  1 ) ;^513^^^^^507^525^+ string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^+ string.substring ( index + index ) ;^513^^^^^507^525^+ string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^index = ns.indexOf ( '\'' ) ;^514^^^^^507^525^index = string.indexOf ( '\'' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^index = ns.indexOf ( '\"' ) ;^516^^^^^507^525^index = string.indexOf ( '\"' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^index = string.substring ( '\"' ) ;^516^^^^^507^525^index = string.indexOf ( '\"' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^index = string .lastIndexOf ( index )  ;^516^^^^^507^525^index = string.indexOf ( '\"' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^index = string.indexOf ( '\'' ) ;index = string.indexOf ( '\"' ) ;^516^^^^^507^525^index = string.indexOf ( '\"' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^index = prefix.indexOf ( '\"' ) ;^516^^^^^507^525^index = string.indexOf ( '\"' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^index = nodePI.indexOf ( '\"' ) ;^516^^^^^507^525^index = string.indexOf ( '\"' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^516^^^^^507^525^index = string.indexOf ( '\"' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int index = string.indexOf ( '\'' ) ;index = string.indexOf ( '\"' ) ;^516^^^^^507^525^index = string.indexOf ( '\"' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int index = name.lastIndexOf ( ':' ) ;index = string.indexOf ( '\"' ) ;^516^^^^^507^525^index = string.indexOf ( '\"' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^while  ( index == -1 )  {^517^^^^^507^525^while  ( index != -1 )  {^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^while  ( index != -2 )  {^517^^^^^507^525^while  ( index != -1 )  {^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^while  ( index != -7 )  {^517^^^^^507^525^while  ( index != -1 )  {^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^string = string.substring ( 0, index ) + "&quot;" + string.substring ( index  ^  1 ) ;^518^519^520^521^^507^525^string = string.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^string = string.substring ( index, index ) + "&quot;" + string.substring ( index + 1 ) ;^518^519^520^521^^507^525^string = string.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^string = string.substring ( 0, index ) + "&quot;" + string.substring ( index + index ) ;^518^519^520^521^^507^525^string = string.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^string = s1.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^518^519^520^521^^507^525^string = string.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^string = string.substring ( 0 ) + "&quot;" + string.substring ( index + 1 ) ;^518^519^520^521^^507^525^string = string.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^string = index.substring ( 0, string ) + "&quot;" + string.substring ( index + 1 ) ;^518^519^520^521^^507^525^string = string.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^string = string .substring ( index , index )  + "&quot;" + string^518^519^520^521^^507^525^string = string.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^string = string.substring ( 1, index ) + "&quot;" + string.substring ( index + 1 ) ;^518^519^520^521^^507^525^string = string.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^index = qname.indexOf ( '\"' ) ;^522^^^^^507^525^index = string.indexOf ( '\"' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^index = string.substring ( '\"' ) ;^522^^^^^507^525^index = string.indexOf ( '\"' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^index = string .lastIndexOf ( index )  ;^522^^^^^507^525^index = string.indexOf ( '\"' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^index = string.indexOf ( '\'' ) ;index = string.indexOf ( '\"' ) ;^522^^^^^507^525^index = string.indexOf ( '\"' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^string.substring ( index, index ) + "&quot;" + string.substring ( index + 1 ) ;^519^520^521^^^507^525^string.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^string.substring ( 0, index ) + "&quot;" + ns.substring ( index + 1 ) ;^519^520^521^^^507^525^string.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^string.substring ( 0 ) + "&quot;" + string.substring ( index + 1 ) ;^519^520^521^^^507^525^string.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^string.substring ( 0, string ) + "&quot;" + index.substring ( index + 1 ) ;^519^520^521^^^507^525^string.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^string.substring ( 0, index ) + "&quot;" + s1.substring ( index + 1 ) ;^519^520^521^^^507^525^string.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^519^520^521^^^507^525^string.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^+ string.substring ( index  ==  1 ) ;^521^^^^^507^525^+ string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^+ string.substring ( index  ) ;^521^^^^^507^525^+ string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^+ nsURI.substring ( index + 1 ) ;^521^^^^^507^525^+ string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^+ index.substring ( string + 1 ) ;^521^^^^^507^525^+ string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^+ s2.substring ( index + 1 ) ;^521^^^^^507^525^+ string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^521^522^^^^507^525^+ string.substring ( index + 1 ) ; index = string.indexOf ( '\"' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^index = testPrefix.indexOf ( '\"' ) ;^522^^^^^507^525^index = string.indexOf ( '\"' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^522^^^^^507^525^index = string.indexOf ( '\"' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int index = string.indexOf ( '\'' ) ;index = string.indexOf ( '\"' ) ;^522^^^^^507^525^index = string.indexOf ( '\"' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int index = name.lastIndexOf ( ':' ) ;index = string.indexOf ( '\"' ) ;^522^^^^^507^525^index = string.indexOf ( '\"' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^string = string.substring ( 0, index ) + "&quot;" + string.substring ( index  &  1 ) ;^518^519^520^521^^507^525^string = string.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^string = string.substring ( 4, index ) + "&quot;" + string.substring ( index + 1 ) ;^518^519^520^521^^507^525^string = string.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^string = string.substring ( 0, index ) + "&quot;" + string.substring ( index  ) ;^518^519^520^521^^507^525^string = string.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^string = nodePI.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^518^519^520^521^^507^525^string = string.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^string = string.substring ( 0 - 1, index ) + "&quot;" + string.substring ( index + 1 ) ;^518^519^520^521^^507^525^string = string.substring ( 0, index ) + "&quot;" + string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^index =  ns.indexOf ( '\"' ) ;^522^^^^^507^525^index = string.indexOf ( '\"' ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^+ string.substring ( index  &&  1 ) ;^521^^^^^507^525^+ string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^+ string.substring ( index + index ) ;^521^^^^^507^525^+ string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^+ nodePI.substring ( index + 1 ) ;^521^^^^^507^525^+ string.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^return s1;^524^^^^^507^525^return string;^[CLASS] DOMNodePointer  [METHOD] escape [RETURN_TYPE] String   String string [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P1_Replace_Type]^short  count = 1;^528^^^^^527^540^int count = 1;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^int count = 3;^528^^^^^527^540^int count = 1;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^Node n = node.getNextSibling (  ) ;^529^^^^^527^540^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^Node n = valueNode.getNextSibling (  ) ;^529^^^^^527^540^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;Node n = node.getPreviousSibling (  ) ;^529^^^^^527^540^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^Node current = node.getFirstChild (  ) ;Node n = node.getPreviousSibling (  ) ;^529^^^^^527^540^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^Node n = valueNode.getPreviousSibling (  ) ;^529^^^^^527^540^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^Node n = textNode.getPreviousSibling (  ) ;^529^^^^^527^540^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^529^^^^^527^540^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^aNode = aNode.getParentNode (  ) ;Node n = node.getPreviousSibling (  ) ;^529^^^^^527^540^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^document = node.getOwnerDocument (  ) ;Node n = node.getPreviousSibling (  ) ;^529^^^^^527^540^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^current = current.getNextSibling (  ) ;Node n = node.getPreviousSibling (  ) ;^529^^^^^527^540^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^n = n.getPreviousSibling (  ) ;Node n = node.getPreviousSibling (  ) ;^529^^^^^527^540^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^while  ( n == null )  {^530^^^^^527^540^while  ( n != null )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^while  ( valueNode != null )  {^530^^^^^527^540^while  ( n != null )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^while  ( textNode != null )  {^530^^^^^527^540^while  ( n != null )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( n.getNodeType (  )  != Node.ELEMENT_NODE )  {^531^^^^^527^540^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( textNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^531^^^^^527^540^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^if  ( n.cloneNode (  )  == Node.ELEMENT_NODE )  {^531^^^^^527^540^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^if  ( n .getNodeName (  )   == Node.ELEMENT_NODE )  {^531^^^^^527^540^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  {^531^^^^^527^540^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( type == Node.ELEMENT_NODE )  {^531^^^^^527^540^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^531^^^^^527^540^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^531^^^^^527^540^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^531^^^^^527^540^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  == Node.DOCUMENT_NODE )  {^531^^^^^527^540^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( nodeType == Node.COMMENT_NODE )  {^531^^^^^527^540^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P15_Unwrap_Block]^java.lang.String nm = n.getNodeName(); if (nm.equals(node.getNodeName())) {    count++;};^531^532^533^534^535^527^540^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  { String nm = n.getNodeName (  ) ; if  ( nm.equals ( node.getNodeName (  )  )  )  { count++; }^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P16_Remove_Block]^^531^532^533^534^535^527^540^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  { String nm = n.getNodeName (  ) ; if  ( nm.equals ( node.getNodeName (  )  )  )  { count++; }^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  (  (  ( n.getNodeType (  )  )  ==  ( TEXT_NODE )  )  ||  (  ( n.getNodeType (  )  )  ==  ( CDATA_SECTION_NODE )  )  )  {     count++; }^531^^^^^527^540^[Delete]^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  (  ( n.getNodeType (  )  )  ==  ( ELEMENT_NODE )  )  {     Element e =  (  ( Element )   ( n )  ) ;     String attr = e.getAttribute ( "xml:lang" ) ;     if  (  ( attr != null )  &&  ( ! ( attr.equals ( "" )  )  )  )  {         return attr;     } }^531^^^^^527^540^[Delete]^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  (  ( aNode.getNodeType (  )  )  ==  ( ELEMENT_NODE )  )  {     Attr attr =  (  ( Element )   ( aNode )  ) .getAttributeNode ( qname ) ;     if  ( attr != null )  {         namespace = attr.getValue (  ) ;         break;     } }^531^^^^^527^540^[Delete]^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( nodePI.equals ( node.getNodeName (  )  )  )  {^533^^^^^527^540^if  ( nm.equals ( node.getNodeName (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( nm.equals ( valueNode.getNodeName (  )  )  )  {^533^^^^^527^540^if  ( nm.equals ( node.getNodeName (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( node.equals ( nm.getNodeName (  )  )  )  {^533^^^^^527^540^if  ( nm.equals ( node.getNodeName (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^if  ( nm.startsWith ( node.getNodeName (  )  )  )  {^533^^^^^527^540^if  ( nm.equals ( node.getNodeName (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^if  ( nm.equals ( node.getNodeValue (  )  )  )  {^533^^^^^527^540^if  ( nm.equals ( node.getNodeName (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^if  ( nm.equals ( node .getNamespaceURI (  )   )  )  {^533^^^^^527^540^if  ( nm.equals ( node.getNodeName (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^if  ( s1.equals ( node.getNodeName (  )  )  )  {^533^^^^^527^540^if  ( nm.equals ( node.getNodeName (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P15_Unwrap_Block]^count++;^533^534^535^^^527^540^if  ( nm.equals ( node.getNodeName (  )  )  )  { count++; }^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P16_Remove_Block]^^533^534^535^^^527^540^if  ( nm.equals ( node.getNodeName (  )  )  )  { count++; }^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P1_Replace_Type]^char nm = n.getNodeName (  ) ;^532^^^^^527^540^String nm = n.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^String textNodem = n.getNodeName (  ) ;^532^^^^^527^540^String nm = n.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^String nm = n.cloneNode (  ) ;^532^^^^^527^540^String nm = n.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^String valueNodem = n.getNodeName (  ) ;^532^^^^^527^540^String nm = n.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String ln = DOMNodePointer.getLocalName ( node ) ;String nm = n.getNodeName (  ) ;^532^^^^^527^540^String nm = n.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String current = getLanguage (  ) ;String nm = n.getNodeName (  ) ;^532^^^^^527^540^String nm = n.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int type = node.getNodeType (  ) ;String nm = n.getNodeName (  ) ;^532^^^^^527^540^String nm = n.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int t2 = node2.getNodeType (  ) ;String nm = n.getNodeName (  ) ;^532^^^^^527^540^String nm = n.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;String nm = n.getNodeName (  ) ;^532^^^^^527^540^String nm = n.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;String nm = n.getNodeName (  ) ;^532^^^^^527^540^String nm = n.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String nsURI = getNamespaceURI (  ) ;String nm = n.getNodeName (  ) ;^532^^^^^527^540^String nm = n.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String prefix = name.getPrefix (  ) ;String nm = n.getNodeName (  ) ;^532^^^^^527^540^String nm = n.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int nodeType = node.getNodeType (  ) ;String nm = n.getNodeName (  ) ;^532^^^^^527^540^String nm = n.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int t1 = node1.getNodeType (  ) ;String nm = n.getNodeName (  ) ;^532^^^^^527^540^String nm = n.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^QName testName = nodeNameTest.getNodeName (  ) ;String nm = n.getNodeName (  ) ;^532^^^^^527^540^String nm = n.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String prefix = node.getPrefix (  ) ;String nm = n.getNodeName (  ) ;^532^^^^^527^540^String nm = n.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String uri = element.getNamespaceURI (  ) ;String nm = n.getNodeName (  ) ;^532^^^^^527^540^String nm = n.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String localName = node.getLocalName (  ) ;String nm = n.getNodeName (  ) ;^532^^^^^527^540^String nm = n.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String ns = getNamespaceURI ( prefix ) ;String nm = n.getNodeName (  ) ;^532^^^^^527^540^String nm = n.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^String nm = n .getNamespaceURI (  )  ;^532^^^^^527^540^String nm = n.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^532^^^^^527^540^String nm = n.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^n = n.getParentNode (  ) ;String nm = n.getNodeName (  ) ;^532^^^^^527^540^String nm = n.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( prefix.equals ( node.getNodeName (  )  )  )  {^533^^^^^527^540^if  ( nm.equals ( node.getNodeName (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^if  ( nm .getLocale (  )   )  {^533^^^^^527^540^if  ( nm.equals ( node.getNodeName (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^if  ( nodePI .getLocale (  )   )  {^533^^^^^527^540^if  ( nm.equals ( node.getNodeName (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( nm.equals ( node.getNodeName (  )  )  )  {     count++; }^533^^^^^527^540^[Delete]^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( nm.equals ( parent.getNodeName (  )  )  )  {^533^^^^^527^540^if  ( nm.equals ( node.getNodeName (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( nsURI.equals ( node.getNodeName (  )  )  )  {^533^^^^^527^540^if  ( nm.equals ( node.getNodeName (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^if  ( ns.equals ( node.getNodeName (  )  )  )  {^533^^^^^527^540^if  ( nm.equals ( node.getNodeName (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^n = valueNode.getPreviousSibling (  ) ;^537^^^^^527^540^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^n = n.setNodeValue (  ) ;^537^^^^^527^540^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^n =  valueNode.getPreviousSiblivalueNodeg (  ) ;^537^^^^^527^540^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^current = current.getNextSibling (  ) ;n = n.getPreviousSibling (  ) ;^537^^^^^527^540^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^n = n.getParentNode (  ) ;n = n.getPreviousSibling (  ) ;^537^^^^^527^540^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^if  ( valueNode.cloneNode (  )  == Node.ELEMENT_NODE )  {^531^^^^^527^540^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^String parentm = n.getNodeName (  ) ;^532^^^^^527^540^String nm = n.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^if  ( nm.equals ( textNode.getNodeName (  )  )  )  {^533^^^^^527^540^if  ( nm.equals ( node.getNodeName (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^n = parent .getNextSibling (  )  ;^537^^^^^527^540^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^537^^^^^527^540^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^Node n = node.getPreviousSibling (  ) ;n = n.getPreviousSibling (  ) ;^537^^^^^527^540^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( n.getNodeType (  )  <= Node.ELEMENT_NODE )  {^531^^^^^527^540^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^if  ( valueNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^531^^^^^527^540^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^String valueNodem = n .getNamespaceURI (  )  ;^532^^^^^527^540^String nm = n.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^n = n .getNextSibling (  )  ;^537^^^^^527^540^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^n =  null.getPreviousSiblinullg (  ) ;^537^^^^^527^540^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( qname.equals ( node.getNodeName (  )  )  )  {^533^^^^^527^540^if  ( nm.equals ( node.getNodeName (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^if  ( nm.equals ( parent.getNodeValue (  )  )  )  {^533^^^^^527^540^if  ( nm.equals ( node.getNodeName (  )  )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^n = parent.getPreviousSibling (  ) ;^537^^^^^527^540^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^n = parent.setNodeValue (  ) ;^537^^^^^527^540^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionByName [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P1_Replace_Type]^long  count = 1;^543^^^^^542^552^int count = 1;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^int count = 2;^543^^^^^542^552^int count = 1;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^Node n = valueNode.getPreviousSibling (  ) ;^544^^^^^542^552^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^Node n = node.getNextSibling (  ) ;^544^^^^^542^552^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;Node n = node.getPreviousSibling (  ) ;^544^^^^^542^552^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^Node current = node.getFirstChild (  ) ;Node n = node.getPreviousSibling (  ) ;^544^^^^^542^552^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^Node n = parent.getPreviousSibling (  ) ;^544^^^^^542^552^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^544^^^^^542^552^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^aNode = aNode.getParentNode (  ) ;Node n = node.getPreviousSibling (  ) ;^544^^^^^542^552^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^document = node.getOwnerDocument (  ) ;Node n = node.getPreviousSibling (  ) ;^544^^^^^542^552^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^current = current.getNextSibling (  ) ;Node n = node.getPreviousSibling (  ) ;^544^^^^^542^552^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^n = n.getPreviousSibling (  ) ;Node n = node.getPreviousSibling (  ) ;^544^^^^^542^552^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^while  ( n == null )  {^545^^^^^542^552^while  ( n != null )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^while  ( valueNode != null )  {^545^^^^^542^552^while  ( n != null )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^while  ( parent != null )  {^545^^^^^542^552^while  ( n != null )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( n.getNodeType (  )  != Node.ELEMENT_NODE )  {^546^^^^^542^552^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( textNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^546^^^^^542^552^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^if  ( n.cloneNode (  )  == Node.ELEMENT_NODE )  {^546^^^^^542^552^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^if  ( n .getNodeName (  )   == Node.ELEMENT_NODE )  {^546^^^^^542^552^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^if  ( valueNode.cloneNode (  )  == Node.ELEMENT_NODE )  {^546^^^^^542^552^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  {^546^^^^^542^552^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( type == Node.ELEMENT_NODE )  {^546^^^^^542^552^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^546^^^^^542^552^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^546^^^^^542^552^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^546^^^^^542^552^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  == Node.DOCUMENT_NODE )  {^546^^^^^542^552^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( nodeType == Node.COMMENT_NODE )  {^546^^^^^542^552^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P15_Unwrap_Block]^count++;^546^547^548^^^542^552^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  { count++; }^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P16_Remove_Block]^^546^547^548^^^542^552^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  { count++; }^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  (  (  ( n.getNodeType (  )  )  ==  ( TEXT_NODE )  )  ||  (  ( n.getNodeType (  )  )  ==  ( CDATA_SECTION_NODE )  )  )  {     count++; }^546^^^^^542^552^[Delete]^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  (  ( node.getNodeType (  )  )  !=  ( ELEMENT_NODE )  )  {     return false; }^546^^^^^542^552^[Delete]^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^n = parent.getPreviousSibling (  ) ;^549^^^^^542^552^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^n = n.setNodeValue (  ) ;^549^^^^^542^552^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^n = n .getNextSibling (  )  ;^549^^^^^542^552^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^n =  valueNode.getPreviousSiblivalueNodeg (  ) ;^549^^^^^542^552^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^current = current.getNextSibling (  ) ;n = n.getPreviousSibling (  ) ;^549^^^^^542^552^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^n = n.getParentNode (  ) ;n = n.getPreviousSibling (  ) ;^549^^^^^542^552^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( valueNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^546^^^^^542^552^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^if  ( parent.getNodeType (  )  == Node.ELEMENT_NODE )  {^546^^^^^542^552^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^n = valueNode.getPreviousSibling (  ) ;^549^^^^^542^552^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^549^^^^^542^552^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^Node n = node.getPreviousSibling (  ) ;n = n.getPreviousSibling (  ) ;^549^^^^^542^552^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( n.getNodeType (  )  < Node.ELEMENT_NODE )  {^546^^^^^542^552^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^n =  parent.getPreviousSibliparentg (  ) ;^549^^^^^542^552^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^n = textNode.setNodeValue (  ) ;^549^^^^^542^552^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfElement [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P1_Replace_Type]^short  count = 1;^555^^^^^554^565^int count = 1;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^int count = 3;^555^^^^^554^565^int count = 1;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^Node n = node.getNextSibling (  ) ;^556^^^^^554^565^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^Node n = textNode.getPreviousSibling (  ) ;^556^^^^^554^565^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;Node n = node.getPreviousSibling (  ) ;^556^^^^^554^565^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^Node current = node.getFirstChild (  ) ;Node n = node.getPreviousSibling (  ) ;^556^^^^^554^565^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^Node n = valueNode.getPreviousSibling (  ) ;^556^^^^^554^565^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^556^^^^^554^565^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^aNode = aNode.getParentNode (  ) ;Node n = node.getPreviousSibling (  ) ;^556^^^^^554^565^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^document = node.getOwnerDocument (  ) ;Node n = node.getPreviousSibling (  ) ;^556^^^^^554^565^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^current = current.getNextSibling (  ) ;Node n = node.getPreviousSibling (  ) ;^556^^^^^554^565^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^n = n.getPreviousSibling (  ) ;Node n = node.getPreviousSibling (  ) ;^556^^^^^554^565^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^while  ( n == null )  {^557^^^^^554^565^while  ( n != null )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^while  ( valueNode != null )  {^557^^^^^554^565^while  ( n != null )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^while  ( parent != null )  {^557^^^^^554^565^while  ( n != null )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( n.getNodeType (  )  == Node.TEXT_NODE && n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^558^559^^^^554^565^if  ( n.getNodeType (  )  == Node.TEXT_NODE || n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( n.getNodeType (  )  != Node.TEXT_NODE || n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^558^559^^^^554^565^if  ( n.getNodeType (  )  == Node.TEXT_NODE || n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( n.getNodeType (  )  > Node.TEXT_NODE || n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^558^559^^^^554^565^if  ( n.getNodeType (  )  == Node.TEXT_NODE || n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( parent.getNodeType (  )  == Node.TEXT_NODE || n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^558^559^^^^554^565^if  ( n.getNodeType (  )  == Node.TEXT_NODE || n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P6_Replace_Expression]^if  ( n.getNodeType (  )  == Node.TEXT_NODE ) {^558^559^^^^554^565^if  ( n.getNodeType (  )  == Node.TEXT_NODE || n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P6_Replace_Expression]^if  (  n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^558^559^^^^554^565^if  ( n.getNodeType (  )  == Node.TEXT_NODE || n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P6_Replace_Expression]^if  ( n.getNodeType (  )  == TEXT_NODE )  {^558^559^^^^554^565^if  ( n.getNodeType (  )  == Node.TEXT_NODE || n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P6_Replace_Expression]^if  ( n.getNodeType (  )  == CDATA_SECTION_NODE )  {^558^559^^^^554^565^if  ( n.getNodeType (  )  == Node.TEXT_NODE || n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^if  ( n.cloneNode (  )  == Node.TEXT_NODE || n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^558^559^^^^554^565^if  ( n.getNodeType (  )  == Node.TEXT_NODE || n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^if  ( n .getNodeName (  )   == Node.TEXT_NODE || n^558^559^^^^554^565^if  ( n.getNodeType (  )  == Node.TEXT_NODE || n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  == Node.TEXT_NODE || node.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^558^559^^^^554^565^if  ( n.getNodeType (  )  == Node.TEXT_NODE || n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P15_Unwrap_Block]^count++;^558^559^560^561^^554^565^if  ( n.getNodeType (  )  == Node.TEXT_NODE || n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  { count++; }^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P16_Remove_Block]^^558^559^560^561^^554^565^if  ( n.getNodeType (  )  == Node.TEXT_NODE || n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  { count++; }^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  (  (  ( n.getNodeType (  )  )  ==  ( PROCESSING_INSTRUCTION_NODE )  )  &&  (  (  ( ProcessingInstruction )   ( n )  ) .getTarget (  ) .equals ( target )  )  )  {     count++; }^558^^^^^554^565^[Delete]^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  (  ( n.getNodeType (  )  )  ==  ( ELEMENT_NODE )  )  {     String nm = n.getNodeName (  ) ;     if  ( nm.equals ( node.getNodeName (  )  )  )  {         count++;     } }^558^^^^^554^565^[Delete]^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  (  ( node.getNodeType (  )  )  ==  ( DOCUMENT_NODE )  )  {     document =  (  ( Document )   ( node )  ) ; }else {     document = node.getOwnerDocument (  ) ; }^558^^^^^554^565^[Delete]^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  (  ( n.getNodeType (  )  )  ==  ( ELEMENT_NODE )  )  {     count++; }^558^^^^^554^565^[Delete]^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^n = parent.getPreviousSibling (  ) ;^562^^^^^554^565^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^n = n.setNodeValue (  ) ;^562^^^^^554^565^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^n = n .getNextSibling (  )  ;^562^^^^^554^565^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^n =  textNode.getPreviousSiblitextNodeg (  ) ;^562^^^^^554^565^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^current = current.getNextSibling (  ) ;n = n.getPreviousSibling (  ) ;^562^^^^^554^565^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^n = n.getParentNode (  ) ;n = n.getPreviousSibling (  ) ;^562^^^^^554^565^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( valueNode.getNodeType (  )  == Node.TEXT_NODE || n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^558^559^^^^554^565^if  ( n.getNodeType (  )  == Node.TEXT_NODE || n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^if  ( textNode.getNodeType (  )  == Node.TEXT_NODE || n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^558^559^^^^554^565^if  ( n.getNodeType (  )  == Node.TEXT_NODE || n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^|| textNode.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^559^^^^^554^565^|| n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^|| n.cloneNode (  )  == Node.CDATA_SECTION_NODE )  {^559^^^^^554^565^|| n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^|| n .getNodeName (  )   == Node.CDATA_SECTION_NODE )  {^559^^^^^554^565^|| n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^|| valueNode.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^559^^^^^554^565^|| n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^559^560^^^^554^565^|| n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  { count++;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^n = textNode.getPreviousSibling (  ) ;^562^^^^^554^565^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^n = valueNode.setNodeValue (  ) ;^562^^^^^554^565^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^562^^^^^554^565^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^Node n = node.getPreviousSibling (  ) ;n = n.getPreviousSibling (  ) ;^562^^^^^554^565^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^n = valueNode.getPreviousSibling (  ) ;^562^^^^^554^565^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^n =  valueNode.getPreviousSiblivalueNodeg (  ) ;^562^^^^^554^565^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^|| valueNode .getNodeName (  )   == Node.CDATA_SECTION_NODE )  {^559^^^^^554^565^|| n.getNodeType (  )  == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^n = textNode.setNodeValue (  ) ;^562^^^^^554^565^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfTextNode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P1_Replace_Type]^long  count = 1;^568^^^^^567^578^int count = 1;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^int count = 10;^568^^^^^567^578^int count = 1;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^Node n = valueNode.getPreviousSibling (  ) ;^569^^^^^567^578^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^Node n = node.getNextSibling (  ) ;^569^^^^^567^578^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;Node n = node.getPreviousSibling (  ) ;^569^^^^^567^578^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^Node current = node.getFirstChild (  ) ;Node n = node.getPreviousSibling (  ) ;^569^^^^^567^578^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^Node n = parent.getPreviousSibling (  ) ;^569^^^^^567^578^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^Node n = textNode.getPreviousSibling (  ) ;^569^^^^^567^578^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^569^^^^^567^578^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^aNode = aNode.getParentNode (  ) ;Node n = node.getPreviousSibling (  ) ;^569^^^^^567^578^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^document = node.getOwnerDocument (  ) ;Node n = node.getPreviousSibling (  ) ;^569^^^^^567^578^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^current = current.getNextSibling (  ) ;Node n = node.getPreviousSibling (  ) ;^569^^^^^567^578^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^n = n.getPreviousSibling (  ) ;Node n = node.getPreviousSibling (  ) ;^569^^^^^567^578^Node n = node.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^while  ( n == null )  {^570^^^^^567^578^while  ( n != null )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^while  ( parent != null )  {^570^^^^^567^578^while  ( n != null )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^while  ( valueNode != null )  {^570^^^^^567^578^while  ( n != null )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE ||  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^571^572^^^^567^578^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( n.getNodeType (  )  > Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^571^572^^^^567^578^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( textNode.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^571^572^^^^567^578^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( prefix )  )  {^571^572^^^^567^578^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( target.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( n )  )  {^571^572^^^^567^578^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P6_Replace_Expression]^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE ) {^571^572^^^^567^578^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P6_Replace_Expression]^if  (   (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^571^572^^^^567^578^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P6_Replace_Expression]^if  ( n.getNodeType (  )  == PROCESSING_INSTRUCTION_NODE )  {^571^572^^^^567^578^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^if  ( n.cloneNode (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^571^572^^^^567^578^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .substring ( target )  )  {^571^572^^^^567^578^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  )  .equals ( s2 )   )  {^571^572^^^^567^578^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n )  .getNode (  )  .equals ( target )  )  {^571^572^^^^567^578^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^if  (   (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( s1 )  )  {^571^572^^^^567^578^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P15_Unwrap_Block]^count++;^571^572^573^574^^567^578^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  { count++; }^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P16_Remove_Block]^^571^572^573^574^^567^578^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  { count++; }^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  (  (  ( n.getNodeType (  )  )  ==  ( TEXT_NODE )  )  ||  (  ( n.getNodeType (  )  )  ==  ( CDATA_SECTION_NODE )  )  )  {     count++; }^571^^^^^567^578^[Delete]^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( type ==  ( PROCESSING_INSTRUCTION_NODE )  )  {     ln =  (  ( ProcessingInstruction )   ( node )  ) .getTarget (  ) ; }^571^^^^^567^578^[Delete]^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^n = n.setNodeValue (  ) ;^575^^^^^567^578^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^n = n .getNextSibling (  )  ;^575^^^^^567^578^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^n =  valueNode.getPreviousSiblivalueNodeg (  ) ;^575^^^^^567^578^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^current = current.getNextSibling (  ) ;n = n.getPreviousSibling (  ) ;^575^^^^^567^578^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^n = n.getParentNode (  ) ;n = n.getPreviousSibling (  ) ;^575^^^^^567^578^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^if  ( n .getNodeName (  )   == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^571^572^^^^567^578^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^if  ( valueNode.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^571^572^^^^567^578^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^&&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( qname )  )  {^572^^^^^567^578^&&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^&&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .substring ( target )  )  {^572^^^^^567^578^&&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^&&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( s1 )  )  {^572^^^^^567^578^&&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^572^573^^^^567^578^&&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  { count++;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^n = valueNode.getPreviousSibling (  ) ;^575^^^^^567^578^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^575^^^^^567^578^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^Node n = node.getPreviousSibling (  ) ;n = n.getPreviousSibling (  ) ;^575^^^^^567^578^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( n.getNodeType (  )  <= Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^571^572^^^^567^578^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  )  .equals ( attr )   )  {^571^572^^^^567^578^if  ( n.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE &&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^n = parent.getPreviousSibling (  ) ;^575^^^^^567^578^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^n =  textNode.getPreviousSiblitextNodeg (  ) ;^575^^^^^567^578^n = n.getPreviousSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^&&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( nodeNS )  )  {^572^^^^^567^578^&&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^&&  (  ( ProcessingInstruction )  n )  .getNode (  )  .equals ( target )  )  {^572^^^^^567^578^&&  (  ( ProcessingInstruction )  n ) .getTarget (  ) .equals ( target )  )  {^[CLASS] DOMNodePointer  [METHOD] getRelativePositionOfPI [RETURN_TYPE] int   String target [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  count  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^return System.identityHashCode ( valueNode ) ;^581^^^^^580^582^return System.identityHashCode ( node ) ;^[CLASS] DOMNodePointer  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^return System.identityHashCode ( textNode ) ;^581^^^^^580^582^return System.identityHashCode ( node ) ;^[CLASS] DOMNodePointer  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^581^^^^^580^582^return System.identityHashCode ( node ) ;^[CLASS] DOMNodePointer  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( object < this )  {^585^^^^^584^595^if  ( object == this )  {^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P9_Replace_Statement]^if  ( current == null )  {^585^^^^^584^595^if  ( object == this )  {^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P9_Replace_Statement]^if  ( parent == null )  {^585^^^^^584^595^if  ( object == this )  {^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P15_Unwrap_Block]^return true;^585^586^587^^^584^595^if  ( object == this )  { return true; }^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P16_Remove_Block]^^585^586^587^^^584^595^if  ( object == this )  { return true; }^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P13_Insert_Block]^if  ( uri != null )  {     return uri; }^585^^^^^584^595^[Delete]^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P13_Insert_Block]^if  ( namespace ==  ( UNKNOWN_NAMESPACE )  )  {     return null; }^585^^^^^584^595^[Delete]^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P13_Insert_Block]^if  ( prefix != null )  {     return prefix; }^585^^^^^584^595^[Delete]^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P13_Insert_Block]^if  ( index ==  ( -1 )  )  {     return null; }^585^^^^^584^595^[Delete]^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P13_Insert_Block]^if  ( wildcard &&  ( testPrefix == null )  )  {     return true; }^585^^^^^584^595^[Delete]^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P13_Insert_Block]^if  ( localName != null )  {     return localName; }^585^^^^^584^595^[Delete]^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P13_Insert_Block]^if  ( current == node2 )  {     return 1; }^585^^^^^584^595^[Delete]^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P13_Insert_Block]^if  ( node1 == node2 )  {     return 0; }^585^^^^^584^595^[Delete]^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P13_Insert_Block]^if  ( attr != null )  {     return attr.getValue (  ) ; }^585^^^^^584^595^[Delete]^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P13_Insert_Block]^if  ( index ==  ( -1 )  )  {     return name; }^585^^^^^584^595^[Delete]^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P13_Insert_Block]^if  ( n == node2 )  {     return 1; }^585^^^^^584^595^[Delete]^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P3_Replace_Literal]^return false;^586^^^^^584^595^return true;^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P2_Replace_Operator]^if  ( ! ( object  &&  DOMNodePointer )  )  {^589^^^^^584^595^if  ( ! ( object instanceof DOMNodePointer )  )  {^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P8_Replace_Mix]^if  (  ( object instanceof DOMNodePointer )  )  {^589^^^^^584^595^if  ( ! ( object instanceof DOMNodePointer )  )  {^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P9_Replace_Statement]^if  ( ! ( node instanceof Element )  )  {^589^^^^^584^595^if  ( ! ( object instanceof DOMNodePointer )  )  {^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P9_Replace_Statement]^if  ( parent instanceof DOMNodePointer )  {^589^^^^^584^595^if  ( ! ( object instanceof DOMNodePointer )  )  {^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P15_Unwrap_Block]^return false;^589^590^591^^^584^595^if  ( ! ( object instanceof DOMNodePointer )  )  { return false; }^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P16_Remove_Block]^^589^590^591^^^584^595^if  ( ! ( object instanceof DOMNodePointer )  )  { return false; }^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P13_Insert_Block]^if  ( prefix.equals ( "xml" )  )  {     return XML_NAMESPACE_URI; }^589^^^^^584^595^[Delete]^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P13_Insert_Block]^if  ( prefix.equals ( "xmlns" )  )  {     return XMLNS_NAMESPACE_URI; }^589^^^^^584^595^[Delete]^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P3_Replace_Literal]^return true;^590^^^^^584^595^return false;^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P2_Replace_Operator]^return node != other.node;^594^^^^^584^595^return node == other.node;^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P5_Replace_Variable]^return parent == other.node;^594^^^^^584^595^return node == other.node;^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P5_Replace_Variable]^return node == valueNode;^594^^^^^584^595^return node == other.node;^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P5_Replace_Variable]^return node == other.node.node;^594^^^^^584^595^return node == other.node;^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P5_Replace_Variable]^return other == node.node;^594^^^^^584^595^return node == other.node;^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P5_Replace_Variable]^return other.node == node;^594^^^^^584^595^return node == other.node;^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P8_Replace_Mix]^return node  !=  other.node;;^594^^^^^584^595^return node == other.node;^[CLASS] DOMNodePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Object  object  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  Map  namespaces  long  serialVersionUID  DOMNodePointer  other  
[P1_Replace_Type]^char prefix = node.getPrefix (  ) ;^598^^^^^597^610^String prefix = node.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^String prefix = valueNode.getPrefix (  ) ;^598^^^^^597^610^String prefix = node.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^String prefix = node.cloneNode (  ) ;^598^^^^^597^610^String prefix = node.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^String prefix = node .getName (  )  ;^598^^^^^597^610^String prefix = node.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int type = node.getNodeType (  ) ;String prefix = node.getPrefix (  ) ;^598^^^^^597^610^String prefix = node.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^Node current = node.getFirstChild (  ) ;String prefix = node.getPrefix (  ) ;^598^^^^^597^610^String prefix = node.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int t2 = node2.getNodeType (  ) ;String prefix = node.getPrefix (  ) ;^598^^^^^597^610^String prefix = node.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;String prefix = node.getPrefix (  ) ;^598^^^^^597^610^String prefix = node.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;String prefix = node.getPrefix (  ) ;^598^^^^^597^610^String prefix = node.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;String prefix = node.getPrefix (  ) ;^598^^^^^597^610^String prefix = node.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;String prefix = node.getPrefix (  ) ;^598^^^^^597^610^String prefix = node.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String prefix = getPrefix ( node ) ;String prefix = node.getPrefix (  ) ;^598^^^^^597^610^String prefix = node.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String nsURI = getNamespaceURI (  ) ;String prefix = node.getPrefix (  ) ;^598^^^^^597^610^String prefix = node.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String prefix = name.getPrefix (  ) ;String prefix = node.getPrefix (  ) ;^598^^^^^597^610^String prefix = node.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String testPrefix = testName.getPrefix (  ) ;String prefix = node.getPrefix (  ) ;^598^^^^^597^610^String prefix = node.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int nodeType = node.getNodeType (  ) ;String prefix = node.getPrefix (  ) ;^598^^^^^597^610^String prefix = node.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int t1 = node1.getNodeType (  ) ;String prefix = node.getPrefix (  ) ;^598^^^^^597^610^String prefix = node.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String nm = n.getNodeName (  ) ;String prefix = node.getPrefix (  ) ;^598^^^^^597^610^String prefix = node.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String uri = element.getNamespaceURI (  ) ;String prefix = node.getPrefix (  ) ;^598^^^^^597^610^String prefix = node.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;String prefix = node.getPrefix (  ) ;^598^^^^^597^610^String prefix = node.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String localName = node.getLocalName (  ) ;String prefix = node.getPrefix (  ) ;^598^^^^^597^610^String prefix = node.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^String prefix = parent.getPrefix (  ) ;^598^^^^^597^610^String prefix = node.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^598^^^^^597^610^String prefix = node.getPrefix (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( prefix == null )  {^599^^^^^597^610^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^if  ( nodePI != null )  {^599^^^^^597^610^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^if  ( prefix != true )  {^599^^^^^597^610^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( factory == null )  {^599^^^^^597^610^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( element != null )  {^599^^^^^597^610^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( parent != null )  {^599^^^^^597^610^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( attr != null )  {^599^^^^^597^610^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( current == null )  {^599^^^^^597^610^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( namespaces == null )  {^599^^^^^597^610^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( uri != null )  {^599^^^^^597^610^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( s2 == null )  {^599^^^^^597^610^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( namespace == null )  {^599^^^^^597^610^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( localName != null )  {^599^^^^^597^610^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( ns == null )  {^599^^^^^597^610^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( parent == null )  {^599^^^^^597^610^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( s1 == null )  {^599^^^^^597^610^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( id != null )  {^599^^^^^597^610^if  ( prefix != null )  {^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P15_Unwrap_Block]^return prefix;^599^600^601^^^597^610^if  ( prefix != null )  { return prefix; }^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P16_Remove_Block]^^599^600^601^^^597^610^if  ( prefix != null )  { return prefix; }^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( uri != null )  {     return uri; }^599^^^^^597^610^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( index ==  ( -1 )  )  {     return null; }^599^^^^^597^610^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( wildcard &&  ( testPrefix == null )  )  {     return true; }^599^^^^^597^610^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( localName != null )  {     return localName; }^599^^^^^597^610^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( current == node2 )  {     return 1; }^599^^^^^597^610^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( node1 == node2 )  {     return 0; }^599^^^^^597^610^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( attr != null )  {     return attr.getValue (  ) ; }^599^^^^^597^610^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( index ==  ( -1 )  )  {     return name; }^599^^^^^597^610^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  (  ( parent )  != null )  {     buffer.append ( parent.asPath (  )  ) ; }^599^^^^^597^610^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( object ==  ( this )  )  {     return true; }^599^^^^^597^610^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( current == null )  {     return super.isLanguage ( lang ) ; }^599^^^^^597^610^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( n == node2 )  {     return 1; }^599^^^^^597^610^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^return s1;^600^^^^^597^610^return prefix;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^return qname;^600^^^^^597^610^return prefix;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^return ns;^600^^^^^597^610^return prefix;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^return nodePI;^600^^^^^597^610^return prefix;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P1_Replace_Type]^char name = node.getNodeName (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^String name = valueNode.getNodeName (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^String name = node.cloneNode (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^String name = node .getNamespaceURI (  )  ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String ln = DOMNodePointer.getLocalName ( node ) ;String name = node.getNodeName (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String current = getLanguage (  ) ;String name = node.getNodeName (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int type = node.getNodeType (  ) ;String name = node.getNodeName (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int t2 = node2.getNodeType (  ) ;String name = node.getNodeName (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^NodeList children = node.getChildNodes (  ) ;String name = node.getNodeName (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;String name = node.getNodeName (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;String name = node.getNodeName (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String nsURI = getNamespaceURI (  ) ;String name = node.getNodeName (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String prefix = name.getPrefix (  ) ;String name = node.getNodeName (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String testPrefix = testName.getPrefix (  ) ;String name = node.getNodeName (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int nodeType = node.getNodeType (  ) ;String name = node.getNodeName (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int t1 = node1.getNodeType (  ) ;String name = node.getNodeName (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^NodeList list = node.getChildNodes (  ) ;String name = node.getNodeName (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^QName testName = nodeNameTest.getNodeName (  ) ;String name = node.getNodeName (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String nm = n.getNodeName (  ) ;String name = node.getNodeName (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String prefix = node.getPrefix (  ) ;String name = node.getNodeName (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String uri = element.getNamespaceURI (  ) ;String name = node.getNodeName (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;String name = node.getNodeName (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String localName = node.getLocalName (  ) ;String name = node.getNodeName (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;String name = node.getNodeName (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P12_Insert_Condition]^if  ( nm.equals ( node.getNodeName (  )  )  )  { String name = node.getNodeName (  ) ; }^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^String name = parent.getNodeName (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^603^604^^^^597^610^String name = node.getNodeName (  ) ; int index = name.lastIndexOf ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^aNode = aNode.getParentNode (  ) ;String name = node.getNodeName (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^document = node.getOwnerDocument (  ) ;String name = node.getNodeName (  ) ;^603^^^^^597^610^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P1_Replace_Type]^long  index = name.lastIndexOf ( ':' ) ;^604^^^^^597^610^int index = name.lastIndexOf ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^int index = nodePI.lastIndexOf ( ':' ) ;^604^^^^^597^610^int index = name.lastIndexOf ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^int index = name.substring ( ':' ) ;^604^^^^^597^610^int index = name.lastIndexOf ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^int index = name .indexOf ( index )  ;^604^^^^^597^610^int index = name.lastIndexOf ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^int index = nodePI .indexOf ( index )  ;^604^^^^^597^610^int index = name.lastIndexOf ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int type = node.getNodeType (  ) ;int index = name.lastIndexOf ( ':' ) ;^604^^^^^597^610^int index = name.lastIndexOf ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int index = string.indexOf ( '\'' ) ;int index = name.lastIndexOf ( ':' ) ;^604^^^^^597^610^int index = name.lastIndexOf ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^int index = ns.substring ( ':' ) ;^604^^^^^597^610^int index = name.lastIndexOf ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^604^^^^^597^610^int index = name.lastIndexOf ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^index = string.indexOf ( '\'' ) ;int index = name.lastIndexOf ( ':' ) ;^604^^^^^597^610^int index = name.lastIndexOf ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^index = string.indexOf ( '\"' ) ;int index = name.lastIndexOf ( ':' ) ;^604^^^^^597^610^int index = name.lastIndexOf ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( index > -1 )  {^605^^^^^597^610^if  ( index == -1 )  {^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^if  ( index == - )  {^605^^^^^597^610^if  ( index == -1 )  {^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^if  ( index == -2 )  {^605^^^^^597^610^if  ( index == -1 )  {^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( node1 == node2 )  {^605^^^^^597^610^if  ( index == -1 )  {^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P15_Unwrap_Block]^return null;^605^606^607^^^597^610^if  ( index == -1 )  { return null; }^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P16_Remove_Block]^^605^606^607^^^597^610^if  ( index == -1 )  { return null; }^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( uri != null )  {     return uri; }^605^^^^^597^610^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( namespace ==  ( UNKNOWN_NAMESPACE )  )  {     return null; }^605^^^^^597^610^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( prefix != null )  {     return prefix; }^605^^^^^597^610^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( wildcard &&  ( testPrefix == null )  )  {     return true; }^605^^^^^597^610^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( localName != null )  {     return localName; }^605^^^^^597^610^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( current == node2 )  {     return 1; }^605^^^^^597^610^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( node1 == node2 )  {     return 0; }^605^^^^^597^610^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( attr != null )  {     return attr.getValue (  ) ; }^605^^^^^597^610^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( index ==  ( -1 )  )  {     return name; }^605^^^^^597^610^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( object ==  ( this )  )  {     return true; }^605^^^^^597^610^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( current == null )  {     return super.isLanguage ( lang ) ; }^605^^^^^597^610^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( n == node2 )  {     return 1; }^605^^^^^597^610^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^return false;^606^^^^^597^610^return null;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^return true;^606^^^^^597^610^return null;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^return name.substring ( , index ) ;^609^^^^^597^610^return name.substring ( 0, index ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^return qname.substring ( 0, index ) ;^609^^^^^597^610^return name.substring ( 0, index ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^return name.substring ( 0 ) ;^609^^^^^597^610^return name.substring ( 0, index ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^return index.substring ( 0, name ) ;^609^^^^^597^610^return name.substring ( 0, index ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^return name .substring ( index , index )  ;^609^^^^^597^610^return name.substring ( 0, index ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^return name.substring ( 0 << 3, index ) ;^609^^^^^597^610^return name.substring ( 0, index ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^return prefix.substring ( 0, index ) ;^609^^^^^597^610^return name.substring ( 0, index ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^return ns.substring ( 0, index ) ;^609^^^^^597^610^return name.substring ( 0, index ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^609^^^^^597^610^return name.substring ( 0, index ) ;^[CLASS] DOMNodePointer  [METHOD] getPrefix [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P1_Replace_Type]^char localName = node.getLocalName (  ) ;^613^^^^^612^625^String localName = node.getLocalName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^String localName = valueNode.getLocalName (  ) ;^613^^^^^612^625^String localName = node.getLocalName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^String localName = node.cloneNode (  ) ;^613^^^^^612^625^String localName = node.getLocalName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^String localName = node .getLanguage (  )  ;^613^^^^^612^625^String localName = node.getLocalName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^String localName = parent.cloneNode (  ) ;^613^^^^^612^625^String localName = node.getLocalName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String ln = DOMNodePointer.getLocalName ( node ) ;String localName = node.getLocalName (  ) ;^613^^^^^612^625^String localName = node.getLocalName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String current = getLanguage (  ) ;String localName = node.getLocalName (  ) ;^613^^^^^612^625^String localName = node.getLocalName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int type = node.getNodeType (  ) ;String localName = node.getLocalName (  ) ;^613^^^^^612^625^String localName = node.getLocalName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int t2 = node2.getNodeType (  ) ;String localName = node.getLocalName (  ) ;^613^^^^^612^625^String localName = node.getLocalName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;String localName = node.getLocalName (  ) ;^613^^^^^612^625^String localName = node.getLocalName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;String localName = node.getLocalName (  ) ;^613^^^^^612^625^String localName = node.getLocalName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String prefix = name.getPrefix (  ) ;String localName = node.getLocalName (  ) ;^613^^^^^612^625^String localName = node.getLocalName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int nodeType = node.getNodeType (  ) ;String localName = node.getLocalName (  ) ;^613^^^^^612^625^String localName = node.getLocalName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int t1 = node1.getNodeType (  ) ;String localName = node.getLocalName (  ) ;^613^^^^^612^625^String localName = node.getLocalName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^QName testName = nodeNameTest.getNodeName (  ) ;String localName = node.getLocalName (  ) ;^613^^^^^612^625^String localName = node.getLocalName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String nm = n.getNodeName (  ) ;String localName = node.getLocalName (  ) ;^613^^^^^612^625^String localName = node.getLocalName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String prefix = node.getPrefix (  ) ;String localName = node.getLocalName (  ) ;^613^^^^^612^625^String localName = node.getLocalName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;String localName = node.getLocalName (  ) ;^613^^^^^612^625^String localName = node.getLocalName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^String localName = parent.getLocalName (  ) ;^613^^^^^612^625^String localName = node.getLocalName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^613^^^^^612^625^String localName = node.getLocalName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( localName == null )  {^614^^^^^612^625^if  ( localName != null )  {^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^if  ( localName != true )  {^614^^^^^612^625^if  ( localName != null )  {^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( factory == null )  {^614^^^^^612^625^if  ( localName != null )  {^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( element != null )  {^614^^^^^612^625^if  ( localName != null )  {^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( parent != null )  {^614^^^^^612^625^if  ( localName != null )  {^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( attr != null )  {^614^^^^^612^625^if  ( localName != null )  {^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( current == null )  {^614^^^^^612^625^if  ( localName != null )  {^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( namespaces == null )  {^614^^^^^612^625^if  ( localName != null )  {^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( uri != null )  {^614^^^^^612^625^if  ( localName != null )  {^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( namespace == null )  {^614^^^^^612^625^if  ( localName != null )  {^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( defaultNamespace == null )  {^614^^^^^612^625^if  ( localName != null )  {^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( ns == null )  {^614^^^^^612^625^if  ( localName != null )  {^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( parent == null )  {^614^^^^^612^625^if  ( localName != null )  {^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( id != null )  {^614^^^^^612^625^if  ( localName != null )  {^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( prefix != null )  {^614^^^^^612^625^if  ( localName != null )  {^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P15_Unwrap_Block]^return localName;^614^615^616^^^612^625^if  ( localName != null )  { return localName; }^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P16_Remove_Block]^^614^615^616^^^612^625^if  ( localName != null )  { return localName; }^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( uri != null )  {     return uri; }^614^^^^^612^625^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( prefix != null )  {     return prefix; }^614^^^^^612^625^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( index ==  ( -1 )  )  {     return null; }^614^^^^^612^625^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( current == node2 )  {     return 1; }^614^^^^^612^625^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( node1 == node2 )  {     return 0; }^614^^^^^612^625^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( attr != null )  {     return attr.getValue (  ) ; }^614^^^^^612^625^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( index ==  ( -1 )  )  {     return name; }^614^^^^^612^625^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  (  ( defaultNamespace )  == null )  {     defaultNamespace = ""; }^614^^^^^612^625^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( object ==  ( this )  )  {     return true; }^614^^^^^612^625^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( current == null )  {     return super.isLanguage ( lang ) ; }^614^^^^^612^625^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( n == node2 )  {     return 1; }^614^^^^^612^625^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^return nodePI;^615^^^^^612^625^return localName;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^return qname;^615^^^^^612^625^return localName;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^return ns;^615^^^^^612^625^return localName;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^return nodeNS;^615^^^^^612^625^return localName;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P1_Replace_Type]^char name = node.getNodeName (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^String name = parent.getNodeName (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^String name = node.cloneNode (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^String name = valueNode.cloneNode (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String ln = DOMNodePointer.getLocalName ( node ) ;String name = node.getNodeName (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String current = getLanguage (  ) ;String name = node.getNodeName (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int type = node.getNodeType (  ) ;String name = node.getNodeName (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int t2 = node2.getNodeType (  ) ;String name = node.getNodeName (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^NodeList children = node.getChildNodes (  ) ;String name = node.getNodeName (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;String name = node.getNodeName (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;String name = node.getNodeName (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String nsURI = getNamespaceURI (  ) ;String name = node.getNodeName (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String prefix = name.getPrefix (  ) ;String name = node.getNodeName (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String testPrefix = testName.getPrefix (  ) ;String name = node.getNodeName (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int nodeType = node.getNodeType (  ) ;String name = node.getNodeName (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int t1 = node1.getNodeType (  ) ;String name = node.getNodeName (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^NodeList list = node.getChildNodes (  ) ;String name = node.getNodeName (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^QName testName = nodeNameTest.getNodeName (  ) ;String name = node.getNodeName (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String nm = n.getNodeName (  ) ;String name = node.getNodeName (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String prefix = node.getPrefix (  ) ;String name = node.getNodeName (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String uri = element.getNamespaceURI (  ) ;String name = node.getNodeName (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;String name = node.getNodeName (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String localName = node.getLocalName (  ) ;String name = node.getNodeName (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;String name = node.getNodeName (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P12_Insert_Condition]^if  ( nm.equals ( node.getNodeName (  )  )  )  { String name = node.getNodeName (  ) ; }^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^String name = valueNode.getNodeName (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^aNode = aNode.getParentNode (  ) ;String name = node.getNodeName (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^document = node.getOwnerDocument (  ) ;String name = node.getNodeName (  ) ;^618^^^^^612^625^String name = node.getNodeName (  ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P1_Replace_Type]^short  index = name.lastIndexOf ( ':' ) ;^619^^^^^612^625^int index = name.lastIndexOf ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^int index = prefix.lastIndexOf ( ':' ) ;^619^^^^^612^625^int index = name.lastIndexOf ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^int index = name.substring ( ':' ) ;^619^^^^^612^625^int index = name.lastIndexOf ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^int index = name .indexOf ( index )  ;^619^^^^^612^625^int index = name.lastIndexOf ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int type = node.getNodeType (  ) ;int index = name.lastIndexOf ( ':' ) ;^619^^^^^612^625^int index = name.lastIndexOf ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^int index = string.indexOf ( '\'' ) ;int index = name.lastIndexOf ( ':' ) ;^619^^^^^612^625^int index = name.lastIndexOf ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^int index = s2.lastIndexOf ( ':' ) ;^619^^^^^612^625^int index = name.lastIndexOf ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^619^^^^^612^625^int index = name.lastIndexOf ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^index = string.indexOf ( '\'' ) ;int index = name.lastIndexOf ( ':' ) ;^619^^^^^612^625^int index = name.lastIndexOf ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P11_Insert_Donor_Statement]^index = string.indexOf ( '\"' ) ;int index = name.lastIndexOf ( ':' ) ;^619^^^^^612^625^int index = name.lastIndexOf ( ':' ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( index >= -1 )  {^620^^^^^612^625^if  ( index == -1 )  {^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^if  ( index == - )  {^620^^^^^612^625^if  ( index == -1 )  {^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^if  ( index == -2 )  {^620^^^^^612^625^if  ( index == -1 )  {^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P9_Replace_Statement]^if  ( node1 == node2 )  {^620^^^^^612^625^if  ( index == -1 )  {^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P15_Unwrap_Block]^return name;^620^621^622^^^612^625^if  ( index == -1 )  { return name; }^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P16_Remove_Block]^^620^621^622^^^612^625^if  ( index == -1 )  { return name; }^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( uri != null )  {     return uri; }^620^^^^^612^625^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( namespace ==  ( UNKNOWN_NAMESPACE )  )  {     return null; }^620^^^^^612^625^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( prefix != null )  {     return prefix; }^620^^^^^612^625^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( index ==  ( -1 )  )  {     return null; }^620^^^^^612^625^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( wildcard &&  ( testPrefix == null )  )  {     return true; }^620^^^^^612^625^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( localName != null )  {     return localName; }^620^^^^^612^625^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( current == node2 )  {     return 1; }^620^^^^^612^625^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( node1 == node2 )  {     return 0; }^620^^^^^612^625^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( attr != null )  {     return attr.getValue (  ) ; }^620^^^^^612^625^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( object ==  ( this )  )  {     return true; }^620^^^^^612^625^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( current == null )  {     return super.isLanguage ( lang ) ; }^620^^^^^612^625^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P13_Insert_Block]^if  ( n == node2 )  {     return 1; }^620^^^^^612^625^[Delete]^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^return nodePI;^621^^^^^612^625^return name;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^return ns;^621^^^^^612^625^return name;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^return name.substring ( index  >>  1 ) ;^624^^^^^612^625^return name.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^return name.substring ( index  ) ;^624^^^^^612^625^return name.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^return nodeNS.substring ( index + 1 ) ;^624^^^^^612^625^return name.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^return index.substring ( name + 1 ) ;^624^^^^^612^625^return name.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^return name.substring ( index  &  1 ) ;^624^^^^^612^625^return name.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^return name.substring ( index  >  1 ) ;^624^^^^^612^625^return name.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P3_Replace_Literal]^return name.substring ( index + index ) ;^624^^^^^612^625^return name.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P8_Replace_Mix]^return nodePI.substring ( index + 1 ) ;^624^^^^^612^625^return name.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^624^^^^^612^625^return name.substring ( index + 1 ) ;^[CLASS] DOMNodePointer  [METHOD] getLocalName [RETURN_TYPE] String   Node node [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  boolean  Map  namespaces  long  serialVersionUID  int  index  Node  aNode  child  n  node  parent  textNode  valueNode  
[P2_Replace_Operator]^if  ( node  <=  Document )  {^628^^^^^613^643^if  ( node instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P5_Replace_Variable]^if  ( valueNode instanceof Document )  {^628^^^^^613^643^if  ( node instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P8_Replace_Mix]^if  ( parent instanceof Document )  {^628^^^^^613^643^if  ( node instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( ! ( node instanceof Element )  )  {^628^^^^^613^643^if  ( node instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( aNode instanceof Document )  {^628^^^^^613^643^if  ( node instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( parent instanceof DOMNodePointer )  {^628^^^^^613^643^if  ( node instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( value instanceof Node )  {^628^^^^^613^643^if  ( node instanceof Document )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P15_Unwrap_Block]^node = ((org.w3c.dom.Document) (node)).getDocumentElement();^628^629^630^^^613^643^if  ( node instanceof Document )  { node =  (  ( Document )  node ) .getDocumentElement (  ) ; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P16_Remove_Block]^^628^629^630^^^613^643^if  ( node instanceof Document )  { node =  (  ( Document )  node ) .getDocumentElement (  ) ; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  ( aNode instanceof Document )  {     aNode =  (  ( Document )   ( aNode )  ) .getDocumentElement (  ) ; }^628^^^^^613^643^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  (  ( node.getNodeType (  )  )  ==  ( DOCUMENT_NODE )  )  {     document =  (  ( Document )   ( node )  ) ; }else {     document = node.getOwnerDocument (  ) ; }^628^^^^^613^643^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P7_Replace_Invocation]^node =  (  ( Document )  node ) .getElementById (  ) ;^629^^^^^614^644^node =  (  ( Document )  node ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P8_Replace_Mix]^node =   (  ( Document )  node ) .getDocumentElement (  ) ;^629^^^^^614^644^node =  (  ( Document )  node ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^document = node.getOwnerDocument (  ) ;node =  (  ( Document )  node ) .getDocumentElement (  ) ;^629^^^^^614^644^node =  (  ( Document )  node ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^aNode =  (  ( Document ) aNode ) .getDocumentElement (  ) ;node =  (  ( Document )  node ) .getDocumentElement (  ) ;^629^^^^^614^644^node =  (  ( Document )  node ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  ( aNode instanceof Document )  {     aNode =  (  ( Document )   ( aNode )  ) .getDocumentElement (  ) ; }^629^^^^^614^644^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  ( node instanceof Document )  {     node =  (  ( Document )   ( node )  ) .getDocumentElement (  ) ; }^629^^^^^614^644^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P7_Replace_Invocation]^node =  (  ( Document )  node )  .getElementById ( namespaceURI )  ;^629^^^^^614^644^node =  (  ( Document )  node ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P14_Delete_Statement]^^629^^^^^614^644^node =  (  ( Document )  node ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;node =  (  ( Document )  node ) .getDocumentElement (  ) ;^629^^^^^614^644^node =  (  ( Document )  node ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^String text =  (  ( Comment )  node ) .getData (  ) ;node =  (  ( Document )  node ) .getDocumentElement (  ) ;^629^^^^^614^644^node =  (  ( Document )  node ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;node =  (  ( Document )  node ) .getDocumentElement (  ) ;^629^^^^^614^644^node =  (  ( Document )  node ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P7_Replace_Invocation]^node =  (  ( Document )  node )  .getElementById ( s1 )  ;^629^^^^^614^644^node =  (  ( Document )  node ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P7_Replace_Invocation]^node =  (  ( Document )  node )  .getElementById ( nsURI )  ;^629^^^^^614^644^node =  (  ( Document )  node ) .getDocumentElement (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^Element e =  ( Element )  n;Element element =  ( Element )  node;^632^^^^^617^647^Element element =  ( Element )  node;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^Element element = document.getElementById ( id ) ;Element element =  ( Element )  node;^632^^^^^617^647^Element element =  ( Element )  node;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P1_Replace_Type]^char uri = element.getNamespaceURI (  ) ;^634^^^^^619^649^String uri = element.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P7_Replace_Invocation]^String uri = element.setNodeValue (  ) ;^634^^^^^619^649^String uri = element.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P7_Replace_Invocation]^String uri = element .getNodeName (  )  ;^634^^^^^619^649^String uri = element.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P14_Delete_Statement]^^634^^^^^619^649^String uri = element.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^String current = getLanguage (  ) ;String uri = element.getNamespaceURI (  ) ;^634^^^^^619^649^String uri = element.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;String uri = element.getNamespaceURI (  ) ;^634^^^^^619^649^String uri = element.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;String uri = element.getNamespaceURI (  ) ;^634^^^^^619^649^String uri = element.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^return getNamespaceURI ( node ) ;String uri = element.getNamespaceURI (  ) ;^634^^^^^619^649^String uri = element.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^String nsURI = getNamespaceURI (  ) ;String uri = element.getNamespaceURI (  ) ;^634^^^^^619^649^String uri = element.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^return getDefaultNamespaceURI (  ) ;String uri = element.getNamespaceURI (  ) ;^634^^^^^619^649^String uri = element.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^String prefix = name.getPrefix (  ) ;String uri = element.getNamespaceURI (  ) ;^634^^^^^619^649^String uri = element.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^: context.getDefaultNamespaceURI (  ) ;String uri = element.getNamespaceURI (  ) ;^634^^^^^619^649^String uri = element.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^String nm = n.getNodeName (  ) ;String uri = element.getNamespaceURI (  ) ;^634^^^^^619^649^String uri = element.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^String prefix = node.getPrefix (  ) ;String uri = element.getNamespaceURI (  ) ;^634^^^^^619^649^String uri = element.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;String uri = element.getNamespaceURI (  ) ;^634^^^^^619^649^String uri = element.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;String uri = element.getNamespaceURI (  ) ;^634^^^^^619^649^String uri = element.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^String ns = getNamespaceURI ( prefix ) ;String uri = element.getNamespaceURI (  ) ;^634^^^^^619^649^String uri = element.getNamespaceURI (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P2_Replace_Operator]^if  ( uri == null )  {^635^^^^^620^650^if  ( uri != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P5_Replace_Variable]^if  ( qname != null )  {^635^^^^^620^650^if  ( uri != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P8_Replace_Mix]^if  ( uri != this )  {^635^^^^^620^650^if  ( uri != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( factory == null )  {^635^^^^^620^650^if  ( uri != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( element != null )  {^635^^^^^620^650^if  ( uri != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( parent != null )  {^635^^^^^620^650^if  ( uri != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( attr != null )  {^635^^^^^620^650^if  ( uri != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( current == null )  {^635^^^^^620^650^if  ( uri != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( s2 == null )  {^635^^^^^620^650^if  ( uri != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( prefix == null )  {^635^^^^^620^650^if  ( uri != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( localName != null )  {^635^^^^^620^650^if  ( uri != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( ns == null )  {^635^^^^^620^650^if  ( uri != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( parent == null )  {^635^^^^^620^650^if  ( uri != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( s1 == null )  {^635^^^^^620^650^if  ( uri != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( id != null )  {^635^^^^^620^650^if  ( uri != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( prefix != null )  {^635^^^^^620^650^if  ( uri != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P15_Unwrap_Block]^return uri;^635^636^637^^^620^650^if  ( uri != null )  { return uri; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P16_Remove_Block]^^635^636^637^^^620^650^if  ( uri != null )  { return uri; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  ( prefix != null )  {     return prefix; }^635^^^^^620^650^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  ( index ==  ( -1 )  )  {     return null; }^635^^^^^620^650^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  ( wildcard &&  ( testPrefix == null )  )  {     return true; }^635^^^^^620^650^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  ( localName != null )  {     return localName; }^635^^^^^620^650^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  ( current == node2 )  {     return 1; }^635^^^^^620^650^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  ( node1 == node2 )  {     return 0; }^635^^^^^620^650^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  ( attr != null )  {     return attr.getValue (  ) ; }^635^^^^^620^650^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  ( index ==  ( -1 )  )  {     return name; }^635^^^^^620^650^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  ( object ==  ( this )  )  {     return true; }^635^^^^^620^650^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  ( current == null )  {     return super.isLanguage ( lang ) ; }^635^^^^^620^650^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  ( n == node2 )  {     return 1; }^635^^^^^620^650^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P5_Replace_Variable]^return nodeNS;^636^^^^^621^651^return uri;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P8_Replace_Mix]^return nodePI;^636^^^^^621^651^return uri;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P5_Replace_Variable]^return nsURI;^636^^^^^621^651^return uri;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P1_Replace_Type]^char qname;^639^^^^^624^654^String qname;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^String ns = null;String qname;^639^^^^^624^654^String qname;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^String ln = null;String qname;^639^^^^^624^654^String qname;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P1_Replace_Type]^char prefix = getPrefix ( node ) ;^640^^^^^625^655^String prefix = getPrefix ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P7_Replace_Invocation]^String prefix = getLocalName ( node ) ;^640^^^^^625^655^String prefix = getPrefix ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P8_Replace_Mix]^String prefix = getPrefix ( parent ) ;^640^^^^^625^655^String prefix = getPrefix ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^String prefix = getNamespaceResolver (  ) .getPrefix ( nsURI ) ;String prefix = getPrefix ( node ) ;^640^^^^^625^655^String prefix = getPrefix ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^String prefix = name.getPrefix (  ) ;String prefix = getPrefix ( node ) ;^640^^^^^625^655^String prefix = getPrefix ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^String testPrefix = testName.getPrefix (  ) ;String prefix = getPrefix ( node ) ;^640^^^^^625^655^String prefix = getPrefix ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^String prefix = node.getPrefix (  ) ;String prefix = getPrefix ( node ) ;^640^^^^^625^655^String prefix = getPrefix ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P8_Replace_Mix]^String prefix = getPrefix ( valueNode ) ;^640^^^^^625^655^String prefix = getPrefix ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P14_Delete_Statement]^^640^^^^^625^655^String prefix = getPrefix ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^ns = DOMNodePointer.getPrefix ( node ) ;String prefix = getPrefix ( node ) ;^640^^^^^625^655^String prefix = getPrefix ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P2_Replace_Operator]^if  ( prefix != null )  {^641^^^^^626^656^if  ( prefix == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P5_Replace_Variable]^if  ( ns == null )  {^641^^^^^626^656^if  ( prefix == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P6_Replace_Expression]^if  ( "xmlns:" + prefix )  {^641^^^^^626^656^if  ( prefix == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P8_Replace_Mix]^if  ( prefix == this )  {^641^^^^^626^656^if  ( prefix == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( factory == null )  {^641^^^^^626^656^if  ( prefix == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( element != null )  {^641^^^^^626^656^if  ( prefix == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( parent != null )  {^641^^^^^626^656^if  ( prefix == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( attr != null )  {^641^^^^^626^656^if  ( prefix == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( current == null )  {^641^^^^^626^656^if  ( prefix == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( namespaces == null )  {^641^^^^^626^656^if  ( prefix == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( uri != null )  {^641^^^^^626^656^if  ( prefix == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( s2 == null )  {^641^^^^^626^656^if  ( prefix == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( namespace == null )  {^641^^^^^626^656^if  ( prefix == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( parent == null )  {^641^^^^^626^656^if  ( prefix == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( s1 == null )  {^641^^^^^626^656^if  ( prefix == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( id != null )  {^641^^^^^626^656^if  ( prefix == null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P15_Unwrap_Block]^qname = "xmlns";^641^642^643^^^626^656^if  ( prefix == null )  { qname = "xmlns"; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P16_Remove_Block]^^641^642^643^^^626^656^if  ( prefix == null )  { qname = "xmlns"; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P3_Replace_Literal]^qname = "lns" + prefix;^645^^^^^641^646^qname = "xmlns:" + prefix;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P5_Replace_Variable]^qname = "xmlns:" + nodePI;^645^^^^^641^646^qname = "xmlns:" + prefix;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P8_Replace_Mix]^qname =  "xmlns:" + nodeNS;^645^^^^^641^646^qname = "xmlns:" + prefix;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^qname = "xmlns";qname = "xmlns:" + prefix;^645^^^^^641^646^qname = "xmlns:" + prefix;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P3_Replace_Literal]^qname = "xmlnsx";^642^^^^^627^657^qname = "xmlns";^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P8_Replace_Mix]^qname ;^642^^^^^627^657^qname = "xmlns";^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^qname = "xmlns:" + prefix;qname = "xmlns";^642^^^^^627^657^qname = "xmlns";^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P3_Replace_Literal]^qname = "xmlnsmln";^642^^^^^627^657^qname = "xmlns";^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P8_Replace_Mix]^qname  =  qname ;^642^^^^^627^657^qname = "xmlns";^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P3_Replace_Literal]^qname = "xmlns:x" + prefix;^645^^^^^630^660^qname = "xmlns:" + prefix;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P8_Replace_Mix]^qname =  "xmlns:" + s2;^645^^^^^630^660^qname = "xmlns:" + prefix;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^qname = "xmlns";qname = "xmlns:" + prefix;^645^^^^^630^660^qname = "xmlns:" + prefix;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P5_Replace_Variable]^Node aNode = valueNode;^648^^^^^633^663^Node aNode = node;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^Node n = node;Node aNode = node;^648^^^^^633^663^Node aNode = node;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^Node valueNode =  ( Node )  value;Node aNode = node;^648^^^^^633^663^Node aNode = node;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P2_Replace_Operator]^while  ( aNode == null )  {^649^^^^^634^664^while  ( aNode != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P5_Replace_Variable]^while  ( valueNode != null )  {^649^^^^^634^664^while  ( aNode != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P8_Replace_Mix]^while  ( parent != null )  {^649^^^^^634^664^while  ( aNode != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P2_Replace_Operator]^if  ( aNode.getNodeType (  )  != Node.ELEMENT_NODE )  {^650^^^^^635^665^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P6_Replace_Expression]^if  ( attr != null )  {^650^^^^^635^665^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P7_Replace_Invocation]^if  ( aNode.cloneNode (  )  == Node.ELEMENT_NODE )  {^650^^^^^635^665^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P7_Replace_Invocation]^if  ( aNode .getNodeName (  )   == Node.ELEMENT_NODE )  {^650^^^^^635^665^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  {^650^^^^^635^665^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( type == Node.ELEMENT_NODE )  {^650^^^^^635^665^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^650^^^^^635^665^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^650^^^^^635^665^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  == Node.DOCUMENT_NODE )  {^650^^^^^635^665^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( nodeType == Node.COMMENT_NODE )  {^650^^^^^635^665^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^650^^^^^635^665^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P15_Unwrap_Block]^org.w3c.dom.Attr attr = ((org.w3c.dom.Element) (aNode)).getAttributeNode(qname); if (attr != null) {    return attr.getValue();};^650^651^652^653^654^635^665^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  { Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ; if  ( attr != null )  { return attr.getValue (  ) ; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P16_Remove_Block]^^650^651^652^653^654^635^665^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  { Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ; if  ( attr != null )  { return attr.getValue (  ) ; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  (  ( n.getNodeType (  )  )  ==  ( ELEMENT_NODE )  )  {     Element e =  (  ( Element )   ( n )  ) ;     String attr = e.getAttribute ( "xml:lang" ) ;     if  (  ( attr != null )  &&  ( ! ( attr.equals ( "" )  )  )  )  {         return attr;     } }^650^^^^^635^665^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  (  ( aNode.getNodeType (  )  )  ==  ( ELEMENT_NODE )  )  {     Attr attr =  (  ( Element )   ( aNode )  ) .getAttributeNode ( qname ) ;     if  ( attr != null )  {         namespace = attr.getValue (  ) ;         break;     } }^650^^^^^635^665^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  (  ( aNode.getNodeType (  )  )  ==  ( ELEMENT_NODE )  )  {     Attr attr =  (  ( Element )   ( aNode )  ) .getAttributeNode ( "xmlns" ) ;     if  ( attr != null )  {         defaultNamespace = attr.getValue (  ) ;         break;     } }^650^^^^^635^665^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  (  ( node.getNodeType (  )  )  ==  ( DOCUMENT_NODE )  )  {     document =  (  ( Document )   ( node )  ) ; }else {     document = node.getOwnerDocument (  ) ; }^650^^^^^635^665^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P2_Replace_Operator]^if  ( attr == null )  {^652^^^^^637^667^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P8_Replace_Mix]^if  ( attr != this )  {^652^^^^^637^667^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( factory == null )  {^652^^^^^637^667^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( element != null )  {^652^^^^^637^667^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( parent != null )  {^652^^^^^637^667^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( current == null )  {^652^^^^^637^667^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( namespaces == null )  {^652^^^^^637^667^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( uri != null )  {^652^^^^^637^667^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( s2 == null )  {^652^^^^^637^667^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( namespace == null )  {^652^^^^^637^667^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( prefix == null )  {^652^^^^^637^667^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( localName != null )  {^652^^^^^637^667^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( ns == null )  {^652^^^^^637^667^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( parent == null )  {^652^^^^^637^667^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( s1 == null )  {^652^^^^^637^667^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( id != null )  {^652^^^^^637^667^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P9_Replace_Statement]^if  ( prefix != null )  {^652^^^^^637^667^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P15_Unwrap_Block]^return attr.getValue();^652^653^654^^^637^667^if  ( attr != null )  { return attr.getValue (  ) ; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P16_Remove_Block]^^652^653^654^^^637^667^if  ( attr != null )  { return attr.getValue (  ) ; }^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  ( uri != null )  {     return uri; }^652^^^^^637^667^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  ( attr != null )  {     defaultNamespace = attr.getValue (  ) ;     break; }^652^^^^^637^667^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  ( prefix != null )  {     return prefix; }^652^^^^^637^667^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  ( attr != null )  {     namespace = attr.getValue (  ) ;     break; }^652^^^^^637^667^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  ( index ==  ( -1 )  )  {     return null; }^652^^^^^637^667^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  (  ( id )  != null )  {     return  ( "id ( '" +  ( escape ( id )  )  )  + "' ) "; }^652^^^^^637^667^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  ( localName != null )  {     return localName; }^652^^^^^637^667^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  ( index ==  ( -1 )  )  {     return name; }^652^^^^^637^667^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  (  ( parent )  != null )  {     buffer.append ( parent.asPath (  )  ) ; }^652^^^^^637^667^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  ( object ==  ( this )  )  {     return true; }^652^^^^^637^667^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  ( current == null )  {     return super.isLanguage ( lang ) ; }^652^^^^^637^667^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P13_Insert_Block]^if  ( n == node2 )  {     return 1; }^652^^^^^637^667^[Delete]^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P7_Replace_Invocation]^return attr .getValue (  )  ;^653^^^^^638^668^return attr.getValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P14_Delete_Statement]^^653^^^^^638^668^return attr.getValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P5_Replace_Variable]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( prefix ) ;^651^^^^^636^666^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P7_Replace_Invocation]^Attr attr =  (  ( Element )  aNode ) .setAttribute ( qname ) ;^651^^^^^636^666^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P8_Replace_Mix]^Attr attr =  (  ( Element )  aNode ) .setAttribute ( ns ) ;^651^^^^^636^666^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^651^^^^^636^666^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^String text =  (  ( Comment )  node ) .getData (  ) ;Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^651^^^^^636^666^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P5_Replace_Variable]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( ns ) ;^651^^^^^636^666^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P8_Replace_Mix]^Attr attr =  (  ( Element )  aNode ) .setAttribute ( uri ) ;^651^^^^^636^666^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P14_Delete_Statement]^^651^^^^^636^666^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P8_Replace_Mix]^if  ( attr != true )  {^652^^^^^637^667^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P5_Replace_Variable]^aNode = parent.getParentNode (  ) ;^656^^^^^641^671^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P7_Replace_Invocation]^aNode = aNode.cloneNode (  ) ;^656^^^^^641^671^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^document = node.getOwnerDocument (  ) ;aNode = aNode.getParentNode (  ) ;^656^^^^^641^671^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^children = valueNode.getChildNodes (  ) ;aNode = aNode.getParentNode (  ) ;^656^^^^^641^671^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^n = n.getParentNode (  ) ;aNode = aNode.getParentNode (  ) ;^656^^^^^641^671^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P5_Replace_Variable]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( s1 ) ;^651^^^^^636^666^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P8_Replace_Mix]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( s2 ) ;^651^^^^^636^666^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P5_Replace_Variable]^if  ( parent.getNodeType (  )  == Node.ELEMENT_NODE )  {^650^^^^^635^665^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P8_Replace_Mix]^if  ( textNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^650^^^^^635^665^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P5_Replace_Variable]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( nodePI ) ;^651^^^^^636^666^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P8_Replace_Mix]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( nodeNS ) ;^651^^^^^636^666^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P5_Replace_Variable]^aNode = valueNode.getParentNode (  ) ;^656^^^^^641^671^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P7_Replace_Invocation]^aNode = aNode .getNodeType (  )  ;^656^^^^^641^671^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P14_Delete_Statement]^^656^^^^^641^671^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^int type = node.getNodeType (  ) ;aNode = aNode.getParentNode (  ) ;^656^^^^^641^671^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^Node current = node.getFirstChild (  ) ;aNode = aNode.getParentNode (  ) ;^656^^^^^641^671^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^int t2 = node2.getNodeType (  ) ;aNode = aNode.getParentNode (  ) ;^656^^^^^641^671^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^NodeList children = node.getChildNodes (  ) ;aNode = aNode.getParentNode (  ) ;^656^^^^^641^671^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;aNode = aNode.getParentNode (  ) ;^656^^^^^641^671^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;aNode = aNode.getParentNode (  ) ;^656^^^^^641^671^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;aNode = aNode.getParentNode (  ) ;^656^^^^^641^671^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^int nodeType = node.getNodeType (  ) ;aNode = aNode.getParentNode (  ) ;^656^^^^^641^671^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^int t1 = node1.getNodeType (  ) ;aNode = aNode.getParentNode (  ) ;^656^^^^^641^671^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^Node n = node.getPreviousSibling (  ) ;aNode = aNode.getParentNode (  ) ;^656^^^^^641^671^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P11_Insert_Donor_Statement]^NodeList list = node.getChildNodes (  ) ;aNode = aNode.getParentNode (  ) ;^656^^^^^641^671^aNode = aNode.getParentNode (  ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P5_Replace_Variable]^if  ( valueNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^650^^^^^635^665^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P8_Replace_Mix]^if  ( aNode.getNodeType (  )  == Node.this )  {^650^^^^^635^665^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P8_Replace_Mix]^if  ( attr != false )  {^652^^^^^637^667^if  ( attr != null )  {^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P5_Replace_Variable]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( nsURI ) ;^651^^^^^636^666^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P8_Replace_Mix]^Attr attr =  (  ( Element )  aNode ) .setAttribute ( nodePI ) ;^651^^^^^636^666^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P7_Replace_Invocation]^Attr attr =  (  ( Element )  aNode )  .getAttribute ( name )  ;^651^^^^^636^666^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P8_Replace_Mix]^return false;^658^^^^^643^673^return null;^[CLASS] DOMNodePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   Node node [VARIABLES] boolean  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  Map  namespaces  long  serialVersionUID  Attr  attr  
[P5_Replace_Variable]^return stringValue ( textNode ) ;^662^^^^^661^663^return stringValue ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P7_Replace_Invocation]^return getRelativePositionOfTextNode ( node ) ;^662^^^^^661^663^return stringValue ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P5_Replace_Variable]^return stringValue ( parent ) ;^662^^^^^661^663^return stringValue ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P14_Delete_Statement]^^662^^^^^661^663^return stringValue ( node ) ;^[CLASS] DOMNodePointer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  uri  boolean  Map  namespaces  long  serialVersionUID  Node  aNode  child  n  node  parent  textNode  valueNode  
[P1_Replace_Type]^long  nodeType = node.getNodeType (  ) ;^666^^^^^665^695^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^int parentType = node.getNodeType (  ) ;^666^^^^^665^695^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^int nodeType = node.cloneNode (  ) ;^666^^^^^665^695^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^int textNodeType = node.cloneNode (  ) ;^666^^^^^665^695^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;int nodeType = node.getNodeType (  ) ;^666^^^^^665^695^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^int type = node.getNodeType (  ) ;int nodeType = node.getNodeType (  ) ;^666^^^^^665^695^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^int t1 = node1.getNodeType (  ) ;int nodeType = node.getNodeType (  ) ;^666^^^^^665^695^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^int t2 = node2.getNodeType (  ) ;int nodeType = node.getNodeType (  ) ;^666^^^^^665^695^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^QName testName = nodeNameTest.getNodeName (  ) ;int nodeType = node.getNodeType (  ) ;^666^^^^^665^695^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;int nodeType = node.getNodeType (  ) ;^666^^^^^665^695^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String nm = n.getNodeName (  ) ;int nodeType = node.getNodeType (  ) ;^666^^^^^665^695^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^int length = map.getLength (  ) ;int nodeType = node.getNodeType (  ) ;^666^^^^^665^695^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;int nodeType = node.getNodeType (  ) ;^666^^^^^665^695^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String prefix = node.getPrefix (  ) ;int nodeType = node.getNodeType (  ) ;^666^^^^^665^695^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String localName = node.getLocalName (  ) ;int nodeType = node.getNodeType (  ) ;^666^^^^^665^695^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P12_Insert_Condition]^if  ( nodeType == Node.COMMENT_NODE )  { int nodeType = node.getNodeType (  ) ; }^666^^^^^665^695^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P12_Insert_Condition]^if  ( nm.equals ( node.getNodeName (  )  )  )  { int nodeType = node.getNodeType (  ) ; }^666^^^^^665^695^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^int textNodeType = node.getNodeType (  ) ;^666^^^^^665^695^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^666^^^^^665^695^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^aNode = aNode.getParentNode (  ) ;int nodeType = node.getNodeType (  ) ;^666^^^^^665^695^int nodeType = node.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^if  ( nodeType <= Node.COMMENT_NODE )  {^667^^^^^665^695^if  ( nodeType == Node.COMMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^if  ( nodeType >= Node.COMMENT_NODE )  {^667^^^^^665^695^if  ( nodeType == Node.COMMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^if  ( nodeType != Node.COMMENT_NODE )  {^667^^^^^665^695^if  ( nodeType == Node.COMMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^if  ( i == Node.COMMENT_NODE )  {^667^^^^^665^695^if  ( nodeType == Node.COMMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^if  ( valueNodeType == Node.COMMENT_NODE )  {^667^^^^^665^695^if  ( nodeType == Node.COMMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^if  ( node == Node.COMMENT_NODE )  {^667^^^^^665^695^if  ( nodeType == Node.COMMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P6_Replace_Expression]^if  ( text == null )  {^667^^^^^665^695^if  ( nodeType == Node.COMMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P6_Replace_Expression]^if  ( nodeType == TEXT_NODE || nodeType == CDATA_SECTION_NODE )  {^667^^^^^665^695^if  ( nodeType == Node.COMMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P6_Replace_Expression]^if  ( nodeType == TEXT_NODE )  {^667^^^^^665^695^if  ( nodeType == Node.COMMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P6_Replace_Expression]^if  ( nodeType == CDATA_SECTION_NODE )  {^667^^^^^665^695^if  ( nodeType == Node.COMMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P6_Replace_Expression]^if  ( nodeType == PROCESSING_INSTRUCTION_NODE )  {^667^^^^^665^695^if  ( nodeType == Node.COMMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P6_Replace_Expression]^if  ( i < list.getLength() )  {^667^^^^^665^695^if  ( nodeType == Node.COMMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P6_Replace_Expression]^if  ( child.getNodeType() == TEXT_NODE )  {^667^^^^^665^695^if  ( nodeType == Node.COMMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P9_Replace_Statement]^if  ( type == Node.ELEMENT_NODE )  {^667^^^^^665^695^if  ( nodeType == Node.COMMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^667^^^^^665^695^if  ( nodeType == Node.COMMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P9_Replace_Statement]^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^667^^^^^665^695^if  ( nodeType == Node.COMMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  == Node.DOCUMENT_NODE )  {^667^^^^^665^695^if  ( nodeType == Node.COMMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P9_Replace_Statement]^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^667^^^^^665^695^if  ( nodeType == Node.COMMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P15_Unwrap_Block]^java.lang.String text = ((org.w3c.dom.Comment) (node)).getData(); return text == null ? "" : text.trim();^667^668^669^670^^665^695^if  ( nodeType == Node.COMMENT_NODE )  { String text =  (  ( Comment )  node ) .getData (  ) ; return text == null ? "" : text.trim (  ) ; }^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P16_Remove_Block]^^667^668^669^670^^665^695^if  ( nodeType == Node.COMMENT_NODE )  { String text =  (  ( Comment )  node ) .getData (  ) ; return text == null ? "" : text.trim (  ) ; }^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^else if  ( nodeType == Node.TEXT_NODE && nodeType == Node.CDATA_SECTION_NODE )  {^671^672^673^^^665^695^else if  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^else if  ( nodeType != Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^671^672^673^^^665^695^else if  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^else if  ( nodeType >= Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^671^672^673^^^665^695^else if  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^else if  ( nodeType <= Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^671^672^673^^^665^695^else if  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^else if  ( i == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^671^672^673^^^665^695^else if  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^else if  ( parentType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^671^672^673^^^665^695^else if  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^else nodeTypef  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^671^672^673^^^665^695^else if  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^else nodeTypef  ( i == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^671^672^673^^^665^695^else if  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P6_Replace_Expression]^else if  ( nodeType == Node.TEXT_NODE ) {^671^672^673^^^665^695^else if  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P6_Replace_Expression]^else if  (  nodeType == Node.CDATA_SECTION_NODE )  {^671^672^673^^^665^695^else if  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P6_Replace_Expression]^else if  ( nodeType == TEXT_NODE )  {^671^672^673^^^665^695^else if  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P6_Replace_Expression]^else if  ( nodeType == CDATA_SECTION_NODE )  {^671^672^673^^^665^695^else if  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P6_Replace_Expression]^else if  ( text == null )  {^671^672^673^^^665^695^else if  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P6_Replace_Expression]^else if  ( nodeType == PROCESSING_INSTRUCTION_NODE )  {^671^672^673^^^665^695^else if  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P6_Replace_Expression]^else if  ( i < list.getLength() )  {^671^672^673^^^665^695^else if  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P6_Replace_Expression]^else if  ( child.getNodeType() == TEXT_NODE )  {^671^672^673^^^665^695^else if  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^else {^671^672^673^^^665^695^else if  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P15_Unwrap_Block]^java.lang.String text = node.getNodeValue(); return text == null ? "" : text.trim();^671^672^673^674^675^665^695^else if  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  { String text = node.getNodeValue (  ) ; return text == null ? "" : text.trim (  ) ; }^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P16_Remove_Block]^^671^672^673^674^675^665^695^else if  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  { String text = node.getNodeValue (  ) ; return text == null ? "" : text.trim (  ) ; }^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^else if  ( nodeType != Node.PROCESSING_INSTRUCTION_NODE )  {^677^^^^^665^695^else if  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^else if  ( nodeType < Node.PROCESSING_INSTRUCTION_NODE )  {^677^^^^^665^695^else if  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^else if  ( i == Node.PROCESSING_INSTRUCTION_NODE )  {^677^^^^^665^695^else if  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^else if  ( valueNodeType == Node.PROCESSING_INSTRUCTION_NODE )  {^677^^^^^665^695^else if  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^else nodeTypef  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  {^677^^^^^665^695^else if  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^else nodeTypef  ( i == Node.PROCESSING_INSTRUCTION_NODE )  {^677^^^^^665^695^else if  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P6_Replace_Expression]^else if  ( text == null )  {^677^^^^^665^695^else if  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P6_Replace_Expression]^else if  ( i < list.getLength() )  {^677^^^^^665^695^else if  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P6_Replace_Expression]^else if  ( child.getNodeType() == TEXT_NODE )  {^677^^^^^665^695^else if  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^nodeTypef  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  {^677^^^^^665^695^else if  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P15_Unwrap_Block]^java.lang.String text = ((org.w3c.dom.ProcessingInstruction) (node)).getData(); return text == null ? "" : text.trim();^677^678^679^680^^665^695^else if  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  { String text =  (  ( ProcessingInstruction )  node ) .getData (  ) ; return text == null ? "" : text.trim (  ) ; }^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P16_Remove_Block]^^677^678^679^680^^665^695^else if  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  { String text =  (  ( ProcessingInstruction )  node ) .getData (  ) ; return text == null ? "" : text.trim (  ) ; }^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^if  ( child.getNodeType (  )  != Node.TEXT_NODE )  {^686^^^^^677^694^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^if  ( valueNode.getNodeType (  )  == Node.TEXT_NODE )  {^686^^^^^677^694^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^if  ( child.cloneNode (  )  == Node.TEXT_NODE )  {^686^^^^^677^694^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^686^^^^^677^694^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P9_Replace_Statement]^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^686^^^^^677^694^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  == Node.DOCUMENT_NODE )  {^686^^^^^677^694^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P9_Replace_Statement]^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^686^^^^^677^694^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P15_Unwrap_Block]^buf.append(child.getNodeValue());^686^687^688^^^677^694^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  { buf.append ( child.getNodeValue (  )  ) ; }^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P16_Remove_Block]^^686^687^688^^^677^694^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  { buf.append ( child.getNodeValue (  )  ) ; }^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P13_Insert_Block]^if  (  ( node.getNodeType (  )  )  ==  ( DOCUMENT_NODE )  )  {     document =  (  ( Document )   ( node )  ) ; }else {     document = node.getOwnerDocument (  ) ; }^686^^^^^677^694^[Delete]^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^buf.append ( stringValue ( valueNode )  ) ;^690^^^^^677^694^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^buf.append ( getLocalName ( child )  ) ;^690^^^^^677^694^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^690^^^^^677^694^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buf.append ( child.getNodeValue (  )  ) ;buf.append ( stringValue ( child )  ) ;^690^^^^^677^694^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^return stringValue ( node ) ;buf.append ( stringValue ( child )  ) ;^690^^^^^677^694^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buf.append ( stringValue ( child )  ) ;^690^^^^^677^694^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buffer.append ( target ) .append ( "' ) " ) ;buf.append ( stringValue ( child )  ) ;^690^^^^^677^694^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buf.append ( stringValue ( child )  ) ;^690^^^^^677^694^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^buf.append ( stringValue ( textNode )  ) ;^690^^^^^677^694^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^buf.append ( getLocalName ( parent )  ) ;^690^^^^^677^694^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^buf.append ( parent.getNodeValue (  )  ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^buf.append ( child.cloneNode (  )  ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionByName (  )  ) ;buf.append ( child.getNodeValue (  )  ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^node.appendChild ( child.cloneNode ( true )  ) ;buf.append ( child.getNodeValue (  )  ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfElement (  )  ) ;buf.append ( child.getNodeValue (  )  ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buf.append ( child.getNodeValue (  )  ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buf.append ( child.getNodeValue (  )  ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buffer.append ( target ) .append ( "' ) " ) ;buf.append ( child.getNodeValue (  )  ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;buf.append ( child.getNodeValue (  )  ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buf.append ( child.getNodeValue (  )  ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buf.append ( stringValue ( child )  ) ;buf.append ( child.getNodeValue (  )  ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^buf.append ( valueNode.getNodeValue (  )  ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P1_Replace_Type]^for  (  short  i = 0; i < list.getLength (  ) ; i++ )  {^684^^^^^677^694^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^for  ( int i = 0; i <= list.getLength (  ) ; i++ )  {^684^^^^^677^694^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P3_Replace_Literal]^for  ( int i = 8; i < list.getLength (  ) ; i++ )  {^684^^^^^677^694^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^for  ( nodeTypent i = 0; i < list.getLength (  ) ; i++ )  {^684^^^^^677^694^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^for  ( int i = 0; i < list.item (  ) ; i++ )  {^684^^^^^677^694^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^for  ( nodeTypent i = 0; i < list.item (  ) ; i++ )  {^684^^^^^677^694^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^if  ( parent.getNodeType (  )  == Node.TEXT_NODE )  {^686^^^^^677^694^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^buf.append ( stringValue ( parent )  ) ;^690^^^^^677^694^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^buf.append ( child .setNodeValue ( text )   ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^buf.append ( textNode.getNodeValue (  )  ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^buf.append ( child .setNodeValue ( XMLNS_NAMESPACE_URI )   ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^Node child = list.item ( nodeType ) ;^685^^^^^677^694^Node child = list.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^Node child = i.item ( list ) ;^685^^^^^677^694^Node child = list.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^Node child = list .getLength (  )  ;^685^^^^^677^694^Node child = list.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^Node n = map.item ( i ) ;Node child = list.item ( i ) ;^685^^^^^677^694^Node child = list.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^Node child = children.item ( i ) ;Node child = list.item ( i ) ;^685^^^^^677^694^Node child = list.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^685^^^^^677^694^Node child = list.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^if  ( valueNode .getNodeName (  )   == Node.TEXT_NODE )  {^686^^^^^677^694^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^buf.append ( child .setNodeValue ( lang )   ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^buf.append ( child .setNodeValue ( attr )   ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^buf.append ( child .setNodeValue ( id )   ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^buf.append ( getLocalName ( textNode )  ) ;^690^^^^^677^694^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^return buf.toString (  ) .substring (  ) ;^693^^^^^677^694^return buf.toString (  ) .trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^return buf.charAt (  ) .trim (  ) ;^693^^^^^677^694^return buf.toString (  ) .trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^return buf .getName (  )  .trim (  ) ;^693^^^^^677^694^return buf.toString (  ) .trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P3_Replace_Literal]^StringBuffer buf = new StringBuffer ( i ) ;^683^^^^^677^694^StringBuffer buf = new StringBuffer ( 16 ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P4_Replace_Constructor]^StringBuffer buf = new StringBuffer (  )  ;^683^^^^^677^694^StringBuffer buf = new StringBuffer ( 16 ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^NodeList list = parent.getChildNodes (  ) ;^682^^^^^677^694^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^NodeList list = node.cloneNode (  ) ;^682^^^^^677^694^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^NodeList list = valueNode.getChildNodes (  ) ;^682^^^^^677^694^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;NodeList list = node.getChildNodes (  ) ;^682^^^^^677^694^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^int type = node.getNodeType (  ) ;NodeList list = node.getChildNodes (  ) ;^682^^^^^677^694^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^Node current = node.getFirstChild (  ) ;NodeList list = node.getChildNodes (  ) ;^682^^^^^677^694^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^int t1 = node1.getNodeType (  ) ;NodeList list = node.getChildNodes (  ) ;^682^^^^^677^694^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^int t2 = node2.getNodeType (  ) ;NodeList list = node.getChildNodes (  ) ;^682^^^^^677^694^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^NodeList children = node.getChildNodes (  ) ;NodeList list = node.getChildNodes (  ) ;^682^^^^^677^694^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;NodeList list = node.getChildNodes (  ) ;^682^^^^^677^694^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;NodeList list = node.getChildNodes (  ) ;^682^^^^^677^694^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P3_Replace_Literal]^StringBuffer buf = new StringBuffer ( 13 ) ;^683^^^^^677^694^StringBuffer buf = new StringBuffer ( 16 ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String current = getLanguage (  ) ;StringBuffer buf = new StringBuffer ( 16 ) ;^683^^^^^677^694^StringBuffer buf = new StringBuffer ( 16 ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^StringBuffer buffer = new StringBuffer (  ) ;StringBuffer buf = new StringBuffer ( 16 ) ;^683^^^^^677^694^StringBuffer buf = new StringBuffer ( 16 ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P1_Replace_Type]^for  (  long  i = 0; i < list.getLength (  ) ; i++ )  {^684^^^^^677^694^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P3_Replace_Literal]^for  ( int i = -6; i < list.getLength (  ) ; i++ )  {^684^^^^^677^694^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^682^683^^^^677^694^NodeList list = node.getChildNodes (  ) ; StringBuffer buf = new StringBuffer ( 16 ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^aNode = aNode.getParentNode (  ) ;NodeList list = node.getChildNodes (  ) ;^682^^^^^677^694^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^children = valueNode.getChildNodes (  ) ;NodeList list = node.getChildNodes (  ) ;^682^^^^^677^694^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^return !node.hasChildNodes (  ) ;NodeList list = node.getChildNodes (  ) ;^682^^^^^677^694^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^for  ( int i = 0; i < list .item ( nodeType )  ; i++ )  {^684^^^^^677^694^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^684^685^686^687^688^677^694^for  ( int i = 0; i < list.getLength (  ) ; i++ )  { Node child = list.item ( i ) ; if  ( child.getNodeType (  )  == Node.TEXT_NODE )  { buf.append ( child.getNodeValue (  )  ) ; }^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^if  ( parent.cloneNode (  )  == Node.TEXT_NODE )  {^686^^^^^677^694^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^693^^^^^677^694^return buf.toString (  ) .trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^return text != null ? "" : text.trim (  ) ;^679^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^return nodePI == null ? "" : text.trim (  ) ;^679^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P6_Replace_Expression]^return text ( text.trim (  ) ;^679^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^return text == null ? "" : text.substring (  ) ;^679^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^return   "" ;^679^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P1_Replace_Type]^char text =  (  ( ProcessingInstruction )  node ) .getData (  ) ;^678^^^^^665^695^String text =  (  ( ProcessingInstruction )  node ) .getData (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String text =  (  ( Comment )  node ) .getData (  ) ;String text =  (  ( ProcessingInstruction )  node ) .getData (  ) ;^678^^^^^665^695^String text =  (  ( ProcessingInstruction )  node ) .getData (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;String text =  (  ( ProcessingInstruction )  node ) .getData (  ) ;^678^^^^^665^695^String text =  (  ( ProcessingInstruction )  node ) .getData (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String target =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;String text =  (  ( ProcessingInstruction )  node ) .getData (  ) ;^678^^^^^665^695^String text =  (  ( ProcessingInstruction )  node ) .getData (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ;String text =  (  ( ProcessingInstruction )  node ) .getData (  ) ;^678^^^^^665^695^String text =  (  ( ProcessingInstruction )  node ) .getData (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^678^679^^^^665^695^String text =  (  ( ProcessingInstruction )  node ) .getData (  ) ; return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^ln =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;String text =  (  ( ProcessingInstruction )  node ) .getData (  ) ;^678^^^^^665^695^String text =  (  ( ProcessingInstruction )  node ) .getData (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^return ns == null ? "" : text.trim (  ) ;^679^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^679^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^if  ( child.getNodeType (  )  < Node.TEXT_NODE )  {^686^^^^^665^695^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^if  ( valueNode.getNodeType (  )  == Node.TEXT_NODE )  {^686^^^^^665^695^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^if  ( child.cloneNode (  )  == Node.TEXT_NODE )  {^686^^^^^665^695^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^if  ( parent.getNodeType (  )  == Node.TEXT_NODE )  {^686^^^^^665^695^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^686^^^^^665^695^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P9_Replace_Statement]^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^686^^^^^665^695^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  == Node.DOCUMENT_NODE )  {^686^^^^^665^695^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P9_Replace_Statement]^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^686^^^^^665^695^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P15_Unwrap_Block]^buf.append(child.getNodeValue());^686^687^688^^^665^695^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  { buf.append ( child.getNodeValue (  )  ) ; }^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P16_Remove_Block]^^686^687^688^^^665^695^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  { buf.append ( child.getNodeValue (  )  ) ; }^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P13_Insert_Block]^if  (  ( node.getNodeType (  )  )  ==  ( DOCUMENT_NODE )  )  {     document =  (  ( Document )   ( node )  ) ; }else {     document = node.getOwnerDocument (  ) ; }^686^^^^^665^695^[Delete]^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^buf.append ( stringValue ( valueNode )  ) ;^690^^^^^686^691^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^buf.append ( getLocalName ( child )  ) ;^690^^^^^686^691^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^690^^^^^686^691^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buf.append ( child.getNodeValue (  )  ) ;buf.append ( stringValue ( child )  ) ;^690^^^^^686^691^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^return stringValue ( node ) ;buf.append ( stringValue ( child )  ) ;^690^^^^^686^691^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buf.append ( stringValue ( child )  ) ;^690^^^^^686^691^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buffer.append ( target ) .append ( "' ) " ) ;buf.append ( stringValue ( child )  ) ;^690^^^^^686^691^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buf.append ( stringValue ( child )  ) ;^690^^^^^686^691^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^buf.append ( stringValue ( parent )  ) ;^690^^^^^686^691^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^buf.append ( parent.getNodeValue (  )  ) ;^687^^^^^665^695^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^buf.append ( child.cloneNode (  )  ) ;^687^^^^^665^695^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^buf.append ( valueNode.getNodeValue (  )  ) ;^687^^^^^665^695^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^687^^^^^665^695^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionByName (  )  ) ;buf.append ( child.getNodeValue (  )  ) ;^687^^^^^665^695^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^node.appendChild ( child.cloneNode ( true )  ) ;buf.append ( child.getNodeValue (  )  ) ;^687^^^^^665^695^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buffer.append ( getRelativePositionOfElement (  )  ) ;buf.append ( child.getNodeValue (  )  ) ;^687^^^^^665^695^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buffer.append ( "/text (  ) " ) ;buf.append ( child.getNodeValue (  )  ) ;^687^^^^^665^695^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buf.append ( child.getNodeValue (  )  ) ;^687^^^^^665^695^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buffer.append ( target ) .append ( "' ) " ) ;buf.append ( child.getNodeValue (  )  ) ;^687^^^^^665^695^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;buf.append ( child.getNodeValue (  )  ) ;^687^^^^^665^695^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buf.append ( child.getNodeValue (  )  ) ;^687^^^^^665^695^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buf.append ( stringValue ( child )  ) ;buf.append ( child.getNodeValue (  )  ) ;^687^^^^^665^695^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P1_Replace_Type]^for  (  short  i = 0; i < list.getLength (  ) ; i++ )  {^684^^^^^665^695^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^for  ( int i = 0; i == list.getLength (  ) ; i++ )  {^684^^^^^665^695^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P3_Replace_Literal]^for  ( int i = 7; i < list.getLength (  ) ; i++ )  {^684^^^^^665^695^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^for  ( nodeTypent i = 0; i < list.getLength (  ) ; i++ )  {^684^^^^^665^695^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^for  ( int i = 0; i < list.item (  ) ; i++ )  {^684^^^^^665^695^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^if  ( child.getNodeType (  )  != Node.TEXT_NODE )  {^686^^^^^665^695^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^buf.append ( getLocalName ( valueNode )  ) ;^690^^^^^686^691^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^buf.append ( child .setNodeValue ( nm )   ) ;^687^^^^^665^695^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^buf.append ( textNode.cloneNode (  )  ) ;^687^^^^^665^695^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^Node child = list.item ( nodeType ) ;^685^^^^^665^695^Node child = list.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^Node child = i.item ( list ) ;^685^^^^^665^695^Node child = list.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^Node n = map.item ( i ) ;Node child = list.item ( i ) ;^685^^^^^665^695^Node child = list.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^Node child = children.item ( i ) ;Node child = list.item ( i ) ;^685^^^^^665^695^Node child = list.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^Node child = list .getLength (  )  ;^685^^^^^665^695^Node child = list.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^685^^^^^665^695^Node child = list.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^if  ( textNode.cloneNode (  )  == Node.TEXT_NODE )  {^686^^^^^665^695^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^buf.append ( textNode.getNodeValue (  )  ) ;^687^^^^^665^695^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^buf.append ( stringValue ( parent )  ) ;^690^^^^^665^695^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^buf.append ( getLocalName ( child )  ) ;^690^^^^^665^695^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^buf.append ( stringValue ( textNode )  ) ;^690^^^^^665^695^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^690^^^^^665^695^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buf.append ( child.getNodeValue (  )  ) ;buf.append ( stringValue ( child )  ) ;^690^^^^^665^695^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^return stringValue ( node ) ;buf.append ( stringValue ( child )  ) ;^690^^^^^665^695^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buffer.append ( "node (  ) " ) ;buf.append ( stringValue ( child )  ) ;^690^^^^^665^695^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buffer.append ( target ) .append ( "' ) " ) ;buf.append ( stringValue ( child )  ) ;^690^^^^^665^695^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buf.append ( stringValue ( child )  ) ;^690^^^^^665^695^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^buf.append ( stringValue ( valueNode )  ) ;^690^^^^^665^695^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^return text.substring (  ) ;^679^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^return buf.toString (  ) .substring (  ) ;^693^^^^^665^695^return buf.toString (  ) .trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^return buf.toString (  )  .substring ( nodeType , i )  ;^693^^^^^665^695^return buf.toString (  ) .trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^return buf.charAt (  ) .trim (  ) ;^693^^^^^665^695^return buf.toString (  ) .trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P3_Replace_Literal]^StringBuffer buf = new StringBuffer ( 7 ) ;^683^^^^^665^695^StringBuffer buf = new StringBuffer ( 16 ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P4_Replace_Constructor]^StringBuffer buf = new StringBuffer (  )  ;^683^^^^^665^695^StringBuffer buf = new StringBuffer ( 16 ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^NodeList list = valueNode.getChildNodes (  ) ;^682^^^^^665^695^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^NodeList list = node.cloneNode (  ) ;^682^^^^^665^695^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;NodeList list = node.getChildNodes (  ) ;^682^^^^^665^695^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^int type = node.getNodeType (  ) ;NodeList list = node.getChildNodes (  ) ;^682^^^^^665^695^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^Node current = node.getFirstChild (  ) ;NodeList list = node.getChildNodes (  ) ;^682^^^^^665^695^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^int t1 = node1.getNodeType (  ) ;NodeList list = node.getChildNodes (  ) ;^682^^^^^665^695^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^int t2 = node2.getNodeType (  ) ;NodeList list = node.getChildNodes (  ) ;^682^^^^^665^695^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^NodeList children = node.getChildNodes (  ) ;NodeList list = node.getChildNodes (  ) ;^682^^^^^665^695^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;NodeList list = node.getChildNodes (  ) ;^682^^^^^665^695^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;NodeList list = node.getChildNodes (  ) ;^682^^^^^665^695^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P3_Replace_Literal]^StringBuffer buf = new StringBuffer ( 18 ) ;^683^^^^^665^695^StringBuffer buf = new StringBuffer ( 16 ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String current = getLanguage (  ) ;StringBuffer buf = new StringBuffer ( 16 ) ;^683^^^^^665^695^StringBuffer buf = new StringBuffer ( 16 ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^StringBuffer buffer = new StringBuffer (  ) ;StringBuffer buf = new StringBuffer ( 16 ) ;^683^^^^^665^695^StringBuffer buf = new StringBuffer ( 16 ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P3_Replace_Literal]^for  ( int i = i; i < list.getLength (  ) ; i++ )  {^684^^^^^665^695^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^678^^^^^665^695^String text =  (  ( ProcessingInstruction )  node ) .getData (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^return nsURI == null ? "" : text.trim (  ) ;^679^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^return nodeNS == null ? "" : text.trim (  ) ;^679^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^NodeList list = node .hasChildNodes (  )  ;^682^^^^^665^695^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^682^^^^^665^695^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^aNode = aNode.getParentNode (  ) ;NodeList list = node.getChildNodes (  ) ;^682^^^^^665^695^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^children = valueNode.getChildNodes (  ) ;NodeList list = node.getChildNodes (  ) ;^682^^^^^665^695^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^return !node.hasChildNodes (  ) ;NodeList list = node.getChildNodes (  ) ;^682^^^^^665^695^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^for  ( int i = 0; i < list .item ( i )  ; i++ )  {^684^^^^^665^695^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^684^685^686^687^688^665^695^for  ( int i = 0; i < list.getLength (  ) ; i++ )  { Node child = list.item ( i ) ; if  ( child.getNodeType (  )  == Node.TEXT_NODE )  { buf.append ( child.getNodeValue (  )  ) ; }^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^if  ( textNode.getNodeType (  )  == Node.TEXT_NODE )  {^686^^^^^665^695^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^if  ( child .getNodeName (  )   == Node.TEXT_NODE )  {^686^^^^^665^695^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^buf.append ( child .setNodeValue ( XML_NAMESPACE_URI )   ) ;^687^^^^^665^695^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^return buf.toString (  )  .substring ( i , i )  ;^693^^^^^665^695^return buf.toString (  ) .trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^return buf .getName (  )  .trim (  ) ;^693^^^^^665^695^return buf.toString (  ) .trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^693^^^^^665^695^return buf.toString (  ) .trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^return text != null ? "" : text.trim (  ) ;^675^^^^^671^694^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^return qname == null ? "" : text.trim (  ) ;^675^^^^^671^694^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P6_Replace_Expression]^return text ( text.trim (  ) ;^675^^^^^671^694^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^return text == null ? "" : text.substring (  ) ;^675^^^^^671^694^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^return text == null ? "" : text .substring ( nodeType , nodeType )  ;^675^^^^^671^694^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P1_Replace_Type]^char text = node.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^String text = parent.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^String text = node.cloneNode (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String current = getLanguage (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^int type = node.getNodeType (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^int t2 = node2.getNodeType (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String nsURI = getNamespaceURI (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String prefix = name.getPrefix (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String text =  (  ( Comment )  node ) .getData (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String testPrefix = testName.getPrefix (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^int nodeType = node.getNodeType (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^int t1 = node1.getNodeType (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^NodeList list = node.getChildNodes (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^QName testName = nodeNameTest.getNodeName (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String nm = n.getNodeName (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String prefix = node.getPrefix (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String uri = element.getNamespaceURI (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String localName = node.getLocalName (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;String text = node.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^674^675^^^^671^694^String text = node.getNodeValue (  ) ; return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^aNode = aNode.getParentNode (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buf.append ( child.getNodeValue (  )  ) ;String text = node.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^document = node.getOwnerDocument (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^namespace = attr.getValue (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^return nodeNS == null ? "" : text.trim (  ) ;^675^^^^^671^694^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^return ns == null ? "" : text.trim (  ) ;^675^^^^^671^694^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^675^^^^^671^694^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^else if  ( parentType == Node.PROCESSING_INSTRUCTION_NODE )  {^677^^^^^665^695^else if  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^else if  ( nodeType == Node.null )  {^677^^^^^665^695^else if  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^if  ( i == Node.PROCESSING_INSTRUCTION_NODE )  {^677^^^^^665^695^else if  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^if  ( child.getNodeType (  )  >= Node.TEXT_NODE )  {^686^^^^^677^694^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^if  ( child .getNodeName (  )   == Node.TEXT_NODE )  {^686^^^^^677^694^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^buf.append ( child .setNodeValue ( current )   ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P3_Replace_Literal]^for  ( int i = -7; i < list.getLength (  ) ; i++ )  {^684^^^^^677^694^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^buf.append ( parent.cloneNode (  )  ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^if  ( textNode.getNodeType (  )  == Node.TEXT_NODE )  {^686^^^^^677^694^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^buf .append ( 1 )  ;^690^^^^^677^694^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^buf.append ( getLocalName ( valueNode )  ) ;^690^^^^^677^694^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P3_Replace_Literal]^StringBuffer buf = new StringBuffer ( 19 ) ;^683^^^^^677^694^StringBuffer buf = new StringBuffer ( 16 ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^NodeList list = textNode .hasChildNodes (  )  ;^682^^^^^677^694^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P3_Replace_Literal]^StringBuffer buf = new StringBuffer ( nodeType ) ;^683^^^^^677^694^StringBuffer buf = new StringBuffer ( 16 ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P3_Replace_Literal]^for  ( int i = nodeType; i < list.getLength (  ) ; i++ )  {^684^^^^^677^694^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^NodeList list = textNode.getChildNodes (  ) ;^682^^^^^677^694^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^682^^^^^677^694^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^buf.append ( child .setNodeValue ( defaultNamespace )   ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^return text == false ? "" : text.substring (  ) ;^679^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^if  ( child.getNodeType (  )  == Node.null )  {^686^^^^^665^695^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P1_Replace_Type]^for  (  long  i = 0; i < list.getLength (  ) ; i++ )  {^684^^^^^665^695^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^for  ( int i = 0; i <= list.getLength (  ) ; i++ )  {^684^^^^^665^695^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P3_Replace_Literal]^for  ( int i = 1; i < list.getLength (  ) ; i++ )  {^684^^^^^665^695^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^for  ( listnt i = 0; i < i.getLength (  ) ; i++ )  {^684^^^^^665^695^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^if  ( child.getNodeType (  )  == Node.4 )  {^686^^^^^665^695^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^if  ( parent .getNodeName (  )   == Node.TEXT_NODE )  {^686^^^^^665^695^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^buf.append ( stringValue ( textNode )  ) ;^690^^^^^686^691^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^buf.append ( valueNode.cloneNode (  )  ) ;^687^^^^^665^695^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^buf.append ( child .setNodeValue ( namespace )   ) ;^687^^^^^665^695^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^return text != null ? "" : text.trim (  ) ;^675^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^return string == null ? "" : text.trim (  ) ;^675^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P6_Replace_Expression]^return text ( text.trim (  ) ;^675^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^return text == null ? "" : text.substring (  ) ;^675^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^return text == true ? "" : text.substring (  ) ;^675^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^return prefix == null ? "" : text.trim (  ) ;^679^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^return text == null ? "" : text .substring ( nodeType , nodeType )  ;^679^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P1_Replace_Type]^char text = node.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^String text = textNode.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^String text = node.cloneNode (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^String text = parent.cloneNode (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String current = getLanguage (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^int type = node.getNodeType (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^int t2 = node2.getNodeType (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String nsURI = getNamespaceURI (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String prefix = name.getPrefix (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String text =  (  ( Comment )  node ) .getData (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String testPrefix = testName.getPrefix (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^int nodeType = node.getNodeType (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^int t1 = node1.getNodeType (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^NodeList list = node.getChildNodes (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^QName testName = nodeNameTest.getNodeName (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String nm = n.getNodeName (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String prefix = node.getPrefix (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String uri = element.getNamespaceURI (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String namespaceURI = nodeNameTest.getNamespaceURI (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String localName = node.getLocalName (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;String text = node.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P3_Replace_Literal]^for  ( int i = nodeType; i < list.getLength (  ) ; i++ )  {^684^^^^^665^695^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^String text = parent.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^aNode = aNode.getParentNode (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^buf.append ( child.getNodeValue (  )  ) ;String text = node.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^document = node.getOwnerDocument (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^namespace = attr.getValue (  ) ;String text = node.getNodeValue (  ) ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^return nodePI == null ? "" : text.trim (  ) ;^675^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^return nsURI == null ? "" : text.trim (  ) ;^675^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^675^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^return qname == null ? "" : text.trim (  ) ;^679^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^NodeList list = parent.getChildNodes (  ) ;^682^^^^^665^695^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^for  ( int i = 0; i < list .item ( nodeType )  ; i++ )  {^684^^^^^665^695^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^buf.append ( child .setNodeValue ( namespaceURI )   ) ;^687^^^^^665^695^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^return text != null ? "" : text.trim (  ) ;^669^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^return ns == null ? "" : text.trim (  ) ;^669^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P6_Replace_Expression]^return text ( text.trim (  ) ;^669^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^return text == null ? "" : text.substring (  ) ;^669^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^return text == false ? "" : text.substring (  ) ;^669^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P1_Replace_Type]^char text =  (  ( Comment )  node ) .getData (  ) ;^668^^^^^665^695^String text =  (  ( Comment )  node ) .getData (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( "xmlns" ) ;String text =  (  ( Comment )  node ) .getData (  ) ;^668^^^^^665^695^String text =  (  ( Comment )  node ) .getData (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^Attr attr =  (  ( Element )  aNode ) .getAttributeNode ( qname ) ;String text =  (  ( Comment )  node ) .getData (  ) ;^668^^^^^665^695^String text =  (  ( Comment )  node ) .getData (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String nodePI =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;String text =  (  ( Comment )  node ) .getData (  ) ;^668^^^^^665^695^String text =  (  ( Comment )  node ) .getData (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String target =  (  ( ProcessingInstruction )  node ) .getTarget (  ) ;String text =  (  ( Comment )  node ) .getData (  ) ;^668^^^^^665^695^String text =  (  ( Comment )  node ) .getData (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String testPI =  (  ( ProcessingInstructionTest )  test ) .getTarget (  ) ;String text =  (  ( Comment )  node ) .getData (  ) ;^668^^^^^665^695^String text =  (  ( Comment )  node ) .getData (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;String text =  (  ( Comment )  node ) .getData (  ) ;^668^^^^^665^695^String text =  (  ( Comment )  node ) .getData (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^String text =  (  ( ProcessingInstruction )  node ) .getData (  ) ;String text =  (  ( Comment )  node ) .getData (  ) ;^668^^^^^665^695^String text =  (  ( Comment )  node ) .getData (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^668^^^^^665^695^String text =  (  ( Comment )  node ) .getData (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^node =  (  ( Document )  node ) .getDocumentElement (  ) ;String text =  (  ( Comment )  node ) .getData (  ) ;^668^^^^^665^695^String text =  (  ( Comment )  node ) .getData (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P11_Insert_Donor_Statement]^aNode =  (  ( Document ) aNode ) .getDocumentElement (  ) ;String text =  (  ( Comment )  node ) .getData (  ) ;^668^^^^^665^695^String text =  (  ( Comment )  node ) .getData (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^return nodeNS == null ? "" : text.trim (  ) ;^669^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^669^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^else if  ( nodeType > Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^671^672^673^^^665^695^else if  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^else if  ( nodeTypeType == Node.TEXT_NODE || node == Node.CDATA_SECTION_NODE )  {^671^672^673^^^665^695^else if  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^else nodef  ( iType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^671^672^673^^^665^695^else if  ( nodeType == Node.TEXT_NODE || nodeType == Node.CDATA_SECTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^else if  ( nodeType >= Node.PROCESSING_INSTRUCTION_NODE )  {^677^^^^^665^695^else if  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^else {^677^^^^^665^695^else if  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^if  ( child.getNodeType (  )  < Node.TEXT_NODE )  {^686^^^^^677^694^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P3_Replace_Literal]^for  ( int i = i; i < list.getLength (  ) ; i++ )  {^684^^^^^677^694^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^if  ( child.getNodeType (  )  <= Node.TEXT_NODE )  {^686^^^^^677^694^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^buf.append ( child .setNodeValue ( ln )   ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^buf.append ( child .setNodeValue ( qname )   ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^if  ( textNode.cloneNode (  )  == Node.TEXT_NODE )  {^686^^^^^677^694^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^NodeList list = node .hasChildNodes (  )  ;^682^^^^^677^694^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^NodeList list = valueNode.cloneNode (  ) ;^682^^^^^677^694^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P3_Replace_Literal]^StringBuffer buf = new StringBuffer ( 10 ) ;^683^^^^^677^694^StringBuffer buf = new StringBuffer ( 16 ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^for  ( int i = 0; i < list .item ( i )  ; i++ )  {^684^^^^^677^694^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^buf.append ( child .setNodeValue ( namespace )   ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^buf.append ( valueNode.cloneNode (  )  ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^return text == null ? "" : text .substring ( i , i )  ;^679^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^return text == null ? "" : text .substring ( nodeType , i )  ;^679^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^return testPrefix == null ? "" : text.substring (  ) ;^679^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^buf.append ( getLocalName ( parent )  ) ;^690^^^^^686^691^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^buf.append ( child .setNodeValue ( prefix )   ) ;^687^^^^^665^695^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^buf.append ( getLocalName ( textNode )  ) ;^690^^^^^686^691^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^buf.append ( child .setNodeValue ( s1 )   ) ;^687^^^^^665^695^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^buf .append ( null )  ;^690^^^^^665^695^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^buf.append ( getLocalName ( valueNode )  ) ;^690^^^^^665^695^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^buf.append ( getLocalName ( parent )  ) ;^690^^^^^665^695^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P3_Replace_Literal]^StringBuffer buf = new StringBuffer ( 13 ) ;^683^^^^^665^695^StringBuffer buf = new StringBuffer ( 16 ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^return s2 == null ? "" : text.trim (  ) ;^679^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^NodeList list = textNode.getChildNodes (  ) ;^682^^^^^665^695^NodeList list = node.getChildNodes (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^buf.append ( child .setNodeValue ( id )   ) ;^687^^^^^665^695^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^buf.append ( valueNode .setNodeValue ( text )   ) ;^687^^^^^665^695^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^return text == false ? "" : text.substring (  ) ;^675^^^^^671^694^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^String text = valueNode.getNodeValue (  ) ;^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^674^^^^^671^694^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^return prefix == null ? "" : text.trim (  ) ;^675^^^^^671^694^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^else if  ( nodeType == Node.3 )  {^677^^^^^665^695^else if  ( nodeType == Node.PROCESSING_INSTRUCTION_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P3_Replace_Literal]^for  ( int i = -9; i < list.getLength (  ) ; i++ )  {^684^^^^^677^694^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^buf .append ( 3 )  ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^if  ( valueNode.cloneNode (  )  == Node.TEXT_NODE )  {^686^^^^^677^694^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^buf.append ( child .setNodeValue ( s2 )   ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^buf.append ( child .setNodeValue ( testPrefix )   ) ;^687^^^^^677^694^buf.append ( child.getNodeValue (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P3_Replace_Literal]^StringBuffer buf = new StringBuffer ( 7 ) ;^683^^^^^677^694^StringBuffer buf = new StringBuffer ( 16 ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^return string == null ? "" : text.trim (  ) ;^679^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^return nsURI == null ? "" : text.substring (  ) ;^679^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^if  ( child.getNodeType (  )  <= Node.TEXT_NODE )  {^686^^^^^665^695^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^return prefix == null ? "" : text.trim (  ) ;^669^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^return   "" ;^669^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^return nodeNS == null ? "" : text.substring (  ) ;^675^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P3_Replace_Literal]^StringBuffer buf = new StringBuffer ( 17 ) ;^683^^^^^665^695^StringBuffer buf = new StringBuffer ( 16 ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^String text = node .setNodeValue ( XMLNS_NAMESPACE_URI )  ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P3_Replace_Literal]^StringBuffer buf = new StringBuffer ( i ) ;^683^^^^^665^695^StringBuffer buf = new StringBuffer ( 16 ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P3_Replace_Literal]^for  ( int i = 2; i < list.getLength (  ) ; i++ )  {^684^^^^^665^695^for  ( int i = 0; i < list.getLength (  ) ; i++ )  {^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P5_Replace_Variable]^return nodePI == null ? "" : text.trim (  ) ;^669^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^return text == null ? "" : text .substring ( i , nodeType )  ;^669^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^return testPrefix == null ? "" : text.trim (  ) ;^669^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P7_Replace_Invocation]^String text = node .setNodeValue ( s1 )  ;^674^^^^^665^695^String text = node.getNodeValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^674^675^^^^665^695^String text = node.getNodeValue (  ) ; return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^return nodePI == null ? "" : text.substring (  ) ;^679^^^^^665^695^return text == null ? "" : text.trim (  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P14_Delete_Statement]^^682^683^^^^665^695^NodeList list = node.getChildNodes (  ) ; StringBuffer buf = new StringBuffer ( 16 ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P8_Replace_Mix]^buf.append ( getLocalName ( textNode )  ) ;^690^^^^^665^695^buf.append ( stringValue ( child )  ) ;^[CLASS] DOMNodePointer  [METHOD] stringValue [RETURN_TYPE] String   Node node [VARIABLES] StringBuffer  buf  boolean  Node  aNode  child  n  node  parent  textNode  valueNode  NodeList  list  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  int  i  nodeType  
[P2_Replace_Operator]^if  ( node.getNodeType (  )  != Node.DOCUMENT_NODE )  {^702^^^^^700^715^if  ( node.getNodeType (  )  == Node.DOCUMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P5_Replace_Variable]^if  ( textNode.getNodeType (  )  == Node.DOCUMENT_NODE )  {^702^^^^^700^715^if  ( node.getNodeType (  )  == Node.DOCUMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P7_Replace_Invocation]^if  ( node.getNodeName (  )  == Node.DOCUMENT_NODE )  {^702^^^^^700^715^if  ( node.getNodeType (  )  == Node.DOCUMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  == Node.PROCESSING_INSTRUCTION_NODE )  {^702^^^^^700^715^if  ( node.getNodeType (  )  == Node.DOCUMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  {^702^^^^^700^715^if  ( node.getNodeType (  )  == Node.DOCUMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  {^702^^^^^700^715^if  ( node.getNodeType (  )  == Node.DOCUMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  {^702^^^^^700^715^if  ( node.getNodeType (  )  == Node.DOCUMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( nodeType == Node.COMMENT_NODE )  {^702^^^^^700^715^if  ( node.getNodeType (  )  == Node.DOCUMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  {^702^^^^^700^715^if  ( node.getNodeType (  )  == Node.DOCUMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P15_Unwrap_Block]^document = ((org.w3c.dom.Document) (node));^702^703^704^^^700^715^if  ( node.getNodeType (  )  == Node.DOCUMENT_NODE )  { document =  ( Document )  node; }^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P16_Remove_Block]^^702^703^704^^^700^715^if  ( node.getNodeType (  )  == Node.DOCUMENT_NODE )  { document =  ( Document )  node; }^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P13_Insert_Block]^if  (  (  ( n.getNodeType (  )  )  ==  ( TEXT_NODE )  )  ||  (  ( n.getNodeType (  )  )  ==  ( CDATA_SECTION_NODE )  )  )  {     count++; }^702^^^^^700^715^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P13_Insert_Block]^if  ( aNode instanceof Document )  {     aNode =  (  ( Document )   ( aNode )  ) .getDocumentElement (  ) ; }^702^^^^^700^715^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P13_Insert_Block]^if  ( node instanceof Document )  {     node =  (  ( Document )   ( node )  ) .getDocumentElement (  ) ; }^702^^^^^700^715^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( aNode.getNodeType (  )  )  ==  ( ELEMENT_NODE )  )  {     Attr attr =  (  ( Element )   ( aNode )  ) .getAttributeNode ( qname ) ;     if  ( attr != null )  {         namespace = attr.getValue (  ) ;         break;     } }^702^^^^^700^715^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( child.getNodeType (  )  )  ==  ( TEXT_NODE )  )  {     buf.append ( child.getNodeValue (  )  ) ; }else {     buf.append ( stringValue ( child )  ) ; }^702^^^^^700^715^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P13_Insert_Block]^if  (  ( aNode.getNodeType (  )  )  ==  ( ELEMENT_NODE )  )  {     Attr attr =  (  ( Element )   ( aNode )  ) .getAttributeNode ( qname ) ;     if  ( attr != null )  {         return attr.getValue (  ) ;     } }^702^^^^^700^715^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P7_Replace_Invocation]^document = node.getNodeName (  ) ;^706^^^^^700^715^document = node.getOwnerDocument (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^document  =  document ;^706^^^^^700^715^document = node.getOwnerDocument (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^aNode = aNode.getParentNode (  ) ;document = node.getOwnerDocument (  ) ;^706^^^^^700^715^document = node.getOwnerDocument (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^node =  (  ( Document )  node ) .getDocumentElement (  ) ;document = node.getOwnerDocument (  ) ;^706^^^^^700^715^document = node.getOwnerDocument (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^aNode =  (  ( Document ) aNode ) .getDocumentElement (  ) ;document = node.getOwnerDocument (  ) ;^706^^^^^700^715^document = node.getOwnerDocument (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^document =  ( Document )  node;document = node.getOwnerDocument (  ) ;^706^^^^^700^715^document = node.getOwnerDocument (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P5_Replace_Variable]^document = parent.getOwnerDocument (  ) ;^706^^^^^700^715^document = node.getOwnerDocument (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^document = valueNode.getOwnerDocument (  ) ;^706^^^^^700^715^document = node.getOwnerDocument (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P14_Delete_Statement]^^706^^^^^700^715^document = node.getOwnerDocument (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;document = node.getOwnerDocument (  ) ;^706^^^^^700^715^document = node.getOwnerDocument (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^int type = node.getNodeType (  ) ;document = node.getOwnerDocument (  ) ;^706^^^^^700^715^document = node.getOwnerDocument (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^Node current = node.getFirstChild (  ) ;document = node.getOwnerDocument (  ) ;^706^^^^^700^715^document = node.getOwnerDocument (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^int t1 = node1.getNodeType (  ) ;document = node.getOwnerDocument (  ) ;^706^^^^^700^715^document = node.getOwnerDocument (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^int t2 = node2.getNodeType (  ) ;document = node.getOwnerDocument (  ) ;^706^^^^^700^715^document = node.getOwnerDocument (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^Node n = node.getPreviousSibling (  ) ;document = node.getOwnerDocument (  ) ;^706^^^^^700^715^document = node.getOwnerDocument (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;document = node.getOwnerDocument (  ) ;^706^^^^^700^715^document = node.getOwnerDocument (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;document = node.getOwnerDocument (  ) ;^706^^^^^700^715^document = node.getOwnerDocument (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^document  = null ;^703^^^^^700^715^document =  ( Document )  node;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^document = node.getOwnerDocument (  ) ;document =  ( Document )  node;^703^^^^^700^715^document =  ( Document )  node;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^document  =  document ;^703^^^^^700^715^document =  ( Document )  node;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P5_Replace_Variable]^document = textNode.getOwnerDocument (  ) ;^706^^^^^700^715^document = node.getOwnerDocument (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^if  ( parent.getNodeType (  )  == Node.DOCUMENT_NODE )  {^702^^^^^700^715^if  ( node.getNodeType (  )  == Node.DOCUMENT_NODE )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^document = parent.getNodeName (  ) ;^706^^^^^700^715^document = node.getOwnerDocument (  ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P5_Replace_Variable]^Element element = id.getElementById ( document ) ;^708^^^^^700^715^Element element = document.getElementById ( id ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^Element element = document.getElementById ( prefix ) ;^708^^^^^700^715^Element element = document.getElementById ( id ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P11_Insert_Donor_Statement]^Element element =  ( Element )  node;Element element = document.getElementById ( id ) ;^708^^^^^700^715^Element element = document.getElementById ( id ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P5_Replace_Variable]^Element element = document.getElementById ( ns ) ;^708^^^^^700^715^Element element = document.getElementById ( id ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P7_Replace_Invocation]^Element element = document .getDocumentElement (  )  ;^708^^^^^700^715^Element element = document.getElementById ( id ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^Element element = document.getElementById ( nodePI ) ;^708^^^^^700^715^Element element = document.getElementById ( id ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P14_Delete_Statement]^^708^^^^^700^715^Element element = document.getElementById ( id ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P2_Replace_Operator]^if  ( element == null )  {^709^^^^^700^715^if  ( element != null )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^if  ( element != false )  {^709^^^^^700^715^if  ( element != null )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( factory == null )  {^709^^^^^700^715^if  ( element != null )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( parent != null )  {^709^^^^^700^715^if  ( element != null )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( attr != null )  {^709^^^^^700^715^if  ( element != null )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( current == null )  {^709^^^^^700^715^if  ( element != null )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( namespaces == null )  {^709^^^^^700^715^if  ( element != null )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( uri != null )  {^709^^^^^700^715^if  ( element != null )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( s2 == null )  {^709^^^^^700^715^if  ( element != null )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( namespace == null )  {^709^^^^^700^715^if  ( element != null )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( prefix == null )  {^709^^^^^700^715^if  ( element != null )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( localName != null )  {^709^^^^^700^715^if  ( element != null )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( ns == null )  {^709^^^^^700^715^if  ( element != null )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( parent == null )  {^709^^^^^700^715^if  ( element != null )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( current == node1 )  {^709^^^^^700^715^if  ( element != null )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( s1 == null )  {^709^^^^^700^715^if  ( element != null )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( id != null )  {^709^^^^^700^715^if  ( element != null )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P9_Replace_Statement]^if  ( prefix != null )  {^709^^^^^700^715^if  ( element != null )  {^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P15_Unwrap_Block]^return new org.apache.commons.jxpath.ri.model.dom.DOMNodePointer(element, getLocale(), id);^709^710^711^^^700^715^if  ( element != null )  { return new DOMNodePointer ( element, getLocale (  ) , id ) ; }^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P16_Remove_Block]^^709^710^711^^^700^715^if  ( element != null )  { return new DOMNodePointer ( element, getLocale (  ) , id ) ; }^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P7_Replace_Invocation]^return new NullPointer ( getNode (  ) , id ) ;^713^^^^^700^715^return new NullPointer ( getLocale (  ) , id ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( object instanceof DOMNodePointer )  )  {     return false; }^713^^^^^700^715^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P5_Replace_Variable]^return new NullPointer ( getLocale (  ) , nodePI ) ;^713^^^^^700^715^return new NullPointer ( getLocale (  ) , id ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^return new NullPointer ( getNode (  ) , qname ) ;^713^^^^^700^715^return new NullPointer ( getLocale (  ) , id ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P14_Delete_Statement]^^713^^^^^700^715^return new NullPointer ( getLocale (  ) , id ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P4_Replace_Constructor]^return return  new NullPointer ( getLocale (  ) , id )  , id ) ;^710^^^^^700^715^return new DOMNodePointer ( element, getLocale (  ) , id ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P4_Replace_Constructor]^return new DOMNodePointer (  getLocale (  ) , id ) ;^710^^^^^700^715^return new DOMNodePointer ( element, getLocale (  ) , id ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P4_Replace_Constructor]^return new DOMNodePointer ( element, getLocale (  )  ) ;^710^^^^^700^715^return new DOMNodePointer ( element, getLocale (  ) , id ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P5_Replace_Variable]^return new DOMNodePointer ( element, getLocale (  ) , nodePI ) ;^710^^^^^700^715^return new DOMNodePointer ( element, getLocale (  ) , id ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P5_Replace_Variable]^return new DOMNodePointer ( id, getLocale (  ) , element ) ;^710^^^^^700^715^return new DOMNodePointer ( element, getLocale (  ) , id ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P7_Replace_Invocation]^return new DOMNodePointer ( element, getNode (  ) , id ) ;^710^^^^^700^715^return new DOMNodePointer ( element, getLocale (  ) , id ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P13_Insert_Block]^if  ( ! ( object instanceof DOMNodePointer )  )  {     return false; }^710^^^^^700^715^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P13_Insert_Block]^if  ( prefix.equals ( "xml" )  )  {     return XML_NAMESPACE_URI; }^710^^^^^700^715^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P13_Insert_Block]^if  ( prefix.equals ( "xmlns" )  )  {     return XMLNS_NAMESPACE_URI; }^710^^^^^700^715^[Delete]^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^return new DOMNodePointer ( element, getLocale (  ) , qname ) ;^710^^^^^700^715^return new DOMNodePointer ( element, getLocale (  ) , id ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P14_Delete_Statement]^^710^^^^^700^715^return new DOMNodePointer ( element, getLocale (  ) , id ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^return new DOMNodePointer ( element, getLocale (  ) , ns ) ;^710^^^^^700^715^return new DOMNodePointer ( element, getLocale (  ) , id ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P8_Replace_Mix]^return new NullPointer ( getLocale (  ) , prefix ) ;^713^^^^^700^715^return new NullPointer ( getLocale (  ) , id ) ;^[CLASS] DOMNodePointer  [METHOD] getPointerByID [RETURN_TYPE] Pointer   JXPathContext context String id [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  Element  element  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Document  document  Map  namespaces  long  serialVersionUID  
[P7_Replace_Invocation]^AbstractFactory factory = context.getNamespaceURI (  ) ;^718^^^^^717^726^AbstractFactory factory = context.getFactory (  ) ;^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P14_Delete_Statement]^^718^^^^^717^726^AbstractFactory factory = context.getFactory (  ) ;^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P2_Replace_Operator]^if  ( factory != null )  {^719^^^^^717^726^if  ( factory == null )  {^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P6_Replace_Expression]^if  ( "Factory is not set on the JXPathContext - " + "cannot create path: " + asPath (  ) )  {^719^^^^^717^726^if  ( factory == null )  {^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P6_Replace_Expression]^if  ( "Factory is not set on the JXPathContext - " + "cannot create path: " )  {^719^^^^^717^726^if  ( factory == null )  {^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P8_Replace_Mix]^if  ( factory == true )  {^719^^^^^717^726^if  ( factory == null )  {^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P9_Replace_Statement]^if  ( element != null )  {^719^^^^^717^726^if  ( factory == null )  {^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P9_Replace_Statement]^if  ( parent != null )  {^719^^^^^717^726^if  ( factory == null )  {^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P9_Replace_Statement]^if  ( attr != null )  {^719^^^^^717^726^if  ( factory == null )  {^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P9_Replace_Statement]^if  ( current == null )  {^719^^^^^717^726^if  ( factory == null )  {^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P9_Replace_Statement]^if  ( namespaces == null )  {^719^^^^^717^726^if  ( factory == null )  {^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P9_Replace_Statement]^if  ( uri != null )  {^719^^^^^717^726^if  ( factory == null )  {^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P9_Replace_Statement]^if  ( s2 == null )  {^719^^^^^717^726^if  ( factory == null )  {^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P9_Replace_Statement]^if  ( namespace == null )  {^719^^^^^717^726^if  ( factory == null )  {^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P9_Replace_Statement]^if  ( prefix == null )  {^719^^^^^717^726^if  ( factory == null )  {^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P9_Replace_Statement]^if  ( localName != null )  {^719^^^^^717^726^if  ( factory == null )  {^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P9_Replace_Statement]^if  ( ns == null )  {^719^^^^^717^726^if  ( factory == null )  {^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P9_Replace_Statement]^if  ( parent == null )  {^719^^^^^717^726^if  ( factory == null )  {^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P9_Replace_Statement]^if  ( s1 == null )  {^719^^^^^717^726^if  ( factory == null )  {^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P9_Replace_Statement]^if  ( id != null )  {^719^^^^^717^726^if  ( factory == null )  {^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P9_Replace_Statement]^if  ( prefix != null )  {^719^^^^^717^726^if  ( factory == null )  {^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P15_Unwrap_Block]^throw new org.apache.commons.jxpath.JXPathException((("Factory is not set on the JXPathContext - " + "cannot create path: ") + (asPath())));^719^720^721^722^723^717^726^if  ( factory == null )  { throw new JXPathException ( "Factory is not set on the JXPathContext - " + "cannot create path: " + asPath (  )  ) ; }^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P16_Remove_Block]^^719^720^721^722^723^717^726^if  ( factory == null )  { throw new JXPathException ( "Factory is not set on the JXPathContext - " + "cannot create path: " + asPath (  )  ) ; }^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P13_Insert_Block]^if  ( parent == null )  {     throw new JXPathException ( "Cannot remove root DOM node" ) ; }^719^^^^^717^726^[Delete]^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P13_Insert_Block]^if  ( ns == null )  {     throw new JXPathException (  ( "Unknown namespace prefix: " + prefix )  ) ; }^719^^^^^717^726^[Delete]^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathException ( "Factory is not set on the JXPathContext - "  >>  "cannot create path: "  >>  asPath (  )  ) ;^720^721^722^723^^717^726^throw new JXPathException ( "Factory is not set on the JXPathContext - " + "cannot create path: " + asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathException ( "Factory is not set on the JXPathContext - "  &&  "cannot create path: " + asPath (  )  ) ;^720^721^722^723^^717^726^throw new JXPathException ( "Factory is not set on the JXPathContext - " + "cannot create path: " + asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathException ( "isactory is not set on the JXPathContext - " + "cannot create path: " + asPath (  )  ) ;^720^721^722^723^^717^726^throw new JXPathException ( "Factory is not set on the JXPathContext - " + "cannot create path: " + asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathException ( "Factory is not set on the JXPathContext - " + "caannot create path: " + asPath (  )  ) ;^720^721^722^723^^717^726^throw new JXPathException ( "Factory is not set on the JXPathContext - " + "cannot create path: " + asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P7_Replace_Invocation]^throw new JXPathException ( "Factory is not set on the JXPathContext - " + "cannot create path: " + getLanguage (  )  ) ;^720^721^722^723^^717^726^throw new JXPathException ( "Factory is not set on the JXPathContext - " + "cannot create path: " + asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P13_Insert_Block]^if  ( factory == null )  {     throw new JXPathException (  (  ( "Factory is not set on the JXPathContext - " + "cannot create path: " )  +  ( asPath (  )  )  )  ) ; }^720^^^^^717^726^[Delete]^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathException ( "Factory is not set on the JXPathContext - "  !=  "cannot create path: "  !=  asPath (  )  ) ;^720^721^722^723^^717^726^throw new JXPathException ( "Factory is not set on the JXPathContext - " + "cannot create path: " + asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathException ( "Factory is not set on the JXPathContext - "  ^  "cannot create path: " + asPath (  )  ) ;^720^721^722^723^^717^726^throw new JXPathException ( "Factory is not set on the JXPathContext - " + "cannot create path: " + asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathException ( "Faactory is not set on the JXPathContext - " + "cannot create path: " + asPath (  )  ) ;^720^721^722^723^^717^726^throw new JXPathException ( "Factory is not set on the JXPathContext - " + "cannot create path: " + asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathException ( "Factory is not set on the JXPathContext - " + "cannot cannot create path: " + asPath (  )  ) ;^720^721^722^723^^717^726^throw new JXPathException ( "Factory is not set on the JXPathContext - " + "cannot create path: " + asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P7_Replace_Invocation]^+ getLanguage (  )  ) ;^723^^^^^717^726^+ asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P14_Delete_Statement]^^723^^^^^717^726^+ asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathException ( "Factory is not set on the JXPathContext - "   instanceof   "cannot create path: "   instanceof   asPath (  )  ) ;^720^721^722^723^^717^726^throw new JXPathException ( "Factory is not set on the JXPathContext - " + "cannot create path: " + asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathException ( "Factory is not set on the JXPathContext - "  <  "cannot create path: " + asPath (  )  ) ;^720^721^722^723^^717^726^throw new JXPathException ( "Factory is not set on the JXPathContext - " + "cannot create path: " + asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathException ( " set on the actory is not set on the JXPathContext - " + "cannot create path: " + asPath (  )  ) ;^720^721^722^723^^717^726^throw new JXPathException ( "Factory is not set on the JXPathContext - " + "cannot create path: " + asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathException ( "Factory is not set on the JXPathContext - "  <=  "cannot create path: "  <=  asPath (  )  ) ;^720^721^722^723^^717^726^throw new JXPathException ( "Factory is not set on the JXPathContext - " + "cannot create path: " + asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathException ( "Factory is not set on the JXPathContext - "  ||  "cannot create path: " + asPath (  )  ) ;^720^721^722^723^^717^726^throw new JXPathException ( "Factory is not set on the JXPathContext - " + "cannot create path: " + asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathException ( "he J" + "cannot create path: " + asPath (  )  ) ;^720^721^722^723^^717^726^throw new JXPathException ( "Factory is not set on the JXPathContext - " + "cannot create path: " + asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathException ( "Factory is not set on the JXPathContext - " + "cannot create path:  cre" + asPath (  )  ) ;^720^721^722^723^^717^726^throw new JXPathException ( "Factory is not set on the JXPathContext - " + "cannot create path: " + asPath (  )  ) ;^[CLASS] DOMNodePointer  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] boolean  JXPathContext  context  Node  aNode  child  n  node  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  Map  namespaces  long  serialVersionUID  AbstractFactory  factory  
[P5_Replace_Variable]^Node node1 =  ( Node )  pointer2.getBaseValue (  ) ;^731^^^^^716^746^Node node1 =  ( Node )  pointer1.getBaseValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P7_Replace_Invocation]^Node node1 =  ( Node )  pointer1.setValue (  ) ;^731^^^^^716^746^Node node1 =  ( Node )  pointer1.getBaseValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^Node node2 =  ( Node )  pointer2.getBaseValue (  ) ;Node node1 =  ( Node )  pointer1.getBaseValue (  ) ;^731^^^^^716^746^Node node1 =  ( Node )  pointer1.getBaseValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;Node node1 =  ( Node )  pointer1.getBaseValue (  ) ;^731^^^^^716^746^Node node1 =  ( Node )  pointer1.getBaseValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^Node node1 =  ( Node )  pointer2.setValue (  ) ;^731^^^^^716^746^Node node1 =  ( Node )  pointer1.getBaseValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P14_Delete_Statement]^^731^732^^^^716^746^Node node1 =  ( Node )  pointer1.getBaseValue (  ) ; Node node2 =  ( Node )  pointer2.getBaseValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^Node node2 =  ( Node )  pointer1.getBaseValue (  ) ;^732^^^^^717^747^Node node2 =  ( Node )  pointer2.getBaseValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P7_Replace_Invocation]^Node node2 =  ( Node )  pointer2.setValue (  ) ;^732^^^^^717^747^Node node2 =  ( Node )  pointer2.getBaseValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^Node node2 =  ( Node )  pointer1.setValue (  ) ;^732^^^^^717^747^Node node2 =  ( Node )  pointer2.getBaseValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^Node node1 =  ( Node )  pointer1.getBaseValue (  ) ;Node node2 =  ( Node )  pointer2.getBaseValue (  ) ;^732^^^^^717^747^Node node2 =  ( Node )  pointer2.getBaseValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^String nodeNS = DOMNodePointer.getNamespaceURI ( node ) ;Node node2 =  ( Node )  pointer2.getBaseValue (  ) ;^732^^^^^717^747^Node node2 =  ( Node )  pointer2.getBaseValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P14_Delete_Statement]^^732^^^^^717^747^Node node2 =  ( Node )  pointer2.getBaseValue (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^if  ( node1 != node2 )  {^733^^^^^718^748^if  ( node1 == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^if  ( node1 == textNode )  {^733^^^^^718^748^if  ( node1 == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^if  ( node2 == node1 )  {^733^^^^^718^748^if  ( node1 == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P15_Unwrap_Block]^return 0;^733^734^735^^^718^748^if  ( node1 == node2 )  { return 0; }^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P16_Remove_Block]^^733^734^735^^^718^748^if  ( node1 == node2 )  { return 0; }^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( uri != null )  {     return uri; }^733^^^^^718^748^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( namespace ==  ( UNKNOWN_NAMESPACE )  )  {     return null; }^733^^^^^718^748^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( prefix != null )  {     return prefix; }^733^^^^^718^748^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( index ==  ( -1 )  )  {     return null; }^733^^^^^718^748^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( localName != null )  {     return localName; }^733^^^^^718^748^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( current == node2 )  {     return 1; }^733^^^^^718^748^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( index ==  ( -1 )  )  {     return name; }^733^^^^^718^748^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( object ==  ( this )  )  {     return true; }^733^^^^^718^748^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( n == node2 )  {     return 1; }^733^^^^^718^748^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -8;^734^^^^^719^749^return 0;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 1;^734^^^^^719^749^return 0;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return 2;^734^^^^^719^749^return 0;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 0L;^734^^^^^719^749^return 0;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P1_Replace_Type]^short  t1 = node1.getNodeType (  ) ;^737^^^^^722^752^int t1 = node1.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^int t1 = valueNode.getNodeType (  ) ;^737^^^^^722^752^int t1 = node1.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P7_Replace_Invocation]^int t1 = node1.cloneNode (  ) ;^737^^^^^722^752^int t1 = node1.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^int t1 = parent.getNodeType (  ) ;^737^^^^^722^752^int t1 = node1.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;int t1 = node1.getNodeType (  ) ;^737^^^^^722^752^int t1 = node1.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^int type = node.getNodeType (  ) ;int t1 = node1.getNodeType (  ) ;^737^^^^^722^752^int t1 = node1.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^int nodeType = node.getNodeType (  ) ;int t1 = node1.getNodeType (  ) ;^737^^^^^722^752^int t1 = node1.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^int t2 = node2.getNodeType (  ) ;int t1 = node1.getNodeType (  ) ;^737^^^^^722^752^int t1 = node1.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^NodeList list = node.getChildNodes (  ) ;int t1 = node1.getNodeType (  ) ;^737^^^^^722^752^int t1 = node1.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^QName testName = nodeNameTest.getNodeName (  ) ;int t1 = node1.getNodeType (  ) ;^737^^^^^722^752^int t1 = node1.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;int t1 = node1.getNodeType (  ) ;^737^^^^^722^752^int t1 = node1.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^String nm = n.getNodeName (  ) ;int t1 = node1.getNodeType (  ) ;^737^^^^^722^752^int t1 = node1.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;int t1 = node1.getNodeType (  ) ;^737^^^^^722^752^int t1 = node1.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^String prefix = node.getPrefix (  ) ;int t1 = node1.getNodeType (  ) ;^737^^^^^722^752^int t1 = node1.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^int count = children.getLength (  ) ;int t1 = node1.getNodeType (  ) ;^737^^^^^722^752^int t1 = node1.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^String localName = node.getLocalName (  ) ;int t1 = node1.getNodeType (  ) ;^737^^^^^722^752^int t1 = node1.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P12_Insert_Condition]^if  ( node.getNodeType (  )  != Node.ELEMENT_NODE )  { int t1 = node1.getNodeType (  ) ; int t2 = node2.getNodeType (  ) ; }^737^738^^^^722^752^int t1 = node1.getNodeType (  ) ; int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P12_Insert_Condition]^if  ( child.getNodeType (  )  == Node.TEXT_NODE )  { int t1 = node1.getNodeType (  ) ; int t2 = node2.getNodeType (  ) ; }^737^738^^^^722^752^int t1 = node1.getNodeType (  ) ; int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P12_Insert_Condition]^if  ( aNode.getNodeType (  )  == Node.ELEMENT_NODE )  { int t1 = node1.getNodeType (  ) ; int t2 = node2.getNodeType (  ) ; }^737^738^^^^722^752^int t1 = node1.getNodeType (  ) ; int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P12_Insert_Condition]^if  ( node.getNodeType (  )  == Node.DOCUMENT_NODE )  { int t1 = node1.getNodeType (  ) ; int t2 = node2.getNodeType (  ) ; }^737^738^^^^722^752^int t1 = node1.getNodeType (  ) ; int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P12_Insert_Condition]^if  ( n.getNodeType (  )  == Node.ELEMENT_NODE )  { int t1 = node1.getNodeType (  ) ; int t2 = node2.getNodeType (  ) ; }^737^738^^^^722^752^int t1 = node1.getNodeType (  ) ; int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P7_Replace_Invocation]^int t1 = node1 .getNodeName (  )  ;^737^^^^^722^752^int t1 = node1.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^int t1 = textNode.getNodeType (  ) ;^737^^^^^722^752^int t1 = node1.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P14_Delete_Statement]^^737^^^^^722^752^int t1 = node1.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^aNode = aNode.getParentNode (  ) ;int t1 = node1.getNodeType (  ) ;^737^^^^^722^752^int t1 = node1.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^document = node.getOwnerDocument (  ) ;int t1 = node1.getNodeType (  ) ;^737^^^^^722^752^int t1 = node1.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^n = n.getParentNode (  ) ;int t1 = node1.getNodeType (  ) ;^737^^^^^722^752^int t1 = node1.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P1_Replace_Type]^short  t2 = node2.getNodeType (  ) ;^738^^^^^723^753^int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^int t2 = valueNode.getNodeType (  ) ;^738^^^^^723^753^int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P7_Replace_Invocation]^int t2 = node2.cloneNode (  ) ;^738^^^^^723^753^int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P7_Replace_Invocation]^int t2 = node2 .getNodeName (  )  ;^738^^^^^723^753^int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^int t2 = parent.cloneNode (  ) ;^738^^^^^723^753^int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;int t2 = node2.getNodeType (  ) ;^738^^^^^723^753^int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^int type = node.getNodeType (  ) ;int t2 = node2.getNodeType (  ) ;^738^^^^^723^753^int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^int nodeType = node.getNodeType (  ) ;int t2 = node2.getNodeType (  ) ;^738^^^^^723^753^int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^int t1 = node1.getNodeType (  ) ;int t2 = node2.getNodeType (  ) ;^738^^^^^723^753^int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^NodeList list = node.getChildNodes (  ) ;int t2 = node2.getNodeType (  ) ;^738^^^^^723^753^int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^QName testName = nodeNameTest.getNodeName (  ) ;int t2 = node2.getNodeType (  ) ;^738^^^^^723^753^int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^String text = node.getNodeValue (  ) ;int t2 = node2.getNodeType (  ) ;^738^^^^^723^753^int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^String nm = n.getNodeName (  ) ;int t2 = node2.getNodeType (  ) ;^738^^^^^723^753^int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^String name = node.getNodeName (  ) ;int t2 = node2.getNodeType (  ) ;^738^^^^^723^753^int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^String prefix = node.getPrefix (  ) ;int t2 = node2.getNodeType (  ) ;^738^^^^^723^753^int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^int count = children.getLength (  ) ;int t2 = node2.getNodeType (  ) ;^738^^^^^723^753^int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^String localName = node.getLocalName (  ) ;int t2 = node2.getNodeType (  ) ;^738^^^^^723^753^int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^int t2 = parent.getNodeType (  ) ;^738^^^^^723^753^int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P14_Delete_Statement]^^738^^^^^723^753^int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^aNode = aNode.getParentNode (  ) ;int t2 = node2.getNodeType (  ) ;^738^^^^^723^753^int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^document = node.getOwnerDocument (  ) ;int t2 = node2.getNodeType (  ) ;^738^^^^^723^753^int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^n = n.getParentNode (  ) ;int t2 = node2.getNodeType (  ) ;^738^^^^^723^753^int t2 = node2.getNodeType (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^if  ( t1 == Node.ATTRIBUTE_NODE || t2 != Node.ATTRIBUTE_NODE )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^if  ( t1 != Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^if  ( t1 == Node.ATTRIBUTE_NODE && t2 < Node.ATTRIBUTE_NODE )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^if  ( t1 <= Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^if  ( t1 > Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^if  ( t1 >= Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^if  ( tt1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^if  ( t7 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^if  ( t9 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^if  ( t-8 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^if  ( t2 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^if  ( t1 == Node.ATTRIBUTE_NODE && t1 != Node.ATTRIBUTE_NODE )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^if  ( t2 == Node.ATTRIBUTE_NODE && t1 != Node.ATTRIBUTE_NODE )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^if  ( t1 == Node.ATTRIBUTE_NODE ) {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^if  (  t2 != Node.ATTRIBUTE_NODE )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^if  ( t1 == ATTRIBUTE_NODE )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^if  ( t2 != ATTRIBUTE_NODE )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^if  ( t1 != ATTRIBUTE_NODE && t2 == ATTRIBUTE_NODE )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^if  ( t1 != ATTRIBUTE_NODE )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^if  ( t2 == ATTRIBUTE_NODE )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^if  ( t1 == ATTRIBUTE_NODE && t2 == ATTRIBUTE_NODE )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^if  ( i < length )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^if  ( n == node1 )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^if  ( n == node2 )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^if  ( t3 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^739^^^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P15_Unwrap_Block]^return -1;^739^740^741^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  { return -1; }^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P16_Remove_Block]^^739^740^741^^^724^754^if  ( t1 == Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  { return -1; }^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^else if  ( t1 != Node.ATTRIBUTE_NODE || t2 == Node.ATTRIBUTE_NODE )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 != Node.ATTRIBUTE_NODE )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 >= Node.ATTRIBUTE_NODE )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^else if  ( tlength != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^else if  ( tt1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^else if  ( tt2 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^else if  ( t2 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^else if  ( t1 != Node.ATTRIBUTE_NODE && t1 == Node.ATTRIBUTE_NODE )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^else t2f  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^else t1f  ( i != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^else if  ( t1 != Node.ATTRIBUTE_NODE ) {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^else if  (  t2 == Node.ATTRIBUTE_NODE )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^else if  ( t1 != ATTRIBUTE_NODE )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^else if  ( t2 == ATTRIBUTE_NODE )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^else if  ( t1 == ATTRIBUTE_NODE && t2 == ATTRIBUTE_NODE )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^else if  ( t1 == ATTRIBUTE_NODE )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^else if  ( i < length )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^else if  ( n == node1 )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^else if  ( n == node2 )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^if  (  t2 == Node.ATTRIBUTE_NODE )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P15_Unwrap_Block]^return 1;^742^743^744^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  { return 1; }^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P16_Remove_Block]^^742^743^744^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  { return 1; }^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^else if  ( t1 == Node.ATTRIBUTE_NODE || t2 == Node.ATTRIBUTE_NODE )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^else if  ( t1 >= Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^else if  ( t1 > Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^else if  ( tlength == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^else if  ( t7 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^else if  ( t1 == Node.ATTRIBUTE_NODE && t1 == Node.ATTRIBUTE_NODE )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^else t2f  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^else t1f  ( i == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^else t2f  ( t1 == Node.ATTRIBUTE_NODE && i == Node.ATTRIBUTE_NODE )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^else if  ( t1 == Node.ATTRIBUTE_NODE ) {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^else if  (  t2 == Node.ATTRIBUTE_NODE )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^else if  ( t1 == ATTRIBUTE_NODE )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^else if  ( t2 == ATTRIBUTE_NODE )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^else if  ( i < length )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^else if  ( n == node1 )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^else if  ( n == node2 )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^else {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^if  ( n != node1 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^if  ( n <= node1 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^if  ( n == node-7 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^if  ( n == nodet1 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^if  ( textNode == node1 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^if  ( n == textNode )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^if  ( node1 == n )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^if  ( n == node2 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P9_Replace_Statement]^if  ( ns == null )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P9_Replace_Statement]^if  ( current == node1 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P15_Unwrap_Block]^return -1;^750^751^752^^^735^765^if  ( n == node1 )  { return -1; }^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P16_Remove_Block]^^750^751^752^^^735^765^if  ( n == node1 )  { return -1; }^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( current == node1 )  {     return -1; }else     if  ( current == node2 )  {         return 1;     }^750^^^^^735^765^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^else if  ( n != node2 )  {^753^^^^^738^768^else if  ( n == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^else if  ( textNode == node2 )  {^753^^^^^738^768^else if  ( n == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^else if  ( n == textNode )  {^753^^^^^738^768^else if  ( n == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^else if  ( node2 == n )  {^753^^^^^738^768^else if  ( n == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^else if  ( valueNode == node2 )  {^753^^^^^738^768^else if  ( n == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P9_Replace_Statement]^else if  ( current == node2 )  {^753^^^^^738^768^else if  ( n == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P15_Unwrap_Block]^return 1;^753^754^755^^^738^768^else if  ( n == node2 )  { return 1; }^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P16_Remove_Block]^^753^754^755^^^738^768^else if  ( n == node2 )  { return 1; }^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( uri != null )  {     return uri; }^753^^^^^738^768^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( namespace ==  ( UNKNOWN_NAMESPACE )  )  {     return null; }^753^^^^^738^768^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( prefix != null )  {     return prefix; }^753^^^^^738^768^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( index ==  ( -1 )  )  {     return null; }^753^^^^^738^768^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( localName != null )  {     return localName; }^753^^^^^738^768^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( current == node2 )  {     return 1; }^753^^^^^738^768^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( node1 == node2 )  {     return 0; }^753^^^^^738^768^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( attr != null )  {     return attr.getValue (  ) ; }^753^^^^^738^768^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( index ==  ( -1 )  )  {     return name; }^753^^^^^738^768^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( object ==  ( this )  )  {     return true; }^753^^^^^738^768^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return ;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 4;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 1 - 0;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -length;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return -1 % 1;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^else if  ( parent == node2 )  {^753^^^^^738^768^else if  ( n == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^else if  ( n == parent )  {^753^^^^^738^768^else if  ( n == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^if  ( n == node2 )  {^753^^^^^738^768^else if  ( n == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return 2;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 1L;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P1_Replace_Type]^for  (  short  i = 0; i < length; i++ )  {^748^^^^^733^763^for  ( int i = 0; i < length; i++ )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^for  ( int i = 0; i <= length; i++ )  {^748^^^^^733^763^for  ( int i = 0; i < length; i++ )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^for  ( int i = -5; i < length; i++ )  {^748^^^^^733^763^for  ( int i = 0; i < length; i++ )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^for  ( t2nt i = 0; i < length; i++ )  {^748^^^^^733^763^for  ( int i = 0; i < length; i++ )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^for  ( int i = 0; i < t2; i++ )  {^748^^^^^733^763^for  ( int i = 0; i < length; i++ )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^for  ( lengthnt i = 0; i < i; i++ )  {^748^^^^^733^763^for  ( int i = 0; i < length; i++ )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^if  ( n == nodelength )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^if  ( n == node-6 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^if  ( valueNode == node1 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^if  ( n == parent )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^if  ( n == node1L )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^else if  ( n == valueNode )  {^753^^^^^738^768^else if  ( n == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^else {^753^^^^^738^768^else if  ( n == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return t1;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 3;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -2;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -i;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return -3;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^else if  ( n <= node2 )  {^753^^^^^738^768^else if  ( n == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return i;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 1 + 3;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -0;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return -2;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^Node n = map.item ( t2 ) ;^749^^^^^734^764^Node n = map.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^Node n = i.item ( map ) ;^749^^^^^734^764^Node n = map.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^Node n = map .getLength (  )  ;^749^^^^^734^764^Node n = map.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^Node child = list.item ( i ) ;Node n = map.item ( i ) ;^749^^^^^734^764^Node n = map.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^int length = map.getLength (  ) ;Node n = map.item ( i ) ;^749^^^^^734^764^Node n = map.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^Node child = children.item ( i ) ;Node n = map.item ( i ) ;^749^^^^^734^764^Node n = map.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P14_Delete_Statement]^^749^^^^^734^764^Node n = map.item ( i ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return 5;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -7;^757^^^^^742^772^return 0;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 1;^757^^^^^742^772^return 0;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P7_Replace_Invocation]^NamedNodeMap map =  (  ( Node )  getNode (  )  ) .getNextSibling (  ) ;^746^^^^^731^761^NamedNodeMap map =  (  ( Node )  getNode (  )  ) .getAttributes (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P7_Replace_Invocation]^NamedNodeMap map =  (  ( Node )  getNodeType (  )  ) .getAttributes (  ) ;^746^^^^^731^761^NamedNodeMap map =  (  ( Node )  getNode (  )  ) .getAttributes (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P1_Replace_Type]^short  length = map.getLength (  ) ;^747^^^^^732^762^int length = map.getLength (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P7_Replace_Invocation]^int length = map.item (  ) ;^747^^^^^732^762^int length = map.getLength (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^Node n = map.item ( i ) ;int length = map.getLength (  ) ;^747^^^^^732^762^int length = map.getLength (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^int nodeType = node.getNodeType (  ) ;int length = map.getLength (  ) ;^747^^^^^732^762^int length = map.getLength (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^int count = children.getLength (  ) ;int length = map.getLength (  ) ;^747^^^^^732^762^int length = map.getLength (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^for  ( int i = t1; i < length; i++ )  {^748^^^^^733^763^for  ( int i = 0; i < length; i++ )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P14_Delete_Statement]^^746^747^^^^731^761^NamedNodeMap map =  (  ( Node )  getNode (  )  ) .getAttributes (  ) ; int length = map.getLength (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P14_Delete_Statement]^^747^^^^^732^762^int length = map.getLength (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^if  ( n == node-1 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^if  ( n == valueNode )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^if  ( n == valueNode << 2 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -7;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return 6;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return -1 / 3;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^else if  ( n >= node2 )  {^753^^^^^738^768^else if  ( n == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 0;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^if  ( n == node-2 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^if  ( n == nodet2 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^if  ( n == parent - 4 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 1 + 1;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return -1 >> 4;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return -4;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -t2;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -5;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return length;^757^^^^^742^772^return 0;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 0 / 2;^757^^^^^742^772^return 0;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^int length = map .item ( t1 )  ;^747^^^^^732^762^int length = map.getLength (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^for  ( int i = length; i < length; i++ )  {^748^^^^^733^763^for  ( int i = 0; i < length; i++ )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P14_Delete_Statement]^^746^^^^^731^761^NamedNodeMap map =  (  ( Node )  getNode (  )  ) .getAttributes (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -7;^743^^^^^728^758^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 1 * 1;^743^^^^^728^758^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^else if  ( t1 <= Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^else if  ( ti == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^else if  ( t-6 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^else if  ( t2 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^if  ( n >= node1 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^if  ( n == node-5 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^if  ( n == node1 / 4 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 1 - 2;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -5;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^for  ( int i = 0; i > length; i++ )  {^748^^^^^733^763^for  ( int i = 0; i < length; i++ )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^if  ( n == node4 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return t2;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 1 >> 3;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -6;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return --5;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return -1 / 4;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 1 - 3;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return t1;^757^^^^^742^772^return 0;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 2;^757^^^^^742^772^return 0;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P1_Replace_Type]^long  length = map.getLength (  ) ;^747^^^^^732^762^int length = map.getLength (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P1_Replace_Type]^for  (  long  i = 0; i < length; i++ )  {^748^^^^^733^763^for  ( int i = 0; i < length; i++ )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P7_Replace_Invocation]^int length = map .item ( t2 )  ;^747^^^^^732^762^int length = map.getLength (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^if  ( n == node0 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^if  ( n == node5 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return -1L;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^if  ( n == parent )  {^753^^^^^738^768^else if  ( n == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 1 >>> 4;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^if  ( parent == node1 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^if  ( n == valueNode )  {^753^^^^^738^768^else if  ( n == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return -1 + 1;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return 10;^743^^^^^728^758^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 1 - 2;^743^^^^^728^758^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -10;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -9;^757^^^^^742^772^return 0;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 0 % 2;^757^^^^^742^772^return 0;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^for  ( int i = 4; i < length; i++ )  {^748^^^^^733^763^for  ( int i = 0; i < length; i++ )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -t1;^740^^^^^725^755^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return -1L;^740^^^^^725^755^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 <= Node.ATTRIBUTE_NODE )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^else if  ( t-6 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^else if  ( t != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^else if  ( t1 != Node.null && t2 == Node.ATTRIBUTE_NODE )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^else t2f  ( t1 != Node.ATTRIBUTE_NODE && i == Node.ATTRIBUTE_NODE )  {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^else {^742^^^^^727^757^else if  ( t1 != Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^else if  ( t9 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^else if  ( t-8 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 1 >> 4;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^for  ( int i = 0; i == length; i++ )  {^748^^^^^733^763^for  ( int i = 0; i < length; i++ )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^for  ( int i = t2; i < length; i++ )  {^748^^^^^733^763^for  ( int i = 0; i < length; i++ )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^if  ( n == node-4 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^if  ( parent == node1 % 1 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -t1;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 1 % 3;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return length;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -8;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return 9;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 4;^757^^^^^742^772^return 0;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P7_Replace_Invocation]^int length = map .item ( i )  ;^747^^^^^732^762^int length = map.getLength (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^if  ( n == node )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return --3;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 1 >> 1;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^for  ( int i = -9; i < length; i++ )  {^748^^^^^733^763^for  ( int i = 0; i < length; i++ )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return -1 / 2;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 1 % 2;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return -1 * 4;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -2;^757^^^^^742^772^return 0;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^for  ( int i = -4; i < length; i++ )  {^748^^^^^733^763^for  ( int i = 0; i < length; i++ )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 0;^743^^^^^728^758^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^else if  ( t2 == Node.ATTRIBUTE_NODE && t1 == Node.ATTRIBUTE_NODE )  {^745^^^^^730^760^else if  ( t1 == Node.ATTRIBUTE_NODE && t2 == Node.ATTRIBUTE_NODE )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^if  ( n == node3 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^else if  ( n < node2 )  {^753^^^^^738^768^else if  ( n == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^for  ( int i = 8; i < length; i++ )  {^748^^^^^733^763^for  ( int i = 0; i < length; i++ )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^if  ( n > node1 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^if  ( n == nodei )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -7;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return --2;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return -1 >> 3;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 1 / 3;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^for  ( int i = -2; i < length; i++ )  {^748^^^^^733^763^for  ( int i = 0; i < length; i++ )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^if  ( n == node6 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^if  ( n == node1 + 2 )  {^750^^^^^735^765^if  ( n == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^if  ( n == textNode )  {^753^^^^^738^768^else if  ( n == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 1 + 4;^754^^^^^739^769^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^for  ( int i = ; i < length; i++ )  {^748^^^^^733^763^for  ( int i = 0; i < length; i++ )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return --1;^751^^^^^736^766^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -3;^740^^^^^725^755^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return -2;^740^^^^^725^755^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return 8;^743^^^^^728^758^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 1 - 3;^743^^^^^728^758^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return t2;^757^^^^^742^772^return 0;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 0L;^757^^^^^742^772^return 0;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^Node current = parent.getFirstChild (  ) ;^760^^^^^745^775^Node current = node.getFirstChild (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P7_Replace_Invocation]^Node current = node.getPrefix (  ) ;^760^^^^^745^775^Node current = node.getFirstChild (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P7_Replace_Invocation]^Node current = node .removeChild ( textNode )  ;^760^^^^^745^775^Node current = node.getFirstChild (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^Node parent = node.getParentNode (  ) ;Node current = node.getFirstChild (  ) ;^760^^^^^745^775^Node current = node.getFirstChild (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^int type = node.getNodeType (  ) ;Node current = node.getFirstChild (  ) ;^760^^^^^745^775^Node current = node.getFirstChild (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^Node n = node.getPreviousSibling (  ) ;Node current = node.getFirstChild (  ) ;^760^^^^^745^775^Node current = node.getFirstChild (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^NodeList list = node.getChildNodes (  ) ;Node current = node.getFirstChild (  ) ;^760^^^^^745^775^Node current = node.getFirstChild (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^NodeList children = node.getChildNodes (  ) ;Node current = node.getFirstChild (  ) ;^760^^^^^745^775^Node current = node.getFirstChild (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^String prefix = node.getPrefix (  ) ;Node current = node.getFirstChild (  ) ;^760^^^^^745^775^Node current = node.getFirstChild (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^Node current = node2.getFirstChild (  ) ;^760^^^^^745^775^Node current = node.getFirstChild (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P7_Replace_Invocation]^Node current = node .removeChild ( child )  ;^760^^^^^745^775^Node current = node.getFirstChild (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P14_Delete_Statement]^^760^^^^^745^775^Node current = node.getFirstChild (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^aNode = aNode.getParentNode (  ) ;Node current = node.getFirstChild (  ) ;^760^^^^^745^775^Node current = node.getFirstChild (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^document = node.getOwnerDocument (  ) ;Node current = node.getFirstChild (  ) ;^760^^^^^745^775^Node current = node.getFirstChild (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^while  ( current == null )  {^761^^^^^746^776^while  ( current != null )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^while  ( valueNode != null )  {^761^^^^^746^776^while  ( current != null )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^if  ( current != node1 )  {^762^^^^^747^777^if  ( current == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^if  ( current >= node1 )  {^762^^^^^747^777^if  ( current == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^if  ( current == node3 )  {^762^^^^^747^777^if  ( current == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^if  ( current == node )  {^762^^^^^747^777^if  ( current == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^if  ( parent == node1 )  {^762^^^^^747^777^if  ( current == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^if  ( current == parent )  {^762^^^^^747^777^if  ( current == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^if  ( node1 == current )  {^762^^^^^747^777^if  ( current == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P6_Replace_Expression]^if  ( current == node2 )  {^762^^^^^747^777^if  ( current == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P9_Replace_Statement]^if  ( element != null )  {^762^^^^^747^777^if  ( current == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P9_Replace_Statement]^if  ( parent != null )  {^762^^^^^747^777^if  ( current == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P15_Unwrap_Block]^return -1;^762^763^764^^^747^777^if  ( current == node1 )  { return -1; }^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P16_Remove_Block]^^762^763^764^^^747^777^if  ( current == node1 )  { return -1; }^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( n == node1 )  {     return -1; }else     if  ( n == node2 )  {         return 1;     }^762^^^^^747^777^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^else if  ( current > node2 )  {^765^^^^^750^780^else if  ( current == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^else if  ( parent == node2 )  {^765^^^^^750^780^else if  ( current == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^else if  ( current == textNode )  {^765^^^^^750^780^else if  ( current == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^else if  ( node2 == current )  {^765^^^^^750^780^else if  ( current == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^else {^765^^^^^750^780^else if  ( current == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P15_Unwrap_Block]^return 1;^765^766^767^^^750^780^else if  ( current == node2 )  { return 1; }^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P16_Remove_Block]^^765^766^767^^^750^780^else if  ( current == node2 )  { return 1; }^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( uri != null )  {     return uri; }^765^^^^^750^780^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( prefix != null )  {     return prefix; }^765^^^^^750^780^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( index ==  ( -1 )  )  {     return null; }^765^^^^^750^780^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( wildcard &&  ( testPrefix == null )  )  {     return true; }^765^^^^^750^780^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( localName != null )  {     return localName; }^765^^^^^750^780^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( node1 == node2 )  {     return 0; }^765^^^^^750^780^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( index ==  ( -1 )  )  {     return name; }^765^^^^^750^780^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( object ==  ( this )  )  {     return true; }^765^^^^^750^780^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( current == null )  {     return super.isLanguage ( lang ) ; }^765^^^^^750^780^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P13_Insert_Block]^if  ( n == node2 )  {     return 1; }^765^^^^^750^780^[Delete]^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return t1;^766^^^^^751^781^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 1 + 1;^766^^^^^751^781^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return 2;^766^^^^^751^781^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 0;^766^^^^^751^781^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -length;^763^^^^^748^778^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return -1 * 0;^763^^^^^748^778^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^else if  ( current >= node2 )  {^765^^^^^750^780^else if  ( current == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^else if  ( valueNode == node2 )  {^765^^^^^750^780^else if  ( current == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^else if  ( current == valueNode )  {^765^^^^^750^780^else if  ( current == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return 10;^766^^^^^751^781^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^current = node2.getNextSibling (  ) ;^768^^^^^753^783^current = current.getNextSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P7_Replace_Invocation]^current = current.cloneNode (  ) ;^768^^^^^753^783^current = current.getNextSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^n = n.getPreviousSibling (  ) ;current = current.getNextSibling (  ) ;^768^^^^^753^783^current = current.getNextSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -9;^763^^^^^748^778^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return -3;^763^^^^^748^778^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return t2;^766^^^^^751^781^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 3;^766^^^^^751^781^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^current = valueNode.getNextSibling (  ) ;^768^^^^^753^783^current = current.getNextSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P14_Delete_Statement]^^768^^^^^753^783^current = current.getNextSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P11_Insert_Donor_Statement]^Node n = node.getPreviousSibling (  ) ;current = current.getNextSibling (  ) ;^768^^^^^753^783^current = current.getNextSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P2_Replace_Operator]^if  ( current > node1 )  {^762^^^^^747^777^if  ( current == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^if  ( current == nodet1 )  {^762^^^^^747^777^if  ( current == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^if  ( current == node1L )  {^762^^^^^747^777^if  ( current == node1 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -7;^766^^^^^751^781^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -2;^763^^^^^748^778^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return -1L;^763^^^^^748^778^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^else if  ( current == parent )  {^765^^^^^750^780^else if  ( current == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^if  ( current == node2 )  {^765^^^^^750^780^else if  ( current == node2 )  {^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return i;^766^^^^^751^781^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 1L;^766^^^^^751^781^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P5_Replace_Variable]^current = parent.getNextSibling (  ) ;^768^^^^^753^783^current = current.getNextSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -t2;^763^^^^^748^778^return -1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return length;^766^^^^^751^781^return 1;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^current = valueNode.cloneNode (  ) ;^768^^^^^753^783^current = current.getNextSibling (  ) ;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P3_Replace_Literal]^return -1;^771^^^^^756^786^return 0;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
[P8_Replace_Mix]^return 4;^771^^^^^756^786^return 0;^[CLASS] DOMNodePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] NamedNodeMap  map  boolean  Node  aNode  child  current  n  node  node1  node2  parent  textNode  valueNode  String  XMLNS_NAMESPACE_URI  XML_NAMESPACE_URI  attr  current  defaultNamespace  id  lang  ln  localName  name  namespace  namespaceURI  nm  nodeNS  nodePI  ns  nsURI  prefix  qname  s1  s2  string  target  testPI  testPrefix  text  uri  NodePointer  pointer1  pointer2  Map  namespaces  long  serialVersionUID  int  i  length  t1  t2  
