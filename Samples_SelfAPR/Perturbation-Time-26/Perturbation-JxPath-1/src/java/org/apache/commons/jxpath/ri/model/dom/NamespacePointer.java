[P1_Replace_Type]^private char prefix;^32^^^^^27^37^private String prefix;^[CLASS] NamespacePointer   [VARIABLES] 
[P1_Replace_Type]^private char namespaceURI;^33^^^^^28^38^private String namespaceURI;^[CLASS] NamespacePointer   [VARIABLES] 
[P14_Delete_Statement]^^36^^^^^35^38^super ( parent ) ;^[CLASS] NamespacePointer  [METHOD] <init> [RETURN_TYPE] String)   NodePointer parent String prefix [VARIABLES] String  namespaceURI  prefix  NodePointer  parent  boolean  
[P5_Replace_Variable]^this.prefix = namespaceURI;^37^^^^^35^38^this.prefix = prefix;^[CLASS] NamespacePointer  [METHOD] <init> [RETURN_TYPE] String)   NodePointer parent String prefix [VARIABLES] String  namespaceURI  prefix  NodePointer  parent  boolean  
[P14_Delete_Statement]^^45^^^^^40^48^super ( parent ) ;^[CLASS] NamespacePointer  [METHOD] <init> [RETURN_TYPE] String)   NodePointer parent String prefix String namespaceURI [VARIABLES] String  namespaceURI  prefix  NodePointer  parent  boolean  
[P5_Replace_Variable]^this.prefix = namespaceURI;^46^^^^^40^48^this.prefix = prefix;^[CLASS] NamespacePointer  [METHOD] <init> [RETURN_TYPE] String)   NodePointer parent String prefix String namespaceURI [VARIABLES] String  namespaceURI  prefix  NodePointer  parent  boolean  
[P5_Replace_Variable]^this.namespaceURI = prefix;^47^^^^^40^48^this.namespaceURI = namespaceURI;^[CLASS] NamespacePointer  [METHOD] <init> [RETURN_TYPE] String)   NodePointer parent String prefix String namespaceURI [VARIABLES] String  namespaceURI  prefix  NodePointer  parent  boolean  
[P8_Replace_Mix]^this.namespaceURI =  null;^47^^^^^40^48^this.namespaceURI = namespaceURI;^[CLASS] NamespacePointer  [METHOD] <init> [RETURN_TYPE] String)   NodePointer parent String prefix String namespaceURI [VARIABLES] String  namespaceURI  prefix  NodePointer  parent  boolean  
[P5_Replace_Variable]^return new QName ( namespaceURI ) ;^51^^^^^50^52^return new QName ( prefix ) ;^[CLASS] NamespacePointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] String  namespaceURI  prefix  boolean  
[P8_Replace_Mix]^return this;^55^^^^^54^56^return null;^[CLASS] NamespacePointer  [METHOD] getBaseValue [RETURN_TYPE] Object   [VARIABLES] String  namespaceURI  prefix  boolean  
[P3_Replace_Literal]^return true;^59^^^^^58^60^return false;^[CLASS] NamespacePointer  [METHOD] isCollection [RETURN_TYPE] boolean   [VARIABLES] String  namespaceURI  prefix  boolean  
[P8_Replace_Mix]^return 3;^63^^^^^62^64^return 1;^[CLASS] NamespacePointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] String  namespaceURI  prefix  boolean  
[P14_Delete_Statement]^^67^^^^^66^68^return getNamespaceURI (  ) ;^[CLASS] NamespacePointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] String  namespaceURI  prefix  boolean  
[P2_Replace_Operator]^if  ( namespaceURI != null )  {^71^^^^^70^75^if  ( namespaceURI == null )  {^[CLASS] NamespacePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  namespaceURI  prefix  boolean  
[P5_Replace_Variable]^if  ( prefix == null )  {^71^^^^^70^75^if  ( namespaceURI == null )  {^[CLASS] NamespacePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  namespaceURI  prefix  boolean  
[P8_Replace_Mix]^if  ( namespaceURI == true )  {^71^^^^^70^75^if  ( namespaceURI == null )  {^[CLASS] NamespacePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  namespaceURI  prefix  boolean  
[P9_Replace_Statement]^if  ( parent != null )  {^71^^^^^70^75^if  ( namespaceURI == null )  {^[CLASS] NamespacePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  namespaceURI  prefix  boolean  
[P15_Unwrap_Block]^namespaceURI = parent.getNamespaceURI(prefix);^71^72^73^^^70^75^if  ( namespaceURI == null )  { namespaceURI = parent.getNamespaceURI ( prefix ) ; }^[CLASS] NamespacePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  namespaceURI  prefix  boolean  
[P16_Remove_Block]^^71^72^73^^^70^75^if  ( namespaceURI == null )  { namespaceURI = parent.getNamespaceURI ( prefix ) ; }^[CLASS] NamespacePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  namespaceURI  prefix  boolean  
[P5_Replace_Variable]^namespaceURI = parent.getNamespaceURI ( namespaceURI ) ;^72^^^^^70^75^namespaceURI = parent.getNamespaceURI ( prefix ) ;^[CLASS] NamespacePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  namespaceURI  prefix  boolean  
[P5_Replace_Variable]^namespaceURI = prefix.getNamespaceURI ( parent ) ;^72^^^^^70^75^namespaceURI = parent.getNamespaceURI ( prefix ) ;^[CLASS] NamespacePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  namespaceURI  prefix  boolean  
[P7_Replace_Invocation]^namespaceURI = parent.asPath ( prefix ) ;^72^^^^^70^75^namespaceURI = parent.getNamespaceURI ( prefix ) ;^[CLASS] NamespacePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  namespaceURI  prefix  boolean  
[P7_Replace_Invocation]^namespaceURI = parent .getNamespaceURI (  )  ;^72^^^^^70^75^namespaceURI = parent.getNamespaceURI ( prefix ) ;^[CLASS] NamespacePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  namespaceURI  prefix  boolean  
[P8_Replace_Mix]^namespaceURI  =  namespaceURI ;^72^^^^^70^75^namespaceURI = parent.getNamespaceURI ( prefix ) ;^[CLASS] NamespacePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  namespaceURI  prefix  boolean  
[P13_Insert_Block]^if  (  ( namespaceURI )  == null )  {     namespaceURI = parent.getNamespaceURI ( prefix ) ; }^72^^^^^70^75^[Delete]^[CLASS] NamespacePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  namespaceURI  prefix  boolean  
[P14_Delete_Statement]^^72^^^^^70^75^namespaceURI = parent.getNamespaceURI ( prefix ) ;^[CLASS] NamespacePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  namespaceURI  prefix  boolean  
[P11_Insert_Donor_Statement]^return getNamespaceURI (  ) ;namespaceURI = parent.getNamespaceURI ( prefix ) ;^72^^^^^70^75^namespaceURI = parent.getNamespaceURI ( prefix ) ;^[CLASS] NamespacePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  namespaceURI  prefix  boolean  
[P8_Replace_Mix]^namespaceURI ;^72^^^^^70^75^namespaceURI = parent.getNamespaceURI ( prefix ) ;^[CLASS] NamespacePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  namespaceURI  prefix  boolean  
[P5_Replace_Variable]^return prefix;^74^^^^^70^75^return namespaceURI;^[CLASS] NamespacePointer  [METHOD] getNamespaceURI [RETURN_TYPE] String   [VARIABLES] String  namespaceURI  prefix  boolean  
[P3_Replace_Literal]^return false;^78^^^^^77^79^return true;^[CLASS] NamespacePointer  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] String  namespaceURI  prefix  boolean  
[P14_Delete_Statement]^^91^92^^^^88^93^&&  (  ( NodeTypeTest )  nodeTest ) .getNodeType (  ) == Compiler.NODE_TYPE_NODE ) ;^[CLASS] NamespacePointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest nodeTest [VARIABLES] NodeTest  nodeTest  String  namespaceURI  prefix  boolean  
[P2_Replace_Operator]^if  ( parent == null )  {^97^^^^^95^107^if  ( parent != null )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P5_Replace_Variable]^if  ( this != null )  {^97^^^^^95^107^if  ( parent != null )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P6_Replace_Expression]^if  ( buffer.length() == 0 || length() - 1))) != '/' )  {^97^^^^^95^107^if  ( parent != null )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P6_Replace_Expression]^if  ( buffer.length (  )  == 0 )  {^97^^^^^95^107^if  ( parent != null )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P6_Replace_Expression]^if  ( buffer.charAt (  (  ( buffer.length (  )  )  - 1 )  )  != '/' )  {^97^^^^^95^107^if  ( parent != null )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P6_Replace_Expression]^if  ( buffer.length (  )  - 1 )  {^97^^^^^95^107^if  ( parent != null )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P8_Replace_Mix]^if  ( parent != true )  {^97^^^^^95^107^if  ( parent != null )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P9_Replace_Statement]^if  ( namespaceURI == null )  {^97^^^^^95^107^if  ( parent != null )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P15_Unwrap_Block]^buffer.append(parent.asPath()); if (((buffer.length()) == 0) || ((buffer.charAt(((buffer.length()) - 1))) != '/')) {    buffer.append('/');};^97^98^99^100^101^95^107^if  ( parent != null )  { buffer.append ( parent.asPath (  )  ) ; if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  { buffer.append ( '/' ) ; }^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P16_Remove_Block]^^97^98^99^100^101^95^107^if  ( parent != null )  { buffer.append ( parent.asPath (  )  ) ; if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  { buffer.append ( '/' ) ; }^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P13_Insert_Block]^if  (  (  ( buffer.length (  )  )  == 0 )  ||  (  ( buffer.charAt (  (  ( buffer.length (  )  )  - 1 )  )  )  != '/' )  )  {     buffer.append ( '/' ) ; }^97^^^^^95^107^[Delete]^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P2_Replace_Operator]^if  ( buffer.length (  )  == 0 && buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^99^100^^^^95^107^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P2_Replace_Operator]^if  ( buffer.length (  )  != 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^99^100^^^^95^107^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P2_Replace_Operator]^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  <= '/' )  {^99^100^^^^95^107^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P2_Replace_Operator]^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )   >=  1 )  != '/' )  {^99^100^^^^95^107^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P3_Replace_Literal]^if  ( buffer.length (  )  == 5 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^99^100^^^^95^107^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P3_Replace_Literal]^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )   )  != '/' )  {^99^100^^^^95^107^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P3_Replace_Literal]^if  ( buffer.length() + 6  == 0 || buffer.charAt ( buffer.length() + 6  - 1 )  != '/' )  {^99^100^^^^95^107^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P6_Replace_Expression]^if  ( buffer.length (  )  == 0 ) {^99^100^^^^95^107^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P6_Replace_Expression]^if  (  buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^99^100^^^^95^107^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P6_Replace_Expression]^if  ( buffer.charAt (  (  ( buffer.length (  )  )  - 1 )  )  != '/' )  {^99^100^^^^95^107^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P6_Replace_Expression]^if  ( buffer.length (  )  - 1 )  {^99^100^^^^95^107^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P7_Replace_Invocation]^if  ( buffer.append (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^99^100^^^^95^107^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P15_Unwrap_Block]^buffer.append('/');^99^100^101^102^^95^107^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  { buffer.append ( '/' ) ; }^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P16_Remove_Block]^^99^100^101^102^^95^107^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  { buffer.append ( '/' ) ; }^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P13_Insert_Block]^if  (  ( parent )  != null )  {     buffer.append ( parent.asPath (  )  ) ;     if  (  (  ( buffer.length (  )  )  == 0 )  ||  (  ( buffer.charAt (  (  ( buffer.length (  )  )  - 1 )  )  )  != '/' )  )  {         buffer.append ( '/' ) ;     } }^99^^^^^95^107^[Delete]^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P14_Delete_Statement]^^101^^^^^95^107^buffer.append ( '/' ) ;^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( "namespace::" ) ;buffer.append ( '/' ) ;^101^^^^^95^107^buffer.append ( '/' ) ;^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( '/' ) ;^101^^^^^95^107^buffer.append ( '/' ) ;^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( '/' ) ;^101^^^^^95^107^buffer.append ( '/' ) ;^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P7_Replace_Invocation]^buffer .toString (  )  ;^98^^^^^95^107^buffer.append ( parent.asPath (  )  ) ;^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P8_Replace_Mix]^buffer.append ( null.asPath (  )  ) ;^98^^^^^95^107^buffer.append ( parent.asPath (  )  ) ;^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P14_Delete_Statement]^^98^^^^^95^107^buffer.append ( parent.asPath (  )  ) ;^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( "namespace::" ) ;buffer.append ( parent.asPath (  )  ) ;^98^^^^^95^107^buffer.append ( parent.asPath (  )  ) ;^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( parent.asPath (  )  ) ;^98^^^^^95^107^buffer.append ( parent.asPath (  )  ) ;^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( parent.asPath (  )  ) ;^98^^^^^95^107^buffer.append ( parent.asPath (  )  ) ;^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P8_Replace_Mix]^buffer.append ( parent .getNamespaceURI (  )   ) ;^98^^^^^95^107^buffer.append ( parent.asPath (  )  ) ;^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P3_Replace_Literal]^if  ( buffer.length() - 6  == 0 || buffer.charAt ( buffer.length() - 6  - 1 )  != '/' )  {^99^100^^^^95^107^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P7_Replace_Invocation]^if  ( buffer .StringBuffer (  )   == 0 || buffer.charAt ( buffer^99^100^^^^95^107^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P2_Replace_Operator]^|| buffer.charAt ( buffer.length (  )   &  1 )  != '/' )  {^100^^^^^95^107^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P3_Replace_Literal]^|| buffer.charAt ( buffer.length (  )   )  != '/' )  {^100^^^^^95^107^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P3_Replace_Literal]^|| buffer.charAt ( buffer.length() - 8  - 1 )  != '/' )  {^100^^^^^95^107^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P7_Replace_Invocation]^|| buffer .toString (  )   != '/' )  {^100^^^^^95^107^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P7_Replace_Invocation]^|| buffer.charAt ( buffer.append (  )  - 1 )  != '/' )  {^100^^^^^95^107^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P14_Delete_Statement]^^100^101^^^^95^107^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  { buffer.append ( '/' ) ;^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P3_Replace_Literal]^|| buffer.charAt ( buffer.length() + 2  - 1 )  != '/' )  {^100^^^^^95^107^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P2_Replace_Operator]^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )   >  1 )  != '/' )  {^99^100^^^^95^107^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P3_Replace_Literal]^if  ( buffer.length (  )  == 7 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^99^100^^^^95^107^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P3_Replace_Literal]^if  ( buffer.length() - 9  == 0 || buffer.charAt ( buffer.length() - 9  - 1 )  != '/' )  {^99^100^^^^95^107^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P7_Replace_Invocation]^if  ( buffer.length (  )  == 0 || buffer .toString (  )   != '/' )  {^99^100^^^^95^107^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P8_Replace_Mix]^if  ( buffer.length (  )  == 0  || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^99^100^^^^95^107^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P3_Replace_Literal]^if  ( buffer.length() + 1  == 0 || buffer.charAt ( buffer.length() + 1  - 1 )  != '/' )  {^99^100^^^^95^107^if  ( buffer.length (  )  == 0 || buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P2_Replace_Operator]^|| buffer.charAt ( buffer.length (  )   <=  1 )  != '/' )  {^100^^^^^95^107^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P3_Replace_Literal]^|| buffer.charAt ( buffer.length() + 6  - 1 )  != '/' )  {^100^^^^^95^107^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P3_Replace_Literal]^|| buffer.charAt ( buffer.length() - 6  - 1 )  != '/' )  {^100^^^^^95^107^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P7_Replace_Invocation]^|| buffer.charAt ( buffer .StringBuffer (  )   - 1 )  != '/' )  {^100^^^^^95^107^|| buffer.charAt ( buffer.length (  )  - 1 )  != '/' )  {^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P3_Replace_Literal]^buffer.append ( "amespamespace::" ) ;^104^^^^^95^107^buffer.append ( "namespace::" ) ;^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P14_Delete_Statement]^^104^105^^^^95^107^buffer.append ( "namespace::" ) ; buffer.append ( prefix ) ;^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( prefix ) ;buffer.append ( "namespace::" ) ;^104^^^^^95^107^buffer.append ( "namespace::" ) ;^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( "namespace::" ) ;^104^^^^^95^107^buffer.append ( "namespace::" ) ;^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( "namespace::" ) ;^104^^^^^95^107^buffer.append ( "namespace::" ) ;^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P5_Replace_Variable]^buffer.append ( namespaceURI ) ;^105^^^^^95^107^buffer.append ( prefix ) ;^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P7_Replace_Invocation]^buffer .toString (  )  ;^105^^^^^95^107^buffer.append ( prefix ) ;^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P14_Delete_Statement]^^105^106^^^^95^107^buffer.append ( prefix ) ; return buffer.toString (  ) ;^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( "namespace::" ) ;buffer.append ( prefix ) ;^105^^^^^95^107^buffer.append ( prefix ) ;^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( '/' ) ;buffer.append ( prefix ) ;^105^^^^^95^107^buffer.append ( prefix ) ;^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( prefix ) ;^105^^^^^95^107^buffer.append ( prefix ) ;^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P7_Replace_Invocation]^return buffer.charAt (  ) ;^106^^^^^95^107^return buffer.toString (  ) ;^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P14_Delete_Statement]^^106^^^^^95^107^return buffer.toString (  ) ;^[CLASS] NamespacePointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  String  namespaceURI  prefix  boolean  
[P5_Replace_Variable]^return namespaceURI.hashCode (  ) ;^110^^^^^109^111^return prefix.hashCode (  ) ;^[CLASS] NamespacePointer  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  namespaceURI  prefix  boolean  
[P8_Replace_Mix]^return prefix .hashCode (  )  ;^110^^^^^109^111^return prefix.hashCode (  ) ;^[CLASS] NamespacePointer  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  namespaceURI  prefix  boolean  
[P14_Delete_Statement]^^110^^^^^109^111^return prefix.hashCode (  ) ;^[CLASS] NamespacePointer  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] String  namespaceURI  prefix  boolean  
[P2_Replace_Operator]^if  ( object != this )  {^114^^^^^113^124^if  ( object == this )  {^[CLASS] NamespacePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] NamespacePointer  other  Object  object  String  namespaceURI  prefix  boolean  
[P15_Unwrap_Block]^return true;^114^115^116^^^113^124^if  ( object == this )  { return true; }^[CLASS] NamespacePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] NamespacePointer  other  Object  object  String  namespaceURI  prefix  boolean  
[P16_Remove_Block]^^114^115^116^^^113^124^if  ( object == this )  { return true; }^[CLASS] NamespacePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] NamespacePointer  other  Object  object  String  namespaceURI  prefix  boolean  
[P3_Replace_Literal]^return false;^115^^^^^113^124^return true;^[CLASS] NamespacePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] NamespacePointer  other  Object  object  String  namespaceURI  prefix  boolean  
[P2_Replace_Operator]^if  ( ! ( object  <  NamespacePointer )  )  {^118^^^^^113^124^if  ( ! ( object instanceof NamespacePointer )  )  {^[CLASS] NamespacePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] NamespacePointer  other  Object  object  String  namespaceURI  prefix  boolean  
[P8_Replace_Mix]^if  (  ( object instanceof NamespacePointer )  )  {^118^^^^^113^124^if  ( ! ( object instanceof NamespacePointer )  )  {^[CLASS] NamespacePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] NamespacePointer  other  Object  object  String  namespaceURI  prefix  boolean  
[P15_Unwrap_Block]^return false;^118^119^120^^^113^124^if  ( ! ( object instanceof NamespacePointer )  )  { return false; }^[CLASS] NamespacePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] NamespacePointer  other  Object  object  String  namespaceURI  prefix  boolean  
[P16_Remove_Block]^^118^119^120^^^113^124^if  ( ! ( object instanceof NamespacePointer )  )  { return false; }^[CLASS] NamespacePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] NamespacePointer  other  Object  object  String  namespaceURI  prefix  boolean  
[P3_Replace_Literal]^return true;^119^^^^^113^124^return false;^[CLASS] NamespacePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] NamespacePointer  other  Object  object  String  namespaceURI  prefix  boolean  
[P5_Replace_Variable]^return namespaceURI.equals ( other.prefix ) ;^123^^^^^113^124^return prefix.equals ( other.prefix ) ;^[CLASS] NamespacePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] NamespacePointer  other  Object  object  String  namespaceURI  prefix  boolean  
[P5_Replace_Variable]^return prefix.equals ( namespaceURI ) ;^123^^^^^113^124^return prefix.equals ( other.prefix ) ;^[CLASS] NamespacePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] NamespacePointer  other  Object  object  String  namespaceURI  prefix  boolean  
[P5_Replace_Variable]^return other.equals ( prefix.prefix ) ;^123^^^^^113^124^return prefix.equals ( other.prefix ) ;^[CLASS] NamespacePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] NamespacePointer  other  Object  object  String  namespaceURI  prefix  boolean  
[P5_Replace_Variable]^return other.prefix.equals ( prefix ) ;^123^^^^^113^124^return prefix.equals ( other.prefix ) ;^[CLASS] NamespacePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] NamespacePointer  other  Object  object  String  namespaceURI  prefix  boolean  
[P5_Replace_Variable]^return prefix.equals ( other.prefix.prefix ) ;^123^^^^^113^124^return prefix.equals ( other.prefix ) ;^[CLASS] NamespacePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] NamespacePointer  other  Object  object  String  namespaceURI  prefix  boolean  
[P14_Delete_Statement]^^123^^^^^113^124^return prefix.equals ( other.prefix ) ;^[CLASS] NamespacePointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] NamespacePointer  other  Object  object  String  namespaceURI  prefix  boolean  
[P3_Replace_Literal]^return 6;^131^^^^^126^132^return 0;^[CLASS] NamespacePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] String  namespaceURI  prefix  NodePointer  pointer1  pointer2  boolean  
[P8_Replace_Mix]^return 1;^131^^^^^126^132^return 0;^[CLASS] NamespacePointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] String  namespaceURI  prefix  NodePointer  pointer1  pointer2  boolean  
