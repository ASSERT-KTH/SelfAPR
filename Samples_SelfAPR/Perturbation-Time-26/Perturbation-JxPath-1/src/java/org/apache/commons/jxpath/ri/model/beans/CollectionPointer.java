[P14_Delete_Statement]^^43^^^^^42^45^super ( null, locale ) ;^[CLASS] CollectionPointer  [METHOD] <init> [RETURN_TYPE] Locale)   Object collection Locale locale [VARIABLES] Locale  locale  Object  collection  NodePointer  valuePointer  boolean  
[P8_Replace_Mix]^this.collection =  null;^44^^^^^42^45^this.collection = collection;^[CLASS] CollectionPointer  [METHOD] <init> [RETURN_TYPE] Locale)   Object collection Locale locale [VARIABLES] Locale  locale  Object  collection  NodePointer  valuePointer  boolean  
[P5_Replace_Variable]^super ( valuePointer ) ;^48^^^^^47^50^super ( parent ) ;^[CLASS] CollectionPointer  [METHOD] <init> [RETURN_TYPE] Object)   NodePointer parent Object collection [VARIABLES] Object  collection  NodePointer  parent  valuePointer  boolean  
[P14_Delete_Statement]^^48^49^^^^47^50^super ( parent ) ; this.collection = collection;^[CLASS] CollectionPointer  [METHOD] <init> [RETURN_TYPE] Object)   NodePointer parent Object collection [VARIABLES] Object  collection  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^this.collection =  null;^49^^^^^47^50^this.collection = collection;^[CLASS] CollectionPointer  [METHOD] <init> [RETURN_TYPE] Object)   NodePointer parent Object collection [VARIABLES] Object  collection  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^return true;^53^^^^^52^54^return null;^[CLASS] CollectionPointer  [METHOD] getName [RETURN_TYPE] QName   [VARIABLES] Object  collection  NodePointer  parent  valuePointer  boolean  
[P3_Replace_Literal]^return false;^61^^^^^60^62^return true;^[CLASS] CollectionPointer  [METHOD] isCollection [RETURN_TYPE] boolean   [VARIABLES] Object  collection  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^return ValueUtils.expandCollection ( getBaseValue (  )  ) ;^65^^^^^64^66^return ValueUtils.getLength ( getBaseValue (  )  ) ;^[CLASS] CollectionPointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Object  collection  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^return ValueUtils .getValue ( collection )  ;^65^^^^^64^66^return ValueUtils.getLength ( getBaseValue (  )  ) ;^[CLASS] CollectionPointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Object  collection  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^return ValueUtils.getLength ( getName (  )  ) ;^65^^^^^64^66^return ValueUtils.getLength ( getBaseValue (  )  ) ;^[CLASS] CollectionPointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Object  collection  NodePointer  parent  valuePointer  boolean  
[P12_Insert_Condition]^if  ( ValueUtils.getLength ( collection )  <= index )  { return ValueUtils.getLength ( getBaseValue (  )  ) ; }^65^^^^^64^66^return ValueUtils.getLength ( getBaseValue (  )  ) ;^[CLASS] CollectionPointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Object  collection  NodePointer  parent  valuePointer  boolean  
[P14_Delete_Statement]^^65^^^^^64^66^return ValueUtils.getLength ( getBaseValue (  )  ) ;^[CLASS] CollectionPointer  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Object  collection  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^Object value = getNodeType (  ) ;^69^^^^^68^72^Object value = getNode (  ) ;^[CLASS] CollectionPointer  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P11_Insert_Donor_Statement]^Object collection = getBaseValue (  ) ;Object value = getNode (  ) ;^69^^^^^68^72^Object value = getNode (  ) ;^[CLASS] CollectionPointer  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P11_Insert_Donor_Statement]^Object value = getImmediateNode (  ) ;Object value = getNode (  ) ;^69^^^^^68^72^Object value = getNode (  ) ;^[CLASS] CollectionPointer  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P14_Delete_Statement]^^69^^^^^68^72^Object value = getNode (  ) ;^[CLASS] CollectionPointer  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P2_Replace_Operator]^return value == null && JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^70^71^^^^68^72^return value == null || JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^[CLASS] CollectionPointer  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P2_Replace_Operator]^return value != null || JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^70^71^^^^68^72^return value == null || JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^[CLASS] CollectionPointer  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^return collection == null || JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^70^71^^^^68^72^return value == null || JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^[CLASS] CollectionPointer  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^return value == null || JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .setIndex (  ) ;^70^71^^^^68^72^return value == null || JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^[CLASS] CollectionPointer  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^return collection == null || JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .setIndex (  ) ;^70^71^^^^68^72^return value == null || JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^[CLASS] CollectionPointer  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^|| JXPathIntrospector.getBeanInfo ( collection.getClass (  )  ) .isAtomic (  ) ;^71^^^^^68^72^|| JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^[CLASS] CollectionPointer  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^|| JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .setIndex (  ) ;^71^^^^^68^72^|| JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^[CLASS] CollectionPointer  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P14_Delete_Statement]^^71^^^^^68^72^|| JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^[CLASS] CollectionPointer  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^|| JXPathIntrospector.getBeanInfo ( collection .clone (  )   ) .isAtomic (  ) ;^71^^^^^68^72^|| JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^[CLASS] CollectionPointer  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^|| JXPathIntrospector.getBeanInfo ( value .clone (  )   ) .isAtomic (  ) ;^71^^^^^68^72^|| JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^[CLASS] CollectionPointer  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P2_Replace_Operator]^return index == WHOLE_COLLECTION;^75^^^^^74^76^return index != WHOLE_COLLECTION;^[CLASS] CollectionPointer  [METHOD] isContainer [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^return WHOLE_COLLECTION != index;^75^^^^^74^76^return index != WHOLE_COLLECTION;^[CLASS] CollectionPointer  [METHOD] isContainer [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^return index  ;^75^^^^^74^76^return index != WHOLE_COLLECTION;^[CLASS] CollectionPointer  [METHOD] isContainer [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P12_Insert_Condition]^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  { return index != WHOLE_COLLECTION; }^75^^^^^74^76^return index != WHOLE_COLLECTION;^[CLASS] CollectionPointer  [METHOD] isContainer [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P12_Insert_Condition]^if  ( index != WHOLE_COLLECTION )  { return index != WHOLE_COLLECTION; }^75^^^^^74^76^return index != WHOLE_COLLECTION;^[CLASS] CollectionPointer  [METHOD] isContainer [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P12_Insert_Condition]^if  ( index == WHOLE_COLLECTION )  { return index != WHOLE_COLLECTION; }^75^^^^^74^76^return index != WHOLE_COLLECTION;^[CLASS] CollectionPointer  [METHOD] isContainer [RETURN_TYPE] boolean   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P2_Replace_Operator]^if  ( index >= WHOLE_COLLECTION )  {^79^^^^^78^85^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^if  ( index != null )  {^79^^^^^78^85^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^if  ( WHOLE_COLLECTION != index )  {^79^^^^^78^85^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^if  ( index = WHOLE_COLLECTION )  {^79^^^^^78^85^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P9_Replace_Statement]^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^79^^^^^78^85^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P9_Replace_Statement]^if  ( index == WHOLE_COLLECTION )  {^79^^^^^78^85^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P15_Unwrap_Block]^return org.apache.commons.jxpath.util.ValueUtils.getValue(collection, index);^79^80^81^^^78^85^if  ( index != WHOLE_COLLECTION )  { return ValueUtils.getValue ( collection, index ) ; }^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P16_Remove_Block]^^79^80^81^^^78^85^if  ( index != WHOLE_COLLECTION )  { return ValueUtils.getValue ( collection, index ) ; }^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P13_Insert_Block]^if  (  ( index )  ==  ( WHOLE_COLLECTION )  )  {     parent.setValue ( value ) ; }else {     setValue ( collection, index, value ) ; }^79^^^^^78^85^[Delete]^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P13_Insert_Block]^if  (  ( index )  ==  ( WHOLE_COLLECTION )  )  {     return new CollectionChildNodeIterator ( this, test, reverse, startWith ) ; }else {     return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ; }^79^^^^^78^85^[Delete]^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^return ValueUtils.getValue ( value ) ;^83^^^^^78^85^return ValueUtils.getValue ( collection ) ;^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^return ValueUtils.expandCollection ( collection ) ;^83^^^^^78^85^return ValueUtils.getValue ( collection ) ;^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P12_Insert_Condition]^if  ( ValueUtils.getLength ( collection )  <= index )  { return ValueUtils.getValue ( collection ) ; }^83^^^^^78^85^return ValueUtils.getValue ( collection ) ;^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P14_Delete_Statement]^^83^^^^^78^85^return ValueUtils.getValue ( collection ) ;^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^return ValueUtils.getValue ( value, index ) ;^80^^^^^78^85^return ValueUtils.getValue ( collection, index ) ;^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^return ValueUtils.getValue (  index ) ;^80^^^^^78^85^return ValueUtils.getValue ( collection, index ) ;^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^return ValueUtils.getValue ( collection ) ;^80^^^^^78^85^return ValueUtils.getValue ( collection, index ) ;^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^return ValueUtils.getValue ( index, collection ) ;^80^^^^^78^85^return ValueUtils.getValue ( collection, index ) ;^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^return ValueUtils.expandCollection ( collection, index ) ;^80^^^^^78^85^return ValueUtils.getValue ( collection, index ) ;^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^return ValueUtils .setValue ( value )  ;^80^^^^^78^85^return ValueUtils.getValue ( collection, index ) ;^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P12_Insert_Condition]^if  ( ValueUtils.getLength ( collection )  <= index )  { return ValueUtils.getValue ( collection, index ) ; }^80^^^^^78^85^return ValueUtils.getValue ( collection, index ) ;^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P14_Delete_Statement]^^80^^^^^78^85^return ValueUtils.getValue ( collection, index ) ;^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^return ValueUtils .setValue ( collection )  ;^80^^^^^78^85^return ValueUtils.getValue ( collection, index ) ;^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^return ValueUtils.getValue ( collection, null ) ;^80^^^^^78^85^return ValueUtils.getValue ( collection, index ) ;^[CLASS] CollectionPointer  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P2_Replace_Operator]^if  ( index < WHOLE_COLLECTION )  {^88^^^^^87^94^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^if  ( index == null )  {^88^^^^^87^94^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^if  ( WHOLE_COLLECTION == index )  {^88^^^^^87^94^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P9_Replace_Statement]^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^88^^^^^87^94^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P9_Replace_Statement]^if  ( index != WHOLE_COLLECTION )  {^88^^^^^87^94^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P15_Unwrap_Block]^parent.setValue(value);^88^89^90^^^87^94^if  ( index == WHOLE_COLLECTION )  { parent.setValue ( value ) ; }^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P16_Remove_Block]^^88^89^90^^^87^94^if  ( index == WHOLE_COLLECTION )  { parent.setValue ( value ) ; }^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P13_Insert_Block]^if  (  ( index )  !=  ( WHOLE_COLLECTION )  )  {     return getValue ( collection, index ) ; }else {     return getValue ( collection ) ; }^88^^^^^87^94^[Delete]^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P13_Insert_Block]^if  (  ( index )  ==  ( WHOLE_COLLECTION )  )  {     return new CollectionAttributeNodeIterator ( this, name ) ; }^88^^^^^87^94^[Delete]^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^ValueUtils.setValue ( collection, index ) ;^92^^^^^87^94^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^ValueUtils.setValue (  index, value ) ;^92^^^^^87^94^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^ValueUtils.setValue ( collection,  value ) ;^92^^^^^87^94^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^ValueUtils.setValue ( value, index, collection ) ;^92^^^^^87^94^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^ValueUtils.setValue ( collection, value, index ) ;^92^^^^^87^94^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^ValueUtils.getValue ( collection, index, value ) ;^92^^^^^87^94^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^ValueUtils.setValue ( collection, index, collection ) ;^92^^^^^87^94^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P14_Delete_Statement]^^92^^^^^87^94^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P11_Insert_Donor_Statement]^return ValueUtils.getValue ( collection ) ;ValueUtils.setValue ( collection, index, value ) ;^92^^^^^87^94^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P11_Insert_Donor_Statement]^return ValueUtils.getValue ( collection, index ) ;ValueUtils.setValue ( collection, index, value ) ;^92^^^^^87^94^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P12_Insert_Condition]^if  ( ValueUtils.getLength ( collection )  <= index )  { ValueUtils.setValue ( collection, index, value ) ; }^92^^^^^87^94^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^parent.setValue ( collection ) ;^89^^^^^87^94^parent.setValue ( value ) ;^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^parent .setValue ( collection , value )  ;^89^^^^^87^94^parent.setValue ( value ) ;^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P14_Delete_Statement]^^89^^^^^87^94^parent.setValue ( value ) ;^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P11_Insert_Donor_Statement]^ptr.setValue ( value ) ;parent.setValue ( value ) ;^89^^^^^87^94^parent.setValue ( value ) ;^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^ValueUtils.setValue ( index, collection, value ) ;^92^^^^^87^94^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] CollectionPointer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^super .getNode (  )  ;^97^^^^^96^99^super.setIndex ( index ) ;^[CLASS] CollectionPointer  [METHOD] setIndex [RETURN_TYPE] void   int index [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  int  index  
[P14_Delete_Statement]^^97^98^^^^96^99^super.setIndex ( index ) ; valuePointer = null;^[CLASS] CollectionPointer  [METHOD] setIndex [RETURN_TYPE] void   int index [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  int  index  
[P11_Insert_Donor_Statement]^ptr.setIndex ( index ) ;super.setIndex ( index ) ;^97^^^^^96^99^super.setIndex ( index ) ;^[CLASS] CollectionPointer  [METHOD] setIndex [RETURN_TYPE] void   int index [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  int  index  
[P8_Replace_Mix]^valuePointer = false;^98^^^^^96^99^valuePointer = null;^[CLASS] CollectionPointer  [METHOD] setIndex [RETURN_TYPE] void   int index [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  int  index  
[P11_Insert_Donor_Statement]^valuePointer = this;valuePointer = null;^98^^^^^96^99^valuePointer = null;^[CLASS] CollectionPointer  [METHOD] setIndex [RETURN_TYPE] void   int index [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  int  index  
[P12_Insert_Condition]^if  ( valuePointer == null )  { valuePointer = null; }^98^^^^^96^99^valuePointer = null;^[CLASS] CollectionPointer  [METHOD] setIndex [RETURN_TYPE] void   int index [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  int  index  
[P2_Replace_Operator]^if  ( valuePointer != null )  {^102^^^^^101^113^if  ( valuePointer == null )  {^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^if  ( collectionPointer == null )  {^102^^^^^101^113^if  ( valuePointer == null )  {^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^if  ( parent == null )  {^102^^^^^101^113^if  ( valuePointer == null )  {^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^if  ( valuePointerPointer == null )  {^102^^^^^101^113^if  ( valuePointer == null )  {^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^if  ( value == null )  {^102^^^^^101^113^if  ( valuePointer == null )  {^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P6_Replace_Expression]^if  ( index == WHOLE_COLLECTION )  {^102^^^^^101^113^if  ( valuePointer == null )  {^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^if  ( valuePointer == false )  {^102^^^^^101^113^if  ( valuePointer == null )  {^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P9_Replace_Statement]^if  ( parent != null )  {^102^^^^^101^113^if  ( valuePointer == null )  {^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P15_Unwrap_Block]^if ((index) == (WHOLE_COLLECTION)) {    valuePointer = this;}else {    java.lang.Object value = getImmediateNode();    valuePointer = org.apache.commons.jxpath.ri.model.NodePointer.newChildNodePointer(this, getName(), value);};^102^103^104^105^^101^113^if  ( valuePointer == null )  { if  ( index == WHOLE_COLLECTION )  { valuePointer = this; }^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P16_Remove_Block]^^102^103^104^105^^101^113^if  ( valuePointer == null )  { if  ( index == WHOLE_COLLECTION )  { valuePointer = this; }^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P13_Insert_Block]^if  (  ( index )  ==  ( WHOLE_COLLECTION )  )  {     valuePointer = this; }else {     Object value = getImmediateNode (  ) ;     valuePointer = newChildNodePointer ( this, getName (  ) , value ) ; }^102^^^^^101^113^[Delete]^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P2_Replace_Operator]^if  ( index <= WHOLE_COLLECTION )  {^103^^^^^101^113^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^if  ( this == WHOLE_COLLECTION )  {^103^^^^^101^113^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^if  ( index == this )  {^103^^^^^101^113^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^if  ( WHOLE_COLLECTION == index )  {^103^^^^^101^113^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P9_Replace_Statement]^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^103^^^^^101^113^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P9_Replace_Statement]^if  ( index != WHOLE_COLLECTION )  {^103^^^^^101^113^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P15_Unwrap_Block]^valuePointer = this;^103^104^105^^^101^113^if  ( index == WHOLE_COLLECTION )  { valuePointer = this; }^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P16_Remove_Block]^^103^104^105^^^101^113^if  ( index == WHOLE_COLLECTION )  { valuePointer = this; }^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P13_Insert_Block]^if  (  ( valuePointer )  == null )  {     if  (  ( index )  ==  ( WHOLE_COLLECTION )  )  {         valuePointer = this;     }else {         Object value = getImmediateNode (  ) ;         valuePointer = newChildNodePointer ( this, getName (  ) , value ) ;     } }^103^^^^^101^113^[Delete]^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^valuePointer = NodePointer.newChildNodePointer ( this, getName (  ) , collection ) ;^108^109^^^^101^113^valuePointer = NodePointer.newChildNodePointer ( this, getName (  ) , value ) ;^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^valuePointer = NodePointer.testNode ( this, getName (  ) , value ) ;^108^109^^^^101^113^valuePointer = NodePointer.newChildNodePointer ( this, getName (  ) , value ) ;^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^valuePointer = NodePointer.newChildNodePointer ( this, getBaseValue (  ) , value ) ;^108^109^^^^101^113^valuePointer = NodePointer.newChildNodePointer ( this, getName (  ) , value ) ;^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^Object value = getBaseValue (  ) ;^107^^^^^101^113^Object value = getImmediateNode (  ) ;^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P11_Insert_Donor_Statement]^NodePointer parent = getImmediateParentPointer (  ) ;Object value = getImmediateNode (  ) ;^107^^^^^101^113^Object value = getImmediateNode (  ) ;^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P11_Insert_Donor_Statement]^Object collection = getBaseValue (  ) ;Object value = getImmediateNode (  ) ;^107^^^^^101^113^Object value = getImmediateNode (  ) ;^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P11_Insert_Donor_Statement]^Object value = getNode (  ) ;Object value = getImmediateNode (  ) ;^107^^^^^101^113^Object value = getImmediateNode (  ) ;^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P14_Delete_Statement]^^107^^^^^101^113^Object value = getImmediateNode (  ) ;^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^NodePointer.newChildNodePointer ( this, getName (  ) , collection ) ;^109^^^^^101^113^NodePointer.newChildNodePointer ( this, getName (  ) , value ) ;^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^NodePointer.testNode ( this, getName (  ) , value ) ;^109^^^^^101^113^NodePointer.newChildNodePointer ( this, getName (  ) , value ) ;^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^NodePointer.newChildNodePointer ( this, getBaseValue (  ) , value ) ;^109^^^^^101^113^NodePointer.newChildNodePointer ( this, getName (  ) , value ) ;^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P14_Delete_Statement]^^109^^^^^101^113^NodePointer.newChildNodePointer ( this, getName (  ) , value ) ;^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P11_Insert_Donor_Statement]^NodePointer ptr =  ( NodePointer )  clone (  ) ;NodePointer.newChildNodePointer ( this, getName (  ) , value ) ;^109^^^^^101^113^NodePointer.newChildNodePointer ( this, getName (  ) , value ) ;^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^valuePointer  =  valuePointer ;^104^^^^^101^113^valuePointer = this;^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P11_Insert_Donor_Statement]^valuePointer = null;valuePointer = this;^104^^^^^101^113^valuePointer = this;^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^valuePointer  = null ;^104^^^^^101^113^valuePointer = this;^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P8_Replace_Mix]^valuePointer =  NodePointer.newChildNodePointer ( this, getName (  ) , null ) ;^108^109^^^^101^113^valuePointer = NodePointer.newChildNodePointer ( this, getName (  ) , value ) ;^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P5_Replace_Variable]^return parent;^112^^^^^101^113^return valuePointer;^[CLASS] CollectionPointer  [METHOD] getValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  
[P7_Replace_Invocation]^Object collection = getName (  ) ;^116^^^^^115^121^Object collection = getBaseValue (  ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P11_Insert_Donor_Statement]^Object value = getImmediateNode (  ) ;Object collection = getBaseValue (  ) ;^116^^^^^115^121^Object collection = getBaseValue (  ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P11_Insert_Donor_Statement]^Object value = getNode (  ) ;Object collection = getBaseValue (  ) ;^116^^^^^115^121^Object collection = getBaseValue (  ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P14_Delete_Statement]^^116^^^^^115^121^Object collection = getBaseValue (  ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P11_Insert_Donor_Statement]^return ValueUtils.getLength ( getBaseValue (  )  ) ;Object collection = getBaseValue (  ) ;^116^^^^^115^121^Object collection = getBaseValue (  ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P2_Replace_Operator]^if  ( ValueUtils.getLength ( collection )  > index )  {^117^^^^^115^121^if  ( ValueUtils.getLength ( collection )  <= index )  {^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P5_Replace_Variable]^if  ( ValueUtils.getLength ( value )  <= index )  {^117^^^^^115^121^if  ( ValueUtils.getLength ( collection )  <= index )  {^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P5_Replace_Variable]^if  ( ValueUtils.getLength ( index )  <= collection )  {^117^^^^^115^121^if  ( ValueUtils.getLength ( collection )  <= index )  {^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P6_Replace_Expression]^if  ( index + 1 )  {^117^^^^^115^121^if  ( ValueUtils.getLength ( collection )  <= index )  {^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P7_Replace_Invocation]^if  ( ValueUtils.getValue ( collection )  <= index )  {^117^^^^^115^121^if  ( ValueUtils.getLength ( collection )  <= index )  {^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P15_Unwrap_Block]^collection = org.apache.commons.jxpath.util.ValueUtils.expandCollection(getNode(), ((index) + 1));^117^118^119^^^115^121^if  ( ValueUtils.getLength ( collection )  <= index )  { collection = ValueUtils.expandCollection ( getNode (  ) , index + 1 ) ; }^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P16_Remove_Block]^^117^118^119^^^115^121^if  ( ValueUtils.getLength ( collection )  <= index )  { collection = ValueUtils.expandCollection ( getNode (  ) , index + 1 ) ; }^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P2_Replace_Operator]^collection = ValueUtils.expandCollection ( getNode (  ) , index  &  1 ) ;^118^^^^^115^121^collection = ValueUtils.expandCollection ( getNode (  ) , index + 1 ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P3_Replace_Literal]^collection = ValueUtils.expandCollection ( getNode (  ) , index  ) ;^118^^^^^115^121^collection = ValueUtils.expandCollection ( getNode (  ) , index + 1 ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P7_Replace_Invocation]^collection = ValueUtils.getValue ( getNode (  ) , index + 1 ) ;^118^^^^^115^121^collection = ValueUtils.expandCollection ( getNode (  ) , index + 1 ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P7_Replace_Invocation]^collection = ValueUtils.expandCollection ( getNodeType (  ) , index + 1 ) ;^118^^^^^115^121^collection = ValueUtils.expandCollection ( getNode (  ) , index + 1 ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P8_Replace_Mix]^collection = ValueUtils.expandCollection ( getNode (  ) , index + 0 ) ;^118^^^^^115^121^collection = ValueUtils.expandCollection ( getNode (  ) , index + 1 ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P13_Insert_Block]^if  (  ( getLength ( collection )  )  <=  ( index )  )  {     collection = expandCollection ( getNode (  ) ,  (  ( index )  + 1 )  ) ; }^118^^^^^115^121^[Delete]^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P2_Replace_Operator]^collection = ValueUtils.expandCollection ( getNode (  ) , index  >  1 ) ;^118^^^^^115^121^collection = ValueUtils.expandCollection ( getNode (  ) , index + 1 ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P8_Replace_Mix]^collection = ValueUtils.getValue ( getNode (  ) , 1 + 1 ) ;^118^^^^^115^121^collection = ValueUtils.expandCollection ( getNode (  ) , index + 1 ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P14_Delete_Statement]^^118^^^^^115^121^collection = ValueUtils.expandCollection ( getNode (  ) , index + 1 ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P2_Replace_Operator]^collection = ValueUtils.expandCollection ( getNode (  ) , index  !=  1 ) ;^118^^^^^115^121^collection = ValueUtils.expandCollection ( getNode (  ) , index + 1 ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P7_Replace_Invocation]^collection = ValueUtils .getValue ( collection )  ;^118^^^^^115^121^collection = ValueUtils.expandCollection ( getNode (  ) , index + 1 ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P8_Replace_Mix]^collection = ValueUtils.expandCollection ( getNode (  ) , index + 4 ) ;^118^^^^^115^121^collection = ValueUtils.expandCollection ( getNode (  ) , index + 1 ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P7_Replace_Invocation]^if  ( ValueUtils .getValue ( value )   <= index )  {^117^^^^^115^121^if  ( ValueUtils.getLength ( collection )  <= index )  {^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P2_Replace_Operator]^collection = ValueUtils.expandCollection ( getNode (  ) , index  <  1 ) ;^118^^^^^115^121^collection = ValueUtils.expandCollection ( getNode (  ) , index + 1 ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P8_Replace_Mix]^collection = ValueUtils .getValue ( value )  ;^118^^^^^115^121^collection = ValueUtils.expandCollection ( getNode (  ) , index + 1 ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P8_Replace_Mix]^return null;^120^^^^^115^121^return this;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Object  collection  value  NodePointer  parent  valuePointer  boolean  JXPathContext  context  
[P7_Replace_Invocation]^NodePointer ptr = testNode ( context ) ;^124^^^^^123^127^NodePointer ptr = createPath ( context ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  
[P11_Insert_Donor_Statement]^NodePointer ptr =  ( NodePointer )  clone (  ) ;NodePointer ptr = createPath ( context ) ;^124^^^^^123^127^NodePointer ptr = createPath ( context ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  
[P11_Insert_Donor_Statement]^NodePointer parent = getImmediateParentPointer (  ) ;NodePointer ptr = createPath ( context ) ;^124^^^^^123^127^NodePointer ptr = createPath ( context ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  
[P14_Delete_Statement]^^124^^^^^123^127^NodePointer ptr = createPath ( context ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  
[P11_Insert_Donor_Statement]^return ptr.createPath ( context, value ) ;NodePointer ptr = createPath ( context ) ;^124^^^^^123^127^NodePointer ptr = createPath ( context ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  
[P11_Insert_Donor_Statement]^return ptr.createPath ( context ) ;NodePointer ptr = createPath ( context ) ;^124^^^^^123^127^NodePointer ptr = createPath ( context ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  
[P5_Replace_Variable]^ptr.setValue ( collection ) ;^125^^^^^123^127^ptr.setValue ( value ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  
[P7_Replace_Invocation]^ptr.createPath ( value ) ;^125^^^^^123^127^ptr.setValue ( value ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  
[P8_Replace_Mix]^ptr .setValue ( value )  ;^125^^^^^123^127^ptr.setValue ( value ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  
[P14_Delete_Statement]^^125^^^^^123^127^ptr.setValue ( value ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  
[P11_Insert_Donor_Statement]^parent.setValue ( value ) ;ptr.setValue ( value ) ;^125^^^^^123^127^ptr.setValue ( value ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  
[P11_Insert_Donor_Statement]^ptr.setIndex ( index ) ;ptr.setValue ( value ) ;^125^^^^^123^127^ptr.setValue ( value ) ;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  
[P5_Replace_Variable]^return valuePointer;^126^^^^^123^127^return ptr;^[CLASS] CollectionPointer  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  
[P7_Replace_Invocation]^NodePointer ptr =  ( NodePointer )  getClass (  ) ;^135^^^^^129^138^NodePointer ptr =  ( NodePointer )  clone (  ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P11_Insert_Donor_Statement]^NodePointer ptr = createPath ( context ) ;NodePointer ptr =  ( NodePointer )  clone (  ) ;^135^^^^^129^138^NodePointer ptr =  ( NodePointer )  clone (  ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P11_Insert_Donor_Statement]^NodePointer parent = getImmediateParentPointer (  ) ;NodePointer ptr =  ( NodePointer )  clone (  ) ;^135^^^^^129^138^NodePointer ptr =  ( NodePointer )  clone (  ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P14_Delete_Statement]^^135^136^^^^129^138^NodePointer ptr =  ( NodePointer )  clone (  ) ; ptr.setIndex ( index ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P11_Insert_Donor_Statement]^NodePointer.newChildNodePointer ( this, getName (  ) , value ) ;NodePointer ptr =  ( NodePointer )  clone (  ) ;^135^^^^^129^138^NodePointer ptr =  ( NodePointer )  clone (  ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P7_Replace_Invocation]^ptr.createPath ( index ) ;^136^^^^^129^138^ptr.setIndex ( index ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P7_Replace_Invocation]^ptr .getNode (  )  ;^136^^^^^129^138^ptr.setIndex ( index ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P14_Delete_Statement]^^136^^^^^129^138^ptr.setIndex ( index ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P11_Insert_Donor_Statement]^ptr.setValue ( value ) ;ptr.setIndex ( index ) ;^136^^^^^129^138^ptr.setIndex ( index ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P11_Insert_Donor_Statement]^super.setIndex ( index ) ;ptr.setIndex ( index ) ;^136^^^^^129^138^ptr.setIndex ( index ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P5_Replace_Variable]^return valuePointer.createPath ( context, value ) ;^137^^^^^129^138^return ptr.createPath ( context, value ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P5_Replace_Variable]^return ptr.createPath (  value ) ;^137^^^^^129^138^return ptr.createPath ( context, value ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P5_Replace_Variable]^return ptr.createPath ( context ) ;^137^^^^^129^138^return ptr.createPath ( context, value ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P5_Replace_Variable]^return value.createPath ( context, ptr ) ;^137^^^^^129^138^return ptr.createPath ( context, value ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P5_Replace_Variable]^return ptr.createPath ( value, context ) ;^137^^^^^129^138^return ptr.createPath ( context, value ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P7_Replace_Invocation]^return ptr.childIterator ( context, value ) ;^137^^^^^129^138^return ptr.createPath ( context, value ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P5_Replace_Variable]^return ptr.createPath ( context, collection ) ;^137^^^^^129^138^return ptr.createPath ( context, value ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P5_Replace_Variable]^return context.createPath ( ptr, value ) ;^137^^^^^129^138^return ptr.createPath ( context, value ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P14_Delete_Statement]^^137^^^^^129^138^return ptr.createPath ( context, value ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P7_Replace_Invocation]^NodePointer ptr =  ( NodePointer )  getClass (  ) ;^145^^^^^140^148^NodePointer ptr =  ( NodePointer )  clone (  ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P11_Insert_Donor_Statement]^NodePointer ptr = createPath ( context ) ;NodePointer ptr =  ( NodePointer )  clone (  ) ;^145^^^^^140^148^NodePointer ptr =  ( NodePointer )  clone (  ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P11_Insert_Donor_Statement]^NodePointer parent = getImmediateParentPointer (  ) ;NodePointer ptr =  ( NodePointer )  clone (  ) ;^145^^^^^140^148^NodePointer ptr =  ( NodePointer )  clone (  ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P14_Delete_Statement]^^145^146^^^^140^148^NodePointer ptr =  ( NodePointer )  clone (  ) ; ptr.setIndex ( index ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P11_Insert_Donor_Statement]^NodePointer.newChildNodePointer ( this, getName (  ) , value ) ;NodePointer ptr =  ( NodePointer )  clone (  ) ;^145^^^^^140^148^NodePointer ptr =  ( NodePointer )  clone (  ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P7_Replace_Invocation]^ptr.createPath ( index ) ;^146^^^^^140^148^ptr.setIndex ( index ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P14_Delete_Statement]^^146^147^^^^140^148^ptr.setIndex ( index ) ; return ptr.createPath ( context ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P11_Insert_Donor_Statement]^ptr.setValue ( value ) ;ptr.setIndex ( index ) ;^146^^^^^140^148^ptr.setIndex ( index ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P11_Insert_Donor_Statement]^super.setIndex ( index ) ;ptr.setIndex ( index ) ;^146^^^^^140^148^ptr.setIndex ( index ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P5_Replace_Variable]^return valuePointer.createPath ( context ) ;^147^^^^^140^148^return ptr.createPath ( context ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P5_Replace_Variable]^return context.createPath ( ptr ) ;^147^^^^^140^148^return ptr.createPath ( context ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P8_Replace_Mix]^return ptr .createPath ( context )  ;^147^^^^^140^148^return ptr.createPath ( context ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P14_Delete_Statement]^^147^^^^^140^148^return ptr.createPath ( context ) ;^[CLASS] CollectionPointer  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  JXPathContext  context  QName  name  int  index  
[P2_Replace_Operator]^return System.identityHashCode ( collection )  ==  + index;^151^^^^^150^152^return System.identityHashCode ( collection )  + index;^[CLASS] CollectionPointer  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  
[P5_Replace_Variable]^return System.identityHashCode ( value )  + index;^151^^^^^150^152^return System.identityHashCode ( collection )  + index;^[CLASS] CollectionPointer  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  
[P5_Replace_Variable]^return System.identityHashCode ( collection )  + 2;^151^^^^^150^152^return System.identityHashCode ( collection )  + index;^[CLASS] CollectionPointer  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  
[P5_Replace_Variable]^return System.identityHashCode ( index )  + collection;^151^^^^^150^152^return System.identityHashCode ( collection )  + index;^[CLASS] CollectionPointer  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  
[P8_Replace_Mix]^return false ;^151^^^^^150^152^return System.identityHashCode ( collection )  + index;^[CLASS] CollectionPointer  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  
[P14_Delete_Statement]^^151^^^^^150^152^return System.identityHashCode ( collection )  + index;^[CLASS] CollectionPointer  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Object  collection  value  NodePointer  parent  ptr  valuePointer  boolean  
[P2_Replace_Operator]^if  ( object <= this )  {^155^^^^^154^165^if  ( object == this )  {^[CLASS] CollectionPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  valuePointer  boolean  CollectionPointer  other  
[P5_Replace_Variable]^if  ( value == this )  {^155^^^^^154^165^if  ( object == this )  {^[CLASS] CollectionPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  valuePointer  boolean  CollectionPointer  other  
[P15_Unwrap_Block]^return true;^155^156^157^^^154^165^if  ( object == this )  { return true; }^[CLASS] CollectionPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  valuePointer  boolean  CollectionPointer  other  
[P16_Remove_Block]^^155^156^157^^^154^165^if  ( object == this )  { return true; }^[CLASS] CollectionPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  valuePointer  boolean  CollectionPointer  other  
[P13_Insert_Block]^if  (  ( index )  ==  ( WHOLE_COLLECTION )  )  {     return null; }^155^^^^^154^165^[Delete]^[CLASS] CollectionPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  valuePointer  boolean  CollectionPointer  other  
[P3_Replace_Literal]^return false;^156^^^^^154^165^return true;^[CLASS] CollectionPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  valuePointer  boolean  CollectionPointer  other  
[P2_Replace_Operator]^if  ( ! ( object  >>  CollectionPointer )  )  {^159^^^^^154^165^if  ( ! ( object instanceof CollectionPointer )  )  {^[CLASS] CollectionPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  valuePointer  boolean  CollectionPointer  other  
[P5_Replace_Variable]^if  ( ! ( value instanceof CollectionPointer )  )  {^159^^^^^154^165^if  ( ! ( object instanceof CollectionPointer )  )  {^[CLASS] CollectionPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  valuePointer  boolean  CollectionPointer  other  
[P15_Unwrap_Block]^return false;^159^160^161^^^154^165^if  ( ! ( object instanceof CollectionPointer )  )  { return false; }^[CLASS] CollectionPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  valuePointer  boolean  CollectionPointer  other  
[P16_Remove_Block]^^159^160^161^^^154^165^if  ( ! ( object instanceof CollectionPointer )  )  { return false; }^[CLASS] CollectionPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  valuePointer  boolean  CollectionPointer  other  
[P13_Insert_Block]^if  (  ( index )  ==  ( WHOLE_COLLECTION )  )  {     return new CollectionAttributeNodeIterator ( this, name ) ; }^159^^^^^154^165^[Delete]^[CLASS] CollectionPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  valuePointer  boolean  CollectionPointer  other  
[P3_Replace_Literal]^return true;^160^^^^^154^165^return false;^[CLASS] CollectionPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  valuePointer  boolean  CollectionPointer  other  
[P2_Replace_Operator]^return collection == other.collection || index == other.index;^164^^^^^154^165^return collection == other.collection && index == other.index;^[CLASS] CollectionPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  valuePointer  boolean  CollectionPointer  other  
[P2_Replace_Operator]^return collection != other.collection && index == other.index;^164^^^^^154^165^return collection == other.collection && index == other.index;^[CLASS] CollectionPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  valuePointer  boolean  CollectionPointer  other  
[P2_Replace_Operator]^return collection <= other.collection && index == other.index;^164^^^^^154^165^return collection == other.collection && index == other.index;^[CLASS] CollectionPointer  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  valuePointer  boolean  CollectionPointer  other  
[P2_Replace_Operator]^if  ( index != WHOLE_COLLECTION )  {^170^^^^^167^180^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P5_Replace_Variable]^if  ( WHOLE_COLLECTION == index )  {^170^^^^^167^180^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P8_Replace_Mix]^if  ( index == null )  {^170^^^^^167^180^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P9_Replace_Statement]^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^170^^^^^167^180^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P13_Insert_Block]^if  (  ( index )  !=  ( WHOLE_COLLECTION )  )  {     return getValue ( collection, index ) ; }else {     return getValue ( collection ) ; }^170^^^^^167^180^[Delete]^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P13_Insert_Block]^if  (  ( index )  ==  ( WHOLE_COLLECTION )  )  {     return new CollectionAttributeNodeIterator ( this, name ) ; }^170^^^^^167^180^[Delete]^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P5_Replace_Variable]^return getValuePointer (  ) .childIterator ( test, reverse, valuePointer ) ;^178^^^^^167^180^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P5_Replace_Variable]^return getValuePointer (  ) .childIterator (  reverse, startWith ) ;^178^^^^^167^180^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P5_Replace_Variable]^return getValuePointer (  ) .childIterator ( test,  startWith ) ;^178^^^^^167^180^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P5_Replace_Variable]^return getValuePointer (  ) .childIterator ( test, reverse ) ;^178^^^^^167^180^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P5_Replace_Variable]^return getValuePointer (  ) .childIterator ( startWith, reverse, test ) ;^178^^^^^167^180^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P5_Replace_Variable]^return getValuePointer (  ) .childIterator ( test, startWith, reverse ) ;^178^^^^^167^180^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P7_Replace_Invocation]^return getBaseValue (  ) .childIterator ( test, reverse, startWith ) ;^178^^^^^167^180^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P5_Replace_Variable]^return getValuePointer (  ) .childIterator ( reverse, test, startWith ) ;^178^^^^^167^180^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P7_Replace_Invocation]^return getValuePointer (  )  .attributeIterator ( 3 )  ;^178^^^^^167^180^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P8_Replace_Mix]^return getValuePointer (  )  .attributeIterator ( null )  ;^178^^^^^167^180^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P14_Delete_Statement]^^178^^^^^167^180^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P4_Replace_Constructor]^return new CollectionChildNodeIterator ( this,  reverse,^171^172^173^174^^167^180^return new CollectionChildNodeIterator ( this, test, reverse,^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P4_Replace_Constructor]^return new CollectionChildNodeIterator ( this, test,^171^172^173^174^^167^180^return new CollectionChildNodeIterator ( this, test, reverse,^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P5_Replace_Variable]^return new CollectionChildNodeIterator ( this, reverse, test,^171^172^173^174^^167^180^return new CollectionChildNodeIterator ( this, test, reverse,^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P8_Replace_Mix]^return new CollectionChildNodeIterator ( null, test, reverse,^171^172^173^174^^167^180^return new CollectionChildNodeIterator ( this, test, reverse,^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P13_Insert_Block]^if  ( ! ( object instanceof CollectionPointer )  )  {     return false; }^171^^^^^167^180^[Delete]^[CLASS] CollectionPointer  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  reverse  NodeTest  test  
[P2_Replace_Operator]^if  ( index <= WHOLE_COLLECTION )  {^183^^^^^182^187^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName name [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  QName  name  
[P5_Replace_Variable]^if  ( WHOLE_COLLECTION == index )  {^183^^^^^182^187^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName name [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  QName  name  
[P8_Replace_Mix]^if  ( index == null )  {^183^^^^^182^187^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName name [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  QName  name  
[P9_Replace_Statement]^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^183^^^^^182^187^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName name [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  QName  name  
[P9_Replace_Statement]^if  ( index != WHOLE_COLLECTION )  {^183^^^^^182^187^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName name [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  QName  name  
[P15_Unwrap_Block]^return new org.apache.commons.jxpath.ri.model.beans.CollectionAttributeNodeIterator(this, name);^183^184^185^^^182^187^if  ( index == WHOLE_COLLECTION )  { return new CollectionAttributeNodeIterator ( this, name ) ; }^[CLASS] CollectionPointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName name [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  QName  name  
[P16_Remove_Block]^^183^184^185^^^182^187^if  ( index == WHOLE_COLLECTION )  { return new CollectionAttributeNodeIterator ( this, name ) ; }^[CLASS] CollectionPointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName name [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  QName  name  
[P13_Insert_Block]^if  (  ( index )  ==  ( WHOLE_COLLECTION )  )  {     parent.setValue ( value ) ; }else {     setValue ( collection, index, value ) ; }^183^^^^^182^187^[Delete]^[CLASS] CollectionPointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName name [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  QName  name  
[P13_Insert_Block]^if  (  ( index )  ==  ( WHOLE_COLLECTION )  )  {     return new CollectionChildNodeIterator ( this, test, reverse, startWith ) ; }else {     return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ; }^183^^^^^182^187^[Delete]^[CLASS] CollectionPointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName name [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  QName  name  
[P13_Insert_Block]^if  ( ! ( object instanceof CollectionPointer )  )  {     return false; }^183^^^^^182^187^[Delete]^[CLASS] CollectionPointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName name [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  QName  name  
[P8_Replace_Mix]^return new CollectionAttributeNodeIterator ( null, name ) ;^184^^^^^182^187^return new CollectionAttributeNodeIterator ( this, name ) ;^[CLASS] CollectionPointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName name [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  QName  name  
[P13_Insert_Block]^if  ( ! ( object instanceof CollectionPointer )  )  {     return false; }^184^^^^^182^187^[Delete]^[CLASS] CollectionPointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName name [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  QName  name  
[P13_Insert_Block]^if  (  ( index )  ==  ( WHOLE_COLLECTION )  )  {     return new CollectionAttributeNodeIterator ( this, name ) ; }^184^^^^^182^187^[Delete]^[CLASS] CollectionPointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName name [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  QName  name  
[P7_Replace_Invocation]^return getValuePointer (  ) .createPath ( name ) ;^186^^^^^182^187^return getValuePointer (  ) .attributeIterator ( name ) ;^[CLASS] CollectionPointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName name [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  QName  name  
[P7_Replace_Invocation]^return getBaseValue (  ) .attributeIterator ( name ) ;^186^^^^^182^187^return getValuePointer (  ) .attributeIterator ( name ) ;^[CLASS] CollectionPointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName name [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  QName  name  
[P14_Delete_Statement]^^186^^^^^182^187^return getValuePointer (  ) .attributeIterator ( name ) ;^[CLASS] CollectionPointer  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName name [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  QName  name  
[P2_Replace_Operator]^if  ( index != WHOLE_COLLECTION )  {^190^^^^^189^194^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] namespaceIterator [RETURN_TYPE] NodeIterator   [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  
[P5_Replace_Variable]^if  ( WHOLE_COLLECTION == index )  {^190^^^^^189^194^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] namespaceIterator [RETURN_TYPE] NodeIterator   [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  
[P9_Replace_Statement]^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^190^^^^^189^194^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] namespaceIterator [RETURN_TYPE] NodeIterator   [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  
[P15_Unwrap_Block]^return null;^190^191^192^^^189^194^if  ( index == WHOLE_COLLECTION )  { return null; }^[CLASS] CollectionPointer  [METHOD] namespaceIterator [RETURN_TYPE] NodeIterator   [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  
[P16_Remove_Block]^^190^191^192^^^189^194^if  ( index == WHOLE_COLLECTION )  { return null; }^[CLASS] CollectionPointer  [METHOD] namespaceIterator [RETURN_TYPE] NodeIterator   [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  
[P13_Insert_Block]^if  (  ( parent.getIndex (  )  )  !=  ( WHOLE_COLLECTION )  )  {     buffer.append ( "/." ) ; }^190^^^^^189^194^[Delete]^[CLASS] CollectionPointer  [METHOD] namespaceIterator [RETURN_TYPE] NodeIterator   [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  
[P13_Insert_Block]^if  ( object ==  ( this )  )  {     return true; }^190^^^^^189^194^[Delete]^[CLASS] CollectionPointer  [METHOD] namespaceIterator [RETURN_TYPE] NodeIterator   [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  
[P8_Replace_Mix]^return true;^191^^^^^189^194^return null;^[CLASS] CollectionPointer  [METHOD] namespaceIterator [RETURN_TYPE] NodeIterator   [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  
[P8_Replace_Mix]^return false;^191^^^^^189^194^return null;^[CLASS] CollectionPointer  [METHOD] namespaceIterator [RETURN_TYPE] NodeIterator   [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  
[P7_Replace_Invocation]^return getValuePointer (  ) .asPath (  ) ;^193^^^^^189^194^return getValuePointer (  ) .namespaceIterator (  ) ;^[CLASS] CollectionPointer  [METHOD] namespaceIterator [RETURN_TYPE] NodeIterator   [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  
[P7_Replace_Invocation]^return getBaseValue (  ) .namespaceIterator (  ) ;^193^^^^^189^194^return getValuePointer (  ) .namespaceIterator (  ) ;^[CLASS] CollectionPointer  [METHOD] namespaceIterator [RETURN_TYPE] NodeIterator   [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  
[P14_Delete_Statement]^^193^^^^^189^194^return getValuePointer (  ) .namespaceIterator (  ) ;^[CLASS] CollectionPointer  [METHOD] namespaceIterator [RETURN_TYPE] NodeIterator   [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  
[P2_Replace_Operator]^if  ( index != WHOLE_COLLECTION )  {^197^^^^^196^201^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String namespace [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  String  namespace  boolean  
[P5_Replace_Variable]^if  ( null == WHOLE_COLLECTION )  {^197^^^^^196^201^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String namespace [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  String  namespace  boolean  
[P5_Replace_Variable]^if  ( WHOLE_COLLECTION == index )  {^197^^^^^196^201^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String namespace [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  String  namespace  boolean  
[P9_Replace_Statement]^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^197^^^^^196^201^if  ( index == WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String namespace [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  String  namespace  boolean  
[P15_Unwrap_Block]^return null;^197^198^199^^^196^201^if  ( index == WHOLE_COLLECTION )  { return null; }^[CLASS] CollectionPointer  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String namespace [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  String  namespace  boolean  
[P16_Remove_Block]^^197^198^199^^^196^201^if  ( index == WHOLE_COLLECTION )  { return null; }^[CLASS] CollectionPointer  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String namespace [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  String  namespace  boolean  
[P13_Insert_Block]^if  (  ( parent.getIndex (  )  )  !=  ( WHOLE_COLLECTION )  )  {     buffer.append ( "/." ) ; }^197^^^^^196^201^[Delete]^[CLASS] CollectionPointer  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String namespace [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  String  namespace  boolean  
[P13_Insert_Block]^if  ( object ==  ( this )  )  {     return true; }^197^^^^^196^201^[Delete]^[CLASS] CollectionPointer  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String namespace [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  String  namespace  boolean  
[P8_Replace_Mix]^return true;^198^^^^^196^201^return null;^[CLASS] CollectionPointer  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String namespace [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  String  namespace  boolean  
[P8_Replace_Mix]^return false;^198^^^^^196^201^return null;^[CLASS] CollectionPointer  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String namespace [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  String  namespace  boolean  
[P7_Replace_Invocation]^return getValuePointer (  ) .setValue ( namespace ) ;^200^^^^^196^201^return getValuePointer (  ) .namespacePointer ( namespace ) ;^[CLASS] CollectionPointer  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String namespace [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  String  namespace  boolean  
[P7_Replace_Invocation]^return getBaseValue (  ) .namespacePointer ( namespace ) ;^200^^^^^196^201^return getValuePointer (  ) .namespacePointer ( namespace ) ;^[CLASS] CollectionPointer  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String namespace [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  String  namespace  boolean  
[P14_Delete_Statement]^^200^^^^^196^201^return getValuePointer (  ) .namespacePointer ( namespace ) ;^[CLASS] CollectionPointer  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String namespace [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  String  namespace  boolean  
[P3_Replace_Literal]^return false;^213^^^^^203^219^return true;^[CLASS] CollectionPointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  NodeTest  test  
[P7_Replace_Invocation]^if  (  (  ( NodeTypeTest )  test ) .setIndex (  )  == Compiler.NODE_TYPE_NODE )  {^212^^^^^203^219^if  (  (  ( NodeTypeTest )  test ) .getNodeType (  )  == Compiler.NODE_TYPE_NODE )  {^[CLASS] CollectionPointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  NodeTest  test  
[P14_Delete_Statement]^^212^213^214^^^203^219^if  (  (  ( NodeTypeTest )  test ) .getNodeType (  )  == Compiler.NODE_TYPE_NODE )  { return true; }^[CLASS] CollectionPointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  NodeTest  test  
[P3_Replace_Literal]^return true;^209^^^^^203^219^return false;^[CLASS] CollectionPointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  NodeTest  test  
[P3_Replace_Literal]^return false;^206^^^^^203^219^return true;^[CLASS] CollectionPointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  NodeTest  test  
[P7_Replace_Invocation]^if  (  (  ( NodeTypeTest )  test )  .getNode (  )   == Compiler.NODE_TYPE_NODE )  {^212^^^^^203^219^if  (  (  ( NodeTypeTest )  test ) .getNodeType (  )  == Compiler.NODE_TYPE_NODE )  {^[CLASS] CollectionPointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  NodeTest  test  
[P3_Replace_Literal]^return true;^216^^^^^203^219^return false;^[CLASS] CollectionPointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  NodeTest  test  
[P7_Replace_Invocation]^return getValuePointer (  ) .createPath ( test ) ;^218^^^^^203^219^return getValuePointer (  ) .testNode ( test ) ;^[CLASS] CollectionPointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  NodeTest  test  
[P7_Replace_Invocation]^return getValuePointer (  )  .getName (  )  ;^218^^^^^203^219^return getValuePointer (  ) .testNode ( test ) ;^[CLASS] CollectionPointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  NodeTest  test  
[P7_Replace_Invocation]^return getBaseValue (  ) .testNode ( test ) ;^218^^^^^203^219^return getValuePointer (  ) .testNode ( test ) ;^[CLASS] CollectionPointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  NodeTest  test  
[P14_Delete_Statement]^^218^^^^^203^219^return getValuePointer (  ) .testNode ( test ) ;^[CLASS] CollectionPointer  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest test [VARIABLES] Object  collection  object  value  NodePointer  parent  ptr  startWith  valuePointer  boolean  NodeTest  test  
[P2_Replace_Operator]^return pointer1.getIndex (  )   >  pointer2.getIndex (  ) ;^224^^^^^221^225^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] CollectionPointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Object  collection  object  value  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P5_Replace_Variable]^return valuePointer.getIndex (  )  - pointer2.getIndex (  ) ;^224^^^^^221^225^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] CollectionPointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Object  collection  object  value  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P5_Replace_Variable]^return pointer1.getIndex (  )  - valuePointer.getIndex (  ) ;^224^^^^^221^225^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] CollectionPointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Object  collection  object  value  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P5_Replace_Variable]^return pointer2.getIndex (  )  - pointer1.getIndex (  ) ;^224^^^^^221^225^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] CollectionPointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Object  collection  object  value  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P7_Replace_Invocation]^return pointer1.setIndex (  )  - pointer2.getIndex (  ) ;^224^^^^^221^225^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] CollectionPointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Object  collection  object  value  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P8_Replace_Mix]^return valuePointer.setIndex (  )  - pointer2.getIndex (  ) ;^224^^^^^221^225^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] CollectionPointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Object  collection  object  value  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P14_Delete_Statement]^^224^^^^^221^225^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] CollectionPointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Object  collection  object  value  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P8_Replace_Mix]^return pointer1.getIndex (  )  - startWith.getIndex (  ) ;^224^^^^^221^225^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] CollectionPointer  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Object  collection  object  value  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P7_Replace_Invocation]^NodePointer parent = getNodeType (  ) ;^232^^^^^230^253^NodePointer parent = getImmediateParentPointer (  ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P11_Insert_Donor_Statement]^NodePointer ptr =  ( NodePointer )  clone (  ) ;NodePointer parent = getImmediateParentPointer (  ) ;^232^^^^^230^253^NodePointer parent = getImmediateParentPointer (  ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P11_Insert_Donor_Statement]^NodePointer ptr = createPath ( context ) ;NodePointer parent = getImmediateParentPointer (  ) ;^232^^^^^230^253^NodePointer parent = getImmediateParentPointer (  ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P11_Insert_Donor_Statement]^Object value = getImmediateNode (  ) ;NodePointer parent = getImmediateParentPointer (  ) ;^232^^^^^230^253^NodePointer parent = getImmediateParentPointer (  ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P14_Delete_Statement]^^232^^^^^230^253^NodePointer parent = getImmediateParentPointer (  ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P2_Replace_Operator]^if  ( parent == null )  {^233^^^^^230^253^if  ( parent != null )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P5_Replace_Variable]^if  ( valuePointer != null )  {^233^^^^^230^253^if  ( parent != null )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P6_Replace_Expression]^if  ( index != WHOLE_COLLECTION )  {^233^^^^^230^253^if  ( parent != null )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P6_Replace_Expression]^if  ( parent.getIndex() != WHOLE_COLLECTION )  {^233^^^^^230^253^if  ( parent != null )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P6_Replace_Expression]^if  ( index + 1 )  {^233^^^^^230^253^if  ( parent != null )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P8_Replace_Mix]^if  ( parent != false )  {^233^^^^^230^253^if  ( parent != null )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P9_Replace_Statement]^if  ( valuePointer == null )  {^233^^^^^230^253^if  ( parent != null )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P2_Replace_Operator]^if  ( index == WHOLE_COLLECTION )  {^244^^^^^230^253^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P5_Replace_Variable]^if  ( WHOLE_COLLECTION != index )  {^244^^^^^230^253^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P6_Replace_Expression]^if  ( index + 1 )  {^244^^^^^230^253^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P8_Replace_Mix]^if  ( index = WHOLE_COLLECTION )  {^244^^^^^230^253^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P9_Replace_Statement]^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^244^^^^^230^253^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P15_Unwrap_Block]^buffer.append("/.[").append(((index) + 1)).append(']');^244^245^246^^^230^253^if  ( index != WHOLE_COLLECTION )  { buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ; }^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P16_Remove_Block]^^244^245^246^^^230^253^if  ( index != WHOLE_COLLECTION )  { buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ; }^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P8_Replace_Mix]^buffer .append ( object )  ;^248^^^^^230^253^buffer.append ( "/" ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P14_Delete_Statement]^^248^^^^^230^253^buffer.append ( "/" ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( "/." ) ;buffer.append ( "/" ) ;^248^^^^^230^253^buffer.append ( "/" ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( "/" ) ;^248^^^^^230^253^buffer.append ( "/" ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P2_Replace_Operator]^buffer.append ( "/.[" ) .append ( index   instanceof   1 ) .append ( ']' ) ;^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P3_Replace_Literal]^buffer.append ( "/." ) .append ( index + 1 ) .append ( ']' ) ;^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P3_Replace_Literal]^buffer.append ( "/.[" ) .append ( index  ) .append ( ']' ) ;^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P7_Replace_Invocation]^buffer .append ( collection )^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P8_Replace_Mix]^buffer .append ( object )^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P14_Delete_Statement]^^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P2_Replace_Operator]^buffer.append ( "/.[" ) .append ( index  <<  1 ) .append ( ']' ) ;^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P3_Replace_Literal]^buffer.append ( "/.[/" ) .append ( index + 1 ) .append ( ']' ) ;^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P2_Replace_Operator]^buffer.append ( "/.[" ) .append ( index  <=  1 ) .append ( ']' ) ;^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P2_Replace_Operator]^buffer.append ( "/.[" ) .append ( index  &  1 ) .append ( ']' ) ;^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P3_Replace_Literal]^buffer.append ( "/" ) .append ( index + 1 ) .append ( ']' ) ;^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P3_Replace_Literal]^buffer.append ( "/.[" ) .append ( index + this ) .append ( ']' ) ;^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P7_Replace_Invocation]^buffer .append ( value )^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P3_Replace_Literal]^buffer.append ( ".[" ) .append ( index + 1 ) .append ( ']' ) ;^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P3_Replace_Literal]^buffer.append ( "" ) ;^248^^^^^230^253^buffer.append ( "/" ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P2_Replace_Operator]^if  ( index <= WHOLE_COLLECTION )  {^235^^^^^230^253^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P2_Replace_Operator]^if  ( index == WHOLE_COLLECTION )  {^235^^^^^230^253^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P5_Replace_Variable]^if  ( WHOLE_COLLECTION != index )  {^235^^^^^230^253^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P6_Replace_Expression]^if  ( parent.getIndex() != WHOLE_COLLECTION )  {^235^^^^^230^253^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P6_Replace_Expression]^if  ( index + 1 )  {^235^^^^^230^253^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P8_Replace_Mix]^if  ( index = WHOLE_COLLECTION )  {^235^^^^^230^253^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P15_Unwrap_Block]^if ((parent.getIndex()) != (WHOLE_COLLECTION)) {    buffer.append("/.");}; buffer.append("[").append(((index) + 1)).append(']');^235^236^237^238^239^230^253^if  ( index != WHOLE_COLLECTION )  {  if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  { buffer.append ( "/." ) ; }^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P16_Remove_Block]^^235^236^237^238^239^230^253^if  ( index != WHOLE_COLLECTION )  {  if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  { buffer.append ( "/." ) ; }^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P2_Replace_Operator]^if  ( parent.getIndex (  )  == WHOLE_COLLECTION )  {^237^^^^^230^253^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P5_Replace_Variable]^if  ( valuePointer.getIndex (  )  != WHOLE_COLLECTION )  {^237^^^^^230^253^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P5_Replace_Variable]^if  ( WHOLE_COLLECTION.getIndex (  )  != parent )  {^237^^^^^230^253^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P7_Replace_Invocation]^if  ( parent.setIndex (  )  != WHOLE_COLLECTION )  {^237^^^^^230^253^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P8_Replace_Mix]^if  ( startWith.getIndex (  )  != WHOLE_COLLECTION )  {^237^^^^^230^253^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P9_Replace_Statement]^if  ( index != WHOLE_COLLECTION )  {^237^^^^^230^253^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P9_Replace_Statement]^if  ( index == WHOLE_COLLECTION )  {^237^^^^^230^253^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P15_Unwrap_Block]^buffer.append("/.");^237^238^239^^^230^253^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  { buffer.append ( "/." ) ; }^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P16_Remove_Block]^^237^238^239^^^230^253^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  { buffer.append ( "/." ) ; }^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P13_Insert_Block]^if  (  ( index )  ==  ( WHOLE_COLLECTION )  )  {     return null; }^237^^^^^230^253^[Delete]^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P3_Replace_Literal]^buffer.append ( "/" ) ;^238^^^^^230^253^buffer.append ( "/." ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P8_Replace_Mix]^buffer .append ( collection )  ;^238^^^^^230^253^buffer.append ( "/." ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P14_Delete_Statement]^^238^^^^^230^253^buffer.append ( "/." ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( "/" ) ;buffer.append ( "/." ) ;^238^^^^^230^253^buffer.append ( "/." ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( parent.asPath (  )  ) ;buffer.append ( "/." ) ;^238^^^^^230^253^buffer.append ( "/." ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P8_Replace_Mix]^if  ( valuePointer.setIndex (  )  != WHOLE_COLLECTION )  {^237^^^^^230^253^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P3_Replace_Literal]^buffer.append ( "" ) ;^238^^^^^230^253^buffer.append ( "/." ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P2_Replace_Operator]^buffer.append ( "[" ) .append ( index  |  1 ) .append ( ']' ) ;^240^^^^^230^253^buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P3_Replace_Literal]^buffer.append ( "[" ) .append ( index  ) .append ( ']' ) ;^240^^^^^230^253^buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P7_Replace_Invocation]^buffer .append ( object )^240^^^^^230^253^buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P8_Replace_Mix]^buffer .append ( collection )^240^^^^^230^253^buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P14_Delete_Statement]^^240^^^^^230^253^buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;^240^^^^^230^253^buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P2_Replace_Operator]^buffer.append ( "[" ) .append ( index  &  1 ) .append ( ']' ) ;^240^^^^^230^253^buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P7_Replace_Invocation]^buffer .append ( value )^240^^^^^230^253^buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P3_Replace_Literal]^buffer.append ( "" ) .append ( index + 1 ) .append ( ']' ) ;^240^^^^^230^253^buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P2_Replace_Operator]^if  ( parent.getIndex (  )  <= WHOLE_COLLECTION )  {^237^^^^^230^253^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P5_Replace_Variable]^buffer.append ( valuePointer.asPath (  )  ) ;^234^^^^^230^253^buffer.append ( parent.asPath (  )  ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P7_Replace_Invocation]^buffer.append ( parent.setIndex (  )  ) ;^234^^^^^230^253^buffer.append ( parent.asPath (  )  ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P14_Delete_Statement]^^234^^^^^230^253^buffer.append ( parent.asPath (  )  ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( "/." ) ;buffer.append ( parent.asPath (  )  ) ;^234^^^^^230^253^buffer.append ( parent.asPath (  )  ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P11_Insert_Donor_Statement]^buffer.append ( "/" ) ;buffer.append ( parent.asPath (  )  ) ;^234^^^^^230^253^buffer.append ( parent.asPath (  )  ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P5_Replace_Variable]^buffer.append ( startWith.asPath (  )  ) ;^234^^^^^230^253^buffer.append ( parent.asPath (  )  ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P8_Replace_Mix]^if  ( valuePointer .setIndex ( 1 )   != WHOLE_COLLECTION )  {^237^^^^^230^253^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P2_Replace_Operator]^buffer.append ( "[" ) .append ( index  &&  1 ) .append ( ']' ) ;^240^^^^^230^253^buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P3_Replace_Literal]^buffer.append ( "[" ) .append ( index +  ) .append ( ']' ) ;^240^^^^^230^253^buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P2_Replace_Operator]^buffer.append ( "[" ) .append ( index  >  1 ) .append ( ']' ) ;^240^^^^^230^253^buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P3_Replace_Literal]^buffer.append ( "[" ) .append ( index + 3 ) .append ( ']' ) ;^240^^^^^230^253^buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P2_Replace_Operator]^if  ( index >= WHOLE_COLLECTION )  {^235^^^^^230^253^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P2_Replace_Operator]^if  ( parent.getIndex (  )  >= WHOLE_COLLECTION )  {^237^^^^^230^253^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P3_Replace_Literal]^buffer.append ( "/./" ) ;^238^^^^^230^253^buffer.append ( "/." ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P7_Replace_Invocation]^buffer .append ( value )  ;^238^^^^^230^253^buffer.append ( "/." ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P8_Replace_Mix]^buffer .append ( object )  ;^238^^^^^230^253^buffer.append ( "/." ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P2_Replace_Operator]^buffer.append ( "[" ) .append ( index  ==  1 ) .append ( ']' ) ;^240^^^^^230^253^buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P8_Replace_Mix]^buffer.append ( "[" ) .append ( 1 + 1 ) .append ( ']' ) ;^240^^^^^230^253^buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P2_Replace_Operator]^buffer.append ( "[" ) .append ( index  !=  1 ) .append ( ']' ) ;^240^^^^^230^253^buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P2_Replace_Operator]^if  ( parent.getIndex (  )  < WHOLE_COLLECTION )  {^237^^^^^230^253^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P7_Replace_Invocation]^if  ( parent .setIndex ( 0 )   != WHOLE_COLLECTION )  {^237^^^^^230^253^if  ( parent.getIndex (  )  != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P2_Replace_Operator]^if  ( index > WHOLE_COLLECTION )  {^244^^^^^230^253^if  ( index != WHOLE_COLLECTION )  {^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P2_Replace_Operator]^buffer.append ( "/.[" ) .append ( index  ^  1 ) .append ( ']' ) ;^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P2_Replace_Operator]^buffer.append ( "/.[" ) .append ( index  <  1 ) .append ( ']' ) ;^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P7_Replace_Invocation]^buffer .append ( object )  ;^234^^^^^230^253^buffer.append ( parent.asPath (  )  ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P8_Replace_Mix]^buffer.append ( valuePointer.setIndex (  )  ) ;^234^^^^^230^253^buffer.append ( parent.asPath (  )  ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P2_Replace_Operator]^buffer.append ( "[" ) .append ( index   instanceof   1 ) .append ( ']' ) ;^240^^^^^230^253^buffer.append ( "[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P3_Replace_Literal]^buffer.append ( "/.[/." ) .append ( index + 1 ) .append ( ']' ) ;^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P2_Replace_Operator]^buffer.append ( "/.[" ) .append ( index  !=  1 ) .append ( ']' ) ;^245^^^^^230^253^buffer.append ( "/.[" ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P7_Replace_Invocation]^return buffer.append (  ) ;^252^^^^^230^253^return buffer.toString (  ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P7_Replace_Invocation]^return buffer .StringBuffer (  )  ;^252^^^^^230^253^return buffer.toString (  ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
[P14_Delete_Statement]^^252^^^^^230^253^return buffer.toString (  ) ;^[CLASS] CollectionPointer  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Object  collection  object  value  StringBuffer  buffer  NodePointer  parent  pointer1  pointer2  ptr  startWith  valuePointer  boolean  
