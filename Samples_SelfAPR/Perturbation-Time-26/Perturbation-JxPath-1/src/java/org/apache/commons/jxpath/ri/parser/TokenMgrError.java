[P1_Replace_Type]^static final  short  LEXICAL_ERROR = 0;^16^^^^^11^21^static final int LEXICAL_ERROR = 0;^[CLASS] TokenMgrError   [VARIABLES] 
[P3_Replace_Literal]^static final int LEXICAL_ERROR = 4;^16^^^^^11^21^static final int LEXICAL_ERROR = 0;^[CLASS] TokenMgrError   [VARIABLES] 
[P8_Replace_Mix]^static final int LEXICAL_ERROR = 2;^16^^^^^11^21^static final int LEXICAL_ERROR = 0;^[CLASS] TokenMgrError   [VARIABLES] 
[P1_Replace_Type]^static final  short  STATIC_LEXER_ERROR = 1;^21^^^^^16^26^static final int STATIC_LEXER_ERROR = 1;^[CLASS] TokenMgrError   [VARIABLES] 
[P3_Replace_Literal]^static final int STATIC_LEXER_ERROR = 10;^21^^^^^16^26^static final int STATIC_LEXER_ERROR = 1;^[CLASS] TokenMgrError   [VARIABLES] 
[P8_Replace_Mix]^static final int STATIC_LEXER_ERROR = 4;^21^^^^^16^26^static final int STATIC_LEXER_ERROR = 1;^[CLASS] TokenMgrError   [VARIABLES] 
[P1_Replace_Type]^static final  short  INVALID_LEXICAL_STATE = 2;^26^^^^^21^31^static final int INVALID_LEXICAL_STATE = 2;^[CLASS] TokenMgrError   [VARIABLES] 
[P3_Replace_Literal]^static final int INVALID_LEXICAL_STATE = -4;^26^^^^^21^31^static final int INVALID_LEXICAL_STATE = 2;^[CLASS] TokenMgrError   [VARIABLES] 
[P8_Replace_Mix]^static final int INVALID_LEXICAL_STATE = 2 * 2;^26^^^^^21^31^static final int INVALID_LEXICAL_STATE = 2;^[CLASS] TokenMgrError   [VARIABLES] 
[P1_Replace_Type]^static final  long  LOOP_DETECTED = 3;^31^^^^^26^36^static final int LOOP_DETECTED = 3;^[CLASS] TokenMgrError   [VARIABLES] 
[P8_Replace_Mix]^static final int LOOP_DETECTED = 3 + 0;^31^^^^^26^36^static final int LOOP_DETECTED = 3;^[CLASS] TokenMgrError   [VARIABLES] 
[P1_Replace_Type]^long  errorCode;^37^^^^^32^42^int errorCode;^[CLASS] TokenMgrError   [VARIABLES] 
[P8_Replace_Mix]^short  errorCode;^37^^^^^32^42^int errorCode;^[CLASS] TokenMgrError   [VARIABLES] 
[P1_Replace_Type]^private  long  position;^142^^^^^137^147^private int position;^[CLASS] TokenMgrError   [VARIABLES] 
[P8_Replace_Mix]^private  short  position;^142^^^^^137^147^private int position;^[CLASS] TokenMgrError   [VARIABLES] 
[P1_Replace_Type]^private int character;^143^^^^^138^148^private char character;^[CLASS] TokenMgrError   [VARIABLES] 
[P14_Delete_Statement]^^129^^^^^128^131^super ( message ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,int)   String message int reason [VARIABLES] char  character  String  message  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  position  reason  
[P11_Insert_Donor_Statement]^return super.getMessage (  ) ;super ( message ) ;^129^^^^^128^131^super ( message ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,int)   String message int reason [VARIABLES] char  character  String  message  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  position  reason  
[P5_Replace_Variable]^errorCode = position;^130^^^^^128^131^errorCode = reason;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,int)   String message int reason [VARIABLES] char  character  String  message  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  position  reason  
[P8_Replace_Mix]^errorCode =  STATIC_LEXER_ERROR;^130^^^^^128^131^errorCode = reason;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,int)   String message int reason [VARIABLES] char  character  String  message  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  position  reason  
[P5_Replace_Variable]^this ( LexicalError ( EOFSeen, lexState, position, errorColumn, errorAfter, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P5_Replace_Variable]^this ( LexicalError ( EOFSeen, lexState, errorLine, errorLine, errorAfter, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P5_Replace_Variable]^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, character ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P5_Replace_Variable]^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , position ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P5_Replace_Variable]^this ( LexicalError (  lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P5_Replace_Variable]^this ( LexicalError ( EOFSeen,  errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P5_Replace_Variable]^this ( LexicalError ( EOFSeen, lexState,  errorColumn, errorAfter, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P5_Replace_Variable]^this ( LexicalError ( EOFSeen, lexState, errorLine,  errorAfter, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P5_Replace_Variable]^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn,  curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P5_Replace_Variable]^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P5_Replace_Variable]^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar )  ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P5_Replace_Variable]^this ( LexicalError ( errorAfter, lexState, errorLine, errorColumn, EOFSeen, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P5_Replace_Variable]^this ( LexicalError ( EOFSeen, reason, errorLine, errorColumn, errorAfter, curChar ) , lexState ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P5_Replace_Variable]^this ( LexicalError ( EOFSeen, lexState, errorColumn, errorLine, errorAfter, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P5_Replace_Variable]^this ( LexicalError ( EOFSeen, errorAfter, errorLine, errorColumn, lexState, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P5_Replace_Variable]^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, reason ) , curChar ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P8_Replace_Mix]^this ( LexicalError ( EOFSeen, reason, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P14_Delete_Statement]^^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P5_Replace_Variable]^this ( LexicalError ( EOFSeen, lexState, reason, errorColumn, errorAfter, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P5_Replace_Variable]^this ( LexicalError ( lexState, EOFSeen, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P5_Replace_Variable]^this ( LexicalError ( EOFSeen, errorLine, lexState, errorColumn, errorAfter, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P5_Replace_Variable]^this ( LexicalError ( EOFSeen, errorColumn, errorLine, lexState, errorAfter, curChar ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P5_Replace_Variable]^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, curChar, errorAfter ) , reason ) ;^134^^^^^133^139^this ( LexicalError ( EOFSeen, lexState, errorLine, errorColumn, errorAfter, curChar ) , reason ) ;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P2_Replace_Operator]^position = errorColumn  ^  1;^137^^^^^133^139^position = errorColumn - 1;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P3_Replace_Literal]^position = errorColumn - errorCode;^137^^^^^133^139^position = errorColumn - 1;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P5_Replace_Variable]^position = reason - 1;^137^^^^^133^139^position = errorColumn - 1;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P8_Replace_Mix]^position = errorColumn - 3;^137^^^^^133^139^position = errorColumn - 1;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P5_Replace_Variable]^character = character;^138^^^^^133^139^character = curChar;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P8_Replace_Mix]^character =  null;^138^^^^^133^139^character = curChar;^[CLASS] TokenMgrError  [METHOD] <init> [RETURN_TYPE] String,char,int)   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar int reason [VARIABLES] char  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  lexState  position  reason  
[P1_Replace_Type]^String ch;^45^^^^^30^60^char ch;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^if  (  ( ch = str.charAt ( i )  )  < 0x20 && ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^if  (  ( ch = str.charAt ( i )  )  <= 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch >= 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^if  (  ( ch = str.charAt ( errorLine )  )  < 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^if  (  ( curChar = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^if  (  ( ch = strtr.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^if  (  ( str = ch.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^if  (  ( ch = i.charAt ( str )  )  < 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P6_Replace_Expression]^if  (  ( ch = str.charAt ( i )  )  < 0x20 ) {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P6_Replace_Expression]^if  (  ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P6_Replace_Expression]^if  ( ch = str.charAt ( i )  < 32 )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P6_Replace_Expression]^if  ( ch > 126 )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P6_Replace_Expression]^if  ( "0000" + toString(ch, 16) )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P6_Replace_Expression]^if  ( "\\u" + s.substring (  (  ( s.length (  )  )  - 4 ) , s.length (  )  ) )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P6_Replace_Expression]^if  ( s.length (  )  - 4 )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^if  (  ( ch = str.substring ( i )  )  < 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^if  (  ( ch = str .substring ( STATIC_LEXER_ERROR , lexState )   )  < 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P8_Replace_Mix]^if  (  ( ch = str.substring ( i )  )  < 0x20 ) {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P15_Unwrap_Block]^java.lang.String s = "0000" + (java.lang.Integer.toString(ch, 16)); retval.append(("\\u" + (s.substring(((s.length()) - 4), s.length()))));^76^77^78^79^80^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  { String s = "0000" + Integer.toString ( ch, 16 ) ; retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ; } else { retval.append ( ch ) ; }^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P16_Remove_Block]^^76^77^78^79^80^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  { String s = "0000" + Integer.toString ( ch, 16 ) ; retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ; } else { retval.append ( ch ) ; }^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^retval.append ( curChar ) ;^80^^^^^76^81^retval.append ( ch ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P14_Delete_Statement]^^80^^^^^76^81^retval.append ( ch ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\f" ) ;retval.append ( ch ) ;^80^^^^^76^81^retval.append ( ch ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\\" ) ;retval.append ( ch ) ;^80^^^^^76^81^retval.append ( ch ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\b" ) ;retval.append ( ch ) ;^80^^^^^76^81^retval.append ( ch ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\r" ) ;retval.append ( ch ) ;^80^^^^^76^81^retval.append ( ch ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\'" ) ;retval.append ( ch ) ;^80^^^^^76^81^retval.append ( ch ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\n" ) ;retval.append ( ch ) ;^80^^^^^76^81^retval.append ( ch ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\"" ) ;retval.append ( ch ) ;^80^^^^^76^81^retval.append ( ch ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\t" ) ;retval.append ( ch ) ;^80^^^^^76^81^retval.append ( ch ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P1_Replace_Type]^char s = "0000" + Integer.tochar ( ch, 16 ) ;^77^^^^^62^92^String s = "0000" + Integer.toString ( ch, 16 ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^String s = "00000" + Integer.toString ( ch, 16 ) ;^77^^^^^62^92^String s = "0000" + Integer.toString ( ch, 16 ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^String s = "0000" + Integer.toString ( ch, errorLine ) ;^77^^^^^62^92^String s = "0000" + Integer.toString ( ch, 16 ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^String s = "0000" + Integer.toString ( curChar, 16 ) ;^77^^^^^62^92^String s = "0000" + Integer.toString ( ch, 16 ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^String s = "0000" + Integer .toString (  )  ;^77^^^^^62^92^String s = "0000" + Integer.toString ( ch, 16 ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^String s = "0000" + Integer.toString ( ch, 24 ) ;^77^^^^^62^92^String s = "0000" + Integer.toString ( ch, 16 ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P14_Delete_Statement]^^77^^^^^62^92^String s = "0000" + Integer.toString ( ch, 16 ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^retval.append ( "\\u" + s.substring ( s.length (  >=  )  - 4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^retval.append ( "\\u" + s.substring ( s.length (  )   <  4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\\u" + s.substring ( s.length (  )  , s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\\u" + s.substring ( s.length() - 1  - 4, s.length() - 1  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^retval.append ( "\\u" + str.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^retval.append ( "\\u" + s.substring ( s.length (  )  - 4.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^retval .append ( s )   )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^retval.append ( "\\u" + s .length (  )   )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^retval.append ( "\\u" + s.substring ( s.valueOf (  )  - 4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^retval.append ( "\\u" + s.substring ( s .substring ( reason , position )   - 4, s^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P14_Delete_Statement]^^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^retval.append ( "\\u" + s.substring ( s.length (  )   <<  4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\\u" + s.substring ( s.length (  )  - INVALID_LEXICAL_STATE, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\\u" + s.substring ( s.length() + 1  - 4, s.length() + 1  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\\u" + s.substring ( s.length() - 4  - 4, s.length() - 4  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^retval.append ( "\\u" + s.substring ( s .substring ( STATIC_LEXER_ERROR , i )   - 4, s^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\\u" + s.substring ( s.length() + 9  - 4, s.length() + 9  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^retval.append ( "\\u" + s.substring ( s .substring ( LEXICAL_ERROR , STATIC_LEXER_ERROR )   - 4, s^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P1_Replace_Type]^for  (  short  i = 0; i < str.length (  ) ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^for  ( int i = 0; i == str.length (  ) ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^for  ==  ( int i = 0; i < str.length (  ) ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^for  |  ( int i = 0; i < str.length (  ) ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^for  ( int i = 1; i < str.length (  ) ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^for  ( int i = LOOP_DETECTED; i < str.length (  ) ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^for  ( int i = 0; i < str.length() - 8 ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^for  ( lexStatent i = 0; i < str.length (  ) ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^for  ( int i = 0; i < s.length (  ) ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^for  ( int i = 0; i < strtr.length (  ) ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^for  ( strnt i = 0; i < i.length (  ) ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^for  ( int i = 0; i < str.valueOf (  ) ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^for  ( int i = 0; i < str .substring ( i , LEXICAL_ERROR )  ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^if  (  ( ch = str.charAt ( i )  )  == 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^if  (  ( ch = str.charAt ( reason )  )  < 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^if  (  ( ch = s.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^if  (  ( ch = itr.charAt ( s )  )  < 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^String s = "0000" + Integer.toString ( ch, LOOP_DETECTED ) ;^77^^^^^62^92^String s = "0000" + Integer.toString ( ch, 16 ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^String s = "0000" + Integer.toString ( ch, reason ) ;^77^^^^^62^92^String s = "0000" + Integer.toString ( ch, 16 ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P14_Delete_Statement]^^77^78^^^^62^92^String s = "0000" + Integer.toString ( ch, 16 ) ; retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^retval.append ( "\\u" + s.substring ( s.length (  )   <=  4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\\u" + s.substring ( s.length() - 5  - 4, s.length() - 5  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^retval.append ( "\\u" + s.substring ( s .substring ( errorLine , lexState )   - 4, s^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P8_Replace_Mix]^retval.append ( "\\u" + str.substring ( s.valueOf (  )  - 4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^retval.append ( "\\u" + s.substring ( s.length (  )    instanceof   4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\\u" + s.substring ( s.length() - 6  - 4, s.length() - 6  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^retval.append ( "\\u" + s.substring ( s .substring ( errorLine , errorCode )   - 4, s^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^String s = "000000" + Integer.toString ( ch, 16 ) ;^77^^^^^62^92^String s = "0000" + Integer.toString ( ch, 16 ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^String s = "0000" + Integer.toString ( ch, 13 ) ;^77^^^^^62^92^String s = "0000" + Integer.toString ( ch, 16 ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^switch  ( s.charAt ( i )  ) {^47^48^^^^32^62^switch  ( str.charAt ( i )  ) {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^switch  ( str.charAt ( position )  ) {^47^48^^^^32^62^switch  ( str.charAt ( i )  ) {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^switch  ( i.charAt ( str )  ) {^47^48^^^^32^62^switch  ( str.charAt ( i )  ) {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^switch  ( str.substring ( i )  ) {^47^48^^^^32^62^switch  ( str.charAt ( i )  ) {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^switch  ( str .substring ( LEXICAL_ERROR , lexState )   ) {^47^48^^^^32^62^switch  ( str.charAt ( i )  ) {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\b" ) ;^52^^^^^37^67^retval.append ( "\\b" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^retval .append ( s )  ;^52^^^^^37^67^retval.append ( "\\b" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P14_Delete_Statement]^^52^^^^^37^67^retval.append ( "\\b" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\f" ) ;retval.append ( "\\b" ) ;^52^^^^^37^67^retval.append ( "\\b" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\\" ) ;retval.append ( "\\b" ) ;^52^^^^^37^67^retval.append ( "\\b" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\r" ) ;retval.append ( "\\b" ) ;^52^^^^^37^67^retval.append ( "\\b" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\'" ) ;retval.append ( "\\b" ) ;^52^^^^^37^67^retval.append ( "\\b" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\n" ) ;retval.append ( "\\b" ) ;^52^^^^^37^67^retval.append ( "\\b" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( ch ) ;retval.append ( "\\b" ) ;^52^^^^^37^67^retval.append ( "\\b" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\"" ) ;retval.append ( "\\b" ) ;^52^^^^^37^67^retval.append ( "\\b" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\t" ) ;retval.append ( "\\b" ) ;^52^^^^^37^67^retval.append ( "\\b" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\\t\" ) ;^55^^^^^40^70^retval.append ( "\\t" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^retval .append ( str )  ;^55^^^^^40^70^retval.append ( "\\t" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P8_Replace_Mix]^retval .append ( s )  ;^55^^^^^40^70^retval.append ( "\\t" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P14_Delete_Statement]^^55^^^^^40^70^retval.append ( "\\t" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\f" ) ;retval.append ( "\\t" ) ;^55^^^^^40^70^retval.append ( "\\t" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\\" ) ;retval.append ( "\\t" ) ;^55^^^^^40^70^retval.append ( "\\t" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\b" ) ;retval.append ( "\\t" ) ;^55^^^^^40^70^retval.append ( "\\t" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\r" ) ;retval.append ( "\\t" ) ;^55^^^^^40^70^retval.append ( "\\t" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\'" ) ;retval.append ( "\\t" ) ;^55^^^^^40^70^retval.append ( "\\t" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\n" ) ;retval.append ( "\\t" ) ;^55^^^^^40^70^retval.append ( "\\t" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( ch ) ;retval.append ( "\\t" ) ;^55^^^^^40^70^retval.append ( "\\t" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\"" ) ;retval.append ( "\\t" ) ;^55^^^^^40^70^retval.append ( "\\t" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "" ) ;^58^^^^^43^73^retval.append ( "\\n" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P14_Delete_Statement]^^58^59^^^^43^73^retval.append ( "\\n" ) ; continue;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\f" ) ;retval.append ( "\\n" ) ;^58^^^^^43^73^retval.append ( "\\n" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\\" ) ;retval.append ( "\\n" ) ;^58^^^^^43^73^retval.append ( "\\n" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\b" ) ;retval.append ( "\\n" ) ;^58^^^^^43^73^retval.append ( "\\n" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\r" ) ;retval.append ( "\\n" ) ;^58^^^^^43^73^retval.append ( "\\n" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\'" ) ;retval.append ( "\\n" ) ;^58^^^^^43^73^retval.append ( "\\n" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( ch ) ;retval.append ( "\\n" ) ;^58^^^^^43^73^retval.append ( "\\n" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\"" ) ;retval.append ( "\\n" ) ;^58^^^^^43^73^retval.append ( "\\n" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\t" ) ;retval.append ( "\\n" ) ;^58^^^^^43^73^retval.append ( "\\n" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\\" ) ;^61^^^^^46^76^retval.append ( "\\f" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P14_Delete_Statement]^^61^62^^^^46^76^retval.append ( "\\f" ) ; continue;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\\" ) ;retval.append ( "\\f" ) ;^61^^^^^46^76^retval.append ( "\\f" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\b" ) ;retval.append ( "\\f" ) ;^61^^^^^46^76^retval.append ( "\\f" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\r" ) ;retval.append ( "\\f" ) ;^61^^^^^46^76^retval.append ( "\\f" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\'" ) ;retval.append ( "\\f" ) ;^61^^^^^46^76^retval.append ( "\\f" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\n" ) ;retval.append ( "\\f" ) ;^61^^^^^46^76^retval.append ( "\\f" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( ch ) ;retval.append ( "\\f" ) ;^61^^^^^46^76^retval.append ( "\\f" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\"" ) ;retval.append ( "\\f" ) ;^61^^^^^46^76^retval.append ( "\\f" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\t" ) ;retval.append ( "\\f" ) ;^61^^^^^46^76^retval.append ( "\\f" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\\r\\" ) ;^64^^^^^49^79^retval.append ( "\\r" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^retval .append ( s )  ;^64^^^^^49^79^retval.append ( "\\r" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P14_Delete_Statement]^^64^^^^^49^79^retval.append ( "\\r" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\f" ) ;retval.append ( "\\r" ) ;^64^^^^^49^79^retval.append ( "\\r" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\\" ) ;retval.append ( "\\r" ) ;^64^^^^^49^79^retval.append ( "\\r" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\b" ) ;retval.append ( "\\r" ) ;^64^^^^^49^79^retval.append ( "\\r" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\'" ) ;retval.append ( "\\r" ) ;^64^^^^^49^79^retval.append ( "\\r" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\n" ) ;retval.append ( "\\r" ) ;^64^^^^^49^79^retval.append ( "\\r" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( ch ) ;retval.append ( "\\r" ) ;^64^^^^^49^79^retval.append ( "\\r" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\"" ) ;retval.append ( "\\r" ) ;^64^^^^^49^79^retval.append ( "\\r" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\t" ) ;retval.append ( "\\r" ) ;^64^^^^^49^79^retval.append ( "\\r" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\" ) ;^67^^^^^52^82^retval.append ( "\\\"" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P14_Delete_Statement]^^67^^^^^52^82^retval.append ( "\\\"" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\f" ) ;retval.append ( "\\\"" ) ;^67^^^^^52^82^retval.append ( "\\\"" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\\" ) ;retval.append ( "\\\"" ) ;^67^^^^^52^82^retval.append ( "\\\"" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\b" ) ;retval.append ( "\\\"" ) ;^67^^^^^52^82^retval.append ( "\\\"" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\r" ) ;retval.append ( "\\\"" ) ;^67^^^^^52^82^retval.append ( "\\\"" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\'" ) ;retval.append ( "\\\"" ) ;^67^^^^^52^82^retval.append ( "\\\"" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\n" ) ;retval.append ( "\\\"" ) ;^67^^^^^52^82^retval.append ( "\\\"" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( ch ) ;retval.append ( "\\\"" ) ;^67^^^^^52^82^retval.append ( "\\\"" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\t" ) ;retval.append ( "\\\"" ) ;^67^^^^^52^82^retval.append ( "\\\"" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\\\\'" ) ;^70^^^^^55^85^retval.append ( "\\\'" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^retval .append ( s )  ;^70^^^^^55^85^retval.append ( "\\\'" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P14_Delete_Statement]^^70^71^^^^55^85^retval.append ( "\\\'" ) ; continue;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\f" ) ;retval.append ( "\\\'" ) ;^70^^^^^55^85^retval.append ( "\\\'" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\\" ) ;retval.append ( "\\\'" ) ;^70^^^^^55^85^retval.append ( "\\\'" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\b" ) ;retval.append ( "\\\'" ) ;^70^^^^^55^85^retval.append ( "\\\'" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\r" ) ;retval.append ( "\\\'" ) ;^70^^^^^55^85^retval.append ( "\\\'" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\n" ) ;retval.append ( "\\\'" ) ;^70^^^^^55^85^retval.append ( "\\\'" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( ch ) ;retval.append ( "\\\'" ) ;^70^^^^^55^85^retval.append ( "\\\'" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\"" ) ;retval.append ( "\\\'" ) ;^70^^^^^55^85^retval.append ( "\\\'" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\t" ) ;retval.append ( "\\\'" ) ;^70^^^^^55^85^retval.append ( "\\\'" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P8_Replace_Mix]^retval .append ( str )  ;^73^^^^^58^88^retval.append ( "\\\\" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P14_Delete_Statement]^^73^74^^^^58^88^retval.append ( "\\\\" ) ; continue;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\f" ) ;retval.append ( "\\\\" ) ;^73^^^^^58^88^retval.append ( "\\\\" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\b" ) ;retval.append ( "\\\\" ) ;^73^^^^^58^88^retval.append ( "\\\\" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\r" ) ;retval.append ( "\\\\" ) ;^73^^^^^58^88^retval.append ( "\\\\" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\'" ) ;retval.append ( "\\\\" ) ;^73^^^^^58^88^retval.append ( "\\\\" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\n" ) ;retval.append ( "\\\\" ) ;^73^^^^^58^88^retval.append ( "\\\\" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( ch ) ;retval.append ( "\\\\" ) ;^73^^^^^58^88^retval.append ( "\\\\" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\"" ) ;retval.append ( "\\\\" ) ;^73^^^^^58^88^retval.append ( "\\\\" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\t" ) ;retval.append ( "\\\\" ) ;^73^^^^^58^88^retval.append ( "\\\\" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^if  (  ( ch = str.charAt ( errorColumn )  )  < 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^retval.append ( "\\u" + s.substring ( s.length (  !=  )  - 4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^retval.append ( "\\u" + s.substring ( s.length (  )   >=  4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\\u\" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\\u" + s.substring ( s.length (  )  - lexState, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^retval.append ( "\\u" + s.substring ( s.length (  )   |  4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\\u" + s.substring ( s.length (  )  - , s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\\u" + s.substring ( s.length() - 2  - 4, s.length() - 2  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^retval.append ( "\\u" + s.substring ( s .substring ( reason , errorColumn )   - 4, s^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^retval.append ( "\\u" + s.substring ( s .substring ( errorColumn , lexState )   - 4, s^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\\u" + s.substring ( s.length() + 3  - 4, s.length() + 3  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^retval.append ( "\\u" + s.substring ( s .substring ( i , errorCode )   - 4, s^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^retval.append ( curChar ) ;^80^^^^^65^95^retval.append ( ch ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P14_Delete_Statement]^^80^^^^^65^95^retval.append ( ch ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\f" ) ;retval.append ( ch ) ;^80^^^^^65^95^retval.append ( ch ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\\" ) ;retval.append ( ch ) ;^80^^^^^65^95^retval.append ( ch ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\b" ) ;retval.append ( ch ) ;^80^^^^^65^95^retval.append ( ch ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\r" ) ;retval.append ( ch ) ;^80^^^^^65^95^retval.append ( ch ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\'" ) ;retval.append ( ch ) ;^80^^^^^65^95^retval.append ( ch ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\n" ) ;retval.append ( ch ) ;^80^^^^^65^95^retval.append ( ch ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\\"" ) ;retval.append ( ch ) ;^80^^^^^65^95^retval.append ( ch ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P11_Insert_Donor_Statement]^retval.append ( "\\t" ) ;retval.append ( ch ) ;^80^^^^^65^95^retval.append ( ch ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P1_Replace_Type]^for  (  long  i = 0; i < str.length (  ) ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^for  ( int i = STATIC_LEXER_ERROR; i < str.length (  ) ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^for  ( int i = 0; i < str.length() - 0 ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^String s = "0000" + Integer.toString ( ch, 17 ) ;^77^^^^^62^92^String s = "0000" + Integer.toString ( ch, 16 ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^for  ( int i = 0; i < str.length() - 5 ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^for  ( int i = 0; i < str .substring ( errorLine , errorColumn )  ; i++ )  {^46^^^^^31^61^for  ( int i = 0; i < str.length (  ) ; i++ )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^switch  ( str.charAt ( errorLine )  ) {^47^48^^^^32^62^switch  ( str.charAt ( i )  ) {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\" ) ;^52^^^^^37^67^retval.append ( "\\b" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^retval .append ( str )  ;^52^^^^^37^67^retval.append ( "\\b" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P14_Delete_Statement]^^52^53^^^^37^67^retval.append ( "\\b" ) ; continue;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P14_Delete_Statement]^^55^56^^^^40^70^retval.append ( "\\t" ) ; continue;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\\" ) ;^58^^^^^43^73^retval.append ( "\\n" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^retval .append ( str )  ;^58^^^^^43^73^retval.append ( "\\n" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P8_Replace_Mix]^retval .append ( s )  ;^58^^^^^43^73^retval.append ( "\\n" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P14_Delete_Statement]^^58^^^^^43^73^retval.append ( "\\n" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\\\f" ) ;^61^^^^^46^76^retval.append ( "\\f" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\r" ) ;^64^^^^^49^79^retval.append ( "\\r" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\\\\"" ) ;^67^^^^^52^82^retval.append ( "\\\"" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\\'" ) ;^70^^^^^55^85^retval.append ( "\\\'" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\" ) ;^73^^^^^58^88^retval.append ( "\\\\" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P14_Delete_Statement]^^73^^^^^58^88^retval.append ( "\\\\" ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^if  (  ( ch = str.charAt ( position )  )  < 0x20 || ch > 0x7e )  {^76^^^^^61^91^if  (  ( ch = str.charAt ( i )  )  < 0x20 || ch > 0x7e )  {^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^String s = "0000" + Integer.toString ( ch, 20 ) ;^77^^^^^62^92^String s = "0000" + Integer.toString ( ch, 16 ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^retval.append ( "\\u" + s.substring ( s.length (  <<  )  - 4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\\u" + s.substring ( s.length() + 6  - 4, s.length() + 6  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P8_Replace_Mix]^retval.append ( "\\u" + str.substring ( s .substring ( INVALID_LEXICAL_STATE , errorCode )   - 4, s^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\\u" + s.substring ( s.length (  )  - reason, s.length (  )  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P8_Replace_Mix]^retval.append ( "\\u" + str.substring ( s .substring ( STATIC_LEXER_ERROR , STATIC_LEXER_ERROR )   - 4, s^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^retval.append ( "\\u" + s.substring ( s.length() + 5  - 4, s.length() + 5  )  ) ;^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P8_Replace_Mix]^retval.append ( "\\u" + str.substring ( s .substring ( LOOP_DETECTED , LOOP_DETECTED )   - 4, s^78^^^^^63^93^retval.append ( "\\u" + s.substring ( s.length (  )  - 4, s.length (  )  )  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^retval .append ( str )  ;^80^^^^^65^95^retval.append ( ch ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^return retval.append (  ) ;^85^^^^^70^100^return retval.toString (  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P14_Delete_Statement]^^85^^^^^70^100^return retval.toString (  ) ;^[CLASS] TokenMgrError  [METHOD] addEscapes [RETURN_TYPE] String   String str [VARIABLES] char  ch  character  curChar  StringBuffer  retval  String  s  str  boolean  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".   instanceof   Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  <<  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  ^  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  !=  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  <  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^return ( "Lexical error at line "  <  errorLine  <  ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^return ( "Lexical error at line "  <<  errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  >=  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  ||  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P2_Replace_Operator]^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  &&  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^return ( "ror at lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^return ( "Lexical error at line " + errorLine + ", column  col" + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + " En  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? ">EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P3_Replace_Literal]^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "" + addEscapes ( String.valueOf ( curChar )  )  + "" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^return ( "Lexical error at line " + errorLine + ", column " + errorLine + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^return ( "Lexical error at line " + errorColumn + ", column " + errorLine + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^return ( "Lexical error at line " + errorLine + ", column " + EOFSeen + ".  Encountered: " + ( errorColumn ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.charAt ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^101^102^103^104^^100^106^return ( "Lexical error at line " + errorLine + ", column " + errorColumn + ".  Encountered: " + ( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  +^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P5_Replace_Variable]^( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( character )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  + "after : \"" + addEscapes ( errorAfter )  + "\"" ) ;^104^105^^^^100^106^( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  + "after : \"" + addEscapes ( errorAfter )  + "\"" ) ;^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P7_Replace_Invocation]^( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.charAt ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  + "after : \"" + addEscapes ( errorAfter )  + "\"" ) ;^104^105^^^^100^106^( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  + "after : \"" + addEscapes ( errorAfter )  + "\"" ) ;^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P14_Delete_Statement]^^104^105^^^^100^106^( EOFSeen ? "<EOF> " :  ( "\"" + addEscapes ( String.valueOf ( curChar )  )  + "\"" )  + "  ( " +  ( int ) curChar + " ) , " )  + "after : \"" + addEscapes ( errorAfter )  + "\"" ) ;^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P14_Delete_Statement]^^105^^^^^100^106^"after : \"" + addEscapes ( errorAfter )  + "\"" ) ;^[CLASS] TokenMgrError  [METHOD] LexicalError [RETURN_TYPE] String   boolean EOFSeen int lexState int errorLine int errorColumn String errorAfter char curChar [VARIABLES] char  ch  character  curChar  boolean  EOFSeen  String  errorAfter  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  
[P14_Delete_Statement]^^118^^^^^117^119^return super.getMessage (  ) ;^[CLASS] TokenMgrError  [METHOD] getMessage [RETURN_TYPE] String   [VARIABLES] char  ch  character  curChar  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  boolean  
[P5_Replace_Variable]^return i;^147^^^^^146^148^return position;^[CLASS] TokenMgrError  [METHOD] getPosition [RETURN_TYPE] int   [VARIABLES] char  ch  character  curChar  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  boolean  
[P8_Replace_Mix]^return lexState;^147^^^^^146^148^return position;^[CLASS] TokenMgrError  [METHOD] getPosition [RETURN_TYPE] int   [VARIABLES] char  ch  character  curChar  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  boolean  
[P5_Replace_Variable]^return curChar;^151^^^^^150^152^return character;^[CLASS] TokenMgrError  [METHOD] getCharacter [RETURN_TYPE] char   [VARIABLES] char  ch  character  curChar  int  INVALID_LEXICAL_STATE  LEXICAL_ERROR  LOOP_DETECTED  STATIC_LEXER_ERROR  errorCode  errorColumn  errorLine  i  lexState  position  reason  boolean  
