[P3_Replace_Literal]^private boolean startedSet = true;^33^^^^^28^38^private boolean startedSet = false;^[CLASS] SelfContext   [VARIABLES] 
[P14_Delete_Statement]^^37^38^^^^36^39^super ( parentContext ) ; this.nodeTest = nodeTest;^[CLASS] SelfContext  [METHOD] <init> [RETURN_TYPE] NodeTest)   EvalContext parentContext NodeTest nodeTest [VARIABLES] EvalContext  parentContext  boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P8_Replace_Mix]^this.nodeTest =  null;^38^^^^^36^39^this.nodeTest = nodeTest;^[CLASS] SelfContext  [METHOD] <init> [RETURN_TYPE] NodeTest)   EvalContext parentContext NodeTest nodeTest [VARIABLES] EvalContext  parentContext  boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P7_Replace_Invocation]^return parentContext.getCurrentNodePointer (  ) ;^42^^^^^41^43^return parentContext.getSingleNodePointer (  ) ;^[CLASS] SelfContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P14_Delete_Statement]^^42^^^^^41^43^return parentContext.getSingleNodePointer (  ) ;^[CLASS] SelfContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P2_Replace_Operator]^if  ( position > 0 )  {^46^^^^^45^52^if  ( position == 0 )  {^[CLASS] SelfContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P3_Replace_Literal]^if  ( position == 3 )  {^46^^^^^45^52^if  ( position == 0 )  {^[CLASS] SelfContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P8_Replace_Mix]^if  ( position == 4 )  {^46^^^^^45^52^if  ( position == 0 )  {^[CLASS] SelfContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( !setPosition ( 1 )  )  {^46^^^^^45^52^if  ( position == 0 )  {^[CLASS] SelfContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( position != 1 )  {^46^^^^^45^52^if  ( position == 0 )  {^[CLASS] SelfContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P15_Unwrap_Block]^if (!(setPosition(1))) {    return null;};^46^47^48^49^^45^52^if  ( position == 0 )  { if  ( !setPosition ( 1 )  )  { return null; }^[CLASS] SelfContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P16_Remove_Block]^^46^47^48^49^^45^52^if  ( position == 0 )  { if  ( !setPosition ( 1 )  )  { return null; }^[CLASS] SelfContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( ! ( setPosition ( 1 )  )  )  {     return null; }^46^^^^^45^52^[Delete]^[CLASS] SelfContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P8_Replace_Mix]^if  ( !setPosition ( 1 / 3 )  )  {^47^^^^^45^52^if  ( !setPosition ( 1 )  )  {^[CLASS] SelfContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( position == 0 )  {^47^^^^^45^52^if  ( !setPosition ( 1 )  )  {^[CLASS] SelfContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( position != 1 )  {^47^^^^^45^52^if  ( !setPosition ( 1 )  )  {^[CLASS] SelfContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P15_Unwrap_Block]^return null;^47^48^49^^^45^52^if  ( !setPosition ( 1 )  )  { return null; }^[CLASS] SelfContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P16_Remove_Block]^^47^48^49^^^45^52^if  ( !setPosition ( 1 )  )  { return null; }^[CLASS] SelfContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( position != 1 )  {     return false; }^47^^^^^45^52^[Delete]^[CLASS] SelfContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P13_Insert_Block]^if  (  ( position )  == 0 )  {     if  ( ! ( setPosition ( 1 )  )  )  {         return null;     } }^47^^^^^45^52^[Delete]^[CLASS] SelfContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P13_Insert_Block]^if  (  ( nodePointer )  == null )  {     return false; }^47^^^^^45^52^[Delete]^[CLASS] SelfContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P8_Replace_Mix]^return false;^48^^^^^45^52^return null;^[CLASS] SelfContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P3_Replace_Literal]^if  ( !setPosition ( 0 )  )  {^47^^^^^45^52^if  ( !setPosition ( 1 )  )  {^[CLASS] SelfContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P3_Replace_Literal]^if  ( !setPosition ( -6 )  )  {^47^^^^^45^52^if  ( !setPosition ( 1 )  )  {^[CLASS] SelfContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P8_Replace_Mix]^if  ( !setPosition ( 1 / 4 )  )  {^47^^^^^45^52^if  ( !setPosition ( 1 )  )  {^[CLASS] SelfContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P8_Replace_Mix]^return true;^48^^^^^45^52^return null;^[CLASS] SelfContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P3_Replace_Literal]^if  ( !setPosition ( -8 )  )  {^47^^^^^45^52^if  ( !setPosition ( 1 )  )  {^[CLASS] SelfContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P2_Replace_Operator]^return setPosition ( getCurrentPosition (  )   &&  1 ) ;^55^^^^^54^56^return setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] SelfContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P3_Replace_Literal]^return setPosition ( getCurrentPosition (  )   ) ;^55^^^^^54^56^return setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] SelfContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P7_Replace_Invocation]^return setPosition ( reset (  )  + 1 ) ;^55^^^^^54^56^return setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] SelfContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P8_Replace_Mix]^return setPosition ( reset (  )   ||  1L ) ;^55^^^^^54^56^return setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] SelfContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P2_Replace_Operator]^return setPosition ( getCurrentPosition (  )   >>  1 ) ;^55^^^^^54^56^return setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] SelfContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P14_Delete_Statement]^^55^^^^^54^56^return setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] SelfContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P7_Replace_Invocation]^super.setPosition (  ) ;^59^^^^^58^61^super.reset (  ) ;^[CLASS] SelfContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P14_Delete_Statement]^^59^^^^^58^61^super.reset (  ) ;^[CLASS] SelfContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P3_Replace_Literal]^startedSet = true;^60^^^^^58^61^startedSet = false;^[CLASS] SelfContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^startedSet = true;startedSet = false;^60^^^^^58^61^startedSet = false;^[CLASS] SelfContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  
[P2_Replace_Operator]^if  ( position == 1 )  {^64^^^^^63^78^if  ( position != 1 )  {^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P3_Replace_Literal]^if  ( position != 4 )  {^64^^^^^63^78^if  ( position != 1 )  {^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P8_Replace_Mix]^if  ( position != 3 )  {^64^^^^^63^78^if  ( position != 1 )  {^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P9_Replace_Statement]^if  ( position == 0 )  {^64^^^^^63^78^if  ( position != 1 )  {^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P9_Replace_Statement]^if  ( !setPosition ( 1 )  )  {^64^^^^^63^78^if  ( position != 1 )  {^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P15_Unwrap_Block]^return false;^64^65^66^^^63^78^if  ( position != 1 )  { return false; }^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P16_Remove_Block]^^64^65^66^^^63^78^if  ( position != 1 )  { return false; }^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P13_Insert_Block]^if  (  ( nodePointer )  == null )  {     return false; }^64^^^^^63^78^[Delete]^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P13_Insert_Block]^if  ( ! ( setPosition ( 1 )  )  )  {     return null; }^64^^^^^63^78^[Delete]^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P3_Replace_Literal]^return true;^65^^^^^63^78^return false;^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P14_Delete_Statement]^^67^^^^^63^78^super.setPosition ( position ) ;^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P11_Insert_Donor_Statement]^return setPosition ( getCurrentPosition (  )  + 1 ) ;super.setPosition ( position ) ;^67^^^^^63^78^super.setPosition ( position ) ;^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P15_Unwrap_Block]^startedSet = true; nodePointer = ((org.apache.commons.jxpath.ri.model.NodePointer) (parentContext.getCurrentNodePointer()));^68^69^70^71^^63^78^if  ( !startedSet )  { startedSet = true; nodePointer =  ( NodePointer )  parentContext.getCurrentNodePointer (  ) ; }^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P16_Remove_Block]^^68^69^70^71^^63^78^if  ( !startedSet )  { startedSet = true; nodePointer =  ( NodePointer )  parentContext.getCurrentNodePointer (  ) ; }^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P3_Replace_Literal]^startedSet = false;^69^^^^^63^78^startedSet = true;^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P11_Insert_Donor_Statement]^startedSet = false;startedSet = true;^69^^^^^63^78^startedSet = true;^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P7_Replace_Invocation]^nodePointer =  ( NodePointer )  parentContext.getSingleNodePointer (  ) ;^70^^^^^63^78^nodePointer =  ( NodePointer )  parentContext.getCurrentNodePointer (  ) ;^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P8_Replace_Mix]^nodePointer  =  nodePointer ;^70^^^^^63^78^nodePointer =  ( NodePointer )  parentContext.getCurrentNodePointer (  ) ;^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P14_Delete_Statement]^^70^^^^^63^78^nodePointer =  ( NodePointer )  parentContext.getCurrentNodePointer (  ) ;^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P11_Insert_Donor_Statement]^return parentContext.getSingleNodePointer (  ) ;nodePointer =  ( NodePointer )  parentContext.getCurrentNodePointer (  ) ;^70^^^^^63^78^nodePointer =  ( NodePointer )  parentContext.getCurrentNodePointer (  ) ;^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P8_Replace_Mix]^nodePointer ;^70^^^^^63^78^nodePointer =  ( NodePointer )  parentContext.getCurrentNodePointer (  ) ;^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P2_Replace_Operator]^if  ( nodePointer != null )  {^73^^^^^63^78^if  ( nodePointer == null )  {^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P8_Replace_Mix]^if  ( nodePointer == false )  {^73^^^^^63^78^if  ( nodePointer == null )  {^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P15_Unwrap_Block]^return false;^73^74^75^^^63^78^if  ( nodePointer == null )  { return false; }^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P16_Remove_Block]^^73^74^75^^^63^78^if  ( nodePointer == null )  { return false; }^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P13_Insert_Block]^if  ( position != 1 )  {     return false; }^73^^^^^63^78^[Delete]^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P13_Insert_Block]^if  ( ! ( setPosition ( 1 )  )  )  {     return null; }^73^^^^^63^78^[Delete]^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P3_Replace_Literal]^return true;^74^^^^^63^78^return false;^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P2_Replace_Operator]^return nodeTest == null && nodePointer.testNode ( nodeTest ) ;^77^^^^^63^78^return nodeTest == null || nodePointer.testNode ( nodeTest ) ;^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P2_Replace_Operator]^return nodeTest != null || nodePointer.testNode ( nodeTest ) ;^77^^^^^63^78^return nodeTest == null || nodePointer.testNode ( nodeTest ) ;^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P5_Replace_Variable]^return nodePointer == null || nodeTest.testNode ( nodeTest ) ;^77^^^^^63^78^return nodeTest == null || nodePointer.testNode ( nodeTest ) ;^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P8_Replace_Mix]^return false ;^77^^^^^63^78^return nodeTest == null || nodePointer.testNode ( nodeTest ) ;^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
[P14_Delete_Statement]^^77^^^^^63^78^return nodeTest == null || nodePointer.testNode ( nodeTest ) ;^[CLASS] SelfContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  startedSet  NodePointer  nodePointer  NodeTest  nodeTest  int  position  
