[P3_Replace_Literal]^private boolean empty = true;^31^^^^^26^36^private boolean empty = false;^[CLASS] PropertyIterator   [VARIABLES] 
[P1_Replace_Type]^private char name;^33^^^^^28^38^private String name;^[CLASS] PropertyIterator   [VARIABLES] 
[P1_Replace_Type]^private  short  startIndex = 0;^34^^^^^29^39^private int startIndex = 0;^[CLASS] PropertyIterator   [VARIABLES] 
[P3_Replace_Literal]^private int startIndex = -1;^34^^^^^29^39^private int startIndex = 0;^[CLASS] PropertyIterator   [VARIABLES] 
[P8_Replace_Mix]^private int startIndex = 2;^34^^^^^29^39^private int startIndex = 0;^[CLASS] PropertyIterator   [VARIABLES] 
[P3_Replace_Literal]^private boolean targetReady = true;^35^^^^^30^40^private boolean targetReady = false;^[CLASS] PropertyIterator   [VARIABLES] 
[P8_Replace_Mix]^private boolean targetReady ;^35^^^^^30^40^private boolean targetReady = false;^[CLASS] PropertyIterator   [VARIABLES] 
[P1_Replace_Type]^private  short  position = 0;^36^^^^^31^41^private int position = 0;^[CLASS] PropertyIterator   [VARIABLES] 
[P3_Replace_Literal]^private int position = ;^36^^^^^31^41^private int position = 0;^[CLASS] PropertyIterator   [VARIABLES] 
[P8_Replace_Mix]^private  short  position = 1;^36^^^^^31^41^private int position = 0;^[CLASS] PropertyIterator   [VARIABLES] 
[P1_Replace_Type]^private  short  startPropertyIndex;^38^^^^^33^43^private int startPropertyIndex;^[CLASS] PropertyIterator   [VARIABLES] 
[P12_Insert_Condition]^if  ( i != startPropertyIndex )  { private int startPropertyIndex; }^38^^^^^33^43^private int startPropertyIndex;^[CLASS] PropertyIterator   [VARIABLES] 
[P12_Insert_Condition]^if  ( i == startPropertyIndex )  { private int startPropertyIndex; }^38^^^^^33^43^private int startPropertyIndex;^[CLASS] PropertyIterator   [VARIABLES] 
[P3_Replace_Literal]^private boolean ready = true;^40^^^^^35^45^private boolean ready = false;^[CLASS] PropertyIterator   [VARIABLES] 
[P8_Replace_Mix]^private boolean ready ;^40^^^^^35^45^private boolean ready = false;^[CLASS] PropertyIterator   [VARIABLES] 
[P3_Replace_Literal]^private boolean includeStart = true;^41^^^^^36^46^private boolean includeStart = false;^[CLASS] PropertyIterator   [VARIABLES] 
[P8_Replace_Mix]^private boolean includeStart  = null ;^41^^^^^36^46^private boolean includeStart = false;^[CLASS] PropertyIterator   [VARIABLES] 
[P7_Replace_Invocation]^propertyNodePointer = ( PropertyPointer )  pointer.getPropertyPointer (  )  .getPropertyIndex (  )  ;^49^50^^^^34^64^propertyNodePointer = ( PropertyPointer )  pointer.getPropertyPointer (  ) .clone (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P7_Replace_Invocation]^propertyNodePointer = ( PropertyPointer )  pointer .getPropertyPointer (  )  .clone (  ) ;^49^50^^^^34^64^propertyNodePointer = ( PropertyPointer )  pointer.getPropertyPointer (  ) .clone (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P8_Replace_Mix]^propertyNodePointer =  ( PropertyPointer )  null.getPropertyPointer (  ) .clone (  ) ;^49^50^^^^34^64^propertyNodePointer = ( PropertyPointer )  pointer.getPropertyPointer (  ) .clone (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P14_Delete_Statement]^^50^51^^^^35^65^( PropertyPointer )  pointer.getPropertyPointer (  ) .clone (  ) ; this.name = name;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P11_Insert_Donor_Statement]^propertyNodePointer.setPropertyIndex ( i ) ;( PropertyPointer )  pointer.getPropertyPointer (  ) .clone (  ) ;^50^^^^^35^65^( PropertyPointer )  pointer.getPropertyPointer (  ) .clone (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P11_Insert_Donor_Statement]^(  ( PropertyPointer )  startWith ) .getPropertyIndex (  ) ;( PropertyPointer )  pointer.getPropertyPointer (  ) .clone (  ) ;^50^^^^^35^65^( PropertyPointer )  pointer.getPropertyPointer (  ) .clone (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P7_Replace_Invocation]^( PropertyPointer )  pointer .getPropertyPointer (  )  .clone (  ) ;^50^^^^^35^65^( PropertyPointer )  pointer.getPropertyPointer (  ) .clone (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P14_Delete_Statement]^^50^^^^^35^65^( PropertyPointer )  pointer.getPropertyPointer (  ) .clone (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P8_Replace_Mix]^this.name =  null;^51^^^^^36^66^this.name = name;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P5_Replace_Variable]^this.reverse = targetReady;^52^^^^^37^67^this.reverse = reverse;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^this.includeStart = false;^53^^^^^38^68^this.includeStart = true;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P11_Insert_Donor_Statement]^this.includeStart = false;this.includeStart = true;^53^^^^^38^68^this.includeStart = true;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P11_Insert_Donor_Statement]^includeStart = true;this.includeStart = true;^53^^^^^38^68^this.includeStart = true;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P5_Replace_Variable]^if  ( targetReady )  {^54^^^^^39^69^if  ( reverse )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P9_Replace_Statement]^if  ( empty )  {^54^^^^^39^69^if  ( reverse )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P9_Replace_Statement]^if  ( !reverse )  {^54^^^^^39^69^if  ( reverse )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P15_Unwrap_Block]^this.startPropertyIndex = PropertyPointer.UNSPECIFIED_PROPERTY; this.startIndex = -1;^54^55^56^57^^39^69^if  ( reverse )  { this.startPropertyIndex = PropertyPointer.UNSPECIFIED_PROPERTY; this.startIndex = -1; }^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P16_Remove_Block]^^54^55^56^57^^39^69^if  ( reverse )  { this.startPropertyIndex = PropertyPointer.UNSPECIFIED_PROPERTY; this.startIndex = -1; }^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P13_Insert_Block]^if  (  ( startPropertyIndex )  ==  ( PropertyPointer.UNSPECIFIED_PROPERTY )  )  {     startPropertyIndex =  ( names.length )  - 1; }^54^^^^^39^69^[Delete]^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P13_Insert_Block]^if  (  ( startPropertyIndex )  ==  ( PropertyPointer.UNSPECIFIED_PROPERTY )  )  {     startPropertyIndex = 0; }^54^^^^^39^69^[Delete]^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P13_Insert_Block]^if  ( start ==  ( PropertyPointer.UNSPECIFIED_PROPERTY )  )  {     start = count - 1; }^54^^^^^39^69^[Delete]^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P11_Insert_Donor_Statement]^this.startPropertyIndex = (  ( PropertyPointer )  startWith ) .getPropertyIndex (  ) ;this.startPropertyIndex = PropertyPointer.UNSPECIFIED_PROPERTY;^55^^^^^40^70^this.startPropertyIndex = PropertyPointer.UNSPECIFIED_PROPERTY;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P12_Insert_Condition]^if  ( start == PropertyPointer.UNSPECIFIED_PROPERTY )  { this.startPropertyIndex = PropertyPointer.UNSPECIFIED_PROPERTY; }^55^^^^^40^70^this.startPropertyIndex = PropertyPointer.UNSPECIFIED_PROPERTY;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P12_Insert_Condition]^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  { this.startPropertyIndex = PropertyPointer.UNSPECIFIED_PROPERTY; }^55^^^^^40^70^this.startPropertyIndex = PropertyPointer.UNSPECIFIED_PROPERTY;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P13_Insert_Block]^if  (  ( startPropertyIndex )  ==  ( PropertyPointer.UNSPECIFIED_PROPERTY )  )  {     startPropertyIndex = 0; }^55^^^^^40^70^[Delete]^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P13_Insert_Block]^if  ( reverse )  {     this.startPropertyIndex = PropertyPointer.UNSPECIFIED_PROPERTY;     this.startIndex = -1; }^55^^^^^40^70^[Delete]^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^this.startIndex = -startPropertyIndex;^56^^^^^41^71^this.startIndex = -1;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P8_Replace_Mix]^this.startIndex = -4;^56^^^^^41^71^this.startIndex = -1;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P11_Insert_Donor_Statement]^startIndex = 0;this.startIndex = -1;^56^^^^^41^71^this.startIndex = -1;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P11_Insert_Donor_Statement]^startIndex = -1;this.startIndex = -1;^56^^^^^41^71^this.startIndex = -1;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P11_Insert_Donor_Statement]^this.startIndex = 0;this.startIndex = -1;^56^^^^^41^71^this.startIndex = -1;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P12_Insert_Condition]^if  ( start == PropertyPointer.UNSPECIFIED_PROPERTY )  { this.startPropertyIndex = PropertyPointer.UNSPECIFIED_PROPERTY; this.startIndex = -1; }^55^56^^^^40^70^this.startPropertyIndex = PropertyPointer.UNSPECIFIED_PROPERTY; this.startIndex = -1;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P12_Insert_Condition]^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  { this.startPropertyIndex = PropertyPointer.UNSPECIFIED_PROPERTY; this.startIndex = -1; }^55^56^^^^40^70^this.startPropertyIndex = PropertyPointer.UNSPECIFIED_PROPERTY; this.startIndex = -1;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P8_Replace_Mix]^this.startIndex = -0;^56^^^^^41^71^this.startIndex = -1;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P2_Replace_Operator]^while  ( startWith != null || startWith.getImmediateParentPointer (  )  != pointer )  {^59^60^^^^44^74^while  ( startWith != null && startWith.getImmediateParentPointer (  )  != pointer )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P2_Replace_Operator]^while  ( startWith == null && startWith.getImmediateParentPointer (  )  != pointer )  {^59^60^^^^44^74^while  ( startWith != null && startWith.getImmediateParentPointer (  )  != pointer )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P2_Replace_Operator]^while  ( startWith != null && startWith.getImmediateParentPointer (  )  == pointer )  {^59^60^^^^44^74^while  ( startWith != null && startWith.getImmediateParentPointer (  )  != pointer )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P5_Replace_Variable]^while  ( pointer != null && startWith.getImmediateParentPointer (  )  != startWith )  {^59^60^^^^44^74^while  ( startWith != null && startWith.getImmediateParentPointer (  )  != pointer )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P7_Replace_Invocation]^while  ( startWith != null && startWith .getIndex (  )   != pointer )  {^59^60^^^^44^74^while  ( startWith != null && startWith.getImmediateParentPointer (  )  != pointer )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P8_Replace_Mix]^startWith =  null.getImmediateParentPointer (  ) ;^61^^^^^59^62^startWith = startWith.getImmediateParentPointer (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P7_Replace_Invocation]^startWith = startWith .getIndex (  )  ;^61^^^^^59^62^startWith = startWith.getImmediateParentPointer (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P14_Delete_Statement]^^61^^^^^59^62^startWith = startWith.getImmediateParentPointer (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P11_Insert_Donor_Statement]^propertyNodePointer.getImmediateParentPointer (  )  ) ;startWith = startWith.getImmediateParentPointer (  ) ;^61^^^^^59^62^startWith = startWith.getImmediateParentPointer (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P2_Replace_Operator]^if  ( startWith == null )  {^58^^^^^43^73^if  ( startWith != null )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P6_Replace_Expression]^if  ( startWith != null && startWith.getImmediateParentPointer() != pointer )  {^58^^^^^43^73^if  ( startWith != null )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P6_Replace_Expression]^if  ( startWith.getImmediateParentPointer (  )  != pointer )  {^58^^^^^43^73^if  ( startWith != null )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P6_Replace_Expression]^if  ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" )  {^58^^^^^43^73^if  ( startWith != null )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P6_Replace_Expression]^if  ( this.startIndex == WHOLE_COLLECTION )  {^58^^^^^43^73^if  ( startWith != null )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P6_Replace_Expression]^if  ( reverse && startIndex == -1 )  {^58^^^^^43^73^if  ( startWith != null )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P6_Replace_Expression]^if  ( startIndex == -1 )  {^58^^^^^43^73^if  ( startWith != null )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P8_Replace_Mix]^if  ( startWith != true )  {^58^^^^^43^73^if  ( startWith != null )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P9_Replace_Statement]^if  ( name != null )  {^58^^^^^43^73^if  ( startWith != null )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P15_Unwrap_Block]^while ((startWith != null) && ((startWith.getImmediateParentPointer()) != pointer)) {    startWith = startWith.getImmediateParentPointer();} ; if (startWith == null) {    throw new org.apache.commons.jxpath.JXPathException(("PropertyIerator startWith parameter is " + "not a child of the supplied parent"));}; this.startPropertyIndex = ((org.apache.commons.jxpath.ri.model.beans.PropertyPointer) (startWith)).getPropertyIndex(); this.startIndex = startWith.getIndex(); if ((this.startIndex) == (org.apache.commons.jxpath.ri.model.NodePointer.WHOLE_COLLECTION)) {    this.startIndex = 0;}; this.includeStart = false; if (reverse && ((startIndex) == (-1))) {    this.includeStart = true;};^58^59^60^61^62^43^73^if  ( startWith != null )  { while  ( startWith != null && startWith.getImmediateParentPointer (  )  != pointer )  { startWith = startWith.getImmediateParentPointer (  ) ; }^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P16_Remove_Block]^^58^59^60^61^62^43^73^if  ( startWith != null )  { while  ( startWith != null && startWith.getImmediateParentPointer (  )  != pointer )  { startWith = startWith.getImmediateParentPointer (  ) ; }^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P2_Replace_Operator]^if  ( startWith != null )  {^63^^^^^48^78^if  ( startWith == null )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P6_Replace_Expression]^if  ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" )  {^63^^^^^48^78^if  ( startWith == null )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P8_Replace_Mix]^if  ( startWith == false )  {^63^^^^^48^78^if  ( startWith == null )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P9_Replace_Statement]^if  ( name != null )  {^63^^^^^48^78^if  ( startWith == null )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P15_Unwrap_Block]^throw new org.apache.commons.jxpath.JXPathException(("PropertyIerator startWith parameter is " + "not a child of the supplied parent"));^63^64^65^66^67^48^78^if  ( startWith == null )  { throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ; }^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P16_Remove_Block]^^63^64^65^66^67^48^78^if  ( startWith == null )  { throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ; }^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P2_Replace_Operator]^throw new JXPathException ( "PropertyIerator startWith parameter is "  &  "not a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^throw new JXPathException ( "PropertyIerator startWith parameter is erator sta" + "not a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not ot a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P13_Insert_Block]^if  ( startWith == null )  {     throw new JXPathException (  ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" )  ) ; }^64^^^^^49^79^[Delete]^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P2_Replace_Operator]^throw new JXPathException ( "PropertyIerator startWith parameter is "  &&  "not a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^throw new JXPathException ( "PropertyIeraropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parentn" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P2_Replace_Operator]^if  ( this.startIndex != NodePointer.WHOLE_COLLECTION )  {^71^^^^^56^86^if  ( this.startIndex == NodePointer.WHOLE_COLLECTION )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P5_Replace_Variable]^if  ( startPropertyIndex == NodePointer.WHOLE_COLLECTION )  {^71^^^^^56^86^if  ( this.startIndex == NodePointer.WHOLE_COLLECTION )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P9_Replace_Statement]^if  ( startIndex == NodePointer.WHOLE_COLLECTION )  {^71^^^^^56^86^if  ( this.startIndex == NodePointer.WHOLE_COLLECTION )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P15_Unwrap_Block]^this.startIndex = 0;^71^72^73^^^56^86^if  ( this.startIndex == NodePointer.WHOLE_COLLECTION )  { this.startIndex = 0; }^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P16_Remove_Block]^^71^72^73^^^56^86^if  ( this.startIndex == NodePointer.WHOLE_COLLECTION )  { this.startIndex = 0; }^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P13_Insert_Block]^if  (  ( startIndex )  ==  ( WHOLE_COLLECTION )  )  {     startIndex = 0; }^71^^^^^56^86^[Delete]^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P13_Insert_Block]^if  (  ( startIndex )  ==  ( WHOLE_COLLECTION )  )  {     startIndex = -1; }^71^^^^^56^86^[Delete]^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^this.startIndex = 4;^72^^^^^57^87^this.startIndex = 0;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P8_Replace_Mix]^this.startIndex = 0 - 1;^72^^^^^57^87^this.startIndex = 0;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P11_Insert_Donor_Statement]^startIndex = 0;this.startIndex = 0;^72^^^^^57^87^this.startIndex = 0;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P11_Insert_Donor_Statement]^this.startIndex = -1;this.startIndex = 0;^72^^^^^57^87^this.startIndex = 0;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P11_Insert_Donor_Statement]^startIndex = -1;this.startIndex = 0;^72^^^^^57^87^this.startIndex = 0;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P11_Insert_Donor_Statement]^startPropertyIndex = 0;this.startIndex = 0;^72^^^^^57^87^this.startIndex = 0;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P2_Replace_Operator]^if  ( reverse || startIndex == -1 )  {^75^^^^^60^90^if  ( reverse && startIndex == -1 )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P2_Replace_Operator]^if  ( reverse && startIndex != -1 )  {^75^^^^^60^90^if  ( reverse && startIndex == -1 )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^if  ( reverse && startIndex == -9 )  {^75^^^^^60^90^if  ( reverse && startIndex == -1 )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P5_Replace_Variable]^if  ( targetReady && startIndex == -1 )  {^75^^^^^60^90^if  ( reverse && startIndex == -1 )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P5_Replace_Variable]^if  ( reverse && startPropertyIndex == -1 )  {^75^^^^^60^90^if  ( reverse && startIndex == -1 )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P5_Replace_Variable]^if  ( startIndex && reverse == -1 )  {^75^^^^^60^90^if  ( reverse && startIndex == -1 )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P6_Replace_Expression]^if  ( reverse ) {^75^^^^^60^90^if  ( reverse && startIndex == -1 )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P6_Replace_Expression]^if  (  startIndex == -1 )  {^75^^^^^60^90^if  ( reverse && startIndex == -1 )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P15_Unwrap_Block]^this.includeStart = true;^75^76^77^^^60^90^if  ( reverse && startIndex == -1 )  { this.includeStart = true; }^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P16_Remove_Block]^^75^76^77^^^60^90^if  ( reverse && startIndex == -1 )  { this.includeStart = true; }^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^this.includeStart = false;^76^^^^^61^91^this.includeStart = true;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P11_Insert_Donor_Statement]^this.includeStart = false;this.includeStart = true;^76^^^^^61^91^this.includeStart = true;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P11_Insert_Donor_Statement]^includeStart = true;this.includeStart = true;^76^^^^^61^91^this.includeStart = true;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P7_Replace_Invocation]^startWith = startWith .getIndex (  )  ;^61^^^^^46^76^startWith = startWith.getImmediateParentPointer (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P8_Replace_Mix]^startWith =  null.getImmediateParentPointer (  ) ;^61^^^^^46^76^startWith = startWith.getImmediateParentPointer (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P7_Replace_Invocation]^this.startPropertyIndex = (  ( PropertyPointer )  startWith )  .clone (  )  ;^68^69^^^^53^83^this.startPropertyIndex = (  ( PropertyPointer )  startWith ) .getPropertyIndex (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P8_Replace_Mix]^this.startPropertyIndex =  (  ( PropertyPointer )  startWith ) .getPropertyIndex (  ) ;^68^69^^^^53^83^this.startPropertyIndex = (  ( PropertyPointer )  startWith ) .getPropertyIndex (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P11_Insert_Donor_Statement]^this.startPropertyIndex = PropertyPointer.UNSPECIFIED_PROPERTY;this.startPropertyIndex = (  ( PropertyPointer )  startWith ) .getPropertyIndex (  ) ;^68^69^^^^53^83^this.startPropertyIndex = (  ( PropertyPointer )  startWith ) .getPropertyIndex (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P7_Replace_Invocation]^this.startIndex = startWith .getImmediateParentPointer (  )  ;^70^^^^^55^85^this.startIndex = startWith.getIndex (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P8_Replace_Mix]^this.startIndex =  null.getIndex (  ) ;^70^^^^^55^85^this.startIndex = startWith.getIndex (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^this.startIndex = startIndex;^72^^^^^57^87^this.startIndex = 0;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P8_Replace_Mix]^this.startIndex = 0 + 1;^72^^^^^57^87^this.startIndex = 0;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^this.includeStart = true;^74^^^^^59^89^this.includeStart = false;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P11_Insert_Donor_Statement]^this.includeStart = true;this.includeStart = false;^74^^^^^59^89^this.includeStart = false;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P11_Insert_Donor_Statement]^includeStart = true;this.includeStart = false;^74^^^^^59^89^this.includeStart = false;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P2_Replace_Operator]^throw new JXPathException ( "PropertyIerator startWith parameter is "  ^  "not a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^throw new JXPathException ( "operropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parentt a child of the" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P2_Replace_Operator]^throw new JXPathException ( "PropertyIerator startWith parameter is "  |  "not a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^throw new JXPathException ( "rtyIerropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^throw new JXPathException ( "PropertyIerator startWith parameter is " + "ot a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P14_Delete_Statement]^^60^61^^^^45^75^&& startWith.getImmediateParentPointer (  )  != pointer )  { startWith = startWith.getImmediateParentPointer (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P14_Delete_Statement]^^61^^^^^46^76^startWith = startWith.getImmediateParentPointer (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P11_Insert_Donor_Statement]^propertyNodePointer.getImmediateParentPointer (  )  ) ;startWith = startWith.getImmediateParentPointer (  ) ;^61^^^^^46^76^startWith = startWith.getImmediateParentPointer (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P7_Replace_Invocation]^(  ( PropertyPointer )  startWith )  .clone (  )  ;^69^^^^^54^84^(  ( PropertyPointer )  startWith ) .getPropertyIndex (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P14_Delete_Statement]^^69^^^^^54^84^(  ( PropertyPointer )  startWith ) .getPropertyIndex (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P11_Insert_Donor_Statement]^propertyNodePointer.setPropertyIndex ( i ) ;(  ( PropertyPointer )  startWith ) .getPropertyIndex (  ) ;^69^^^^^54^84^(  ( PropertyPointer )  startWith ) .getPropertyIndex (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P11_Insert_Donor_Statement]^( PropertyPointer )  pointer.getPropertyPointer (  ) .clone (  ) ;(  ( PropertyPointer )  startWith ) .getPropertyIndex (  ) ;^69^^^^^54^84^(  ( PropertyPointer )  startWith ) .getPropertyIndex (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P11_Insert_Donor_Statement]^this.startIndex = startWith.getIndex (  ) ;(  ( PropertyPointer )  startWith ) .getPropertyIndex (  ) ;^69^^^^^54^84^(  ( PropertyPointer )  startWith ) .getPropertyIndex (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P14_Delete_Statement]^^70^^^^^55^85^this.startIndex = startWith.getIndex (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P11_Insert_Donor_Statement]^(  ( PropertyPointer )  startWith ) .getPropertyIndex (  ) ;this.startIndex = startWith.getIndex (  ) ;^70^^^^^55^85^this.startIndex = startWith.getIndex (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P11_Insert_Donor_Statement]^npp.setIndex ( propertyNodePointer.getIndex (  )  ) ;this.startIndex = startWith.getIndex (  ) ;^70^^^^^55^85^this.startIndex = startWith.getIndex (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P8_Replace_Mix]^if  ( startWith == this )  {^63^^^^^48^78^if  ( startWith == null )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P2_Replace_Operator]^throw new JXPathException ( "PropertyIerator startWith parameter is "  >  "not a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^throw new JXPathException ( "" + "not a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^throw new JXPathException ( "PropertyIerator startWith parameter is " + "a child of the sot a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P2_Replace_Operator]^throw new JXPathException ( "PropertyIerator startWith parameter is "  <<  "not a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^throw new JXPathException ( "PropertyIerator startWith parameter is ter" + "not a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^throw new JXPathException ( "PropertyIerator startWith parameter is " + "no" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P2_Replace_Operator]^if  ( this.startIndex >= NodePointer.WHOLE_COLLECTION )  {^71^^^^^56^86^if  ( this.startIndex == NodePointer.WHOLE_COLLECTION )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P5_Replace_Variable]^if  ( this.startIndex == NodePointer.0 )  {^71^^^^^56^86^if  ( this.startIndex == NodePointer.WHOLE_COLLECTION )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^this.startIndex = position;^72^^^^^57^87^this.startIndex = 0;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P8_Replace_Mix]^this.startIndex = 1;^72^^^^^57^87^this.startIndex = 0;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P2_Replace_Operator]^if  ( reverse && startIndex >= -1 )  {^75^^^^^60^90^if  ( reverse && startIndex == -1 )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^if  ( reverse && startIndex == -5 )  {^75^^^^^60^90^if  ( reverse && startIndex == -1 )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P8_Replace_Mix]^if  ( reverse && startPropertyIndex == -4 )  {^75^^^^^60^90^if  ( reverse && startIndex == -1 )  {^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P8_Replace_Mix]^this.startIndex = 0L;^72^^^^^57^87^this.startIndex = 0;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P2_Replace_Operator]^throw new JXPathException ( "PropertyIerator startWith parameter is "  ||  "not a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^throw new JXPathException ( "ith propertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^throw new JXPathException ( "PropertyIerator startWith parameter is " + "t a child of tot a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P2_Replace_Operator]^throw new JXPathException ( "PropertyIerator startWith parameter is "  !=  "not a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^throw new JXPathException ( "ratorropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parenta child of the " ) ;^64^65^66^^^49^79^throw new JXPathException ( "PropertyIerator startWith parameter is " + "not a child of the supplied parent" ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P14_Delete_Statement]^^69^70^^^^54^84^(  ( PropertyPointer )  startWith ) .getPropertyIndex (  ) ; this.startIndex = startWith.getIndex (  ) ;^[CLASS] PropertyIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   PropertyOwnerPointer pointer String name boolean reverse NodePointer startWith [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  NodePointer  startWith  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  PropertyOwnerPointer  pointer  
[P3_Replace_Literal]^position = startIndex;^86^^^^^85^88^position = 0;^[CLASS] PropertyIterator  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^position = 0 / 0;^86^^^^^85^88^position = 0;^[CLASS] PropertyIterator  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^targetReady = true;^87^^^^^85^88^targetReady = false;^[CLASS] PropertyIterator  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^empty = false;targetReady = false;^87^^^^^85^88^targetReady = false;^[CLASS] PropertyIterator  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^targetReady = true;targetReady = false;^87^^^^^85^88^targetReady = false;^[CLASS] PropertyIterator  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( position < 0 )  {^91^^^^^90^120^if  ( position == 0 )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( position == 5 )  {^91^^^^^90^120^if  ( position == 0 )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( startPropertyIndex == 0 )  {^91^^^^^90^120^if  ( position == 0 )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( name != null )  {^91^^^^^90^120^if  ( position == 0 )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( position == 1 )  {^91^^^^^90^120^if  ( position == 0 )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( position < 1 )  {^91^^^^^90^120^if  ( position == 0 )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( !setPosition ( 1 )  )  {^91^^^^^90^120^if  ( position == 0 )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^if ((name) != null) {    if (!(targetReady)) {        prepareForIndividualProperty(name);    }    if (empty) {        return null;    }}else {    if (!(setPosition(1))) {        return null;    }    reset();};^91^92^93^94^95^90^120^if  ( position == 0 )  { if  ( name != null )  { if  ( !targetReady )  { prepareForIndividualProperty ( name ) ; }^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P16_Remove_Block]^^91^92^93^94^95^90^120^if  ( position == 0 )  { if  ( name != null )  { if  ( !targetReady )  { prepareForIndividualProperty ( name ) ; }^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  (  ( name )  != null )  {     if  ( ! ( targetReady )  )  {         prepareForIndividualProperty ( name ) ;     }     if  ( empty )  {         return null;     } }else {     if  ( ! ( setPosition ( 1 )  )  )  {         return null;     }     reset (  ) ; }^91^^^^^90^120^[Delete]^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( name == null )  {^92^^^^^90^120^if  ( name != null )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( name != this )  {^92^^^^^90^120^if  ( name != null )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( startWith != null )  {^92^^^^^90^120^if  ( name != null )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( startWith == null )  {^92^^^^^90^120^if  ( name != null )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^if (!(targetReady)) {    prepareForIndividualProperty(name);}; if (empty) {    return null;};^92^93^94^95^^90^120^if  ( name != null )  { if  ( !targetReady )  { prepareForIndividualProperty ( name ) ; }^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P16_Remove_Block]^^92^93^94^95^^90^120^if  ( name != null )  { if  ( !targetReady )  { prepareForIndividualProperty ( name ) ; }^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( !setPosition ( 0 )  )  {^102^^^^^92^106^if  ( !setPosition ( 1 )  )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^if  ( !setPositionAllProperties ( 1 )  )  {^102^^^^^92^106^if  ( !setPosition ( 1 )  )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( !setPosition ( 3 )  )  {^102^^^^^92^106^if  ( !setPosition ( 1 )  )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( position == 0 )  {^102^^^^^92^106^if  ( !setPosition ( 1 )  )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( position < 1 )  {^102^^^^^92^106^if  ( !setPosition ( 1 )  )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^return null;^102^103^104^^^92^106^if  ( !setPosition ( 1 )  )  { return null; }^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P16_Remove_Block]^^102^103^104^^^92^106^if  ( !setPosition ( 1 )  )  { return null; }^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( index > length )  {     return false; }^102^^^^^92^106^[Delete]^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( empty )  {     return null; }^102^^^^^92^106^[Delete]^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( position < 1 )  {     return false; }^102^^^^^92^106^[Delete]^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( empty )  {     return false; }^102^^^^^92^106^[Delete]^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( index < 1 )  {     return false; }^102^^^^^92^106^[Delete]^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^return false;^103^^^^^92^106^return null;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^getLength (  ) ;^105^^^^^92^106^reset (  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^105^^^^^92^106^reset (  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( !reverse )  {^93^^^^^90^120^if  ( !targetReady )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^prepareForIndividualProperty(name);^93^94^95^^^90^120^if  ( !targetReady )  { prepareForIndividualProperty ( name ) ; }^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P16_Remove_Block]^^93^94^95^^^90^120^if  ( !targetReady )  { prepareForIndividualProperty ( name ) ; }^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^getLength ( name ) ;^94^^^^^90^120^prepareForIndividualProperty ( name ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^94^^^^^90^120^prepareForIndividualProperty ( name ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^return setPositionIndividualProperty ( position ) ;prepareForIndividualProperty ( name ) ;^94^^^^^90^120^prepareForIndividualProperty ( name ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( targetReady )  )  {     prepareForIndividualProperty ( name ) ; }^94^^^^^90^120^[Delete]^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( targetReady )  {^97^^^^^90^120^if  ( empty )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( reverse )  {^97^^^^^90^120^if  ( empty )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^return null;^97^98^99^^^90^120^if  ( empty )  { return null; }^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P16_Remove_Block]^^97^98^99^^^90^120^if  ( empty )  { return null; }^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( index > length )  {     return false; }^97^^^^^90^120^[Delete]^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( position < 1 )  {     return false; }^97^^^^^90^120^[Delete]^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( empty )  {     return false; }^97^^^^^90^120^[Delete]^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( setPosition ( 1 )  )  )  {     return null; }^97^^^^^90^120^[Delete]^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( index < 1 )  {     return false; }^97^^^^^90^120^[Delete]^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^return true;^98^^^^^90^120^return null;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^return false;^98^^^^^90^120^return null;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( !ready )  {^93^^^^^90^120^if  ( !targetReady )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( !setPosition ( startIndex )  )  {^102^^^^^90^120^if  ( !setPosition ( 1 )  )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^if  ( !setPositionAllProperties ( 1 )  )  {^102^^^^^90^120^if  ( !setPosition ( 1 )  )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( !setPosition ( 3 )  )  {^102^^^^^90^120^if  ( !setPosition ( 1 )  )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( position == 0 )  {^102^^^^^90^120^if  ( !setPosition ( 1 )  )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( position < 1 )  {^102^^^^^90^120^if  ( !setPosition ( 1 )  )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^return null;^102^103^104^^^90^120^if  ( !setPosition ( 1 )  )  { return null; }^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P16_Remove_Block]^^102^103^104^^^90^120^if  ( !setPosition ( 1 )  )  { return null; }^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( index > length )  {     return false; }^102^^^^^90^120^[Delete]^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( empty )  {     return null; }^102^^^^^90^120^[Delete]^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( position < 1 )  {     return false; }^102^^^^^90^120^[Delete]^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( empty )  {     return false; }^102^^^^^90^120^[Delete]^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( index < 1 )  {     return false; }^102^^^^^90^120^[Delete]^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^return true;^103^^^^^90^120^return null;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^return false;^103^^^^^90^120^return null;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( !setPosition ( startPropertyIndex )  )  {^102^^^^^90^120^if  ( !setPosition ( 1 )  )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^getLength (  ) ;^105^^^^^90^120^reset (  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^105^^^^^90^120^reset (  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( name != true )  {^92^^^^^90^120^if  ( name != null )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( !setPosition ( 8 )  )  {^102^^^^^92^106^if  ( !setPosition ( 1 )  )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^return true;^103^^^^^92^106^return null;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( !setPosition ( position )  )  {^102^^^^^92^106^if  ( !setPosition ( 1 )  )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^return this;^98^^^^^90^120^return null;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( !setPosition ( 7 )  )  {^102^^^^^90^120^if  ( !setPosition ( 1 )  )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( !setPosition ( 1 - 1 )  )  {^102^^^^^90^120^if  ( !setPosition ( 1 )  )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^return this;^103^^^^^90^120^return null;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( !setPosition ( position )  )  {^102^^^^^90^120^if  ( !setPosition ( 1 )  )  {^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^return propertyNodePointer.getIndex (  ) ;^109^^^^^90^120^return propertyNodePointer.getValuePointer (  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^return propertyNodePointer .getImmediateParentPointer (  )  ;^109^^^^^90^120^return propertyNodePointer.getValuePointer (  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^109^^^^^90^120^return propertyNodePointer.getValuePointer (  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^return npp .getImmediateParentPointer (  )  ;^118^^^^^90^120^return npp.getValuePointer (  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^new NullPropertyPointer ( propertyNodePointer.getValuePointer (  )  ) ;^114^115^^^^90^120^new NullPropertyPointer ( propertyNodePointer.getImmediateParentPointer (  )  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^new NullPropertyPointer ( propertyNodePointer .getIndex (  )   ) ;^114^115^^^^90^120^new NullPropertyPointer ( propertyNodePointer.getImmediateParentPointer (  )  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^NullPropertyPointer npp = new NullPropertyPointer ( propertyNodePointer.getValuePointer (  )  ) ;^113^114^115^^^90^120^NullPropertyPointer npp = new NullPropertyPointer ( propertyNodePointer.getImmediateParentPointer (  )  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^NullPropertyPointer npp = new NullPropertyPointer ( propertyNodePointer .getIndex (  )   ) ;^113^114^115^^^90^120^NullPropertyPointer npp = new NullPropertyPointer ( propertyNodePointer.getImmediateParentPointer (  )  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^propertyNodePointer.getValuePointer (  )  ) ;^115^^^^^90^120^propertyNodePointer.getImmediateParentPointer (  )  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^115^116^^^^90^120^propertyNodePointer.getImmediateParentPointer (  )  ) ; npp.setPropertyName ( propertyNodePointer.getPropertyName (  )  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^propertyNodePointer.setPropertyIndex ( i ) ;propertyNodePointer.getImmediateParentPointer (  )  ) ;^115^^^^^90^120^propertyNodePointer.getImmediateParentPointer (  )  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^return propertyNodePointer.getValuePointer (  ) ;propertyNodePointer.getImmediateParentPointer (  )  ) ;^115^^^^^90^120^propertyNodePointer.getImmediateParentPointer (  )  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^propertyNodePointer.setIndex ( offset ) ;propertyNodePointer.getImmediateParentPointer (  )  ) ;^115^^^^^90^120^propertyNodePointer.getImmediateParentPointer (  )  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^startWith = startWith.getImmediateParentPointer (  ) ;propertyNodePointer.getImmediateParentPointer (  )  ) ;^115^^^^^90^120^propertyNodePointer.getImmediateParentPointer (  )  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^propertyNodePointer.setIndex ( index - 1 ) ;propertyNodePointer.getImmediateParentPointer (  )  ) ;^115^^^^^90^120^propertyNodePointer.getImmediateParentPointer (  )  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^npp.setPropertyName ( propertyNodePointer.getPropertyNames (  )  ) ;^116^^^^^90^120^npp.setPropertyName ( propertyNodePointer.getPropertyName (  )  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^116^117^^^^90^120^npp.setPropertyName ( propertyNodePointer.getPropertyName (  )  ) ; npp.setIndex ( propertyNodePointer.getIndex (  )  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^116^^^^^90^120^npp.setPropertyName ( propertyNodePointer.getPropertyName (  )  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^npp.setIndex ( propertyNodePointer.getLength (  )  ) ;^117^^^^^90^120^npp.setIndex ( propertyNodePointer.getIndex (  )  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^npp.setIndex ( propertyNodePointer .getImmediateParentPointer (  )   ) ;^117^^^^^90^120^npp.setIndex ( propertyNodePointer.getIndex (  )  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^117^118^^^^90^120^npp.setIndex ( propertyNodePointer.getIndex (  )  ) ; return npp.getValuePointer (  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^String names[] = propertyNodePointer.getPropertyNames (  ) ;npp.setIndex ( propertyNodePointer.getIndex (  )  ) ;^117^^^^^90^120^npp.setIndex ( propertyNodePointer.getIndex (  )  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^length = propertyNodePointer.getLength (  ) ;npp.setIndex ( propertyNodePointer.getIndex (  )  ) ;^117^^^^^90^120^npp.setIndex ( propertyNodePointer.getIndex (  )  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^return propertyNodePointer.getValuePointer (  ) ;npp.setIndex ( propertyNodePointer.getIndex (  )  ) ;^117^^^^^90^120^npp.setIndex ( propertyNodePointer.getIndex (  )  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^npp.setPropertyName ( propertyNodePointer.getPropertyName (  )  ) ;npp.setIndex ( propertyNodePointer.getIndex (  )  ) ;^117^^^^^90^120^npp.setIndex ( propertyNodePointer.getIndex (  )  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^propertyNodePointer.setIndex ( offset ) ;npp.setIndex ( propertyNodePointer.getIndex (  )  ) ;^117^^^^^90^120^npp.setIndex ( propertyNodePointer.getIndex (  )  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^this.startIndex = startWith.getIndex (  ) ;npp.setIndex ( propertyNodePointer.getIndex (  )  ) ;^117^^^^^90^120^npp.setIndex ( propertyNodePointer.getIndex (  )  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^propertyNodePointer.setIndex ( index - 1 ) ;npp.setIndex ( propertyNodePointer.getIndex (  )  ) ;^117^^^^^90^120^npp.setIndex ( propertyNodePointer.getIndex (  )  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^int count = propertyNodePointer.getPropertyCount (  ) ;npp.setIndex ( propertyNodePointer.getIndex (  )  ) ;^117^^^^^90^120^npp.setIndex ( propertyNodePointer.getIndex (  )  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^117^^^^^90^120^npp.setIndex ( propertyNodePointer.getIndex (  )  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^118^^^^^90^120^return npp.getValuePointer (  ) ;^[CLASS] PropertyIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] Throwable  ex  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  NullPropertyPointer  npp  int  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^return startPropertyIndex;^123^^^^^122^124^return position;^[CLASS] PropertyIterator  [METHOD] getPosition [RETURN_TYPE] int   [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( name == null )  {^127^^^^^126^133^if  ( name != null )  {^[CLASS] PropertyIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( name != false )  {^127^^^^^126^133^if  ( name != null )  {^[CLASS] PropertyIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( startWith != null )  {^127^^^^^126^133^if  ( name != null )  {^[CLASS] PropertyIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( startWith == null )  {^127^^^^^126^133^if  ( name != null )  {^[CLASS] PropertyIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^return setPositionIndividualProperty(position);^127^128^129^^^126^133^if  ( name != null )  { return setPositionIndividualProperty ( position ) ; }^[CLASS] PropertyIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[P16_Remove_Block]^^127^128^129^^^126^133^if  ( name != null )  { return setPositionIndividualProperty ( position ) ; }^[CLASS] PropertyIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^return setPositionAllProperties ( startPropertyIndex ) ;^131^^^^^126^133^return setPositionAllProperties ( position ) ;^[CLASS] PropertyIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^return setPositionIndividualProperty ( position ) ;^131^^^^^126^133^return setPositionAllProperties ( position ) ;^[CLASS] PropertyIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^131^^^^^126^133^return setPositionAllProperties ( position ) ;^[CLASS] PropertyIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^return setPositionAllProperties ( position ) ;^128^^^^^126^133^return setPositionIndividualProperty ( position ) ;^[CLASS] PropertyIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^return setPositionIndividualProperty ( startPropertyIndex ) ;^128^^^^^126^133^return setPositionIndividualProperty ( position ) ;^[CLASS] PropertyIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^return setPositionAllProperties ( startPropertyIndex ) ;^128^^^^^126^133^return setPositionIndividualProperty ( position ) ;^[CLASS] PropertyIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^128^^^^^126^133^return setPositionIndividualProperty ( position ) ;^[CLASS] PropertyIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^return setPositionIndividualProperty ( startPropertyIndex ) ;^131^^^^^126^133^return setPositionAllProperties ( position ) ;^[CLASS] PropertyIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^this.position = startPropertyIndex;^136^^^^^121^151^this.position = position;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^this.position =  startIndex;^136^^^^^121^151^this.position = position;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( position <= 1 )  {^137^^^^^122^152^if  ( position < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( position < 5 )  {^137^^^^^122^152^if  ( position < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( startIndex < 1 )  {^137^^^^^122^152^if  ( position < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( startPropertyIndex < 1L )  {^137^^^^^122^152^if  ( position < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( position == 0 )  {^137^^^^^122^152^if  ( position < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( !setPosition ( 1 )  )  {^137^^^^^122^152^if  ( position < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( index < 1 )  {^137^^^^^122^152^if  ( position < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^return false;^137^138^139^^^122^152^if  ( position < 1 )  { return false; }^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P16_Remove_Block]^^137^138^139^^^122^152^if  ( position < 1 )  { return false; }^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( index > length )  {     return false; }^137^^^^^122^152^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( empty )  {     return null; }^137^^^^^122^152^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( empty )  {     return false; }^137^^^^^122^152^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( setPosition ( 1 )  )  )  {     return null; }^137^^^^^122^152^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( index < 1 )  {     return false; }^137^^^^^122^152^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^return true;^138^^^^^123^153^return false;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( !ready )  {^141^^^^^126^156^if  ( !targetReady )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( !reverse )  {^141^^^^^126^156^if  ( !targetReady )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^prepareForIndividualProperty(name);^141^142^143^^^126^156^if  ( !targetReady )  { prepareForIndividualProperty ( name ) ; }^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P16_Remove_Block]^^141^142^143^^^126^156^if  ( !targetReady )  { prepareForIndividualProperty ( name ) ; }^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^getLength ( name ) ;^142^^^^^127^157^prepareForIndividualProperty ( name ) ;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^142^^^^^127^157^prepareForIndividualProperty ( name ) ;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^return setPositionIndividualProperty ( position ) ;prepareForIndividualProperty ( name ) ;^142^^^^^127^157^prepareForIndividualProperty ( name ) ;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( targetReady )  )  {     prepareForIndividualProperty ( name ) ; }^142^^^^^127^157^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( targetReady )  {^145^^^^^130^160^if  ( empty )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( reverse )  {^145^^^^^130^160^if  ( empty )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^return false;^145^146^147^^^130^160^if  ( empty )  { return false; }^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P16_Remove_Block]^^145^146^147^^^130^160^if  ( empty )  { return false; }^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( index > length )  {     return false; }^145^^^^^130^160^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( empty )  {     return null; }^145^^^^^130^160^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( position < 1 )  {     return false; }^145^^^^^130^160^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( setPosition ( 1 )  )  )  {     return null; }^145^^^^^130^160^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( index < 1 )  {     return false; }^145^^^^^130^160^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^return true;^146^^^^^131^161^return false;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P1_Replace_Type]^short  length = getLength (  ) ;^149^^^^^134^164^int length = getLength (  ) ;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^int length = reset (  ) ;^149^^^^^134^164^int length = getLength (  ) ;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^149^^^^^134^164^int length = getLength (  ) ;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P1_Replace_Type]^short  index;^150^^^^^135^165^int index;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^int length;int index;^150^^^^^135^165^int index;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^int index = 1;int index;^150^^^^^135^165^int index;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^int offset;int index;^150^^^^^135^165^int index;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( !ready )  {^151^^^^^136^166^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( index > length )  {^151^^^^^136^166^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( end == -1 )  {^151^^^^^136^166^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( length - 1 )  {^151^^^^^136^166^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( end - position + 2 )  {^151^^^^^136^166^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( end - position )  {^151^^^^^136^166^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( index < 1 )  {^151^^^^^136^166^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( !targetReady )  {^151^^^^^136^166^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( reverse )  {^151^^^^^136^166^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^index = position + (startIndex); if (!(includeStart)) {    index++;}; if (index > length) {    return false;};^151^152^153^154^155^136^166^if  ( !reverse )  { index = position + startIndex; if  ( !includeStart )  { index++; }^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P16_Remove_Block]^^151^152^153^154^155^136^166^if  ( !reverse )  { index = position + startIndex; if  ( !includeStart )  { index++; }^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( end != -1 )  {^162^^^^^151^172^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( end == -end )  {^162^^^^^151^172^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( startPropertyIndex == -1 )  {^162^^^^^151^172^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( length - 1 )  {^162^^^^^151^172^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( end == -1L )  {^162^^^^^151^172^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( index < 1 )  {^162^^^^^151^172^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^end = length - 1;^162^163^164^^^151^172^if  ( end == -1 )  { end = length - 1; }^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P16_Remove_Block]^^162^163^164^^^151^172^if  ( end == -1 )  { end = length - 1; }^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P2_Replace_Operator]^end = length  >=  1;^163^^^^^151^172^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^end = length - startPropertyIndex;^163^^^^^151^172^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^end = startIndex - 1;^163^^^^^151^172^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^end = length - 0 ;^163^^^^^151^172^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^length = 0;end = length - 1;^163^^^^^151^172^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^index += length;end = length - 1;^163^^^^^151^172^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( !targetReady )  {^166^^^^^151^172^if  ( !includeStart )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^index--;^166^167^168^^^151^172^if  ( !includeStart )  { index--; }^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P16_Remove_Block]^^166^167^168^^^151^172^if  ( !includeStart )  { index--; }^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( includeStart )  )  {     offset--;     length--; }^166^^^^^151^172^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( includeStart )  )  {     length--; }^166^^^^^151^172^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( includeStart )  )  {     offset++; }^166^^^^^151^172^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( includeStart )  )  {     index++; }^166^^^^^151^172^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( index <= 1 )  {^169^^^^^151^172^if  ( index < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( index < 2 )  {^169^^^^^151^172^if  ( index < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( startPropertyIndex < 1 )  {^169^^^^^151^172^if  ( index < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( index < 0 )  {^169^^^^^151^172^if  ( index < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( end == -1 )  {^169^^^^^151^172^if  ( index < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( position < 1 )  {^169^^^^^151^172^if  ( index < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( index > length )  {^169^^^^^151^172^if  ( index < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^return false;^169^170^171^^^151^172^if  ( index < 1 )  { return false; }^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P16_Remove_Block]^^169^170^171^^^151^172^if  ( index < 1 )  { return false; }^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( index > length )  {     return false; }^169^^^^^151^172^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( empty )  {     return null; }^169^^^^^151^172^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( position < 1 )  {     return false; }^169^^^^^151^172^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( empty )  {     return false; }^169^^^^^151^172^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( setPosition ( 1 )  )  )  {     return null; }^169^^^^^151^172^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^return true;^170^^^^^151^172^return false;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P2_Replace_Operator]^end = length  >  1;^163^^^^^151^172^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^end = length - position;^163^^^^^151^172^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^end = startPropertyIndex - 1;^163^^^^^151^172^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P2_Replace_Operator]^index = end  >>  position + 2;^165^^^^^151^172^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^index = end - position ;^165^^^^^151^172^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^index = startPropertyIndex - position + 2;^165^^^^^151^172^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^index = end - startPropertyIndex + 2;^165^^^^^151^172^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^index = position - end + 2;^165^^^^^151^172^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^index = end - position + 1;^165^^^^^151^172^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^offset = end - position + 1;index = end - position + 2;^165^^^^^151^172^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P1_Replace_Type]^long  end = startIndex;^161^^^^^151^172^int end = startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^int end = startPropertyIndex;^161^^^^^151^172^int end = startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^int start = startPropertyIndex;int end = startIndex;^161^^^^^151^172^int end = startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( !targetReady )  {^153^^^^^138^168^if  ( !includeStart )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( includeStart )  {^153^^^^^138^168^if  ( !includeStart )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^index++;^153^154^155^^^138^168^if  ( !includeStart )  { index++; }^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P16_Remove_Block]^^153^154^155^^^138^168^if  ( !includeStart )  { index++; }^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( includeStart )  )  {     offset--;     length--; }^153^^^^^138^168^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( includeStart )  )  {     index--; }^153^^^^^138^168^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( includeStart )  )  {     length--; }^153^^^^^138^168^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( includeStart )  )  {     offset++; }^153^^^^^138^168^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( index >= length )  {^156^^^^^141^171^if  ( index > length )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( startPropertyIndex > length )  {^156^^^^^141^171^if  ( index > length )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( index > startPropertyIndex )  {^156^^^^^141^171^if  ( index > length )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( length > index )  {^156^^^^^141^171^if  ( index > length )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( index < 1 )  {^156^^^^^141^171^if  ( index > length )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^return false;^156^157^158^^^141^171^if  ( index > length )  { return false; }^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P16_Remove_Block]^^156^157^158^^^141^171^if  ( index > length )  { return false; }^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( empty )  {     return null; }^156^^^^^141^171^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( position < 1 )  {     return false; }^156^^^^^141^171^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( empty )  {     return false; }^156^^^^^141^171^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( setPosition ( 1 )  )  )  {     return null; }^156^^^^^141^171^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( index < 1 )  {     return false; }^156^^^^^141^171^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^return true;^157^^^^^142^172^return false;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^index = startPropertyIndex + startIndex;^152^^^^^137^167^index = position + startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^index = position + startPropertyIndex;^152^^^^^137^167^index = position + startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^index = startIndex + position;^152^^^^^137^167^index = position + startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^offset = position - index;index = position + startIndex;^152^^^^^137^167^index = position + startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( !reverse )  {^153^^^^^138^168^if  ( !includeStart )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( end != -1 )  {^162^^^^^147^177^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( end == -position )  {^162^^^^^147^177^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( end == -3 )  {^162^^^^^147^177^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( startPropertyIndex == -1 )  {^162^^^^^147^177^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( length - 1 )  {^162^^^^^147^177^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( end == -1 + 3 )  {^162^^^^^147^177^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( index < 1 )  {^162^^^^^147^177^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^end = length - 1;^162^163^164^^^147^177^if  ( end == -1 )  { end = length - 1; }^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P16_Remove_Block]^^162^163^164^^^147^177^if  ( end == -1 )  { end = length - 1; }^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P2_Replace_Operator]^end = length  <<  1;^163^^^^^148^178^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^end = length - end;^163^^^^^148^178^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^end = startPropertyIndex - 1;^163^^^^^148^178^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^end = length - 0 ;^163^^^^^148^178^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^length = 0;end = length - 1;^163^^^^^148^178^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^index += length;end = length - 1;^163^^^^^148^178^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( !reverse )  {^166^^^^^151^181^if  ( !includeStart )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( !targetReady )  {^166^^^^^151^181^if  ( !includeStart )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^index--;^166^167^168^^^151^181^if  ( !includeStart )  { index--; }^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P16_Remove_Block]^^166^167^168^^^151^181^if  ( !includeStart )  { index--; }^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( includeStart )  )  {     offset--;     length--; }^166^^^^^151^181^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( includeStart )  )  {     length--; }^166^^^^^151^181^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( includeStart )  )  {     offset++; }^166^^^^^151^181^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( includeStart )  )  {     index++; }^166^^^^^151^181^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( index == 1 )  {^169^^^^^154^184^if  ( index < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( index < 0 )  {^169^^^^^154^184^if  ( index < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( startPropertyIndex < 1 )  {^169^^^^^154^184^if  ( index < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( index < 3 )  {^169^^^^^154^184^if  ( index < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( end == -1 )  {^169^^^^^154^184^if  ( index < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( position < 1 )  {^169^^^^^154^184^if  ( index < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( index > length )  {^169^^^^^154^184^if  ( index < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^return false;^169^170^171^^^154^184^if  ( index < 1 )  { return false; }^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P16_Remove_Block]^^169^170^171^^^154^184^if  ( index < 1 )  { return false; }^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( index > length )  {     return false; }^169^^^^^154^184^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( empty )  {     return null; }^169^^^^^154^184^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( position < 1 )  {     return false; }^169^^^^^154^184^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( empty )  {     return false; }^169^^^^^154^184^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( setPosition ( 1 )  )  )  {     return null; }^169^^^^^154^184^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^return true;^170^^^^^155^185^return false;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^index =  null + startIndex;^152^^^^^137^167^index = position + startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P2_Replace_Operator]^end = length  |  1;^163^^^^^148^178^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^end = length ;^163^^^^^148^178^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^end = startIndex - 1;^163^^^^^148^178^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P2_Replace_Operator]^index = end  >>  position + 2;^165^^^^^150^180^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^index = end - position + index;^165^^^^^150^180^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^index = startPropertyIndex - position + 2;^165^^^^^150^180^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^index = end - startPropertyIndex + 2;^165^^^^^150^180^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^index = position - end + 2;^165^^^^^150^180^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^index = end - position + 2L;^165^^^^^150^180^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^offset = end - position + 1;index = end - position + 2;^165^^^^^150^180^index = end - position + 2;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P1_Replace_Type]^short  end = startIndex;^161^^^^^146^176^int end = startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^int end = startPropertyIndex;^161^^^^^146^176^int end = startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^int start = startPropertyIndex;int end = startIndex;^161^^^^^146^176^int end = startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P2_Replace_Operator]^propertyNodePointer.setIndex ( index  ||  1 ) ;^173^^^^^158^188^propertyNodePointer.setIndex ( index - 1 ) ;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^propertyNodePointer.setIndex ( index  ) ;^173^^^^^158^188^propertyNodePointer.setIndex ( index - 1 ) ;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^propertyNodePointer.setIndex ( startIndex - 1 ) ;^173^^^^^158^188^propertyNodePointer.setIndex ( index - 1 ) ;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^propertyNodePointer .setIndex (  )  ;^173^^^^^158^188^propertyNodePointer.setIndex ( index - 1 ) ;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P8_Replace_Mix]^propertyNodePointer.setIndex ( startPropertyIndex - 1 ) ;^173^^^^^158^188^propertyNodePointer.setIndex ( index - 1 ) ;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^173^174^^^^158^188^propertyNodePointer.setIndex ( index - 1 ) ; return true;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^propertyNodePointer.setPropertyIndex ( i ) ;propertyNodePointer.setIndex ( index - 1 ) ;^173^^^^^158^188^propertyNodePointer.setIndex ( index - 1 ) ;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^return propertyNodePointer.getValuePointer (  ) ;propertyNodePointer.setIndex ( index - 1 ) ;^173^^^^^158^188^propertyNodePointer.setIndex ( index - 1 ) ;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^propertyNodePointer.setIndex ( offset ) ;propertyNodePointer.setIndex ( index - 1 ) ;^173^^^^^158^188^propertyNodePointer.setIndex ( index - 1 ) ;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^propertyNodePointer.getImmediateParentPointer (  )  ) ;propertyNodePointer.setIndex ( index - 1 ) ;^173^^^^^158^188^propertyNodePointer.setIndex ( index - 1 ) ;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^npp.setIndex ( propertyNodePointer.getIndex (  )  ) ;propertyNodePointer.setIndex ( index - 1 ) ;^173^^^^^158^188^propertyNodePointer.setIndex ( index - 1 ) ;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P3_Replace_Literal]^return false;^174^^^^^159^189^return true;^[CLASS] PropertyIterator  [METHOD] setPositionIndividualProperty [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  end  index  length  position  startIndex  startPropertyIndex  
[P5_Replace_Variable]^this.position = startIndex;^178^^^^^163^193^this.position = position;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^this.position =  start;^178^^^^^163^193^this.position = position;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( position == 1 )  {^179^^^^^164^194^if  ( position < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( position < count )  {^179^^^^^164^194^if  ( position < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( start < 1 )  {^179^^^^^164^194^if  ( position < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( position < 0 )  {^179^^^^^164^194^if  ( position < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( position == 0 )  {^179^^^^^164^194^if  ( position < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( !setPosition ( 1 )  )  {^179^^^^^164^194^if  ( position < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( index < 1 )  {^179^^^^^164^194^if  ( position < 1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^return false;^179^180^181^^^164^194^if  ( position < 1 )  { return false; }^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P16_Remove_Block]^^179^180^181^^^164^194^if  ( position < 1 )  { return false; }^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( index > length )  {     return false; }^179^^^^^164^194^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( empty )  {     return null; }^179^^^^^164^194^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( empty )  {     return false; }^179^^^^^164^194^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( setPosition ( 1 )  )  )  {     return null; }^179^^^^^164^194^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( index < 1 )  {     return false; }^179^^^^^164^194^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^return true;^180^^^^^165^195^return false;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P1_Replace_Type]^long  offset;^183^^^^^168^198^int offset;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^int index;int offset;^183^^^^^168^198^int offset;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P1_Replace_Type]^short  count = propertyNodePointer.getPropertyCount (  ) ;^184^^^^^169^199^int count = propertyNodePointer.getPropertyCount (  ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^int count = propertyNodePointer.getPropertyName (  ) ;^184^^^^^169^199^int count = propertyNodePointer.getPropertyCount (  ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^184^^^^^169^199^int count = propertyNodePointer.getPropertyCount (  ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( !ready )  {^185^^^^^170^200^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( i == startPropertyIndex )  {^185^^^^^170^200^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( startIndex + position - index )  {^185^^^^^170^200^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( startIndex + position )  {^185^^^^^170^200^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( position - index )  {^185^^^^^170^200^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( index <= position && position < (index + length) )  {^185^^^^^170^200^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( index <= position )  {^185^^^^^170^200^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( position < index + length )  {^185^^^^^170^200^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( index + length )  {^185^^^^^170^200^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( start == PropertyPointer.UNSPECIFIED_PROPERTY )  {^185^^^^^170^200^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( count - 1 )  {^185^^^^^170^200^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( i >= 0 )  {^185^^^^^170^200^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( end == -1 )  {^185^^^^^170^200^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( length - 1 )  {^185^^^^^170^200^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( end + 1 )  {^185^^^^^170^200^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( end - position + 1 )  {^185^^^^^170^200^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( end - position )  {^185^^^^^170^200^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( length - (position - index) - 1 )  {^185^^^^^170^200^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( length - position - index )  {^185^^^^^170^200^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( reverse )  {^185^^^^^170^200^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( !targetReady )  {^185^^^^^170^200^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( start != PropertyPointer.UNSPECIFIED_PROPERTY )  {^213^^^^^198^228^if  ( start == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( count - 1 )  {^213^^^^^198^228^if  ( start == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^213^^^^^198^228^if  ( start == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^start = count - 1;^213^214^215^^^198^228^if  ( start == PropertyPointer.UNSPECIFIED_PROPERTY )  { start = count - 1; }^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P16_Remove_Block]^^213^214^215^^^198^228^if  ( start == PropertyPointer.UNSPECIFIED_PROPERTY )  { start = count - 1; }^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  (  ( startPropertyIndex )  ==  ( PropertyPointer.UNSPECIFIED_PROPERTY )  )  {     startPropertyIndex =  ( names.length )  - 1; }^213^^^^^198^228^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  (  ( startPropertyIndex )  ==  ( PropertyPointer.UNSPECIFIED_PROPERTY )  )  {     startPropertyIndex = 0; }^213^^^^^198^228^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( reverse )  {     this.startPropertyIndex = PropertyPointer.UNSPECIFIED_PROPERTY;     this.startIndex = -1; }^213^^^^^198^228^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^start = count  <=  1;^214^^^^^199^229^start = count - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^start = count ;^214^^^^^199^229^start = count - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^start = startPropertyIndex - 1;^214^^^^^199^229^start = count - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^start = count - 2;^214^^^^^199^229^start = count - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( i <= startPropertyIndex )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( i != startPropertyIndex )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( i == start )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( startPropertyIndex == i )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( end == -1 )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( length - 1 )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( end + 1 )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( end - position + 1 )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( end - position )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( length - (position - index) - 1 )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( length - position - index )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( position - index )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^int end = startIndex; if (end == (-1)) {    end = length - 1;}; length = end + 1; offset = (end - position) + 1; if (!(includeStart)) {    offset--;    length--;};^219^220^221^222^223^204^234^if  ( i == startPropertyIndex )  { int end = startIndex; if  ( end == -1 )  { end = length - 1; }^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P16_Remove_Block]^^219^220^221^222^223^204^234^if  ( i == startPropertyIndex )  { int end = startIndex; if  ( end == -1 )  { end = length - 1; }^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( i ==  ( startPropertyIndex )  )  {     length -= startIndex;     if  ( ! ( includeStart )  )  {         length--;     }     offset =  (  ( startIndex )  + position )  - index;     if  ( ! ( includeStart )  )  {         offset++;     } }else {     offset = position - index; }^219^^^^^204^234^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = length  >=   ( position - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = length  <   ( position - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = length -  ( position  <  index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^offset = length -  ( position - index )  - ;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = start -  ( position - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = length -  ( startPropertyIndex - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = length -  ( position - startIndex )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = index -  ( position - length )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = position -  ( length - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^offset = length -  ( position - index )  - 0 ;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^offset = position - index;offset = length -  ( position - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^offset = end - position + 1;offset = length -  ( position - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^offset = startIndex + position - index;offset = length -  ( position - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( end <= -1 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( end == -index )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( end == - )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( startIndex == -1 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( length - 1 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( end == -1 + 4 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( index < 1 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^end = length - 1;^221^222^223^^^206^236^if  ( end == -1 )  { end = length - 1; }^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P16_Remove_Block]^^221^222^223^^^206^236^if  ( end == -1 )  { end = length - 1; }^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^end = length   instanceof   1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^end = length ;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^end = startPropertyIndex - 1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^end = length - 0 ;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^length = 0;end = length - 1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^index += length;end = length - 1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( !reverse )  {^226^^^^^211^241^if  ( !includeStart )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( !targetReady )  {^226^^^^^211^241^if  ( !includeStart )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^offset--; length--;^226^227^228^229^^211^241^if  ( !includeStart )  { offset--; length--; }^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P16_Remove_Block]^^226^227^228^229^^211^241^if  ( !includeStart )  { offset--; length--; }^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( includeStart )  )  {     index--; }^226^^^^^211^241^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( includeStart )  )  {     length--; }^226^^^^^211^241^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( includeStart )  )  {     offset++; }^226^^^^^211^241^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( includeStart )  )  {     index++; }^226^^^^^211^241^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^end = length  <=  1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^end = start - 1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^length = end + i;^224^^^^^209^239^length = end + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^length = startPropertyIndex + 1;^224^^^^^209^239^length = end + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^length = end + 0 ;^224^^^^^209^239^length = end + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^length = 0;length = end + 1;^224^^^^^209^239^length = end + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = end  ==  position + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^offset = end - position + length;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = startPropertyIndex - position + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = end - startIndex + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = position - end + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^offset = end - position + 1L;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^offset = position - index;offset = end - position + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^index = end - position + 2;offset = end - position + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^offset = startIndex + position - index;offset = end - position + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^offset = length -  ( position - index )  - 1;offset = end - position + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P1_Replace_Type]^short  end = startIndex;^220^^^^^205^235^int end = startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^int end = position;^220^^^^^205^235^int end = startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^int start = startPropertyIndex;int end = startIndex;^220^^^^^205^235^int end = startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( end != -1 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( end == -end )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( startPropertyIndex == -1 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( startPropertyIndex == -1 - 2 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^end = length  &  1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^end = position - 1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( index <= position || position < index + length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( index > position && position < index + length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( index <= position && position <= index + length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( index <= position && position < index  >  length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( start <= position && position < index + length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( index <= startPropertyIndex && position < index + length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( index <= position && position < index + startPropertyIndex )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( length <= position && position < index + index )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( index <= length && position < index + position )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( index <= position ) {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  (  position < index + length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( index + length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  (  position < index + startPropertyIndex )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^propertyNodePointer.setIndex(offset); return true;^235^236^237^238^^220^250^if  ( index <= position && position < index + length )  { propertyNodePointer.setIndex ( offset ) ; return true; }^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P16_Remove_Block]^^235^236^237^238^^220^250^if  ( index <= position && position < index + length )  { propertyNodePointer.setIndex ( offset ) ; return true; }^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^return false;^237^^^^^222^252^return true;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^propertyNodePointer.setIndex ( position ) ;^236^^^^^221^251^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^propertyNodePointer.setPropertyIndex ( offset ) ;^236^^^^^221^251^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^propertyNodePointer .getValuePointer (  )  ;^236^^^^^221^251^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^propertyNodePointer.setIndex ( startPropertyIndex ) ;^236^^^^^221^251^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^236^237^^^^221^251^propertyNodePointer.setIndex ( offset ) ; return true;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^length = propertyNodePointer.getLength (  ) ;propertyNodePointer.setIndex ( offset ) ;^236^^^^^221^251^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^propertyNodePointer.setPropertyIndex ( i ) ;propertyNodePointer.setIndex ( offset ) ;^236^^^^^221^251^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^return propertyNodePointer.getValuePointer (  ) ;propertyNodePointer.setIndex ( offset ) ;^236^^^^^221^251^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^propertyNodePointer.getImmediateParentPointer (  )  ) ;propertyNodePointer.setIndex ( offset ) ;^236^^^^^221^251^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^npp.setIndex ( propertyNodePointer.getIndex (  )  ) ;propertyNodePointer.setIndex ( offset ) ;^236^^^^^221^251^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^propertyNodePointer.setIndex ( index - 1 ) ;propertyNodePointer.setIndex ( offset ) ;^236^^^^^221^251^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^int count = propertyNodePointer.getPropertyCount (  ) ;propertyNodePointer.setIndex ( offset ) ;^236^^^^^221^251^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P1_Replace_Type]^for  (  long  i = start; i >= 0; i-- )  {^216^^^^^201^231^for  ( int i = start; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^for  ( int i = start; i > 0; i-- )  {^216^^^^^201^231^for  ( int i = start; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^for  ( int i = start; i >= startIndex; i-- )  {^216^^^^^201^231^for  ( int i = start; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( int i = startIndex; i >= 0; i-- )  {^216^^^^^201^231^for  ( int i = start; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( startnt i = start; i >= 0; i-- )  {^216^^^^^201^231^for  ( int i = start; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^for  ( int i = position; i >= 0; i-- )  {^216^^^^^201^231^for  ( int i = start; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( i < startPropertyIndex )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( i >= startPropertyIndex )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( startPropertyIndex == startPropertyIndex )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( i == startIndex )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = length  &&   ( position - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = length  ||   ( position - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = length -  ( position   instanceof   index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^offset = length -  ( position - index )  - startIndex;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = length -  ( start - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = length -  ( position - start )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = length -  ( index - position )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( end == --7 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( end == -startPropertyIndex )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( start == -1 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( end == -3 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^end = length  |  1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^end = length  ==  1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^end = length - startIndex;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^length = end + position;^224^^^^^209^239^length = end + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^length = position + 1;^224^^^^^209^239^length = end + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = end   instanceof   position + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^offset = end - position + end;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = startIndex - position + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^offset = end - position + 4;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^int end = startPropertyIndex;^220^^^^^205^235^int end = startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( end == --6 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( end == -0 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( start == -0 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^end = length - ;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( index < position && position < index + length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( startPropertyIndex <= position && position < index + length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^length = end ;^224^^^^^209^239^length = end + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = end  |  position + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^offset = end - position ;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = end - startPropertyIndex + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^offset = end - position + 0;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = length  >=   ( position - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = length   instanceof    ( position - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = length -  ( position  >=  index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^offset = length -  ( position - index )  - start;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = startPropertyIndex -  ( position - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = length -  ( start - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = length -  ( position - start )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = index -  ( position - length )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = position -  ( length - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^offset = length -  ( position - index )  - 0 ;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^offset = position - index;offset = length -  ( position - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^offset = end - position + 1;offset = length -  ( position - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^offset = startIndex + position - index;offset = length -  ( position - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^index += start;^239^^^^^224^254^index += length;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^index +=  startIndex;^239^^^^^224^254^index += length;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^end = length - 1;index += length;^239^^^^^224^254^index += length;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P1_Replace_Type]^short  length = getLength (  ) ;^218^^^^^203^233^int length = getLength (  ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^int length = reset (  ) ;^218^^^^^203^233^int length = getLength (  ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P1_Replace_Type]^long  end = startIndex;^220^^^^^205^235^int end = startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^propertyNodePointer.setPropertyIndex ( startIndex ) ;^217^^^^^202^232^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^propertyNodePointer.setIndex ( i ) ;^217^^^^^202^232^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^propertyNodePointer .getPropertyName (  )  ;^217^^^^^202^232^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^propertyNodePointer.setPropertyIndex ( start ) ;^217^^^^^202^232^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^217^^^^^202^232^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^218^^^^^203^233^int length = getLength (  ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^propertyNodePointer.setPropertyIndex ( position ) ;^236^^^^^221^251^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^start = count  ==  1;^214^^^^^199^229^start = count - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^start = count - i;^214^^^^^199^229^start = count - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^start = count - 1L;^214^^^^^199^229^start = count - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^end = length  &&  1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^end = length - position;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^length = end + ;^224^^^^^209^239^length = end + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = end  ^  position + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^offset = end - position + position;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^offset = end - position + 2;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = length  <=   ( position - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = length  <<   ( position - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = length -  ( position  &&  index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^offset = length -  ( position - index )  - index;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = length -  ( startIndex - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^index +=  startPropertyIndex;^239^^^^^224^254^index += length;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P1_Replace_Type]^short  index = 1;^211^^^^^196^226^int index = 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^int index = ;^211^^^^^196^226^int index = 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^int index;int index = 1;^211^^^^^196^226^int index = 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P1_Replace_Type]^short  start = startPropertyIndex;^212^^^^^197^227^int start = startPropertyIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^int start = offset;^212^^^^^197^227^int start = startPropertyIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^int end = startIndex;int start = startPropertyIndex;^212^^^^^197^227^int start = startPropertyIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P12_Insert_Condition]^if  ( i != startPropertyIndex )  { int start = startPropertyIndex; }^212^^^^^197^227^int start = startPropertyIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P12_Insert_Condition]^if  ( i == startPropertyIndex )  { int start = startPropertyIndex; }^212^^^^^197^227^int start = startPropertyIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P1_Replace_Type]^for  (  short  i = start; i >= 0; i-- )  {^216^^^^^201^231^for  ( int i = start; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^propertyNodePointer.setPropertyIndex ( position ) ;^217^^^^^202^232^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^236^^^^^221^251^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( i != startPropertyIndex )  {^190^^^^^175^205^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( startPropertyIndex == startPropertyIndex )  {^190^^^^^175^205^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( i == startIndex )  {^190^^^^^175^205^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( startPropertyIndex == i )  {^190^^^^^175^205^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( startIndex + position - index )  {^190^^^^^175^205^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( startIndex + position )  {^190^^^^^175^205^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( position - index )  {^190^^^^^175^205^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( i == position )  {^190^^^^^175^205^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^length -= startIndex; if (!(includeStart)) {    length--;}; offset = ((startIndex) + position) - index; if (!(includeStart)) {    offset++;};^190^191^192^193^194^175^205^if  ( i == startPropertyIndex )  { length -= startIndex; if  ( !includeStart )  { length--; }^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P16_Remove_Block]^^190^191^192^193^194^175^205^if  ( i == startPropertyIndex )  { length -= startIndex; if  ( !includeStart )  { length--; }^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = position  &  index;^201^^^^^190^202^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = startPropertyIndex - index;^201^^^^^190^202^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = position - start;^201^^^^^190^202^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = index - position;^201^^^^^190^202^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^offset = end - position + 1;offset = position - index;^201^^^^^190^202^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^index = position + startIndex;offset = position - index;^201^^^^^190^202^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^offset = startIndex + position - index;offset = position - index;^201^^^^^190^202^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^offset = length -  ( position - index )  - 1;offset = position - index;^201^^^^^190^202^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( !targetReady )  {^192^^^^^177^207^if  ( !includeStart )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^length--;^192^193^194^^^177^207^if  ( !includeStart )  { length--; }^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P16_Remove_Block]^^192^193^194^^^177^207^if  ( !includeStart )  { length--; }^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( includeStart )  )  {     offset--;     length--; }^192^^^^^177^207^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( includeStart )  )  {     index--; }^192^^^^^177^207^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( includeStart )  )  {     offset++; }^192^^^^^177^207^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( includeStart )  )  {     index++; }^192^^^^^177^207^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( !targetReady )  {^196^^^^^181^211^if  ( !includeStart )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( !reverse )  {^196^^^^^181^211^if  ( !includeStart )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^offset++;^196^197^198^^^181^211^if  ( !includeStart )  { offset++; }^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P16_Remove_Block]^^196^197^198^^^181^211^if  ( !includeStart )  { offset++; }^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( includeStart )  )  {     offset--;     length--; }^196^^^^^181^211^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( includeStart )  )  {     index--; }^196^^^^^181^211^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( includeStart )  )  {     length--; }^196^^^^^181^211^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( ! ( includeStart )  )  {     index++; }^196^^^^^181^211^[Delete]^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^length = startIndex;^191^^^^^176^206^length -= startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^length -= startPropertyIndex;^191^^^^^176^206^length -= startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^length - =  length -;^191^^^^^176^206^length -= startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = startIndex + position   instanceof   index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = startIndex  >  position - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = startIndex + startPropertyIndex - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = startIndex + position - startPropertyIndex;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = startPropertyIndex + position - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = position + startIndex - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = startIndex + index - position;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = index + position - startIndex;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^offset =  startIndex + startIndex - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^offset = position - index;offset = startIndex + position - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^offset = end - position + 1;offset = startIndex + position - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^offset = length -  ( position - index )  - 1;offset = startIndex + position - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( !reverse )  {^192^^^^^177^207^if  ( !includeStart )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( includeStart )  {^192^^^^^177^207^if  ( !includeStart )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( index <= position || position < index + length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( index < position && position < index + length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( index <= position && position <= index + length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( index <= position && position < index   instanceof   length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( startPropertyIndex <= position && position < index + length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( index <= startIndex && position < index + length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( index <= position && position < index + startPropertyIndex )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( index <= length && position < index + position )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( index <= position ) {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  (  position < index + length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( index + length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( start <= position && position < index + length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^propertyNodePointer.setIndex(offset); return true;^203^204^205^206^^188^218^if  ( index <= position && position < index + length )  { propertyNodePointer.setIndex ( offset ) ; return true; }^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P16_Remove_Block]^^203^204^205^206^^188^218^if  ( index <= position && position < index + length )  { propertyNodePointer.setIndex ( offset ) ; return true; }^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^return false;^205^^^^^190^220^return true;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^propertyNodePointer.setIndex ( startPropertyIndex ) ;^204^^^^^189^219^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^propertyNodePointer.setPropertyIndex ( offset ) ;^204^^^^^189^219^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^propertyNodePointer.setIndex ( startIndex ) ;^204^^^^^189^219^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^204^^^^^189^219^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^length = propertyNodePointer.getLength (  ) ;propertyNodePointer.setIndex ( offset ) ;^204^^^^^189^219^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^propertyNodePointer.setPropertyIndex ( i ) ;propertyNodePointer.setIndex ( offset ) ;^204^^^^^189^219^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^return propertyNodePointer.getValuePointer (  ) ;propertyNodePointer.setIndex ( offset ) ;^204^^^^^189^219^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^propertyNodePointer.getImmediateParentPointer (  )  ) ;propertyNodePointer.setIndex ( offset ) ;^204^^^^^189^219^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^npp.setIndex ( propertyNodePointer.getIndex (  )  ) ;propertyNodePointer.setIndex ( offset ) ;^204^^^^^189^219^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^propertyNodePointer.setIndex ( index - 1 ) ;propertyNodePointer.setIndex ( offset ) ;^204^^^^^189^219^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^int count = propertyNodePointer.getPropertyCount (  ) ;propertyNodePointer.setIndex ( offset ) ;^204^^^^^189^219^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P1_Replace_Type]^for  (  long  i = startPropertyIndex; i < count; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^for  ( int i = startPropertyIndex; i > count; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^for  !=  ( int i = startPropertyIndex; i < count; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^for  ( int i = startPropertyIndex; i <= count; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^for  >  ( int i = startPropertyIndex; i < count; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( startPropertyIndexnt i = startPropertyIndex; i < count; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( int i = startPropertyIndex; i < startPropertyIndex; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( startPropertyIndexnt i = i; i < count; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^for  ( int i = startPropertyIndex; i < startIndex; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( position == startPropertyIndex )  {^190^^^^^175^205^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = position  ==  index;^201^^^^^190^202^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = start - index;^201^^^^^190^202^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = position - startPropertyIndex;^201^^^^^190^202^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^length -= offset;^191^^^^^176^206^length -= startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^length - = null ;^191^^^^^176^206^length -= startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = startIndex + position  <<  index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = startIndex  &  position - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = startIndex + start - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = offset + position - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( index <= start && position < index + length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( index <= position && position < index + start )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( length <= position && position < index + index )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( position <= index && position < index + length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^204^205^^^^189^219^propertyNodePointer.setIndex ( offset ) ; return true;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^length += startIndex;^191^^^^^176^206^length -= startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^length -= position;^191^^^^^176^206^length -= startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^length -;^191^^^^^176^206^length -= startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = startIndex + position  >  index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = startIndex  >=  position - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = position  ||  index;^201^^^^^186^216^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = startPropertyIndex - index;^201^^^^^186^216^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = index - position;^201^^^^^186^216^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^offset = end - position + 1;offset = position - index;^201^^^^^186^216^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^index = position + startIndex;offset = position - index;^201^^^^^186^216^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^offset = startIndex + position - index;offset = position - index;^201^^^^^186^216^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^offset = length -  ( position - index )  - 1;offset = position - index;^201^^^^^186^216^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^index += position;^207^^^^^192^222^index += length;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^index +=  startIndex;^207^^^^^192^222^index += length;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^end = length - 1;index += length;^207^^^^^192^222^index += length;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P1_Replace_Type]^short  length = getLength (  ) ;^189^^^^^174^204^int length = getLength (  ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^int length = reset (  ) ;^189^^^^^174^204^int length = getLength (  ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^propertyNodePointer.setIndex ( i ) ;^188^^^^^173^203^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^propertyNodePointer .getPropertyName (  )  ;^188^^^^^173^203^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^propertyNodePointer.setPropertyIndex ( position ) ;^188^^^^^173^203^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^188^^^^^173^203^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^189^^^^^174^204^int length = getLength (  ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = startIndex + position  ||  index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = position  ^  index;^201^^^^^186^216^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = position - start;^201^^^^^186^216^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^index +=  startPropertyIndex;^207^^^^^192^222^index += length;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P1_Replace_Type]^short  index = 1;^186^^^^^171^201^int index = 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^int index = count;^186^^^^^171^201^int index = 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^int index;int index = 1;^186^^^^^171^201^int index = 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P1_Replace_Type]^for  (  short  i = startPropertyIndex; i < count; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( int i = start; i < count; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^for  ( int i = startIndex; i < count; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P1_Replace_Type]^long  length = getLength (  ) ;^189^^^^^174^204^int length = getLength (  ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^propertyNodePointer.setPropertyIndex ( startPropertyIndex ) ;^188^^^^^173^203^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^propertyNodePointer.setPropertyIndex ( startIndex ) ;^188^^^^^173^203^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^propertyNodePointer.setIndex ( position ) ;^204^^^^^189^219^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^propertyNodePointer.setPropertyIndex ( startPropertyIndex ) ;^204^^^^^189^219^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( i >= startPropertyIndex )  {^190^^^^^175^205^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( i == offset )  {^190^^^^^175^205^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = position  >  index;^201^^^^^190^202^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = startIndex - index;^201^^^^^190^202^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = position - startIndex;^201^^^^^190^202^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = startIndex + position  >>  index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = startIndex + position - position;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( index == position && position < index + length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( index <= position && position > index + length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( index <= position && position < index  >  length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^propertyNodePointer .getValuePointer (  )  ;^204^^^^^189^219^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( start < PropertyPointer.UNSPECIFIED_PROPERTY )  {^213^^^^^198^228^if  ( start == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( position == PropertyPointer.UNSPECIFIED_PROPERTY )  {^213^^^^^198^228^if  ( start == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^start = count  !=  1;^214^^^^^199^229^start = count - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^start = position - 1;^214^^^^^199^229^start = count - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^start = count - 1 >> 2;^214^^^^^199^229^start = count - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( i == position )  {^219^^^^^204^234^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = length  !=   ( position - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = length -  ( position  &  index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^offset = length -  ( position - index )  - count;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = startPropertyIndex -  ( position - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = length -  ( position - startPropertyIndex )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( end >= -1 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( end == -i )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( end == --3 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( startIndex == -1L )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^end = length  >=  1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^end = length  ||  1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^length = end + end;^224^^^^^209^239^length = end + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = end  ||  position + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^offset = end - position + 1 << 2;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( end > -1 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( end == -length )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( end == -10 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( end == -4 )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^end = length  ^  1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^end = length - count;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( index <= position && position < index  ==  length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( index <= startIndex && position < index + length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( position <= index && position < index + length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^propertyNodePointer.setIndex ( start ) ;^236^^^^^221^251^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^for  >>  ( int i = startPropertyIndex; i < count; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( positionnt i = startPropertyIndex; i < count; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( int i = startPropertyIndex; i < start; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( int i = position; i < count; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( int i = count; i < startPropertyIndex; i++ )  {^187^^^^^172^202^for  ( int i = startPropertyIndex; i < count; i++ )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( start == startPropertyIndex )  {^190^^^^^175^205^if  ( i == startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^offset =  null - index;^201^^^^^190^202^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = startIndex + position  &&  index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = startIndex  <  position - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = startIndex + offset - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( index <= position && position < index  ==  length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( startIndex <= position && position < index + length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( index <= startPropertyIndex && position < index + length )  {^203^^^^^188^218^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = startIndex  <=  position - index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = startIndex + position - start;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = position  >  index;^201^^^^^186^216^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^offset =  start - index;^201^^^^^186^216^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^index +=  null;^207^^^^^192^222^index += length;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^188^189^^^^173^203^propertyNodePointer.setPropertyIndex ( i ) ; int length = getLength (  ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^for  ( int i = start; i >= end; i-- )  {^216^^^^^201^231^for  ( int i = start; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( int i = startPropertyIndex; i >= 0; i-- )  {^216^^^^^201^231^for  ( int i = start; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( positionnt i = start; i >= 0; i-- )  {^216^^^^^201^231^for  ( int i = start; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = length   instanceof    ( position - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = length  ^   ( position - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^offset = length -  ( position - index )  - index;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = length -  ( startIndex - index )  - 1;^232^^^^^219^233^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( end == -position )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = end  <=  position + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = start - position + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^if  ( end == -startIndex )  {^221^^^^^206^236^if  ( end == -1 )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^end = length  >  1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( index <= position && position < index  |  length )  {^235^^^^^220^250^if  ( index <= position && position < index + length )  {^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^propertyNodePointer.setIndex ( startIndex ) ;^236^^^^^221^251^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^end = length  !=  1;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^end = length - i;^222^^^^^207^237^end = length - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^offset = end - position + 3;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = length  <   ( position - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = length  &&   ( position - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = length -  ( position  !=  index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^offset = length -  ( position - index )  ;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = length -  ( startPropertyIndex - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = length -  ( position - startPropertyIndex )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = length -  ( index - position )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^int end = start;^220^^^^^205^235^int end = startIndex;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^propertyNodePointer.setIndex ( start ) ;^217^^^^^202^232^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^217^218^^^^202^232^propertyNodePointer.setPropertyIndex ( i ) ; int length = getLength (  ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = startIndex + position  <=  index;^195^^^^^180^210^offset = startIndex + position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = position  <<  index;^201^^^^^186^216^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = position - startPropertyIndex;^201^^^^^186^216^offset = position - index;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^start = count   instanceof   1;^214^^^^^199^229^start = count - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^start = start - 1;^214^^^^^199^229^start = count - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^start = count - 4;^214^^^^^199^229^start = count - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^length = startIndex + 1;^224^^^^^209^239^length = end + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = end  &  position + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^offset = end - start + 1;^225^^^^^210^240^offset = end - position + 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = length  ||   ( position - index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^offset = length -  ( position  |  index )  - 1;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^offset = length -  ( position - index )  - length;^232^^^^^217^247^offset = length -  ( position - index )  - 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^index += position;^239^^^^^224^254^index += length;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^int index = startPropertyIndex;^186^^^^^171^201^int index = 1;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P1_Replace_Type]^long  length = getLength (  ) ;^218^^^^^203^233^int length = getLength (  ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^propertyNodePointer.setIndex ( start ) ;^204^^^^^189^219^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^propertyNodePointer.setPropertyIndex ( startPropertyIndex ) ;^217^^^^^202^232^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^propertyNodePointer.setPropertyIndex ( start ) ;^236^^^^^221^251^propertyNodePointer.setIndex ( offset ) ;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^return true;^242^^^^^227^257^return false;^[CLASS] PropertyIterator  [METHOD] setPositionAllProperties [RETURN_TYPE] boolean   int position [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^targetReady = false;^246^^^^^231^261^targetReady = true;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^empty = true;targetReady = true;^246^^^^^231^261^targetReady = true;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^targetReady = false;targetReady = true;^246^^^^^231^261^targetReady = true;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^empty = false;^247^^^^^232^262^empty = true;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^empty = false;empty = true;^247^^^^^232^262^empty = true;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^targetReady = true;empty = true;^247^^^^^232^262^empty = true;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^String names[] = propertyNodePointer.getPropertyName (  ) ;^249^^^^^234^264^String names[] = propertyNodePointer.getPropertyNames (  ) ;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^249^^^^^234^264^String names[] = propertyNodePointer.getPropertyNames (  ) ;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( !targetReady )  {^250^^^^^235^265^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( startIndex == WHOLE_COLLECTION )  {^250^^^^^235^265^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( i < names.length )  {^250^^^^^235^265^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( i != startPropertyIndex )  {^250^^^^^235^265^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^250^^^^^235^265^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( names.length - 1 )  {^250^^^^^235^265^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( i >= 0 )  {^250^^^^^235^265^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( reverse )  {^250^^^^^235^265^if  ( !reverse )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^if ((startPropertyIndex) == (PropertyPointer.UNSPECIFIED_PROPERTY)) {    startPropertyIndex = 0;}; if ((startIndex) == (org.apache.commons.jxpath.ri.model.NodePointer.WHOLE_COLLECTION)) {    startIndex = 0;}; for (int i = startPropertyIndex; i < (names.length); i++) {    if (names[i].equals(name)) {        propertyNodePointer.setPropertyIndex(i);        if (i != (startPropertyIndex)) {            startIndex = 0;            includeStart = true;        }        empty = false;        break;    }};^250^251^252^253^^235^265^if  ( !reverse )  { if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  { startPropertyIndex = 0; }^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P16_Remove_Block]^^250^251^252^253^^235^265^if  ( !reverse )  { if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  { startPropertyIndex = 0; }^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( startPropertyIndex != PropertyPointer.UNSPECIFIED_PROPERTY )  {^270^^^^^255^285^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( startIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^270^^^^^255^285^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( PropertyPointer.UNSPECIFIED_PROPERTY == startPropertyIndex )  {^270^^^^^255^285^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P6_Replace_Expression]^if  ( names.length - 1 )  {^270^^^^^255^285^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( start == PropertyPointer.UNSPECIFIED_PROPERTY )  {^270^^^^^255^285^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^startPropertyIndex = (names.length) - 1;^270^271^272^^^255^285^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  { startPropertyIndex = names.length - 1; }^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P16_Remove_Block]^^270^271^272^^^255^285^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  { startPropertyIndex = names.length - 1; }^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  (  ( startPropertyIndex )  ==  ( PropertyPointer.UNSPECIFIED_PROPERTY )  )  {     startPropertyIndex = 0; }^270^^^^^255^285^[Delete]^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( reverse )  {     this.startPropertyIndex = PropertyPointer.UNSPECIFIED_PROPERTY;     this.startIndex = -1; }^270^^^^^255^285^[Delete]^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( start ==  ( PropertyPointer.UNSPECIFIED_PROPERTY )  )  {     start = count - 1; }^270^^^^^255^285^[Delete]^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^startPropertyIndex = names.length  >=  1;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startPropertyIndex = names.length ;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^startPropertyIndex = offset - 1;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^startPropertyIndex = names.length.length - 1;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^startPropertyIndex = names - 1;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startPropertyIndex = names.length - 0 ;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^startPropertyIndex = 0;startPropertyIndex = names.length - 1;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( startIndex != NodePointer.WHOLE_COLLECTION )  {^273^^^^^258^288^if  ( startIndex == NodePointer.WHOLE_COLLECTION )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( startIndex == NodePointer.0 )  {^273^^^^^258^288^if  ( startIndex == NodePointer.WHOLE_COLLECTION )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( position == NodePointer.WHOLE_COLLECTION )  {^273^^^^^258^288^if  ( startIndex == NodePointer.WHOLE_COLLECTION )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( this.startIndex == NodePointer.WHOLE_COLLECTION )  {^273^^^^^258^288^if  ( startIndex == NodePointer.WHOLE_COLLECTION )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^startIndex = -1;^273^274^275^^^258^288^if  ( startIndex == NodePointer.WHOLE_COLLECTION )  { startIndex = -1; }^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P16_Remove_Block]^^273^274^275^^^258^288^if  ( startIndex == NodePointer.WHOLE_COLLECTION )  { startIndex = -1; }^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  (  ( startIndex )  ==  ( WHOLE_COLLECTION )  )  {     startIndex = 0; }^273^^^^^258^288^[Delete]^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  (  ( this.startIndex )  ==  ( WHOLE_COLLECTION )  )  {     this.startIndex = 0; }^273^^^^^258^288^[Delete]^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = --4;^274^^^^^259^289^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startIndex = -1L;^274^^^^^259^289^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^startIndex = 0;startIndex = -1;^274^^^^^259^289^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^this.startIndex = -1;startIndex = -1;^274^^^^^259^289^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^startPropertyIndex = 0;startIndex = -1;^274^^^^^259^289^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^this.startIndex = 0;startIndex = -1;^274^^^^^259^289^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^propertyNodePointer.setPropertyIndex(i); if (i != (startPropertyIndex)) {    startIndex = -1;    includeStart = true;}; empty = false; break;^277^278^279^280^281^262^292^if  ( names[i].equals ( name )  )  { propertyNodePointer.setPropertyIndex ( i ) ; if  ( i != startPropertyIndex )  { startIndex = -1; includeStart = true; }^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P16_Remove_Block]^^277^278^279^280^281^262^292^if  ( names[i].equals ( name )  )  { propertyNodePointer.setPropertyIndex ( i ) ; if  ( i != startPropertyIndex )  { startIndex = -1; includeStart = true; }^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( names[i].equals ( name )  )  {     propertyNodePointer.setPropertyIndex ( i ) ;     if  ( i !=  ( startPropertyIndex )  )  {         startIndex = 0;         includeStart = true;     }     empty = false;     break; }^277^^^^^262^292^[Delete]^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( i == startPropertyIndex )  {^279^^^^^264^294^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( position != startPropertyIndex )  {^279^^^^^264^294^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( i != position )  {^279^^^^^264^294^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( startPropertyIndex != i )  {^279^^^^^264^294^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^startIndex = -1; includeStart = true;^279^280^281^282^^264^294^if  ( i != startPropertyIndex )  { startIndex = -1; includeStart = true; }^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P16_Remove_Block]^^279^280^281^282^^264^294^if  ( i != startPropertyIndex )  { startIndex = -1; includeStart = true; }^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( i !=  ( startPropertyIndex )  )  {     startIndex = 0;     includeStart = true; }^279^^^^^264^294^[Delete]^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = -length;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startIndex = -1 - 3;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^startIndex = 0;startIndex = -1;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^this.startIndex = -1;startIndex = -1;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^startPropertyIndex = 0;startIndex = -1;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^this.startIndex = 0;startIndex = -1;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^includeStart = false;^281^^^^^266^296^includeStart = true;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^this.includeStart = true;includeStart = true;^281^^^^^266^296^includeStart = true;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^this.includeStart = false;includeStart = true;^281^^^^^266^296^includeStart = true;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = --3;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startIndex = -4;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^empty = true;^283^^^^^268^298^empty = false;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^empty = true;empty = false;^283^^^^^268^298^empty = false;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^targetReady = false;empty = false;^283^^^^^268^298^empty = false;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^propertyNodePointer.setPropertyIndex ( start ) ;^278^^^^^263^293^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^propertyNodePointer.setIndex ( i ) ;^278^^^^^263^293^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^propertyNodePointer .getPropertyName (  )  ;^278^^^^^263^293^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^propertyNodePointer.setPropertyIndex ( startPropertyIndex ) ;^278^^^^^263^293^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^278^^^^^263^293^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( startIndex != startPropertyIndex )  {^279^^^^^264^294^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( i != startIndex )  {^279^^^^^264^294^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startIndex = -0;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P1_Replace_Type]^for  (  short  i = startPropertyIndex; i >= 0; i-- )  {^276^^^^^261^291^for  ( int i = startPropertyIndex; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^for  ( int i = startPropertyIndex; i > 0; i-- )  {^276^^^^^261^291^for  ( int i = startPropertyIndex; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^for  ( int i = startPropertyIndex; i >= offset; i-- )  {^276^^^^^261^291^for  ( int i = startPropertyIndex; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( startnt i = startPropertyIndex; i >= 0; i-- )  {^276^^^^^261^291^for  ( int i = startPropertyIndex; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( int i = start; i >= 0; i-- )  {^276^^^^^261^291^for  ( int i = startPropertyIndex; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( startPropertyIndexnt i = i; i >= 0; i-- )  {^276^^^^^261^291^for  ( int i = startPropertyIndex; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^for  ( startPropertyIndexnt i = startPropertyIndex; i >= 0; i-- )  {^276^^^^^261^291^for  ( int i = startPropertyIndex; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( name[i].equals ( names )  )  {^277^^^^^262^292^if  ( names[i].equals ( name )  )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = -2;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = -offset;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startIndex = -3;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^propertyNodePointer.setPropertyIndex ( startIndex ) ;^278^^^^^263^293^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( i >= startPropertyIndex )  {^279^^^^^264^294^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = -9;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = -index;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startIndex = -1 >>> 4;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^startPropertyIndex = names.length  >  1;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startPropertyIndex = names.length - ;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = -startPropertyIndex;^274^^^^^259^289^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startIndex = -4;^274^^^^^259^289^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^for  ( int i = startIndex; i >= 0; i-- )  {^276^^^^^261^291^for  ( int i = startPropertyIndex; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( startPropertyIndex != PropertyPointer.UNSPECIFIED_PROPERTY )  {^251^^^^^236^266^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( offset == PropertyPointer.UNSPECIFIED_PROPERTY )  {^251^^^^^236^266^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( PropertyPointer.UNSPECIFIED_PROPERTY == startPropertyIndex )  {^251^^^^^236^266^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( start == PropertyPointer.UNSPECIFIED_PROPERTY )  {^251^^^^^236^266^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^startPropertyIndex = 0;^251^252^253^^^236^266^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  { startPropertyIndex = 0; }^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P16_Remove_Block]^^251^252^253^^^236^266^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  { startPropertyIndex = 0; }^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  (  ( startPropertyIndex )  ==  ( PropertyPointer.UNSPECIFIED_PROPERTY )  )  {     startPropertyIndex =  ( names.length )  - 1; }^251^^^^^236^266^[Delete]^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( reverse )  {     this.startPropertyIndex = PropertyPointer.UNSPECIFIED_PROPERTY;     this.startIndex = -1; }^251^^^^^236^266^[Delete]^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( start ==  ( PropertyPointer.UNSPECIFIED_PROPERTY )  )  {     start = count - 1; }^251^^^^^236^266^[Delete]^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startPropertyIndex = 3;^252^^^^^237^267^startPropertyIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startPropertyIndex = 1;^252^^^^^237^267^startPropertyIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^startIndex = 0;startPropertyIndex = 0;^252^^^^^237^267^startPropertyIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^startPropertyIndex = names.length - 1;startPropertyIndex = 0;^252^^^^^237^267^startPropertyIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^startIndex = -1;startPropertyIndex = 0;^252^^^^^237^267^startPropertyIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^this.startIndex = 0;startPropertyIndex = 0;^252^^^^^237^267^startPropertyIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P12_Insert_Condition]^if  ( i != startPropertyIndex )  { startPropertyIndex = 0; }^252^^^^^237^267^startPropertyIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P12_Insert_Condition]^if  ( i == startPropertyIndex )  { startPropertyIndex = 0; }^252^^^^^237^267^startPropertyIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( startIndex != NodePointer.WHOLE_COLLECTION )  {^254^^^^^239^269^if  ( startIndex == NodePointer.WHOLE_COLLECTION )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( position == NodePointer.WHOLE_COLLECTION )  {^254^^^^^239^269^if  ( startIndex == NodePointer.WHOLE_COLLECTION )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( this.startIndex == NodePointer.WHOLE_COLLECTION )  {^254^^^^^239^269^if  ( startIndex == NodePointer.WHOLE_COLLECTION )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^startIndex = 0;^254^255^256^^^239^269^if  ( startIndex == NodePointer.WHOLE_COLLECTION )  { startIndex = 0; }^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P16_Remove_Block]^^254^255^256^^^239^269^if  ( startIndex == NodePointer.WHOLE_COLLECTION )  { startIndex = 0; }^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  (  ( startIndex )  ==  ( WHOLE_COLLECTION )  )  {     startIndex = -1; }^254^^^^^239^269^[Delete]^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  (  ( this.startIndex )  ==  ( WHOLE_COLLECTION )  )  {     this.startIndex = 0; }^254^^^^^239^269^[Delete]^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = 7;^255^^^^^240^270^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startIndex = 0 >> 4;^255^^^^^240^270^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^this.startIndex = -1;startIndex = 0;^255^^^^^240^270^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^startIndex = -1;startIndex = 0;^255^^^^^240^270^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^startPropertyIndex = 0;startIndex = 0;^255^^^^^240^270^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^this.startIndex = 0;startIndex = 0;^255^^^^^240^270^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( name[i].equals ( names )  )  {^258^^^^^243^273^if  ( names[i].equals ( name )  )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^propertyNodePointer.setPropertyIndex(i); if (i != (startPropertyIndex)) {    startIndex = 0;    includeStart = true;}; empty = false; break;^258^259^260^261^262^243^273^if  ( names[i].equals ( name )  )  { propertyNodePointer.setPropertyIndex ( i ) ; if  ( i != startPropertyIndex )  { startIndex = 0; includeStart = true; }^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P16_Remove_Block]^^258^259^260^261^262^243^273^if  ( names[i].equals ( name )  )  { propertyNodePointer.setPropertyIndex ( i ) ; if  ( i != startPropertyIndex )  { startIndex = 0; includeStart = true; }^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( names[i].equals ( name )  )  {     propertyNodePointer.setPropertyIndex ( i ) ;     if  ( i !=  ( startPropertyIndex )  )  {         startIndex = -1;         includeStart = true;     }     empty = false;     break; }^258^^^^^243^273^[Delete]^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( i < startPropertyIndex )  {^260^^^^^245^275^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( startIndex != startPropertyIndex )  {^260^^^^^245^275^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( i != position )  {^260^^^^^245^275^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( startPropertyIndex != i )  {^260^^^^^245^275^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( i = startPropertyIndex )  {^260^^^^^245^275^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P9_Replace_Statement]^if  ( i == startPropertyIndex )  {^260^^^^^245^275^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P15_Unwrap_Block]^startIndex = 0; includeStart = true;^260^261^262^263^^245^275^if  ( i != startPropertyIndex )  { startIndex = 0; includeStart = true; }^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P16_Remove_Block]^^260^261^262^263^^245^275^if  ( i != startPropertyIndex )  { startIndex = 0; includeStart = true; }^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P13_Insert_Block]^if  ( i !=  ( startPropertyIndex )  )  {     startIndex = -1;     includeStart = true; }^260^^^^^245^275^[Delete]^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = 7;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startIndex = 0L;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^this.startIndex = -1;startIndex = 0;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^startIndex = -1;startIndex = 0;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^startPropertyIndex = 0;startIndex = 0;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^this.startIndex = 0;startIndex = 0;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^includeStart = false;^262^^^^^247^277^includeStart = true;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^this.includeStart = true;includeStart = true;^262^^^^^247^277^includeStart = true;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^this.includeStart = false;includeStart = true;^262^^^^^247^277^includeStart = true;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startIndex = 2;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^empty = true;^264^^^^^249^279^empty = false;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^empty = true;empty = false;^264^^^^^249^279^empty = false;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^targetReady = false;empty = false;^264^^^^^249^279^empty = false;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^propertyNodePointer.setPropertyIndex ( startPropertyIndex ) ;^259^^^^^244^274^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^propertyNodePointer.setIndex ( i ) ;^259^^^^^244^274^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^propertyNodePointer .getPropertyName (  )  ;^259^^^^^244^274^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^propertyNodePointer.setPropertyIndex ( start ) ;^259^^^^^244^274^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^259^^^^^244^274^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( i >= startPropertyIndex )  {^260^^^^^245^275^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( position != startPropertyIndex )  {^260^^^^^245^275^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = length;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P1_Replace_Type]^for  (  short  i = startPropertyIndex; i < names.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^for  ( int i = startPropertyIndex; i == names.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( positionnt i = startPropertyIndex; i < names.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( int i = start; i < names.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( int i = startPropertyIndex; i < startPropertyIndex; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( startPropertyIndexnt i = i; i < names.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( int i = names; i < startPropertyIndex.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( int i = startPropertyIndex; i < namess.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( int i = names.length; i < startPropertyIndex; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^for  ( int i = startIndex; i < names.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( namess[i].equals ( name )  )  {^258^^^^^243^273^if  ( names[i].equals ( name )  )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = offset;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startIndex = 3;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startIndex = 1;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( i != start )  {^260^^^^^245^275^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = -7;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = index;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startPropertyIndex = startIndex;^252^^^^^237^267^startPropertyIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = -9;^255^^^^^240^270^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startIndex = 2;^255^^^^^240^270^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( int i = position; i < names.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^propertyNodePointer.setPropertyIndex ( startIndex ) ;^259^^^^^244^274^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startPropertyIndex = startPropertyIndex;^252^^^^^237^267^startPropertyIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startPropertyIndex = 0 << 2;^252^^^^^237^267^startPropertyIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startIndex = 0 * 2;^255^^^^^240^270^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startIndex = 4;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = -9;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( i <= startPropertyIndex )  {^260^^^^^245^275^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( start != startPropertyIndex )  {^260^^^^^245^275^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = start;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startIndex = 0 * 1;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( startPropertyIndex > PropertyPointer.UNSPECIFIED_PROPERTY )  {^270^^^^^255^285^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( startPropertyIndex == 2 )  {^270^^^^^255^285^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( offset == PropertyPointer.UNSPECIFIED_PROPERTY )  {^270^^^^^255^285^if  ( startPropertyIndex == PropertyPointer.UNSPECIFIED_PROPERTY )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^startPropertyIndex = names.length  <=  1;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startPropertyIndex = names.length - end;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( startPropertyIndex == NodePointer.WHOLE_COLLECTION )  {^273^^^^^258^288^if  ( startIndex == NodePointer.WHOLE_COLLECTION )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startIndex = -2;^274^^^^^259^289^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( namess[i].equals ( name )  )  {^277^^^^^262^292^if  ( names[i].equals ( name )  )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( start != startPropertyIndex )  {^279^^^^^264^294^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^if  ( i = startPropertyIndex )  {^279^^^^^264^294^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startIndex = -1 * 4;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = -;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^propertyNodePointer.setPropertyIndex ( position ) ;^278^^^^^263^293^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = -startPropertyIndex;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startIndex = -1 + 3;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^for  ( int i = startPropertyIndex; i > names.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( startPropertyIndexnt i = startPropertyIndex; i < names.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( int i = startPropertyIndex; i < startIndex; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( nament i = startPropertyIndex; i < is.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( int i = startPropertyIndex; i < name.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^for  ( startnt i = startPropertyIndex; i < names.length; i++ )  {^257^^^^^242^272^for  ( int i = startPropertyIndex; i < names.length; i++ )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^if  ( i != startIndex )  {^260^^^^^245^275^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = startIndex;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = i;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^propertyNodePointer.setPropertyIndex ( position ) ;^259^^^^^244^274^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^propertyNodePointer.setIndex ( start ) ;^259^^^^^244^274^propertyNodePointer.setPropertyIndex ( i ) ;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( i > startPropertyIndex )  {^260^^^^^245^275^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = -3;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startIndex = 0 << 0;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^for  ( int i = startPropertyIndex; i >= 3; i-- )  {^276^^^^^261^291^for  ( int i = startPropertyIndex; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( startIndexnt i = startPropertyIndex; i >= 0; i-- )  {^276^^^^^261^291^for  ( int i = startPropertyIndex; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^if  ( i <= startPropertyIndex )  {^279^^^^^264^294^if  ( i != startPropertyIndex )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startIndex = -1 + 0;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = -8;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = -position;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startIndex = -1L;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startPropertyIndex = 2;^252^^^^^237^267^startPropertyIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = -2;^255^^^^^240^270^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startIndex = 4;^255^^^^^240^270^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^startIndex = 0 * 4;^261^^^^^246^276^startIndex = 0;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P2_Replace_Operator]^startPropertyIndex = names.length  |  1;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startPropertyIndex = names.length - start;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^startPropertyIndex = startIndex - 1;^271^^^^^256^286^startPropertyIndex = names.length - 1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^startIndex = -10;^280^^^^^265^295^startIndex = -1;^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^for  ( int i = position; i >= 0; i-- )  {^276^^^^^261^291^for  ( int i = startPropertyIndex; i >= 0; i-- )  {^[CLASS] PropertyIterator  [METHOD] prepareForIndividualProperty [RETURN_TYPE] void   String name [VARIABLES] boolean  empty  includeStart  ready  reverse  targetReady  String  name  String[]  names  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P1_Replace_Type]^short  length;^294^^^^^293^303^int length;^[CLASS] PropertyIterator  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Throwable  t  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^int index;int length;^294^^^^^293^303^int length;^[CLASS] PropertyIterator  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Throwable  t  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^length = propertyNodePointer.getIndex (  ) ;^296^^^^^293^303^length = propertyNodePointer.getLength (  ) ;^[CLASS] PropertyIterator  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Throwable  t  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P7_Replace_Invocation]^length = propertyNodePointer .reset (  )  ;^296^^^^^293^303^length = propertyNodePointer.getLength (  ) ;^[CLASS] PropertyIterator  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Throwable  t  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P14_Delete_Statement]^^296^^^^^293^303^length = propertyNodePointer.getLength (  ) ;^[CLASS] PropertyIterator  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Throwable  t  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^String names[] = propertyNodePointer.getPropertyNames (  ) ;length = propertyNodePointer.getLength (  ) ;^296^^^^^293^303^length = propertyNodePointer.getLength (  ) ;^[CLASS] PropertyIterator  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Throwable  t  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^propertyNodePointer.setPropertyIndex ( i ) ;length = propertyNodePointer.getLength (  ) ;^296^^^^^293^303^length = propertyNodePointer.getLength (  ) ;^[CLASS] PropertyIterator  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Throwable  t  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^return propertyNodePointer.getValuePointer (  ) ;length = propertyNodePointer.getLength (  ) ;^296^^^^^293^303^length = propertyNodePointer.getLength (  ) ;^[CLASS] PropertyIterator  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Throwable  t  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^npp.setPropertyName ( propertyNodePointer.getPropertyName (  )  ) ;length = propertyNodePointer.getLength (  ) ;^296^^^^^293^303^length = propertyNodePointer.getLength (  ) ;^[CLASS] PropertyIterator  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Throwable  t  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^propertyNodePointer.setIndex ( offset ) ;length = propertyNodePointer.getLength (  ) ;^296^^^^^293^303^length = propertyNodePointer.getLength (  ) ;^[CLASS] PropertyIterator  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Throwable  t  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^npp.setIndex ( propertyNodePointer.getIndex (  )  ) ;length = propertyNodePointer.getLength (  ) ;^296^^^^^293^303^length = propertyNodePointer.getLength (  ) ;^[CLASS] PropertyIterator  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Throwable  t  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^int count = propertyNodePointer.getPropertyCount (  ) ;length = propertyNodePointer.getLength (  ) ;^296^^^^^293^303^length = propertyNodePointer.getLength (  ) ;^[CLASS] PropertyIterator  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Throwable  t  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P3_Replace_Literal]^length = length;^300^^^^^293^303^length = 0;^[CLASS] PropertyIterator  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Throwable  t  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P8_Replace_Mix]^length = 0 ;^300^^^^^293^303^length = 0;^[CLASS] PropertyIterator  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Throwable  t  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^length = end + 1;length = 0;^300^^^^^293^303^length = 0;^[CLASS] PropertyIterator  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Throwable  t  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P11_Insert_Donor_Statement]^end = length - 1;length = 0;^300^^^^^293^303^length = 0;^[CLASS] PropertyIterator  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Throwable  t  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
[P5_Replace_Variable]^return startPropertyIndex;^302^^^^^293^303^return length;^[CLASS] PropertyIterator  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Throwable  t  boolean  empty  includeStart  ready  reverse  targetReady  String  name  PropertyPointer  propertyNodePointer  int  count  end  i  index  length  offset  position  start  startIndex  startPropertyIndex  
