[P3_Replace_Literal]^private boolean setStarted = true;^31^^^^^26^36^private boolean setStarted = false;^[CLASS] ParentContext   [VARIABLES] 
[P8_Replace_Mix]^private boolean setStarted  = null ;^31^^^^^26^36^private boolean setStarted = false;^[CLASS] ParentContext   [VARIABLES] 
[P14_Delete_Statement]^^35^36^^^^34^37^super ( parentContext ) ; this.nodeTest = nodeTest;^[CLASS] ParentContext  [METHOD] <init> [RETURN_TYPE] NodeTest)   EvalContext parentContext NodeTest nodeTest [VARIABLES] EvalContext  parentContext  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P8_Replace_Mix]^this.nodeTest =  null;^36^^^^^34^37^this.nodeTest = nodeTest;^[CLASS] ParentContext  [METHOD] <init> [RETURN_TYPE] NodeTest)   EvalContext parentContext NodeTest nodeTest [VARIABLES] EvalContext  parentContext  boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P3_Replace_Literal]^return 10;^44^^^^^43^45^return 1;^[CLASS] ParentContext  [METHOD] getCurrentPosition [RETURN_TYPE] int   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P8_Replace_Mix]^return 1 - 0;^44^^^^^43^45^return 1;^[CLASS] ParentContext  [METHOD] getCurrentPosition [RETURN_TYPE] int   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P8_Replace_Mix]^return -1 % 0;^48^^^^^47^49^return -1;^[CLASS] ParentContext  [METHOD] getDocumentOrder [RETURN_TYPE] int   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P14_Delete_Statement]^^52^^^^^51^54^super.reset (  ) ;^[CLASS] ParentContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P3_Replace_Literal]^setStarted = true;^53^^^^^51^54^setStarted = false;^[CLASS] ParentContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^setStarted = true;setStarted = false;^53^^^^^51^54^setStarted = false;^[CLASS] ParentContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  
[P7_Replace_Invocation]^super .reset (  )  ;^57^^^^^56^59^super.setPosition ( position ) ;^[CLASS] ParentContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[P14_Delete_Statement]^^57^58^^^^56^59^super.setPosition ( position ) ; return position == 1;^[CLASS] ParentContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[P2_Replace_Operator]^return position != 1;^58^^^^^56^59^return position == 1;^[CLASS] ParentContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[P3_Replace_Literal]^return position == position;^58^^^^^56^59^return position == 1;^[CLASS] ParentContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[P8_Replace_Mix]^return position  !=  1;;^58^^^^^56^59^return position == 1;^[CLASS] ParentContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  NodeTest  nodeTest  int  position  
[P15_Unwrap_Block]^return false;^63^64^65^^^61^79^if  ( setStarted )  { return false; }^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P16_Remove_Block]^^63^64^65^^^61^79^if  ( setStarted )  { return false; }^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P3_Replace_Literal]^return true;^64^^^^^61^79^return false;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P3_Replace_Literal]^setStarted = false;^66^^^^^61^79^setStarted = true;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^setStarted = false;setStarted = true;^66^^^^^61^79^setStarted = true;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P7_Replace_Invocation]^NodePointer thisLocation = parentContext .getCurrentNodePointer (  )  ;^67^^^^^61^79^NodePointer thisLocation = parentContext.getCurrentNodePointer (  ) ;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P8_Replace_Mix]^NodePointer thisLocation = 3.getCurrentNodePointer (  ) ;^67^^^^^61^79^NodePointer thisLocation = parentContext.getCurrentNodePointer (  ) ;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P14_Delete_Statement]^^67^68^^^^61^79^NodePointer thisLocation = parentContext.getCurrentNodePointer (  ) ; currentNodePointer = thisLocation.getImmediateParentPointer (  ) ;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^currentNodePointer = thisLocation.getImmediateParentPointer (  ) ;NodePointer thisLocation = parentContext.getCurrentNodePointer (  ) ;^67^^^^^61^79^NodePointer thisLocation = parentContext.getCurrentNodePointer (  ) ;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P5_Replace_Variable]^currentNodePointer = currentNodePointer.getImmediateParentPointer (  ) ;^68^^^^^61^79^currentNodePointer = thisLocation.getImmediateParentPointer (  ) ;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P7_Replace_Invocation]^currentNodePointer = thisLocation.testNode (  ) ;^68^^^^^61^79^currentNodePointer = thisLocation.getImmediateParentPointer (  ) ;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P8_Replace_Mix]^currentNodePointer =  null.getImmediateParentPointer (  ) ;^68^^^^^61^79^currentNodePointer = thisLocation.getImmediateParentPointer (  ) ;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^currentNodePointer = currentNodePointer.getImmediateParentPointer (  ) ;currentNodePointer = thisLocation.getImmediateParentPointer (  ) ;^68^^^^^61^79^currentNodePointer = thisLocation.getImmediateParentPointer (  ) ;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P7_Replace_Invocation]^currentNodePointer = thisLocation .isContainer (  )  ;^68^^^^^61^79^currentNodePointer = thisLocation.getImmediateParentPointer (  ) ;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P8_Replace_Mix]^currentNodePointer = currentNodePointer.testNode (  ) ;^68^^^^^61^79^currentNodePointer = thisLocation.getImmediateParentPointer (  ) ;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P14_Delete_Statement]^^68^^^^^61^79^currentNodePointer = thisLocation.getImmediateParentPointer (  ) ;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^&& currentNodePointer.isContainer (  )  )  { currentNodePointer = currentNodePointer.getImmediateParentPointer (  ) ;currentNodePointer = thisLocation.getImmediateParentPointer (  ) ;^68^^^^^61^79^currentNodePointer = thisLocation.getImmediateParentPointer (  ) ;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^NodePointer thisLocation = parentContext.getCurrentNodePointer (  ) ;currentNodePointer = thisLocation.getImmediateParentPointer (  ) ;^68^^^^^61^79^currentNodePointer = thisLocation.getImmediateParentPointer (  ) ;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P2_Replace_Operator]^while  ( currentNodePointer != null || currentNodePointer.isContainer (  )  )  {^69^70^^^^61^79^while  ( currentNodePointer != null && currentNodePointer.isContainer (  )  )  {^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P2_Replace_Operator]^while  ( currentNodePointer == null && currentNodePointer.isContainer (  )  )  {^69^70^^^^61^79^while  ( currentNodePointer != null && currentNodePointer.isContainer (  )  )  {^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P5_Replace_Variable]^while  ( thisLocation != null && currentNodePointer.isContainer (  )  )  {^69^70^^^^61^79^while  ( currentNodePointer != null && currentNodePointer.isContainer (  )  )  {^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P7_Replace_Invocation]^while  ( currentNodePointer != null && currentNodePointer.getImmediateParentPointer (  )  )  {^69^70^^^^61^79^while  ( currentNodePointer != null && currentNodePointer.isContainer (  )  )  {^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P5_Replace_Variable]^currentNodePointer = thisLocation.getImmediateParentPointer (  ) ;^71^^^^^61^79^currentNodePointer = currentNodePointer.getImmediateParentPointer (  ) ;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P7_Replace_Invocation]^currentNodePointer = currentNodePointer.isContainer (  ) ;^71^^^^^61^79^currentNodePointer = currentNodePointer.getImmediateParentPointer (  ) ;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P8_Replace_Mix]^currentNodePointer  = null ;^71^^^^^61^79^currentNodePointer = currentNodePointer.getImmediateParentPointer (  ) ;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^currentNodePointer = thisLocation.getImmediateParentPointer (  ) ;currentNodePointer = currentNodePointer.getImmediateParentPointer (  ) ;^71^^^^^61^79^currentNodePointer = currentNodePointer.getImmediateParentPointer (  ) ;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P12_Insert_Condition]^if  ( currentNodePointer != null && currentNodePointer.testNode ( nodeTest )  )  { currentNodePointer = currentNodePointer.getImmediateParentPointer (  ) ; }^71^^^^^61^79^currentNodePointer = currentNodePointer.getImmediateParentPointer (  ) ;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P8_Replace_Mix]^currentNodePointer = thisLocation.isContainer (  ) ;^71^^^^^61^79^currentNodePointer = currentNodePointer.getImmediateParentPointer (  ) ;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P14_Delete_Statement]^^71^^^^^61^79^currentNodePointer = currentNodePointer.getImmediateParentPointer (  ) ;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^&& currentNodePointer.isContainer (  )  )  { currentNodePointer = currentNodePointer.getImmediateParentPointer (  ) ;currentNodePointer = currentNodePointer.getImmediateParentPointer (  ) ;^71^^^^^61^79^currentNodePointer = currentNodePointer.getImmediateParentPointer (  ) ;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P8_Replace_Mix]^currentNodePointer  =  currentNodePointer ;^71^^^^^61^79^currentNodePointer = currentNodePointer.getImmediateParentPointer (  ) ;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P5_Replace_Variable]^&& thisLocation.isContainer (  )  )  {^70^^^^^61^79^&& currentNodePointer.isContainer (  )  )  {^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P7_Replace_Invocation]^&& currentNodePointer.getImmediateParentPointer (  )  )  {^70^^^^^61^79^&& currentNodePointer.isContainer (  )  )  {^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P14_Delete_Statement]^^70^71^^^^61^79^&& currentNodePointer.isContainer (  )  )  { currentNodePointer = currentNodePointer.getImmediateParentPointer (  ) ;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P2_Replace_Operator]^if  ( currentNodePointer != null || currentNodePointer.testNode ( nodeTest )  )  {^73^74^^^^61^79^if  ( currentNodePointer != null && currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P2_Replace_Operator]^if  ( currentNodePointer == null && currentNodePointer.testNode ( nodeTest )  )  {^73^74^^^^61^79^if  ( currentNodePointer != null && currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P5_Replace_Variable]^if  ( thisLocation != null && currentNodePointer.testNode ( nodeTest )  )  {^73^74^^^^61^79^if  ( currentNodePointer != null && currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P5_Replace_Variable]^if  ( nodeTest != null && currentNodePointer.testNode ( currentNodePointer )  )  {^73^74^^^^61^79^if  ( currentNodePointer != null && currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P6_Replace_Expression]^if  ( currentNodePointer != null ) {^73^74^^^^61^79^if  ( currentNodePointer != null && currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P6_Replace_Expression]^if  (  currentNodePointer.testNode ( nodeTest )  )  {^73^74^^^^61^79^if  ( currentNodePointer != null && currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P7_Replace_Invocation]^if  ( currentNodePointer != null && currentNodePointer.getImmediateParentPointer ( nodeTest )  )  {^73^74^^^^61^79^if  ( currentNodePointer != null && currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P8_Replace_Mix]^if  ( currentNodePointer != true ) {^73^74^^^^61^79^if  ( currentNodePointer != null && currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P15_Unwrap_Block]^(position)++; return true;^73^74^75^76^77^61^79^if  ( currentNodePointer != null && currentNodePointer.testNode ( nodeTest )  )  { position++; return true; }^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P16_Remove_Block]^^73^74^75^76^77^61^79^if  ( currentNodePointer != null && currentNodePointer.testNode ( nodeTest )  )  { position++; return true; }^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P3_Replace_Literal]^return false;^76^^^^^61^79^return true;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P5_Replace_Variable]^&& thisLocation.testNode ( nodeTest )  )  {^74^^^^^61^79^&& currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P5_Replace_Variable]^&& nodeTest.testNode ( currentNodePointer )  )  {^74^^^^^61^79^&& currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P7_Replace_Invocation]^&& currentNodePointer.getImmediateParentPointer ( nodeTest )  )  {^74^^^^^61^79^&& currentNodePointer.testNode ( nodeTest )  )  {^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P14_Delete_Statement]^^74^75^^^^61^79^&& currentNodePointer.testNode ( nodeTest )  )  { position++;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
[P3_Replace_Literal]^return true;^78^^^^^61^79^return false;^[CLASS] ParentContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] boolean  setStarted  NodePointer  currentNodePointer  thisLocation  NodeTest  nodeTest  
