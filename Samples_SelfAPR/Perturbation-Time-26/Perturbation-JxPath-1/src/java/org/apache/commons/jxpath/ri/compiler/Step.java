[P1_Replace_Type]^private  short  axis;^26^^^^^21^31^private int axis;^[CLASS] Step   [VARIABLES] 
[P8_Replace_Mix]^this.axis =  null;^31^^^^^30^34^this.axis = axis;^[CLASS] Step  [METHOD] <init> [RETURN_TYPE] Expression[])   int axis NodeTest nodeTest Expression[] predicates [VARIABLES] boolean  Expression[]  predicates  int  axis  NodeTest  nodeTest  
[P8_Replace_Mix]^this.nodeTest =  null;^32^^^^^30^34^this.nodeTest = nodeTest;^[CLASS] Step  [METHOD] <init> [RETURN_TYPE] Expression[])   int axis NodeTest nodeTest Expression[] predicates [VARIABLES] boolean  Expression[]  predicates  int  axis  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^this.predicates = predicates;this.nodeTest = nodeTest;^32^^^^^30^34^this.nodeTest = nodeTest;^[CLASS] Step  [METHOD] <init> [RETURN_TYPE] Expression[])   int axis NodeTest nodeTest Expression[] predicates [VARIABLES] boolean  Expression[]  predicates  int  axis  NodeTest  nodeTest  
[P8_Replace_Mix]^this.predicates =  null;^33^^^^^30^34^this.predicates = predicates;^[CLASS] Step  [METHOD] <init> [RETURN_TYPE] Expression[])   int axis NodeTest nodeTest Expression[] predicates [VARIABLES] boolean  Expression[]  predicates  int  axis  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^this.nodeTest = nodeTest;this.predicates = predicates;^33^^^^^30^34^this.predicates = predicates;^[CLASS] Step  [METHOD] <init> [RETURN_TYPE] Expression[])   int axis NodeTest nodeTest Expression[] predicates [VARIABLES] boolean  Expression[]  predicates  int  axis  NodeTest  nodeTest  
[P2_Replace_Operator]^if  ( predicates == null )  {^49^^^^^48^57^if  ( predicates != null )  {^[CLASS] Step  [METHOD] isContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P6_Replace_Expression]^if  ( i < predicates.length )  {^49^^^^^48^57^if  ( predicates != null )  {^[CLASS] Step  [METHOD] isContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P8_Replace_Mix]^if  ( predicates != false )  {^49^^^^^48^57^if  ( predicates != null )  {^[CLASS] Step  [METHOD] isContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P15_Unwrap_Block]^for (int i = 0; i < (predicates.length); i++) {    if (predicates[i].isContextDependent()) {        return true;    }};^49^50^51^52^53^48^57^if  ( predicates != null )  { for  ( int i = 0; i < predicates.length; i++ )  { if  ( predicates[i].isContextDependent (  )  )  { return true; }^[CLASS] Step  [METHOD] isContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P16_Remove_Block]^^49^50^51^52^53^48^57^if  ( predicates != null )  { for  ( int i = 0; i < predicates.length; i++ )  { if  ( predicates[i].isContextDependent (  )  )  { return true; }^[CLASS] Step  [METHOD] isContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( predicates != null )  {     for  ( int i = 0; i <  ( predicates.length ) ; i++ )  {         buffer.append ( '[' ) ;         buffer.append ( predicates[i] ) ;         buffer.append ( ']' ) ;     } }^49^^^^^48^57^[Delete]^[CLASS] Step  [METHOD] isContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P7_Replace_Invocation]^if  ( predicates[i] .getNodeType (  )   )  {^51^^^^^48^57^if  ( predicates[i].isContextDependent (  )  )  {^[CLASS] Step  [METHOD] isContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P15_Unwrap_Block]^return true;^51^52^53^^^48^57^if  ( predicates[i].isContextDependent (  )  )  { return true; }^[CLASS] Step  [METHOD] isContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P16_Remove_Block]^^51^52^53^^^48^57^if  ( predicates[i].isContextDependent (  )  )  { return true; }^[CLASS] Step  [METHOD] isContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^return false;^52^^^^^48^57^return true;^[CLASS] Step  [METHOD] isContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P1_Replace_Type]^for  (  short  i = 0; i < predicates.length; i++ )  {^50^^^^^48^57^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] Step  [METHOD] isContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P2_Replace_Operator]^for  ( int i = 0; i > predicates.length; i++ )  {^50^^^^^48^57^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] Step  [METHOD] isContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^for  ( int i = i; i < predicates.length; i++ )  {^50^^^^^48^57^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] Step  [METHOD] isContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P13_Insert_Block]^if  (  ( predicates )  != null )  {     for  ( int i = 0; i <  ( predicates.length ) ; i++ )  {         if  ( predicates[i].isContextDependent (  )  )  {             return true;         }     } }^50^^^^^48^57^[Delete]^[CLASS] Step  [METHOD] isContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( predicates[i].isContextDependent (  )  )  {     return true; }^51^^^^^48^57^[Delete]^[CLASS] Step  [METHOD] isContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P1_Replace_Type]^for  (  long  i = 0; i < predicates.length; i++ )  {^50^^^^^48^57^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] Step  [METHOD] isContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^for  ( int i = axis; i < predicates.length; i++ )  {^50^^^^^48^57^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] Step  [METHOD] isContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^for  ( int i = -8; i < predicates.length; i++ )  {^50^^^^^48^57^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] Step  [METHOD] isContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^return true;^56^^^^^48^57^return false;^[CLASS] Step  [METHOD] isContextDependent [RETURN_TYPE] boolean   [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P1_Replace_Type]^short  axis = getAxis (  ) ;^61^^^^^46^76^int axis = getAxis (  ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P7_Replace_Invocation]^int axis = getPredicates (  ) ;^61^^^^^46^76^int axis = getAxis (  ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^61^^^^^46^76^int axis = getAxis (  ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P5_Replace_Variable]^buffer.append ( iToString ( axis )  ) ;^89^^^^^81^92^buffer.append ( axisToString ( axis )  ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^89^90^^^^81^92^buffer.append ( axisToString ( axis )  ) ; buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( predicates[i] ) ;buffer.append ( axisToString ( axis )  ) ;^89^^^^^81^92^buffer.append ( axisToString ( axis )  ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( nodeTest ) ;buffer.append ( axisToString ( axis )  ) ;^89^^^^^81^92^buffer.append ( axisToString ( axis )  ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^89^^^^^81^92^buffer.append ( axisToString ( axis )  ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^buffer.append ( ":" ) ;^90^^^^^81^92^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P7_Replace_Invocation]^buffer .append ( this )  ;^90^^^^^81^92^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^90^91^^^^81^92^buffer.append ( "::" ) ; buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( "::" ) ;^90^^^^^81^92^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "." ) ;buffer.append ( "::" ) ;^90^^^^^81^92^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( predicates[i] ) ;buffer.append ( "::" ) ;^90^^^^^81^92^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "" ) ;buffer.append ( "::" ) ;^90^^^^^81^92^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( nodeTest ) ;buffer.append ( "::" ) ;^90^^^^^81^92^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ".." ) ;buffer.append ( "::" ) ;^90^^^^^81^92^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '@' ) ;buffer.append ( "::" ) ;^90^^^^^81^92^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( "::" ) ;^90^^^^^81^92^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P8_Replace_Mix]^buffer .toString (  )  ;^91^^^^^81^92^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^91^^^^^81^92^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( nodeTest ) ;^91^^^^^81^92^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "." ) ;buffer.append ( nodeTest ) ;^91^^^^^81^92^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( predicates[i] ) ;buffer.append ( nodeTest ) ;^91^^^^^81^92^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "" ) ;buffer.append ( nodeTest ) ;^91^^^^^81^92^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( axisToString ( axis )  ) ;buffer.append ( nodeTest ) ;^91^^^^^81^92^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "::" ) ;buffer.append ( nodeTest ) ;^91^^^^^81^92^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ".." ) ;buffer.append ( nodeTest ) ;^91^^^^^81^92^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '@' ) ;buffer.append ( nodeTest ) ;^91^^^^^81^92^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( nodeTest ) ;^91^^^^^81^92^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^86^^^^^81^92^buffer.append ( "" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( "" ) ;^86^^^^^81^92^buffer.append ( "" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "." ) ;buffer.append ( "" ) ;^86^^^^^81^92^buffer.append ( "" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( predicates[i] ) ;buffer.append ( "" ) ;^86^^^^^81^92^buffer.append ( "" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "::" ) ;buffer.append ( "" ) ;^86^^^^^81^92^buffer.append ( "" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( nodeTest ) ;buffer.append ( "" ) ;^86^^^^^81^92^buffer.append ( "" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ".." ) ;buffer.append ( "" ) ;^86^^^^^81^92^buffer.append ( "" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '@' ) ;buffer.append ( "" ) ;^86^^^^^81^92^buffer.append ( "" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( "" ) ;^86^^^^^81^92^buffer.append ( "" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P7_Replace_Invocation]^&&  (  ( NodeTypeTest )  nodeTest ) .isContextDependent (  ) == Compiler.NODE_TYPE_NODE &&  ( predicates == null || predicates.length == 0 )  )  {^83^84^85^^^68^98^&&  (  ( NodeTypeTest )  nodeTest ) .getNodeType (  ) == Compiler.NODE_TYPE_NODE &&  ( predicates == null || predicates.length == 0 )  )  {^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^86^^^^^71^101^buffer.append ( "" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( "" ) ;^86^^^^^71^101^buffer.append ( "" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "." ) ;buffer.append ( "" ) ;^86^^^^^71^101^buffer.append ( "" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( predicates[i] ) ;buffer.append ( "" ) ;^86^^^^^71^101^buffer.append ( "" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "::" ) ;buffer.append ( "" ) ;^86^^^^^71^101^buffer.append ( "" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( nodeTest ) ;buffer.append ( "" ) ;^86^^^^^71^101^buffer.append ( "" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ".." ) ;buffer.append ( "" ) ;^86^^^^^71^101^buffer.append ( "" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '@' ) ;buffer.append ( "" ) ;^86^^^^^71^101^buffer.append ( "" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( "" ) ;^86^^^^^71^101^buffer.append ( "" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P5_Replace_Variable]^buffer.append ( iToString ( axis )  ) ;^89^^^^^74^104^buffer.append ( axisToString ( axis )  ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^89^90^^^^74^104^buffer.append ( axisToString ( axis )  ) ; buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( predicates[i] ) ;buffer.append ( axisToString ( axis )  ) ;^89^^^^^74^104^buffer.append ( axisToString ( axis )  ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( nodeTest ) ;buffer.append ( axisToString ( axis )  ) ;^89^^^^^74^104^buffer.append ( axisToString ( axis )  ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^buffer.append ( ":" ) ;^90^^^^^75^105^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^90^91^^^^75^105^buffer.append ( "::" ) ; buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( "::" ) ;^90^^^^^75^105^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "." ) ;buffer.append ( "::" ) ;^90^^^^^75^105^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( predicates[i] ) ;buffer.append ( "::" ) ;^90^^^^^75^105^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "" ) ;buffer.append ( "::" ) ;^90^^^^^75^105^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( nodeTest ) ;buffer.append ( "::" ) ;^90^^^^^75^105^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ".." ) ;buffer.append ( "::" ) ;^90^^^^^75^105^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '@' ) ;buffer.append ( "::" ) ;^90^^^^^75^105^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( "::" ) ;^90^^^^^75^105^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^91^^^^^76^106^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( nodeTest ) ;^91^^^^^76^106^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "." ) ;buffer.append ( nodeTest ) ;^91^^^^^76^106^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( predicates[i] ) ;buffer.append ( nodeTest ) ;^91^^^^^76^106^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "" ) ;buffer.append ( nodeTest ) ;^91^^^^^76^106^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( axisToString ( axis )  ) ;buffer.append ( nodeTest ) ;^91^^^^^76^106^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "::" ) ;buffer.append ( nodeTest ) ;^91^^^^^76^106^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ".." ) ;buffer.append ( nodeTest ) ;^91^^^^^76^106^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '@' ) ;buffer.append ( nodeTest ) ;^91^^^^^76^106^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( nodeTest ) ;^91^^^^^76^106^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^79^^^^^75^92^buffer.append ( ".." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( ".." ) ;^79^^^^^75^92^buffer.append ( ".." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "." ) ;buffer.append ( ".." ) ;^79^^^^^75^92^buffer.append ( ".." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( predicates[i] ) ;buffer.append ( ".." ) ;^79^^^^^75^92^buffer.append ( ".." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "" ) ;buffer.append ( ".." ) ;^79^^^^^75^92^buffer.append ( ".." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "::" ) ;buffer.append ( ".." ) ;^79^^^^^75^92^buffer.append ( ".." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( nodeTest ) ;buffer.append ( ".." ) ;^79^^^^^75^92^buffer.append ( ".." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '@' ) ;buffer.append ( ".." ) ;^79^^^^^75^92^buffer.append ( ".." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( ".." ) ;^79^^^^^75^92^buffer.append ( ".." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^buffer.append ( "" ) ;^90^^^^^81^92^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P7_Replace_Invocation]^&&  (  ( NodeTypeTest )  nodeTest ) .isContextDependent (  ) == Compiler.NODE_TYPE_NODE )  {^77^78^^^^62^92^&&  (  ( NodeTypeTest )  nodeTest ) .getNodeType (  ) == Compiler.NODE_TYPE_NODE )  {^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^77^78^79^^^62^92^&&  (  ( NodeTypeTest )  nodeTest ) .getNodeType (  ) == Compiler.NODE_TYPE_NODE )  { buffer.append ( ".." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^buffer.append ( "." ) ;^79^^^^^64^94^buffer.append ( ".." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^79^^^^^64^94^buffer.append ( ".." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( ".." ) ;^79^^^^^64^94^buffer.append ( ".." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "." ) ;buffer.append ( ".." ) ;^79^^^^^64^94^buffer.append ( ".." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( predicates[i] ) ;buffer.append ( ".." ) ;^79^^^^^64^94^buffer.append ( ".." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "" ) ;buffer.append ( ".." ) ;^79^^^^^64^94^buffer.append ( ".." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "::" ) ;buffer.append ( ".." ) ;^79^^^^^64^94^buffer.append ( ".." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( nodeTest ) ;buffer.append ( ".." ) ;^79^^^^^64^94^buffer.append ( ".." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '@' ) ;buffer.append ( ".." ) ;^79^^^^^64^94^buffer.append ( ".." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( ".." ) ;^79^^^^^64^94^buffer.append ( ".." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^89^^^^^74^104^buffer.append ( axisToString ( axis )  ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^90^^^^^75^105^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^buffer.append ( "" ) ;^73^^^^^69^92^buffer.append ( "." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^73^^^^^69^92^buffer.append ( "." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( "." ) ;^73^^^^^69^92^buffer.append ( "." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( predicates[i] ) ;buffer.append ( "." ) ;^73^^^^^69^92^buffer.append ( "." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "" ) ;buffer.append ( "." ) ;^73^^^^^69^92^buffer.append ( "." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "::" ) ;buffer.append ( "." ) ;^73^^^^^69^92^buffer.append ( "." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( nodeTest ) ;buffer.append ( "." ) ;^73^^^^^69^92^buffer.append ( "." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ".." ) ;buffer.append ( "." ) ;^73^^^^^69^92^buffer.append ( "." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '@' ) ;buffer.append ( "." ) ;^73^^^^^69^92^buffer.append ( "." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( "." ) ;^73^^^^^69^92^buffer.append ( "." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^90^^^^^81^92^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^buffer.append ( "" ) ;^90^^^^^75^105^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P7_Replace_Invocation]^buffer .toString (  )  ;^91^^^^^76^106^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P7_Replace_Invocation]^&&  (  ( NodeTypeTest )  nodeTest ) .isContextDependent (  ) == Compiler.NODE_TYPE_NODE )  {^71^72^^^^56^86^&&  (  ( NodeTypeTest )  nodeTest ) .getNodeType (  ) == Compiler.NODE_TYPE_NODE )  {^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^71^72^73^^^56^86^&&  (  ( NodeTypeTest )  nodeTest ) .getNodeType (  ) == Compiler.NODE_TYPE_NODE )  { buffer.append ( "." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^73^^^^^58^88^buffer.append ( "." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( "." ) ;^73^^^^^58^88^buffer.append ( "." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( predicates[i] ) ;buffer.append ( "." ) ;^73^^^^^58^88^buffer.append ( "." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "" ) ;buffer.append ( "." ) ;^73^^^^^58^88^buffer.append ( "." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "::" ) ;buffer.append ( "." ) ;^73^^^^^58^88^buffer.append ( "." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( nodeTest ) ;buffer.append ( "." ) ;^73^^^^^58^88^buffer.append ( "." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ".." ) ;buffer.append ( "." ) ;^73^^^^^58^88^buffer.append ( "." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '@' ) ;buffer.append ( "." ) ;^73^^^^^58^88^buffer.append ( "." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( "." ) ;^73^^^^^58^88^buffer.append ( "." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^buffer.append ( "..." ) ;^79^^^^^64^94^buffer.append ( ".." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^66^^^^^51^81^buffer.append ( '@' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( '@' ) ;^66^^^^^51^81^buffer.append ( '@' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "." ) ;buffer.append ( '@' ) ;^66^^^^^51^81^buffer.append ( '@' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( predicates[i] ) ;buffer.append ( '@' ) ;^66^^^^^51^81^buffer.append ( '@' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "" ) ;buffer.append ( '@' ) ;^66^^^^^51^81^buffer.append ( '@' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "::" ) ;buffer.append ( '@' ) ;^66^^^^^51^81^buffer.append ( '@' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( nodeTest ) ;buffer.append ( '@' ) ;^66^^^^^51^81^buffer.append ( '@' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ".." ) ;buffer.append ( '@' ) ;^66^^^^^51^81^buffer.append ( '@' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( '@' ) ;^66^^^^^51^81^buffer.append ( '@' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^67^^^^^52^82^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( nodeTest ) ;^67^^^^^52^82^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "." ) ;buffer.append ( nodeTest ) ;^67^^^^^52^82^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( predicates[i] ) ;buffer.append ( nodeTest ) ;^67^^^^^52^82^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "" ) ;buffer.append ( nodeTest ) ;^67^^^^^52^82^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( axisToString ( axis )  ) ;buffer.append ( nodeTest ) ;^67^^^^^52^82^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "::" ) ;buffer.append ( nodeTest ) ;^67^^^^^52^82^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ".." ) ;buffer.append ( nodeTest ) ;^67^^^^^52^82^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '@' ) ;buffer.append ( nodeTest ) ;^67^^^^^52^82^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( nodeTest ) ;^67^^^^^52^82^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^buffer.append ( "..." ) ;^79^^^^^75^92^buffer.append ( ".." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^buffer.append ( "" ) ;^79^^^^^64^94^buffer.append ( ".." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P8_Replace_Mix]^buffer .append ( 4 )  ;^79^^^^^64^94^buffer.append ( ".." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P7_Replace_Invocation]^buffer .append ( 2 )  ;^89^^^^^74^104^buffer.append ( axisToString ( axis )  ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^buffer.append ( ":::" ) ;^90^^^^^81^92^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P8_Replace_Mix]^buffer .toString (  )  ;^67^^^^^52^82^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P8_Replace_Mix]^buffer .toString (  )  ;^63^^^^^48^78^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^63^^^^^48^78^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( nodeTest ) ;^63^^^^^48^78^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "." ) ;buffer.append ( nodeTest ) ;^63^^^^^48^78^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( predicates[i] ) ;buffer.append ( nodeTest ) ;^63^^^^^48^78^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "" ) ;buffer.append ( nodeTest ) ;^63^^^^^48^78^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( axisToString ( axis )  ) ;buffer.append ( nodeTest ) ;^63^^^^^48^78^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "::" ) ;buffer.append ( nodeTest ) ;^63^^^^^48^78^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ".." ) ;buffer.append ( nodeTest ) ;^63^^^^^48^78^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '@' ) ;buffer.append ( nodeTest ) ;^63^^^^^48^78^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( nodeTest ) ;^63^^^^^48^78^buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P8_Replace_Mix]^buffer .append ( 4 )  ;^89^^^^^74^104^buffer.append ( axisToString ( axis )  ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^buffer.append ( ":::" ) ;^90^^^^^75^105^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P7_Replace_Invocation]^buffer .append ( null )  ;^90^^^^^75^105^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P7_Replace_Invocation]^buffer .append ( 4 )  ;^90^^^^^75^105^buffer.append ( "::" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^buffer.append ( "." ) ;^79^^^^^75^92^buffer.append ( ".." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^buffer.append ( "" ) ;^73^^^^^58^88^buffer.append ( "." ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^66^67^^^^51^81^buffer.append ( '@' ) ; buffer.append ( nodeTest ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P7_Replace_Invocation]^buffer .append ( this )  ;^86^^^^^71^101^buffer.append ( "" ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P7_Replace_Invocation]^Expression[] predicates = getAxis (  ) ;^93^^^^^78^108^Expression[] predicates = getPredicates (  ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^93^^^^^78^108^Expression[] predicates = getPredicates (  ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P2_Replace_Operator]^if  ( predicates == null )  {^94^^^^^79^109^if  ( predicates != null )  {^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P6_Replace_Expression]^if  ( i < predicates.length )  {^94^^^^^79^109^if  ( predicates != null )  {^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P8_Replace_Mix]^if  ( predicates != this )  {^94^^^^^79^109^if  ( predicates != null )  {^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P15_Unwrap_Block]^for (int i = 0; i < (predicates.length); i++) {    buffer.append('[');    buffer.append(predicates[i]);    buffer.append(']');};^94^95^96^97^98^79^109^if  ( predicates != null )  { for  ( int i = 0; i < predicates.length; i++ )  { buffer.append ( '[' ) ; buffer.append ( predicates[i] ) ; buffer.append ( ']' ) ; }^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P16_Remove_Block]^^94^95^96^97^98^79^109^if  ( predicates != null )  { for  ( int i = 0; i < predicates.length; i++ )  { buffer.append ( '[' ) ; buffer.append ( predicates[i] ) ; buffer.append ( ']' ) ; }^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P13_Insert_Block]^if  (  ( predicates )  != null )  {     for  ( int i = 0; i <  ( predicates.length ) ; i++ )  {         if  ( predicates[i].isContextDependent (  )  )  {             return true;         }     } }^94^^^^^79^109^[Delete]^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P1_Replace_Type]^for  (  long  i = 0; i < predicates.length; i++ )  {^95^^^^^80^110^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P2_Replace_Operator]^for  ( int i = 0; i <= predicates.length; i++ )  {^95^^^^^80^110^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^for  ( int i = ; i < predicates.length; i++ )  {^95^^^^^80^110^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( predicates != null )  {     for  ( int i = 0; i <  ( predicates.length ) ; i++ )  {         buffer.append ( '[' ) ;         buffer.append ( predicates[i] ) ;         buffer.append ( ']' ) ;     } }^95^^^^^80^110^[Delete]^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^96^^^^^81^111^buffer.append ( '[' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( '[' ) ;^96^^^^^81^111^buffer.append ( '[' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "." ) ;buffer.append ( '[' ) ;^96^^^^^81^111^buffer.append ( '[' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( predicates[i] ) ;buffer.append ( '[' ) ;^96^^^^^81^111^buffer.append ( '[' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "" ) ;buffer.append ( '[' ) ;^96^^^^^81^111^buffer.append ( '[' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "::" ) ;buffer.append ( '[' ) ;^96^^^^^81^111^buffer.append ( '[' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( nodeTest ) ;buffer.append ( '[' ) ;^96^^^^^81^111^buffer.append ( '[' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ".." ) ;buffer.append ( '[' ) ;^96^^^^^81^111^buffer.append ( '[' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '@' ) ;buffer.append ( '[' ) ;^96^^^^^81^111^buffer.append ( '[' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^97^98^^^^82^112^buffer.append ( predicates[i] ) ; buffer.append ( ']' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ']' ) ;buffer.append ( predicates[i] ) ;^97^^^^^82^112^buffer.append ( predicates[i] ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "." ) ;buffer.append ( predicates[i] ) ;^97^^^^^82^112^buffer.append ( predicates[i] ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "" ) ;buffer.append ( predicates[i] ) ;^97^^^^^82^112^buffer.append ( predicates[i] ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( axisToString ( axis )  ) ;buffer.append ( predicates[i] ) ;^97^^^^^82^112^buffer.append ( predicates[i] ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "::" ) ;buffer.append ( predicates[i] ) ;^97^^^^^82^112^buffer.append ( predicates[i] ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( nodeTest ) ;buffer.append ( predicates[i] ) ;^97^^^^^82^112^buffer.append ( predicates[i] ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ".." ) ;buffer.append ( predicates[i] ) ;^97^^^^^82^112^buffer.append ( predicates[i] ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '@' ) ;buffer.append ( predicates[i] ) ;^97^^^^^82^112^buffer.append ( predicates[i] ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( predicates[i] ) ;^97^^^^^82^112^buffer.append ( predicates[i] ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^98^^^^^83^113^buffer.append ( ']' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "." ) ;buffer.append ( ']' ) ;^98^^^^^83^113^buffer.append ( ']' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( predicates[i] ) ;buffer.append ( ']' ) ;^98^^^^^83^113^buffer.append ( ']' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "" ) ;buffer.append ( ']' ) ;^98^^^^^83^113^buffer.append ( ']' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( "::" ) ;buffer.append ( ']' ) ;^98^^^^^83^113^buffer.append ( ']' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( nodeTest ) ;buffer.append ( ']' ) ;^98^^^^^83^113^buffer.append ( ']' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( ".." ) ;buffer.append ( ']' ) ;^98^^^^^83^113^buffer.append ( ']' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '@' ) ;buffer.append ( ']' ) ;^98^^^^^83^113^buffer.append ( ']' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^buffer.append ( '[' ) ;buffer.append ( ']' ) ;^98^^^^^83^113^buffer.append ( ']' ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P1_Replace_Type]^for  (  short  i = 0; i < predicates.length; i++ )  {^95^^^^^80^110^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^96^97^^^^81^111^buffer.append ( '[' ) ; buffer.append ( predicates[i] ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^97^^^^^82^112^buffer.append ( predicates[i] ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P2_Replace_Operator]^for  ( int i = 0; i > predicates.length; i++ )  {^95^^^^^80^110^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^for  ( int i = axis; i < predicates.length; i++ )  {^95^^^^^80^110^for  ( int i = 0; i < predicates.length; i++ )  {^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P7_Replace_Invocation]^return buffer.append (  ) ;^101^^^^^86^116^return buffer.toString (  ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P7_Replace_Invocation]^return buffer .StringBuffer (  )  ;^101^^^^^86^116^return buffer.toString (  ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P14_Delete_Statement]^^101^^^^^86^116^return buffer.toString (  ) ;^[CLASS] Step  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  buffer  boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^return "selfse";^107^^^^^104^134^return "self";^[CLASS] Step  [METHOD] axisToString [RETURN_TYPE] String   int axis [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^return "childi";^109^^^^^104^134^return "child";^[CLASS] Step  [METHOD] axisToString [RETURN_TYPE] String   int axis [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^return "parentpar";^111^^^^^104^134^return "parent";^[CLASS] Step  [METHOD] axisToString [RETURN_TYPE] String   int axis [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^return "";^113^^^^^104^134^return "ancestor";^[CLASS] Step  [METHOD] axisToString [RETURN_TYPE] String   int axis [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^return "attributetrib";^115^^^^^104^134^return "attribute";^[CLASS] Step  [METHOD] axisToString [RETURN_TYPE] String   int axis [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^return "eamespace";^117^^^^^104^134^return "namespace";^[CLASS] Step  [METHOD] axisToString [RETURN_TYPE] String   int axis [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^return "wi";^121^^^^^104^134^return "following";^[CLASS] Step  [METHOD] axisToString [RETURN_TYPE] String   int axis [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^return "descendants";^123^^^^^104^134^return "descendant";^[CLASS] Step  [METHOD] axisToString [RETURN_TYPE] String   int axis [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^return "ancestor-or-sel";^125^^^^^104^134^return "ancestor-or-self";^[CLASS] Step  [METHOD] axisToString [RETURN_TYPE] String   int axis [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^return "following-siblingf";^127^^^^^104^134^return "following-sibling";^[CLASS] Step  [METHOD] axisToString [RETURN_TYPE] String   int axis [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^return "preceding-siblingceding-";^129^^^^^104^134^return "preceding-sibling";^[CLASS] Step  [METHOD] axisToString [RETURN_TYPE] String   int axis [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^return "escescendant-or-self";^131^^^^^104^134^return "descendant-or-self";^[CLASS] Step  [METHOD] axisToString [RETURN_TYPE] String   int axis [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
[P3_Replace_Literal]^return "K";^133^^^^^104^134^return "UNKNOWN";^[CLASS] Step  [METHOD] axisToString [RETURN_TYPE] String   int axis [VARIABLES] boolean  Expression[]  predicates  int  axis  i  NodeTest  nodeTest  
