[P1_Replace_Type]^public static final char MODEL_DOM = "DOM";^41^^^^^36^46^public static final String MODEL_DOM = "DOM";^[CLASS] DocumentContainer   [VARIABLES] 
[P3_Replace_Literal]^public static final String MODEL_DOM = "";^41^^^^^36^46^public static final String MODEL_DOM = "DOM";^[CLASS] DocumentContainer   [VARIABLES] 
[P1_Replace_Type]^public static final char MODEL_JDOM = "JDOM";^42^^^^^37^47^public static final String MODEL_JDOM = "JDOM";^[CLASS] DocumentContainer   [VARIABLES] 
[P3_Replace_Literal]^public static final String MODEL_JDOM = "JDDOM";^42^^^^^37^47^public static final String MODEL_JDOM = "JDOM";^[CLASS] DocumentContainer   [VARIABLES] 
[P8_Replace_Mix]^public static final String MODEL_JDOM  = null ;^42^^^^^37^47^public static final String MODEL_JDOM = "JDOM";^[CLASS] DocumentContainer   [VARIABLES] 
[P1_Replace_Type]^private char model;^46^^^^^41^51^private String model;^[CLASS] DocumentContainer   [VARIABLES] 
[P8_Replace_Mix]^private  HashMap parserClasses = new HashMap (  ) ;^48^^^^^43^53^private static HashMap parserClasses = new HashMap (  ) ;^[CLASS] DocumentContainer   [VARIABLES] 
[P8_Replace_Mix]^private static HashMap parsers ;^56^^^^^51^61^private static HashMap parsers = new HashMap (  ) ;^[CLASS] DocumentContainer   [VARIABLES] 
[P5_Replace_Variable]^this ( xmlURL, model ) ;^82^^^^^81^83^this ( xmlURL, MODEL_DOM ) ;^[CLASS] DocumentContainer  [METHOD] <init> [RETURN_TYPE] URL)   URL xmlURL [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P5_Replace_Variable]^this (  MODEL_DOM ) ;^82^^^^^81^83^this ( xmlURL, MODEL_DOM ) ;^[CLASS] DocumentContainer  [METHOD] <init> [RETURN_TYPE] URL)   URL xmlURL [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P5_Replace_Variable]^this ( xmlURL ) ;^82^^^^^81^83^this ( xmlURL, MODEL_DOM ) ;^[CLASS] DocumentContainer  [METHOD] <init> [RETURN_TYPE] URL)   URL xmlURL [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P5_Replace_Variable]^this ( MODEL_DOM, xmlURL ) ;^82^^^^^81^83^this ( xmlURL, MODEL_DOM ) ;^[CLASS] DocumentContainer  [METHOD] <init> [RETURN_TYPE] URL)   URL xmlURL [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P14_Delete_Statement]^^82^^^^^81^83^this ( xmlURL, MODEL_DOM ) ;^[CLASS] DocumentContainer  [METHOD] <init> [RETURN_TYPE] URL)   URL xmlURL [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P8_Replace_Mix]^this.xmlURL =  null;^93^^^^^92^98^this.xmlURL = xmlURL;^[CLASS] DocumentContainer  [METHOD] <init> [RETURN_TYPE] String)   URL xmlURL String model [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P11_Insert_Donor_Statement]^this.model = model;this.xmlURL = xmlURL;^93^^^^^92^98^this.xmlURL = xmlURL;^[CLASS] DocumentContainer  [METHOD] <init> [RETURN_TYPE] String)   URL xmlURL String model [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P2_Replace_Operator]^if  ( xmlURL != null )  {^94^^^^^92^98^if  ( xmlURL == null )  {^[CLASS] DocumentContainer  [METHOD] <init> [RETURN_TYPE] String)   URL xmlURL String model [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P8_Replace_Mix]^if  ( xmlURL == true )  {^94^^^^^92^98^if  ( xmlURL == null )  {^[CLASS] DocumentContainer  [METHOD] <init> [RETURN_TYPE] String)   URL xmlURL String model [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P9_Replace_Statement]^if  ( parser == null )  {^94^^^^^92^98^if  ( xmlURL == null )  {^[CLASS] DocumentContainer  [METHOD] <init> [RETURN_TYPE] String)   URL xmlURL String model [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P9_Replace_Statement]^if  ( className == null )  {^94^^^^^92^98^if  ( xmlURL == null )  {^[CLASS] DocumentContainer  [METHOD] <init> [RETURN_TYPE] String)   URL xmlURL String model [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P9_Replace_Statement]^if  ( document == null )  {^94^^^^^92^98^if  ( xmlURL == null )  {^[CLASS] DocumentContainer  [METHOD] <init> [RETURN_TYPE] String)   URL xmlURL String model [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P9_Replace_Statement]^if  ( stream != null )  {^94^^^^^92^98^if  ( xmlURL == null )  {^[CLASS] DocumentContainer  [METHOD] <init> [RETURN_TYPE] String)   URL xmlURL String model [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P15_Unwrap_Block]^throw new org.apache.commons.jxpath.JXPathException("XML URL is null");^94^95^96^^^92^98^if  ( xmlURL == null )  { throw new JXPathException  (" ")  ; }^[CLASS] DocumentContainer  [METHOD] <init> [RETURN_TYPE] String)   URL xmlURL String model [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P16_Remove_Block]^^94^95^96^^^92^98^if  ( xmlURL == null )  { throw new JXPathException  (" ")  ; }^[CLASS] DocumentContainer  [METHOD] <init> [RETURN_TYPE] String)   URL xmlURL String model [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P13_Insert_Block]^if  ( className == null )  {     throw new JXPathException (  ( "Unsupported XML model: " + model )  ) ; }^94^^^^^92^98^[Delete]^[CLASS] DocumentContainer  [METHOD] <init> [RETURN_TYPE] String)   URL xmlURL String model [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P13_Insert_Block]^if  ( xmlURL == null )  {     throw new JXPathException ( "XML URL is null" ) ; }^95^^^^^92^98^[Delete]^[CLASS] DocumentContainer  [METHOD] <init> [RETURN_TYPE] String)   URL xmlURL String model [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P11_Insert_Donor_Statement]^throw new UnsupportedOperationException  (" ")  ;throw new JXPathException  (" ")  ;^95^^^^^92^98^throw new JXPathException  (" ")  ;^[CLASS] DocumentContainer  [METHOD] <init> [RETURN_TYPE] String)   URL xmlURL String model [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P13_Insert_Block]^if  ( className == null )  {     throw new JXPathException (  ( "Unsupported XML model: " + model )  ) ; }^95^^^^^92^98^[Delete]^[CLASS] DocumentContainer  [METHOD] <init> [RETURN_TYPE] String)   URL xmlURL String model [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P8_Replace_Mix]^this.model =  null;^97^^^^^92^98^this.model = model;^[CLASS] DocumentContainer  [METHOD] <init> [RETURN_TYPE] String)   URL xmlURL String model [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P11_Insert_Donor_Statement]^this.xmlURL = xmlURL;this.model = model;^97^^^^^92^98^this.model = model;^[CLASS] DocumentContainer  [METHOD] <init> [RETURN_TYPE] String)   URL xmlURL String model [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P5_Replace_Variable]^parsers.put ( MODEL_JDOM, parser ) ;^63^^^^^62^64^parsers.put ( model, parser ) ;^[CLASS] DocumentContainer  [METHOD] registerXMLParser [RETURN_TYPE] void   String model XMLParser parser [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  XMLParser  parser  HashMap  parserClasses  parsers  URL  xmlURL  
[P5_Replace_Variable]^parsers.put (  parser ) ;^63^^^^^62^64^parsers.put ( model, parser ) ;^[CLASS] DocumentContainer  [METHOD] registerXMLParser [RETURN_TYPE] void   String model XMLParser parser [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  XMLParser  parser  HashMap  parserClasses  parsers  URL  xmlURL  
[P5_Replace_Variable]^parsers.put ( model ) ;^63^^^^^62^64^parsers.put ( model, parser ) ;^[CLASS] DocumentContainer  [METHOD] registerXMLParser [RETURN_TYPE] void   String model XMLParser parser [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  XMLParser  parser  HashMap  parserClasses  parsers  URL  xmlURL  
[P5_Replace_Variable]^parsers.put ( parser, model ) ;^63^^^^^62^64^parsers.put ( model, parser ) ;^[CLASS] DocumentContainer  [METHOD] registerXMLParser [RETURN_TYPE] void   String model XMLParser parser [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  XMLParser  parser  HashMap  parserClasses  parsers  URL  xmlURL  
[P14_Delete_Statement]^^63^^^^^62^64^parsers.put ( model, parser ) ;^[CLASS] DocumentContainer  [METHOD] registerXMLParser [RETURN_TYPE] void   String model XMLParser parser [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  XMLParser  parser  HashMap  parserClasses  parsers  URL  xmlURL  
[P11_Insert_Donor_Statement]^parserClasses.put ( model, parserClassName ) ;parsers.put ( model, parser ) ;^63^^^^^62^64^parsers.put ( model, parser ) ;^[CLASS] DocumentContainer  [METHOD] registerXMLParser [RETURN_TYPE] void   String model XMLParser parser [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  boolean  XMLParser  parser  HashMap  parserClasses  parsers  URL  xmlURL  
[P5_Replace_Variable]^parserClasses.put ( MODEL_JDOM, parserClassName ) ;^71^^^^^70^72^parserClasses.put ( model, parserClassName ) ;^[CLASS] DocumentContainer  [METHOD] registerXMLParser [RETURN_TYPE] void   String model String parserClassName [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P5_Replace_Variable]^parserClasses.put ( model, model ) ;^71^^^^^70^72^parserClasses.put ( model, parserClassName ) ;^[CLASS] DocumentContainer  [METHOD] registerXMLParser [RETURN_TYPE] void   String model String parserClassName [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P5_Replace_Variable]^parserClasses.put (  parserClassName ) ;^71^^^^^70^72^parserClasses.put ( model, parserClassName ) ;^[CLASS] DocumentContainer  [METHOD] registerXMLParser [RETURN_TYPE] void   String model String parserClassName [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P5_Replace_Variable]^parserClasses.put ( model ) ;^71^^^^^70^72^parserClasses.put ( model, parserClassName ) ;^[CLASS] DocumentContainer  [METHOD] registerXMLParser [RETURN_TYPE] void   String model String parserClassName [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P5_Replace_Variable]^parserClasses.put ( parserClassName, model ) ;^71^^^^^70^72^parserClasses.put ( model, parserClassName ) ;^[CLASS] DocumentContainer  [METHOD] registerXMLParser [RETURN_TYPE] void   String model String parserClassName [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P14_Delete_Statement]^^71^^^^^70^72^parserClasses.put ( model, parserClassName ) ;^[CLASS] DocumentContainer  [METHOD] registerXMLParser [RETURN_TYPE] void   String model String parserClassName [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P11_Insert_Donor_Statement]^parsers.put ( model, parser ) ;parserClasses.put ( model, parserClassName ) ;^71^^^^^70^72^parserClasses.put ( model, parserClassName ) ;^[CLASS] DocumentContainer  [METHOD] registerXMLParser [RETURN_TYPE] void   String model String parserClassName [VARIABLES] Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P2_Replace_Operator]^if  ( document != null )  {^104^^^^^103^126^if  ( document == null )  {^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P6_Replace_Expression]^if  ( xmlURL != null )  {^104^^^^^103^126^if  ( document == null )  {^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P6_Replace_Expression]^if  ( stream != null )  {^104^^^^^103^126^if  ( document == null )  {^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P6_Replace_Expression]^if  ( "Cannot read XML from: " + xmlURL.toString (  ) )  {^104^^^^^103^126^if  ( document == null )  {^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P8_Replace_Mix]^if  ( document == this )  {^104^^^^^103^126^if  ( document == null )  {^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P9_Replace_Statement]^if  ( parser == null )  {^104^^^^^103^126^if  ( document == null )  {^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P9_Replace_Statement]^if  ( className == null )  {^104^^^^^103^126^if  ( document == null )  {^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P9_Replace_Statement]^if  ( xmlURL == null )  {^104^^^^^103^126^if  ( document == null )  {^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P2_Replace_Operator]^if  ( xmlURL == null )  {^108^^^^^103^126^if  ( xmlURL != null )  {^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P8_Replace_Mix]^if  ( xmlURL != this )  {^108^^^^^103^126^if  ( xmlURL != null )  {^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P9_Replace_Statement]^if  ( parser == null )  {^108^^^^^103^126^if  ( xmlURL != null )  {^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P9_Replace_Statement]^if  ( document == null )  {^108^^^^^103^126^if  ( xmlURL != null )  {^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P9_Replace_Statement]^if  ( stream != null )  {^108^^^^^103^126^if  ( xmlURL != null )  {^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P15_Unwrap_Block]^stream = xmlURL.openStream();^108^109^110^^^103^126^if  ( xmlURL != null )  { stream = xmlURL.openStream (  ) ; }^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P16_Remove_Block]^^108^109^110^^^103^126^if  ( xmlURL != null )  { stream = xmlURL.openStream (  ) ; }^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P13_Insert_Block]^if  ( stream != null )  {     stream.close (  ) ; }^108^^^^^103^126^[Delete]^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P7_Replace_Invocation]^stream = xmlURL.toString (  ) ;^109^^^^^103^126^stream = xmlURL.openStream (  ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P8_Replace_Mix]^stream  = null ;^109^^^^^103^126^stream = xmlURL.openStream (  ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P14_Delete_Statement]^^109^^^^^103^126^stream = xmlURL.openStream (  ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P11_Insert_Donor_Statement]^stream.close (  ) ;stream = xmlURL.openStream (  ) ;^109^^^^^103^126^stream = xmlURL.openStream (  ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P2_Replace_Operator]^if  ( stream == null )  {^114^^^^^103^126^if  ( stream != null )  {^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P8_Replace_Mix]^if  ( stream != false )  {^114^^^^^103^126^if  ( stream != null )  {^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P9_Replace_Statement]^if  ( parser == null )  {^114^^^^^103^126^if  ( stream != null )  {^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P9_Replace_Statement]^if  ( className == null )  {^114^^^^^103^126^if  ( stream != null )  {^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P9_Replace_Statement]^if  ( document == null )  {^114^^^^^103^126^if  ( stream != null )  {^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P9_Replace_Statement]^if  ( xmlURL == null )  {^114^^^^^103^126^if  ( stream != null )  {^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P9_Replace_Statement]^if  ( xmlURL != null )  {^114^^^^^103^126^if  ( stream != null )  {^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P15_Unwrap_Block]^stream.close();^114^115^116^^^103^126^if  ( stream != null )  { stream.close (  ) ; }^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P16_Remove_Block]^^114^115^116^^^103^126^if  ( stream != null )  { stream.close (  ) ; }^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P13_Insert_Block]^if  (  ( xmlURL )  != null )  {     stream = xmlURL.openStream (  ) ; }^114^^^^^103^126^[Delete]^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P14_Delete_Statement]^^115^^^^^103^126^stream.close (  ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P11_Insert_Donor_Statement]^stream = xmlURL.openStream (  ) ;stream.close (  ) ;^115^^^^^103^126^stream.close (  ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P8_Replace_Mix]^stream ;^109^^^^^103^126^stream = xmlURL.openStream (  ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P8_Replace_Mix]^if  ( stream != this )  {^114^^^^^103^126^if  ( stream != null )  {^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P8_Replace_Mix]^stream  =  stream ;^109^^^^^103^126^stream = xmlURL.openStream (  ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P7_Replace_Invocation]^document = getParser ( stream ) ;^111^^^^^103^126^document = parseXML ( stream ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P8_Replace_Mix]^document =  parseXML ( null ) ;^111^^^^^103^126^document = parseXML ( stream ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P14_Delete_Statement]^^111^^^^^103^126^document = parseXML ( stream ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P11_Insert_Donor_Statement]^return parser.parseXML ( stream ) ;document = parseXML ( stream ) ;^111^^^^^103^126^document = parseXML ( stream ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P8_Replace_Mix]^if  ( xmlURL != true )  {^108^^^^^103^126^if  ( xmlURL != null )  {^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot read XML from: "  &  xmlURL.toString (  ) , ex ) ;^120^121^122^^^103^126^throw new JXPathException ( "Cannot read XML from: " + xmlURL.toString (  ) , ex ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P3_Replace_Literal]^throw new JXPathException ( "Cannot read XML from: annot read XML " + xmlURL.toString (  ) , ex ) ;^120^121^122^^^103^126^throw new JXPathException ( "Cannot read XML from: " + xmlURL.toString (  ) , ex ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P5_Replace_Variable]^throw new JXPathException ( "Cannot read XML from: " + xmlURL.toString (  )  ) ;^120^121^122^^^103^126^throw new JXPathException ( "Cannot read XML from: " + xmlURL.toString (  ) , ex ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P5_Replace_Variable]^throw new JXPathException ( "Cannot read XML from: " + ex.toString (  ) , xmlURL ) ;^120^121^122^^^103^126^throw new JXPathException ( "Cannot read XML from: " + xmlURL.toString (  ) , ex ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P7_Replace_Invocation]^throw new JXPathException ( "Cannot read XML from: " + xmlURL.openStream (  ) , ex ) ;^120^121^122^^^103^126^throw new JXPathException ( "Cannot read XML from: " + xmlURL.toString (  ) , ex ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot read XML from: "  >=  xmlURL.toString (  ) , ex ) ;^120^121^122^^^103^126^throw new JXPathException ( "Cannot read XML from: " + xmlURL.toString (  ) , ex ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P3_Replace_Literal]^throw new JXPathException ( "Ca" + xmlURL.toString (  ) , ex ) ;^120^121^122^^^103^126^throw new JXPathException ( "Cannot read XML from: " + xmlURL.toString (  ) , ex ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P7_Replace_Invocation]^"Cannot read XML from: " + xmlURL.openStream (  ) , ex ) ;^121^122^^^^103^126^"Cannot read XML from: " + xmlURL.toString (  ) , ex ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P14_Delete_Statement]^^121^122^^^^103^126^"Cannot read XML from: " + xmlURL.toString (  ) , ex ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P8_Replace_Mix]^if  ( stream != true )  {^114^^^^^103^126^if  ( stream != null )  {^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot read XML from: "  >  xmlURL.toString (  ) , ex ) ;^120^121^122^^^103^126^throw new JXPathException ( "Cannot read XML from: " + xmlURL.toString (  ) , ex ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P3_Replace_Literal]^throw new JXPathException ( "m:annot read XML from: " + xmlURL.toString (  ) , ex ) ;^120^121^122^^^103^126^throw new JXPathException ( "Cannot read XML from: " + xmlURL.toString (  ) , ex ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot read XML from: "  <=  xmlURL.toString (  ) , ex ) ;^120^121^122^^^103^126^throw new JXPathException ( "Cannot read XML from: " + xmlURL.toString (  ) , ex ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P3_Replace_Literal]^throw new JXPathException ( " read " + xmlURL.toString (  ) , ex ) ;^120^121^122^^^103^126^throw new JXPathException ( "Cannot read XML from: " + xmlURL.toString (  ) , ex ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P8_Replace_Mix]^throw new JXPathException ( "Cannot allocate XMLParser: " + className ) ; ;^120^121^122^^^103^126^throw new JXPathException ( "Cannot read XML from: " + xmlURL.toString (  ) , ex ) ;^[CLASS] DocumentContainer  [METHOD] getValue [RETURN_TYPE] Object   [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  URL  xmlURL  Exception  ex  
[P5_Replace_Variable]^XMLParser parser = getParser ( parserClassName ) ;^132^^^^^131^144^XMLParser parser = getParser ( model ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P11_Insert_Donor_Statement]^XMLParser2 parser2 =  ( XMLParser2 )  parser;XMLParser parser = getParser ( model ) ;^132^^^^^131^144^XMLParser parser = getParser ( model ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P11_Insert_Donor_Statement]^XMLParser parser =  ( XMLParser )  parsers.get ( model ) ;XMLParser parser = getParser ( model ) ;^132^^^^^131^144^XMLParser parser = getParser ( model ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P14_Delete_Statement]^^132^^^^^131^144^XMLParser parser = getParser ( model ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P2_Replace_Operator]^if  ( parser  <<  XMLParser2 )  {^133^^^^^131^144^if  ( parser instanceof XMLParser2 )  {^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P11_Insert_Donor_Statement]^XMLParser parser = getParser ( model ) ;XMLParser2 parser2 =  ( XMLParser2 )  parser;^134^^^^^131^144^XMLParser2 parser2 =  ( XMLParser2 )  parser;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P11_Insert_Donor_Statement]^XMLParser parser =  ( XMLParser )  parsers.get ( model ) ;XMLParser2 parser2 =  ( XMLParser2 )  parser;^134^^^^^131^144^XMLParser2 parser2 =  ( XMLParser2 )  parser;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P7_Replace_Invocation]^parser2.setValidating ( isCoalescing (  )  ) ;^135^^^^^131^144^parser2.setValidating ( isValidating (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P8_Replace_Mix]^parser2 .setCoalescing (  )  ;^135^^^^^131^144^parser2.setValidating ( isValidating (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P14_Delete_Statement]^^135^136^^^^131^144^parser2.setValidating ( isValidating (  )  ) ; parser2.setNamespaceAware ( isNamespaceAware (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P11_Insert_Donor_Statement]^parser2.setCoalescing ( isCoalescing (  )  ) ;parser2.setValidating ( isValidating (  )  ) ;^135^^^^^131^144^parser2.setValidating ( isValidating (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P11_Insert_Donor_Statement]^parser2.setNamespaceAware ( isNamespaceAware (  )  ) ;parser2.setValidating ( isValidating (  )  ) ;^135^^^^^131^144^parser2.setValidating ( isValidating (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P11_Insert_Donor_Statement]^parser2.setIgnoringComments ( isIgnoringComments (  )  ) ;parser2.setValidating ( isValidating (  )  ) ;^135^^^^^131^144^parser2.setValidating ( isValidating (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P14_Delete_Statement]^^135^^^^^131^144^parser2.setValidating ( isValidating (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P7_Replace_Invocation]^parser2 .setCoalescing (  )  ;^136^^^^^131^144^parser2.setNamespaceAware ( isNamespaceAware (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P7_Replace_Invocation]^parser2.setNamespaceAware ( isCoalescing (  )  ) ;^136^^^^^131^144^parser2.setNamespaceAware ( isNamespaceAware (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P14_Delete_Statement]^^136^^^^^131^144^parser2.setNamespaceAware ( isNamespaceAware (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P11_Insert_Donor_Statement]^parser2.setCoalescing ( isCoalescing (  )  ) ;parser2.setNamespaceAware ( isNamespaceAware (  )  ) ;^136^^^^^131^144^parser2.setNamespaceAware ( isNamespaceAware (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P11_Insert_Donor_Statement]^parser2.setValidating ( isValidating (  )  ) ;parser2.setNamespaceAware ( isNamespaceAware (  )  ) ;^136^^^^^131^144^parser2.setNamespaceAware ( isNamespaceAware (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P7_Replace_Invocation]^parser2.setIgnoringElementContentWhitespace ( isIgnoringComments (  )  ) ;^137^138^^^^131^144^parser2.setIgnoringElementContentWhitespace ( isIgnoringElementContentWhitespace (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P8_Replace_Mix]^parser2 .setIgnoringComments (  )  ;^137^138^^^^131^144^parser2.setIgnoringElementContentWhitespace ( isIgnoringElementContentWhitespace (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P14_Delete_Statement]^^137^138^^^^131^144^parser2.setIgnoringElementContentWhitespace ( isIgnoringElementContentWhitespace (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P11_Insert_Donor_Statement]^parser2.setIgnoringComments ( isIgnoringComments (  )  ) ;parser2.setIgnoringElementContentWhitespace ( isIgnoringElementContentWhitespace (  )  ) ;^137^138^^^^131^144^parser2.setIgnoringElementContentWhitespace ( isIgnoringElementContentWhitespace (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P7_Replace_Invocation]^isIgnoringComments (  )  ) ;^138^^^^^131^144^isIgnoringElementContentWhitespace (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P14_Delete_Statement]^^138^^^^^131^144^isIgnoringElementContentWhitespace (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P7_Replace_Invocation]^parser2 .setIgnoringComments (  )  ;^139^^^^^131^144^parser2.setExpandEntityReferences ( isExpandEntityReferences (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P7_Replace_Invocation]^parser2.setExpandEntityReferences ( isIgnoringComments (  )  ) ;^139^^^^^131^144^parser2.setExpandEntityReferences ( isExpandEntityReferences (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P14_Delete_Statement]^^139^^^^^131^144^parser2.setExpandEntityReferences ( isExpandEntityReferences (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P11_Insert_Donor_Statement]^parser2.setIgnoringComments ( isIgnoringComments (  )  ) ;parser2.setExpandEntityReferences ( isExpandEntityReferences (  )  ) ;^139^^^^^131^144^parser2.setExpandEntityReferences ( isExpandEntityReferences (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P7_Replace_Invocation]^parser2 .setIgnoringElementContentWhitespace (  )  ;^140^^^^^131^144^parser2.setIgnoringComments ( isIgnoringComments (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P7_Replace_Invocation]^parser2.setIgnoringComments ( isIgnoringElementContentWhitespace (  )  ) ;^140^^^^^131^144^parser2.setIgnoringComments ( isIgnoringComments (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P14_Delete_Statement]^^140^141^^^^131^144^parser2.setIgnoringComments ( isIgnoringComments (  )  ) ; parser2.setCoalescing ( isCoalescing (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P11_Insert_Donor_Statement]^parser2.setCoalescing ( isCoalescing (  )  ) ;parser2.setIgnoringComments ( isIgnoringComments (  )  ) ;^140^^^^^131^144^parser2.setIgnoringComments ( isIgnoringComments (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P11_Insert_Donor_Statement]^parser2.setValidating ( isValidating (  )  ) ;parser2.setIgnoringComments ( isIgnoringComments (  )  ) ;^140^^^^^131^144^parser2.setIgnoringComments ( isIgnoringComments (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P11_Insert_Donor_Statement]^parser2.setExpandEntityReferences ( isExpandEntityReferences (  )  ) ;parser2.setIgnoringComments ( isIgnoringComments (  )  ) ;^140^^^^^131^144^parser2.setIgnoringComments ( isIgnoringComments (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P11_Insert_Donor_Statement]^parser2.setIgnoringElementContentWhitespace ( isIgnoringElementContentWhitespace (  )  ) ;parser2.setIgnoringComments ( isIgnoringComments (  )  ) ;^140^^^^^131^144^parser2.setIgnoringComments ( isIgnoringComments (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P14_Delete_Statement]^^140^^^^^131^144^parser2.setIgnoringComments ( isIgnoringComments (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P7_Replace_Invocation]^parser2.setCoalescing ( isValidating (  )  ) ;^141^^^^^131^144^parser2.setCoalescing ( isCoalescing (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P14_Delete_Statement]^^141^^^^^131^144^parser2.setCoalescing ( isCoalescing (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P11_Insert_Donor_Statement]^parser2.setNamespaceAware ( isNamespaceAware (  )  ) ;parser2.setCoalescing ( isCoalescing (  )  ) ;^141^^^^^131^144^parser2.setCoalescing ( isCoalescing (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P11_Insert_Donor_Statement]^parser2.setIgnoringComments ( isIgnoringComments (  )  ) ;parser2.setCoalescing ( isCoalescing (  )  ) ;^141^^^^^131^144^parser2.setCoalescing ( isCoalescing (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P11_Insert_Donor_Statement]^parser2.setValidating ( isValidating (  )  ) ;parser2.setCoalescing ( isCoalescing (  )  ) ;^141^^^^^131^144^parser2.setCoalescing ( isCoalescing (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P14_Delete_Statement]^^138^139^^^^131^144^isIgnoringElementContentWhitespace (  )  ) ; parser2.setExpandEntityReferences ( isExpandEntityReferences (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P14_Delete_Statement]^^139^140^^^^131^144^parser2.setExpandEntityReferences ( isExpandEntityReferences (  )  ) ; parser2.setIgnoringComments ( isIgnoringComments (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P7_Replace_Invocation]^parser2 .setValidating (  )  ;^141^^^^^131^144^parser2.setCoalescing ( isCoalescing (  )  ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P5_Replace_Variable]^return stream.parseXML ( parser ) ;^143^^^^^131^144^return parser.parseXML ( stream ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P7_Replace_Invocation]^return parser .getParser ( parserClassName )  ;^143^^^^^131^144^return parser.parseXML ( stream ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P7_Replace_Invocation]^return parser .getParser ( model )  ;^143^^^^^131^144^return parser.parseXML ( stream ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P14_Delete_Statement]^^143^^^^^131^144^return parser.parseXML ( stream ) ;^[CLASS] DocumentContainer  [METHOD] parseXML [RETURN_TYPE] Object   InputStream stream [VARIABLES] boolean  HashMap  parserClasses  parsers  InputStream  stream  Object  document  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  XMLParser  parser  URL  xmlURL  XMLParser2  parser2  
[P11_Insert_Donor_Statement]^throw new JXPathException  (" ")  ;throw new UnsupportedOperationException  (" ")  ;^150^^^^^149^151^throw new UnsupportedOperationException  (" ")  ;^[CLASS] DocumentContainer  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Object  document  value  String  MODEL_DOM  MODEL_JDOM  model  parserClassName  boolean  HashMap  parserClasses  parsers  URL  xmlURL  
[P5_Replace_Variable]^XMLParser parser =  ( XMLParser )  parserClasses.get ( model ) ;^157^^^^^156^174^XMLParser parser =  ( XMLParser )  parsers.get ( model ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P5_Replace_Variable]^XMLParser parser =  ( XMLParser )  model.get ( parsers ) ;^157^^^^^156^174^XMLParser parser =  ( XMLParser )  parsers.get ( model ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P8_Replace_Mix]^XMLParser parser =  ( XMLParser )  parsers.get ( parserClassName ) ;^157^^^^^156^174^XMLParser parser =  ( XMLParser )  parsers.get ( model ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P11_Insert_Donor_Statement]^XMLParser2 parser2 =  ( XMLParser2 )  parser;XMLParser parser =  ( XMLParser )  parsers.get ( model ) ;^157^^^^^156^174^XMLParser parser =  ( XMLParser )  parsers.get ( model ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P11_Insert_Donor_Statement]^XMLParser parser = getParser ( model ) ;XMLParser parser =  ( XMLParser )  parsers.get ( model ) ;^157^^^^^156^174^XMLParser parser =  ( XMLParser )  parsers.get ( model ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P11_Insert_Donor_Statement]^String className =  ( String )  parserClasses.get ( model ) ;XMLParser parser =  ( XMLParser )  parsers.get ( model ) ;^157^^^^^156^174^XMLParser parser =  ( XMLParser )  parsers.get ( model ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P5_Replace_Variable]^XMLParser parser =  ( XMLParser )  parsers.get ( className ) ;^157^^^^^156^174^XMLParser parser =  ( XMLParser )  parsers.get ( model ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P14_Delete_Statement]^^157^^^^^156^174^XMLParser parser =  ( XMLParser )  parsers.get ( model ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P2_Replace_Operator]^if  ( parser != null )  {^158^^^^^156^174^if  ( parser == null )  {^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P6_Replace_Expression]^if  ( className == null )  {^158^^^^^156^174^if  ( parser == null )  {^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P6_Replace_Expression]^if  ( "Unsupported XML model: " + model )  {^158^^^^^156^174^if  ( parser == null )  {^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P6_Replace_Expression]^if  ( "Cannot allocate XMLParser: " + className )  {^158^^^^^156^174^if  ( parser == null )  {^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P8_Replace_Mix]^if  ( parser == false )  {^158^^^^^156^174^if  ( parser == null )  {^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P9_Replace_Statement]^if  ( document == null )  {^158^^^^^156^174^if  ( parser == null )  {^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P9_Replace_Statement]^if  ( stream != null )  {^158^^^^^156^174^if  ( parser == null )  {^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P9_Replace_Statement]^if  ( xmlURL == null )  {^158^^^^^156^174^if  ( parser == null )  {^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P9_Replace_Statement]^if  ( xmlURL != null )  {^158^^^^^156^174^if  ( parser == null )  {^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P15_Unwrap_Block]^java.lang.String className = ((java.lang.String) (org.apache.commons.jxpath.xml.DocumentContainer.parserClasses.get(model))); if (className == null) {    throw new org.apache.commons.jxpath.JXPathException(("Unsupported XML model: " + model));}; try {    java.lang.Class clazz = java.lang.Class.forName(className);    parser = ((org.apache.commons.jxpath.xml.XMLParser) (clazz.newInstance()));} catch (java.lang.Exception ex) {    throw new org.apache.commons.jxpath.JXPathException(("Cannot allocate XMLParser: " + className));}; org.apache.commons.jxpath.xml.DocumentContainer.parsers.put(model, parser);^158^159^160^161^162^156^174^if  ( parser == null )  { String className =  ( String )  parserClasses.get ( model ) ; if  ( className == null )  { throw new JXPathException  (" ")  ; }^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P16_Remove_Block]^^158^159^160^161^162^156^174^if  ( parser == null )  { String className =  ( String )  parserClasses.get ( model ) ; if  ( className == null )  { throw new JXPathException  (" ")  ; }^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P2_Replace_Operator]^if  ( className != null )  {^160^^^^^156^174^if  ( className == null )  {^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P5_Replace_Variable]^if  ( parserClassName == null )  {^160^^^^^156^174^if  ( className == null )  {^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P6_Replace_Expression]^if  ( "Unsupported XML model: " + model )  {^160^^^^^156^174^if  ( className == null )  {^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P8_Replace_Mix]^if  ( parserClassName == false )  {^160^^^^^156^174^if  ( className == null )  {^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P9_Replace_Statement]^if  ( parser == null )  {^160^^^^^156^174^if  ( className == null )  {^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P9_Replace_Statement]^if  ( document == null )  {^160^^^^^156^174^if  ( className == null )  {^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P9_Replace_Statement]^if  ( stream != null )  {^160^^^^^156^174^if  ( className == null )  {^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P9_Replace_Statement]^if  ( xmlURL == null )  {^160^^^^^156^174^if  ( className == null )  {^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P15_Unwrap_Block]^throw new org.apache.commons.jxpath.JXPathException(("Unsupported XML model: " + model));^160^161^162^^^156^174^if  ( className == null )  { throw new JXPathException  (" ")  ; }^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P16_Remove_Block]^^160^161^162^^^156^174^if  ( className == null )  { throw new JXPathException  (" ")  ; }^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P13_Insert_Block]^if  ( xmlURL == null )  {     throw new JXPathException ( "XML URL is null" ) ; }^160^^^^^156^174^[Delete]^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P4_Replace_Constructor]^throw throw  new JXPathException (  ( "Cannot allocate XMLParser: " + className )  )   ;^161^^^^^156^174^throw new JXPathException  (" ")  ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P13_Insert_Block]^if  ( className == null )  {     throw new JXPathException (  ( "Unsupported XML model: " + model )  ) ; }^161^^^^^156^174^[Delete]^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P8_Replace_Mix]^throw new UnsupportedOperationException  (" ")  ; ;^161^^^^^156^174^throw new JXPathException  (" ")  ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P11_Insert_Donor_Statement]^throw new UnsupportedOperationException  (" ")  ;throw new JXPathException  (" ")  ;^161^^^^^156^174^throw new JXPathException  (" ")  ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P7_Replace_Invocation]^parser =  ( XMLParser )  clazz.forName (  ) ;^165^^^^^156^174^parser =  ( XMLParser )  clazz.newInstance (  ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P8_Replace_Mix]^parser =   ( XMLParser )  null.newInstance (  ) ;^165^^^^^156^174^parser =  ( XMLParser )  clazz.newInstance (  ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P5_Replace_Variable]^Class clazz = Class.forName ( parserClassName ) ;^164^^^^^156^174^Class clazz = Class.forName ( className ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P7_Replace_Invocation]^Class clazz = Class .newInstance (  )  ;^164^^^^^156^174^Class clazz = Class.forName ( className ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P8_Replace_Mix]^Class clazz = Class.forName ( model ) ;^164^^^^^156^174^Class clazz = Class.forName ( className ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P14_Delete_Statement]^^164^165^166^^^156^174^Class clazz = Class.forName ( className ) ; parser =  ( XMLParser )  clazz.newInstance (  ) ; }^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P14_Delete_Statement]^^165^^^^^156^174^parser =  ( XMLParser )  clazz.newInstance (  ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot allocate XMLParser: "  &&  className ) ;^168^169^^^^156^174^throw new JXPathException ( "Cannot allocate XMLParser: " + className ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P3_Replace_Literal]^throw new JXPathException ( "e XMLParseannot allocate XMLParser: " + className ) ;^168^169^^^^156^174^throw new JXPathException ( "Cannot allocate XMLParser: " + className ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P4_Replace_Constructor]^throw throw  new JXPathException (  ( "Unsupported XML model: " + model )  )  ;^168^169^^^^156^174^throw new JXPathException ( "Cannot allocate XMLParser: " + className ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P5_Replace_Variable]^throw new JXPathException ( "Cannot allocate XMLParser: " + parserClassName ) ;^168^169^^^^156^174^throw new JXPathException ( "Cannot allocate XMLParser: " + className ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P1_Replace_Type]^char className =  ( char )  parserClasses.get ( model ) ;^159^^^^^156^174^String className =  ( String )  parserClasses.get ( model ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P5_Replace_Variable]^String className =  ( String )  parserClasses.get ( parserClassName ) ;^159^^^^^156^174^String className =  ( String )  parserClasses.get ( model ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P5_Replace_Variable]^String className =  ( String )  parsers.get ( model ) ;^159^^^^^156^174^String className =  ( String )  parserClasses.get ( model ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P5_Replace_Variable]^String className =  ( String )  model.get ( parserClasses ) ;^159^^^^^156^174^String className =  ( String )  parserClasses.get ( model ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P11_Insert_Donor_Statement]^XMLParser parser =  ( XMLParser )  parsers.get ( model ) ;String className =  ( String )  parserClasses.get ( model ) ;^159^^^^^156^174^String className =  ( String )  parserClasses.get ( model ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot allocate XMLParser: "  <<  className ) ;^168^169^^^^156^174^throw new JXPathException ( "Cannot allocate XMLParser: " + className ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P3_Replace_Literal]^throw new JXPathException ( "ate XMLParseannot allocate XMLParser: " + className ) ;^168^169^^^^156^174^throw new JXPathException ( "Cannot allocate XMLParser: " + className ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P5_Replace_Variable]^String className =  ( String )  parserClasses.get ( className ) ;^159^^^^^156^174^String className =  ( String )  parserClasses.get ( model ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P14_Delete_Statement]^^159^^^^^156^174^String className =  ( String )  parserClasses.get ( model ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P5_Replace_Variable]^parsers.put ( parserClassName, parser ) ;^171^^^^^156^174^parsers.put ( model, parser ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P5_Replace_Variable]^parsers.put (  parser ) ;^171^^^^^156^174^parsers.put ( model, parser ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P5_Replace_Variable]^parsers.put ( model ) ;^171^^^^^156^174^parsers.put ( model, parser ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P5_Replace_Variable]^parsers.put ( parser, model ) ;^171^^^^^156^174^parsers.put ( model, parser ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P14_Delete_Statement]^^171^^^^^156^174^parsers.put ( model, parser ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P11_Insert_Donor_Statement]^parserClasses.put ( model, parserClassName ) ;parsers.put ( model, parser ) ;^171^^^^^156^174^parsers.put ( model, parser ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P8_Replace_Mix]^if  ( className == this )  {^160^^^^^156^174^if  ( className == null )  {^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P7_Replace_Invocation]^parser =  ( XMLParser )  clazz .forName ( parserClassName )  ;^165^^^^^156^174^parser =  ( XMLParser )  clazz.newInstance (  ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot allocate XMLParser: "  <=  className ) ;^168^169^^^^156^174^throw new JXPathException ( "Cannot allocate XMLParser: " + className ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P3_Replace_Literal]^throw new JXPathException ( "Can" + className ) ;^168^169^^^^156^174^throw new JXPathException ( "Cannot allocate XMLParser: " + className ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P2_Replace_Operator]^throw new JXPathException ( "Cannot allocate XMLParser: "  &  className ) ;^168^169^^^^156^174^throw new JXPathException ( "Cannot allocate XMLParser: " + className ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P3_Replace_Literal]^throw new JXPathException ( "ot allannot allocate XMLParser: " + className ) ;^168^169^^^^156^174^throw new JXPathException ( "Cannot allocate XMLParser: " + className ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
[P8_Replace_Mix]^parsers.put ( className, parser ) ;^171^^^^^156^174^parsers.put ( model, parser ) ;^[CLASS] DocumentContainer  [METHOD] getParser [RETURN_TYPE] XMLParser   String model [VARIABLES] boolean  HashMap  parserClasses  parsers  Object  document  value  Class  clazz  String  MODEL_DOM  MODEL_JDOM  className  model  parserClassName  XMLParser  parser  URL  xmlURL  Exception  ex  
