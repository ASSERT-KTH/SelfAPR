[P14_Delete_Statement]^^44^45^^^^38^48^super ( parentContext ) ; this.nodeTest = nodeTest;^[CLASS] ChildContext  [METHOD] <init> [RETURN_TYPE] NodeTest,boolean,boolean)   EvalContext parentContext NodeTest nodeTest boolean startFromParentLocation boolean reverse [VARIABLES] NodeIterator  iterator  EvalContext  parentContext  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P8_Replace_Mix]^this.nodeTest =  null;^45^^^^^38^48^this.nodeTest = nodeTest;^[CLASS] ChildContext  [METHOD] <init> [RETURN_TYPE] NodeTest,boolean,boolean)   EvalContext parentContext NodeTest nodeTest boolean startFromParentLocation boolean reverse [VARIABLES] NodeIterator  iterator  EvalContext  parentContext  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^this.reverse = reverse;this.nodeTest = nodeTest;^45^^^^^38^48^this.nodeTest = nodeTest;^[CLASS] ChildContext  [METHOD] <init> [RETURN_TYPE] NodeTest,boolean,boolean)   EvalContext parentContext NodeTest nodeTest boolean startFromParentLocation boolean reverse [VARIABLES] NodeIterator  iterator  EvalContext  parentContext  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P5_Replace_Variable]^this.startFromParentLocation = reverse;^46^^^^^38^48^this.startFromParentLocation = startFromParentLocation;^[CLASS] ChildContext  [METHOD] <init> [RETURN_TYPE] NodeTest,boolean,boolean)   EvalContext parentContext NodeTest nodeTest boolean startFromParentLocation boolean reverse [VARIABLES] NodeIterator  iterator  EvalContext  parentContext  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P5_Replace_Variable]^this.reverse = startFromParentLocation;^47^^^^^38^48^this.reverse = reverse;^[CLASS] ChildContext  [METHOD] <init> [RETURN_TYPE] NodeTest,boolean,boolean)   EvalContext parentContext NodeTest nodeTest boolean startFromParentLocation boolean reverse [VARIABLES] NodeIterator  iterator  EvalContext  parentContext  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P8_Replace_Mix]^this.reverse =  null;^47^^^^^38^48^this.reverse = reverse;^[CLASS] ChildContext  [METHOD] <init> [RETURN_TYPE] NodeTest,boolean,boolean)   EvalContext parentContext NodeTest nodeTest boolean startFromParentLocation boolean reverse [VARIABLES] NodeIterator  iterator  EvalContext  parentContext  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^this.nodeTest = nodeTest;this.reverse = reverse;^47^^^^^38^48^this.reverse = reverse;^[CLASS] ChildContext  [METHOD] <init> [RETURN_TYPE] NodeTest,boolean,boolean)   EvalContext parentContext NodeTest nodeTest boolean startFromParentLocation boolean reverse [VARIABLES] NodeIterator  iterator  EvalContext  parentContext  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P2_Replace_Operator]^if  ( position != 0 )  {^51^^^^^50^62^if  ( position == 0 )  {^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P3_Replace_Literal]^if  ( position == -9 )  {^51^^^^^50^62^if  ( position == 0 )  {^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P8_Replace_Mix]^if  ( position == 2 )  {^51^^^^^50^62^if  ( position == 0 )  {^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( !setPosition ( 1 )  )  {^51^^^^^50^62^if  ( position == 0 )  {^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( oldPosition == 0 )  {^51^^^^^50^62^if  ( position == 0 )  {^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P15_Unwrap_Block]^if (!(setPosition(1))) {    return null;};^51^52^53^54^^50^62^if  ( position == 0 )  { if  ( !setPosition ( 1 )  )  { return null; }^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P16_Remove_Block]^^51^52^53^54^^50^62^if  ( position == 0 )  { if  ( !setPosition ( 1 )  )  { return null; }^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( ! ( setPosition ( 1 )  )  )  {     return null; }^51^^^^^50^62^[Delete]^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P3_Replace_Literal]^if  ( !setPosition ( -1 )  )  {^52^^^^^50^62^if  ( !setPosition ( 1 )  )  {^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P8_Replace_Mix]^if  ( !setPosition ( 1 - 0 )  )  {^52^^^^^50^62^if  ( !setPosition ( 1 )  )  {^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( position == 0 )  {^52^^^^^50^62^if  ( !setPosition ( 1 )  )  {^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( oldPosition == 0 )  {^52^^^^^50^62^if  ( !setPosition ( 1 )  )  {^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P15_Unwrap_Block]^return null;^52^53^54^^^50^62^if  ( !setPosition ( 1 )  )  { return null; }^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P16_Remove_Block]^^52^53^54^^^50^62^if  ( !setPosition ( 1 )  )  { return null; }^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P13_Insert_Block]^if  (  ( position )  == 0 )  {     if  ( ! ( setPosition ( 1 )  )  )  {         return null;     } }^52^^^^^50^62^[Delete]^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( parent == null )  {     return ; }^52^^^^^50^62^[Delete]^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P13_Insert_Block]^if  (  ( iterator )  == null )  {     return null; }^52^^^^^50^62^[Delete]^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( oldPosition == 0 )  {     prepare (  ) ; }^52^^^^^50^62^[Delete]^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P13_Insert_Block]^if  (  ( iterator )  == null )  {     return false; }^52^^^^^50^62^[Delete]^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( pointer != null )  {     return pointer; }^52^^^^^50^62^[Delete]^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P8_Replace_Mix]^return this;^53^^^^^50^62^return null;^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P8_Replace_Mix]^return false;^53^^^^^50^62^return null;^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P3_Replace_Literal]^if  ( !setPosition ( 3 )  )  {^52^^^^^50^62^if  ( !setPosition ( 1 )  )  {^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P3_Replace_Literal]^if  ( !setPosition ( 6 )  )  {^52^^^^^50^62^if  ( !setPosition ( 1 )  )  {^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P8_Replace_Mix]^if  ( !setPosition ( 4 )  )  {^52^^^^^50^62^if  ( !setPosition ( 1 )  )  {^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P8_Replace_Mix]^return true;^53^^^^^50^62^return null;^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P2_Replace_Operator]^if  ( iterator == null )  {^56^^^^^50^62^if  ( iterator != null )  {^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P8_Replace_Mix]^if  ( iterator != true )  {^56^^^^^50^62^if  ( iterator != null )  {^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( parent == null )  {^56^^^^^50^62^if  ( iterator != null )  {^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( pointer != null )  {^56^^^^^50^62^if  ( iterator != null )  {^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P15_Unwrap_Block]^return iterator.getNodePointer();^56^57^58^^^50^62^if  ( iterator != null )  { return iterator.getNodePointer (  ) ; }^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P16_Remove_Block]^^56^57^58^^^50^62^if  ( iterator != null )  { return iterator.getNodePointer (  ) ; }^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P8_Replace_Mix]^return this;^60^^^^^50^62^return null;^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P7_Replace_Invocation]^return iterator .setPosition ( null )  ;^57^^^^^50^62^return iterator.getNodePointer (  ) ;^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P14_Delete_Statement]^^57^^^^^50^62^return iterator.getNodePointer (  ) ;^[CLASS] ChildContext  [METHOD] getCurrentNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P7_Replace_Invocation]^while  ( reset (  )  )  {^73^^^^^71^87^while  ( nextSet (  )  )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P2_Replace_Operator]^if  ( iterator != null )  {^75^^^^^71^87^if  ( iterator == null )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P8_Replace_Mix]^if  ( iterator == false )  {^75^^^^^71^87^if  ( iterator == null )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( parent == null )  {^75^^^^^71^87^if  ( iterator == null )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( pointer != null )  {^75^^^^^71^87^if  ( iterator == null )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P15_Unwrap_Block]^return null;^75^76^77^^^71^87^if  ( iterator == null )  { return null; }^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P16_Remove_Block]^^75^76^77^^^71^87^if  ( iterator == null )  { return null; }^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( parent == null )  {     return ; }^75^^^^^71^87^[Delete]^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( ! ( setPosition ( 1 )  )  )  {     return null; }^75^^^^^71^87^[Delete]^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P13_Insert_Block]^if  (  ( iterator )  == null )  {     return false; }^75^^^^^71^87^[Delete]^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( pointer != null )  {     return pointer; }^75^^^^^71^87^[Delete]^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P8_Replace_Mix]^return true;^76^^^^^71^87^return null;^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P2_Replace_Operator]^if  ( pointer == null )  {^80^^^^^71^87^if  ( pointer != null )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P8_Replace_Mix]^if  ( pointer != this )  {^80^^^^^71^87^if  ( pointer != null )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( iterator == null )  {^80^^^^^71^87^if  ( pointer != null )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( parent == null )  {^80^^^^^71^87^if  ( pointer != null )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( iterator != null )  {^80^^^^^71^87^if  ( pointer != null )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P15_Unwrap_Block]^return pointer;^80^81^82^^^71^87^if  ( pointer != null )  { return pointer; }^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P16_Remove_Block]^^80^81^82^^^71^87^if  ( pointer != null )  { return pointer; }^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( parent == null )  {     return ; }^80^^^^^71^87^[Delete]^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P13_Insert_Block]^if  (  ( iterator )  == null )  {     return null; }^80^^^^^71^87^[Delete]^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( ! ( setPosition ( 1 )  )  )  {     return null; }^80^^^^^71^87^[Delete]^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P13_Insert_Block]^if  (  ( iterator )  == null )  {     return false; }^80^^^^^71^87^[Delete]^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P8_Replace_Mix]^NodePointer pointer = iterator .setPosition ( 4 )  ;^79^^^^^71^87^NodePointer pointer = iterator.getNodePointer (  ) ;^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^NodePointer parent = parentContext.getCurrentNodePointer (  ) ;NodePointer pointer = iterator.getNodePointer (  ) ;^79^^^^^71^87^NodePointer pointer = iterator.getNodePointer (  ) ;^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^NodePointer pointer = parent.getParent (  ) ;NodePointer pointer = iterator.getNodePointer (  ) ;^79^^^^^71^87^NodePointer pointer = iterator.getNodePointer (  ) ;^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P7_Replace_Invocation]^getCurrentNodePointer (  ) ;^74^^^^^71^87^prepare (  ) ;^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P14_Delete_Statement]^^74^^^^^71^87^prepare (  ) ;^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^super.reset (  ) ;prepare (  ) ;^74^^^^^71^87^prepare (  ) ;^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P14_Delete_Statement]^^79^^^^^71^87^NodePointer pointer = iterator.getNodePointer (  ) ;^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^return iterator.getNodePointer (  ) ;NodePointer pointer = iterator.getNodePointer (  ) ;^79^^^^^71^87^NodePointer pointer = iterator.getNodePointer (  ) ;^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P2_Replace_Operator]^if  ( position != 0 )  {^72^^^^^71^87^if  ( position == 0 )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P3_Replace_Literal]^if  ( position == 5 )  {^72^^^^^71^87^if  ( position == 0 )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P6_Replace_Expression]^if  ( iterator == null )  {^72^^^^^71^87^if  ( position == 0 )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P6_Replace_Expression]^if  ( pointer != null )  {^72^^^^^71^87^if  ( position == 0 )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P8_Replace_Mix]^if  ( position == 3 )  {^72^^^^^71^87^if  ( position == 0 )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( !setPosition ( 1 )  )  {^72^^^^^71^87^if  ( position == 0 )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( oldPosition == 0 )  {^72^^^^^71^87^if  ( position == 0 )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P15_Unwrap_Block]^while (nextSet()) {    prepare();    if ((iterator) == null) {        return null;    }    org.apache.commons.jxpath.ri.model.NodePointer pointer = iterator.getNodePointer();    if (pointer != null) {        return pointer;    }} ; return null;^72^73^74^75^76^71^87^if  ( position == 0 )  { while  ( nextSet (  )  )  { prepare (  ) ; if  ( iterator == null )  { return null; }^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P16_Remove_Block]^^72^73^74^75^76^71^87^if  ( position == 0 )  { while  ( nextSet (  )  )  { prepare (  ) ; if  ( iterator == null )  { return null; }^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P8_Replace_Mix]^if  ( iterator == true )  {^75^^^^^71^87^if  ( iterator == null )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P8_Replace_Mix]^return false;^76^^^^^71^87^return null;^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P7_Replace_Invocation]^NodePointer pointer = iterator .setPosition ( this )  ;^79^^^^^71^87^NodePointer pointer = iterator.getNodePointer (  ) ;^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P8_Replace_Mix]^if  ( pointer != false )  {^80^^^^^71^87^if  ( pointer != null )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P8_Replace_Mix]^return this;^76^^^^^71^87^return null;^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P8_Replace_Mix]^return this;^84^^^^^71^87^return null;^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P14_Delete_Statement]^^73^74^^^^71^87^while  ( nextSet (  )  )  { prepare (  ) ;^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P8_Replace_Mix]^if  ( pointer != true )  {^80^^^^^71^87^if  ( pointer != null )  {^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P8_Replace_Mix]^return true;^84^^^^^71^87^return null;^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P7_Replace_Invocation]^return prepare (  ) ;^86^^^^^71^87^return getCurrentNodePointer (  ) ;^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P14_Delete_Statement]^^86^^^^^71^87^return getCurrentNodePointer (  ) ;^[CLASS] ChildContext  [METHOD] getSingleNodePointer [RETURN_TYPE] Pointer   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  pointer  NodeTest  nodeTest  
[P2_Replace_Operator]^return setPosition ( getCurrentPosition (  )   <<  1 ) ;^90^^^^^89^91^return setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] ChildContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P3_Replace_Literal]^return setPosition ( getCurrentPosition (  )   ) ;^90^^^^^89^91^return setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] ChildContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P7_Replace_Invocation]^return setPosition ( nextSet (  )  + 1 ) ;^90^^^^^89^91^return setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] ChildContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P8_Replace_Mix]^return setPosition ( nextSet (  )    instanceof   1 ) ;^90^^^^^89^91^return setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] ChildContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P2_Replace_Operator]^return setPosition ( getCurrentPosition (  )   >  1 ) ;^90^^^^^89^91^return setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] ChildContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P3_Replace_Literal]^return setPosition ( getCurrentPosition (  )  + 2 ) ;^90^^^^^89^91^return setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] ChildContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P14_Delete_Statement]^^90^^^^^89^91^return setPosition ( getCurrentPosition (  )  + 1 ) ;^[CLASS] ChildContext  [METHOD] nextNode [RETURN_TYPE] boolean   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P7_Replace_Invocation]^super.setPosition (  ) ;^94^^^^^93^96^super.reset (  ) ;^[CLASS] ChildContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P14_Delete_Statement]^^94^^^^^93^96^super.reset (  ) ;^[CLASS] ChildContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^prepare (  ) ;super.reset (  ) ;^94^^^^^93^96^super.reset (  ) ;^[CLASS] ChildContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P8_Replace_Mix]^iterator = this;^95^^^^^93^96^iterator = null;^[CLASS] ChildContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P12_Insert_Condition]^if  ( iterator == null )  { iterator = null; }^95^^^^^93^96^iterator = null;^[CLASS] ChildContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P12_Insert_Condition]^if  ( iterator != null )  { iterator = null; }^95^^^^^93^96^iterator = null;^[CLASS] ChildContext  [METHOD] reset [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  
[P1_Replace_Type]^short  oldPosition = getCurrentPosition (  ) ;^99^^^^^98^108^int oldPosition = getCurrentPosition (  ) ;^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P7_Replace_Invocation]^int oldPosition = nextSet (  ) ;^99^^^^^98^108^int oldPosition = getCurrentPosition (  ) ;^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P14_Delete_Statement]^^99^^^^^98^108^int oldPosition = getCurrentPosition (  ) ;^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P11_Insert_Donor_Statement]^return setPosition ( getCurrentPosition (  )  + 1 ) ;int oldPosition = getCurrentPosition (  ) ;^99^^^^^98^108^int oldPosition = getCurrentPosition (  ) ;^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P7_Replace_Invocation]^super .getCurrentNodePointer (  )  ;^100^^^^^98^108^super.setPosition ( position ) ;^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P14_Delete_Statement]^^100^^^^^98^108^super.setPosition ( position ) ;^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P11_Insert_Donor_Statement]^return setPosition ( getCurrentPosition (  )  + 1 ) ;super.setPosition ( position ) ;^100^^^^^98^108^super.setPosition ( position ) ;^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P11_Insert_Donor_Statement]^return iterator.setPosition ( position ) ;super.setPosition ( position ) ;^100^^^^^98^108^super.setPosition ( position ) ;^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P2_Replace_Operator]^if  ( oldPosition != 0 )  {^101^^^^^98^108^if  ( oldPosition == 0 )  {^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P3_Replace_Literal]^if  ( oldPosition == position )  {^101^^^^^98^108^if  ( oldPosition == 0 )  {^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P8_Replace_Mix]^if  ( oldPosition == 0 >> 2 )  {^101^^^^^98^108^if  ( oldPosition == 0 )  {^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P9_Replace_Statement]^if  ( position == 0 )  {^101^^^^^98^108^if  ( oldPosition == 0 )  {^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P9_Replace_Statement]^if  ( !setPosition ( 1 )  )  {^101^^^^^98^108^if  ( oldPosition == 0 )  {^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P15_Unwrap_Block]^prepare();^101^102^103^^^98^108^if  ( oldPosition == 0 )  { prepare (  ) ; }^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P16_Remove_Block]^^101^102^103^^^98^108^if  ( oldPosition == 0 )  { prepare (  ) ; }^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P13_Insert_Block]^if  ( ! ( setPosition ( 1 )  )  )  {     return null; }^101^^^^^98^108^[Delete]^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P7_Replace_Invocation]^getCurrentNodePointer (  ) ;^102^^^^^98^108^prepare (  ) ;^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P14_Delete_Statement]^^102^^^^^98^108^prepare (  ) ;^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P11_Insert_Donor_Statement]^super.reset (  ) ;prepare (  ) ;^102^^^^^98^108^prepare (  ) ;^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P2_Replace_Operator]^if  ( iterator != null )  {^104^^^^^98^108^if  ( iterator == null )  {^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P8_Replace_Mix]^if  ( iterator == this )  {^104^^^^^98^108^if  ( iterator == null )  {^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P9_Replace_Statement]^if  ( parent == null )  {^104^^^^^98^108^if  ( iterator == null )  {^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P9_Replace_Statement]^if  ( pointer != null )  {^104^^^^^98^108^if  ( iterator == null )  {^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P15_Unwrap_Block]^return false;^104^105^106^^^98^108^if  ( iterator == null )  { return false; }^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P16_Remove_Block]^^104^105^106^^^98^108^if  ( iterator == null )  { return false; }^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P13_Insert_Block]^if  ( parent == null )  {     return ; }^104^^^^^98^108^[Delete]^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P13_Insert_Block]^if  (  ( iterator )  == null )  {     return null; }^104^^^^^98^108^[Delete]^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P13_Insert_Block]^if  ( ! ( setPosition ( 1 )  )  )  {     return null; }^104^^^^^98^108^[Delete]^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P13_Insert_Block]^if  ( pointer != null )  {     return pointer; }^104^^^^^98^108^[Delete]^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P3_Replace_Literal]^return true;^105^^^^^98^108^return false;^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P5_Replace_Variable]^return iterator.setPosition ( oldPosition ) ;^107^^^^^98^108^return iterator.setPosition ( position ) ;^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P5_Replace_Variable]^return position.setPosition ( iterator ) ;^107^^^^^98^108^return iterator.setPosition ( position ) ;^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P7_Replace_Invocation]^return iterator .getCurrentNodePointer (  )  ;^107^^^^^98^108^return iterator.setPosition ( position ) ;^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P14_Delete_Statement]^^107^^^^^98^108^return iterator.setPosition ( position ) ;^[CLASS] ChildContext  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodeTest  nodeTest  int  oldPosition  position  
[P11_Insert_Donor_Statement]^NodePointer pointer = iterator.getNodePointer (  ) ;NodePointer parent = parentContext.getCurrentNodePointer (  ) ;^114^^^^^113^125^NodePointer parent = parentContext.getCurrentNodePointer (  ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^NodePointer pointer = parent.getParent (  ) ;NodePointer parent = parentContext.getCurrentNodePointer (  ) ;^114^^^^^113^125^NodePointer parent = parentContext.getCurrentNodePointer (  ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P14_Delete_Statement]^^114^^^^^113^125^NodePointer parent = parentContext.getCurrentNodePointer (  ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^return getCurrentNodePointer (  ) ;NodePointer parent = parentContext.getCurrentNodePointer (  ) ;^114^^^^^113^125^NodePointer parent = parentContext.getCurrentNodePointer (  ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P2_Replace_Operator]^if  ( parent != null )  {^115^^^^^113^125^if  ( parent == null )  {^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P5_Replace_Variable]^if  ( pointer == null )  {^115^^^^^113^125^if  ( parent == null )  {^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P8_Replace_Mix]^if  ( parent == true )  {^115^^^^^113^125^if  ( parent == null )  {^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( iterator == null )  {^115^^^^^113^125^if  ( parent == null )  {^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( iterator != null )  {^115^^^^^113^125^if  ( parent == null )  {^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P9_Replace_Statement]^if  ( pointer != null )  {^115^^^^^113^125^if  ( parent == null )  {^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P15_Unwrap_Block]^return ;^115^116^117^^^113^125^if  ( parent == null )  { return; }^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P16_Remove_Block]^^115^116^117^^^113^125^if  ( parent == null )  { return; }^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P13_Insert_Block]^if  (  ( iterator )  == null )  {     return null; }^115^^^^^113^125^[Delete]^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( ! ( setPosition ( 1 )  )  )  {     return null; }^115^^^^^113^125^[Delete]^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P13_Insert_Block]^if  (  ( iterator )  == null )  {     return false; }^115^^^^^113^125^[Delete]^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P13_Insert_Block]^if  ( pointer != null )  {     return pointer; }^115^^^^^113^125^[Delete]^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P5_Replace_Variable]^if  ( reverse )  {^118^^^^^113^125^if  ( startFromParentLocation )  {^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P15_Unwrap_Block]^org.apache.commons.jxpath.ri.model.NodePointer pointer = parent.getParent(); iterator = pointer.childIterator(nodeTest, reverse, parent);^118^119^120^121^^113^125^if  ( startFromParentLocation )  { NodePointer pointer = parent.getParent (  ) ; iterator = pointer.childIterator ( nodeTest, reverse, parent ) ; }^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P16_Remove_Block]^^118^119^120^121^^113^125^if  ( startFromParentLocation )  { NodePointer pointer = parent.getParent (  ) ; iterator = pointer.childIterator ( nodeTest, reverse, parent ) ; }^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P5_Replace_Variable]^iterator = parent.childIterator ( nodeTest, startFromParentLocation, null ) ;^123^^^^^113^125^iterator = parent.childIterator ( nodeTest, reverse, null ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P5_Replace_Variable]^iterator = parent.childIterator (  reverse, null ) ;^123^^^^^113^125^iterator = parent.childIterator ( nodeTest, reverse, null ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P5_Replace_Variable]^iterator = parent.childIterator ( nodeTest,  null ) ;^123^^^^^113^125^iterator = parent.childIterator ( nodeTest, reverse, null ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P5_Replace_Variable]^iterator = reverse.childIterator ( nodeTest, parent, null ) ;^123^^^^^113^125^iterator = parent.childIterator ( nodeTest, reverse, null ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P5_Replace_Variable]^iterator = nodeTest.childIterator ( parent, reverse, null ) ;^123^^^^^113^125^iterator = parent.childIterator ( nodeTest, reverse, null ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P5_Replace_Variable]^iterator = parent.childIterator ( reverse, nodeTest, null ) ;^123^^^^^113^125^iterator = parent.childIterator ( nodeTest, reverse, null ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P8_Replace_Mix]^iterator = parent.childIterator ( nodeTest, reverse, false ) ;^123^^^^^113^125^iterator = parent.childIterator ( nodeTest, reverse, null ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^iterator = pointer.childIterator ( nodeTest, reverse, parent ) ;iterator = parent.childIterator ( nodeTest, reverse, null ) ;^123^^^^^113^125^iterator = parent.childIterator ( nodeTest, reverse, null ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P5_Replace_Variable]^iterator = pointer.childIterator ( nodeTest, reverse, null ) ;^123^^^^^113^125^iterator = parent.childIterator ( nodeTest, reverse, null ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P14_Delete_Statement]^^123^^^^^113^125^iterator = parent.childIterator ( nodeTest, reverse, null ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P5_Replace_Variable]^iterator = parent.childIterator ( nodeTest, reverse, parent ) ;^120^^^^^113^125^iterator = pointer.childIterator ( nodeTest, reverse, parent ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P5_Replace_Variable]^iterator = pointer.childIterator ( nodeTest, startFromParentLocation, parent ) ;^120^^^^^113^125^iterator = pointer.childIterator ( nodeTest, reverse, parent ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P5_Replace_Variable]^iterator = pointer.childIterator ( nodeTest, reverse ) ;^120^^^^^113^125^iterator = pointer.childIterator ( nodeTest, reverse, parent ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P5_Replace_Variable]^iterator = pointer.childIterator (  reverse, parent ) ;^120^^^^^113^125^iterator = pointer.childIterator ( nodeTest, reverse, parent ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P5_Replace_Variable]^iterator = pointer.childIterator ( nodeTest,  parent ) ;^120^^^^^113^125^iterator = pointer.childIterator ( nodeTest, reverse, parent ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P5_Replace_Variable]^iterator = parent.childIterator ( nodeTest, reverse, pointer ) ;^120^^^^^113^125^iterator = pointer.childIterator ( nodeTest, reverse, parent ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P5_Replace_Variable]^iterator = pointer.childIterator ( reverse, nodeTest, parent ) ;^120^^^^^113^125^iterator = pointer.childIterator ( nodeTest, reverse, parent ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P5_Replace_Variable]^iterator = reverse.childIterator ( nodeTest, pointer, parent ) ;^120^^^^^113^125^iterator = pointer.childIterator ( nodeTest, reverse, parent ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^iterator = parent.childIterator ( nodeTest, reverse, null ) ;iterator = pointer.childIterator ( nodeTest, reverse, parent ) ;^120^^^^^113^125^iterator = pointer.childIterator ( nodeTest, reverse, parent ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^NodePointer pointer = iterator.getNodePointer (  ) ;NodePointer pointer = parent.getParent (  ) ;^119^^^^^113^125^NodePointer pointer = parent.getParent (  ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^NodePointer parent = parentContext.getCurrentNodePointer (  ) ;NodePointer pointer = parent.getParent (  ) ;^119^^^^^113^125^NodePointer pointer = parent.getParent (  ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P5_Replace_Variable]^NodePointer pointer = pointer.getParent (  ) ;^119^^^^^113^125^NodePointer pointer = parent.getParent (  ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P7_Replace_Invocation]^NodePointer pointer = parent .childIterator ( nodeTest , startFromParentLocation , pointer )  ;^119^^^^^113^125^NodePointer pointer = parent.getParent (  ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P14_Delete_Statement]^^119^120^^^^113^125^NodePointer pointer = parent.getParent (  ) ; iterator = pointer.childIterator ( nodeTest, reverse, parent ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P5_Replace_Variable]^iterator = pointer.childIterator ( nodeTest, reverse, pointer ) ;^120^^^^^113^125^iterator = pointer.childIterator ( nodeTest, reverse, parent ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P14_Delete_Statement]^^120^^^^^113^125^iterator = pointer.childIterator ( nodeTest, reverse, parent ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P5_Replace_Variable]^iterator = pointer.childIterator ( parent, reverse, nodeTest ) ;^120^^^^^113^125^iterator = pointer.childIterator ( nodeTest, reverse, parent ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P7_Replace_Invocation]^iterator = parent .childIterator ( nodeTest , startFromParentLocation , parent )  ;^123^^^^^113^125^iterator = parent.childIterator ( nodeTest, reverse, null ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P8_Replace_Mix]^iterator = parent.childIterator ( nodeTest, reverse, this ) ;^123^^^^^113^125^iterator = parent.childIterator ( nodeTest, reverse, null ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P8_Replace_Mix]^NodePointer pointer = parent .childIterator ( nodeTest , reverse , pointer )  ;^119^^^^^113^125^NodePointer pointer = parent.getParent (  ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
[P5_Replace_Variable]^iterator = nodeTest.childIterator ( pointer, reverse, parent ) ;^120^^^^^113^125^iterator = pointer.childIterator ( nodeTest, reverse, parent ) ;^[CLASS] ChildContext  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iterator  boolean  reverse  startFromParentLocation  NodePointer  parent  pointer  NodeTest  nodeTest  
