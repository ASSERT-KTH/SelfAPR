[P14_Delete_Statement]^^44^^^^^43^48^super ( null ) ;^[CLASS] VariablePointer 1  [METHOD] <init> [RETURN_TYPE] QName)   Variables variables QName name [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^this.variables =  null;^45^^^^^43^48^this.variables = variables;^[CLASS] VariablePointer 1  [METHOD] <init> [RETURN_TYPE] QName)   Variables variables QName name [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^variables = null;this.variables = variables;^45^^^^^43^48^this.variables = variables;^[CLASS] VariablePointer 1  [METHOD] <init> [RETURN_TYPE] QName)   Variables variables QName name [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^this.name =  null;^46^^^^^43^48^this.name = name;^[CLASS] VariablePointer 1  [METHOD] <init> [RETURN_TYPE] QName)   Variables variables QName name [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P3_Replace_Literal]^actual = false;^47^^^^^43^48^actual = true;^[CLASS] VariablePointer 1  [METHOD] <init> [RETURN_TYPE] QName)   Variables variables QName name [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^actual = false;actual = true;^47^^^^^43^48^actual = true;^[CLASS] VariablePointer 1  [METHOD] <init> [RETURN_TYPE] QName)   Variables variables QName name [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P14_Delete_Statement]^^51^52^^^^50^54^super ( null ) ; this.name = name;^[CLASS] VariablePointer 1  [METHOD] <init> [RETURN_TYPE] QName)   QName name [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^this.name =  null;^52^^^^^50^54^this.name = name;^[CLASS] VariablePointer 1  [METHOD] <init> [RETURN_TYPE] QName)   QName name [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P3_Replace_Literal]^actual = true;^53^^^^^50^54^actual = false;^[CLASS] VariablePointer 1  [METHOD] <init> [RETURN_TYPE] QName)   QName name [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^actual = true;actual = false;^53^^^^^50^54^actual = false;^[CLASS] VariablePointer 1  [METHOD] <init> [RETURN_TYPE] QName)   QName name [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P3_Replace_Literal]^return false;^57^^^^^56^58^return true;^[CLASS] VariablePointer 1  [METHOD] isContainer [RETURN_TYPE] boolean   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^if  ( actual )  {^65^^^^^64^69^if  ( !actual )  {^[CLASS] VariablePointer 1  [METHOD] getBaseValue [RETURN_TYPE] Object   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P9_Replace_Statement]^if  ( !success )  {^65^^^^^64^69^if  ( !actual )  {^[CLASS] VariablePointer 1  [METHOD] getBaseValue [RETURN_TYPE] Object   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P15_Unwrap_Block]^throw new org.apache.commons.jxpath.JXPathException(("Undefined variable: " + (name)));^65^66^67^^^64^69^if  ( !actual )  { throw new JXPathException  (" ")  ; }^[CLASS] VariablePointer 1  [METHOD] getBaseValue [RETURN_TYPE] Object   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P16_Remove_Block]^^65^66^67^^^64^69^if  ( !actual )  { throw new JXPathException  (" ")  ; }^[CLASS] VariablePointer 1  [METHOD] getBaseValue [RETURN_TYPE] Object   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P13_Insert_Block]^if  ( !success )  {     throw new JXPathAbstractFactoryException (  ( "Factory could not create object path: " +  ( asPath (  )  )  )  ) ; }^65^^^^^64^69^[Delete]^[CLASS] VariablePointer 1  [METHOD] getBaseValue [RETURN_TYPE] Object   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P13_Insert_Block]^if  ( ! ( actual )  )  {     throw new JXPathException (  ( "Cannot set undefined variable: " +  ( name )  )  ) ; }^65^^^^^64^69^[Delete]^[CLASS] VariablePointer 1  [METHOD] getBaseValue [RETURN_TYPE] Object   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P13_Insert_Block]^if  (  ( index )  < 0 )  {     throw new JXPathInvalidAccessException (  ( "Index is less than 1: " +  ( asPath (  )  )  )  ) ; }^65^^^^^64^69^[Delete]^[CLASS] VariablePointer 1  [METHOD] getBaseValue [RETURN_TYPE] Object   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P13_Insert_Block]^if  ( factory == null )  {     throw new JXPathException (  ( "Factory is not set on the JXPathContext - cannot create path: " +  ( asPath (  )  )  )  ) ; }^65^^^^^64^69^[Delete]^[CLASS] VariablePointer 1  [METHOD] getBaseValue [RETURN_TYPE] Object   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P13_Insert_Block]^if  ( index < 0 )  {     throw new JXPathInvalidAccessException (  ( "Index is less than 1: " +  ( asPath (  )  )  )  ) ; }^65^^^^^64^69^[Delete]^[CLASS] VariablePointer 1  [METHOD] getBaseValue [RETURN_TYPE] Object   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P13_Insert_Block]^if  ( ! ( actual )  )  {     throw new JXPathException (  ( "Cannot set undefined variable: " +  ( name )  )  ) ; }^66^^^^^64^69^[Delete]^[CLASS] VariablePointer 1  [METHOD] getBaseValue [RETURN_TYPE] Object   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P13_Insert_Block]^if  ( ! ( actual )  )  {     throw new JXPathException (  ( "Undefined variable: " +  ( name )  )  ) ; }^66^^^^^64^69^[Delete]^[CLASS] VariablePointer 1  [METHOD] getBaseValue [RETURN_TYPE] Object   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^throw new JXPathException ( "Undefined variable: " + name ) ;throw new JXPathException  (" ")  ;^66^^^^^64^69^throw new JXPathException  (" ")  ;^[CLASS] VariablePointer 1  [METHOD] getBaseValue [RETURN_TYPE] Object   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P13_Insert_Block]^if  (  ( index )  < 0 )  {     throw new JXPathInvalidAccessException (  ( "Index is less than 1: " +  ( asPath (  )  )  )  ) ; }^66^^^^^64^69^[Delete]^[CLASS] VariablePointer 1  [METHOD] getBaseValue [RETURN_TYPE] Object   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P13_Insert_Block]^if  ( index < 0 )  {     throw new JXPathInvalidAccessException (  ( "Index is less than 1: " +  ( asPath (  )  )  )  ) ; }^66^^^^^64^69^[Delete]^[CLASS] VariablePointer 1  [METHOD] getBaseValue [RETURN_TYPE] Object   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P5_Replace_Variable]^return name.getVariable ( variables.toString (  )  ) ;^68^^^^^64^69^return variables.getVariable ( name.toString (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] getBaseValue [RETURN_TYPE] Object   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P7_Replace_Invocation]^return variables.undeclareVariable ( name.toString (  )  ) ;^68^^^^^64^69^return variables.getVariable ( name.toString (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] getBaseValue [RETURN_TYPE] Object   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P7_Replace_Invocation]^return variables.getVariable ( name.hashCode (  )  ) ;^68^^^^^64^69^return variables.getVariable ( name.toString (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] getBaseValue [RETURN_TYPE] Object   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P12_Insert_Condition]^if  ( variables.isDeclaredVariable ( name.toString (  )  )  )  { return variables.getVariable ( name.toString (  )  ) ; }^68^^^^^64^69^return variables.getVariable ( name.toString (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] getBaseValue [RETURN_TYPE] Object   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P12_Insert_Condition]^if  ( !factory.declareVariable ( context, name.toString (  )  )  )  { return variables.getVariable ( name.toString (  )  ) ; }^68^^^^^64^69^return variables.getVariable ( name.toString (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] getBaseValue [RETURN_TYPE] Object   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P14_Delete_Statement]^^68^^^^^64^69^return variables.getVariable ( name.toString (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] getBaseValue [RETURN_TYPE] Object   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P7_Replace_Invocation]^Object value = getValuePointer (  ) ;^72^^^^^71^75^Object value = getNode (  ) ;^[CLASS] VariablePointer 1  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^Object value = null;Object value = getNode (  ) ;^72^^^^^71^75^Object value = getNode (  ) ;^[CLASS] VariablePointer 1  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^Object collection = getBaseValue (  ) ;Object value = getNode (  ) ;^72^^^^^71^75^Object value = getNode (  ) ;^[CLASS] VariablePointer 1  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^Object value = getBaseValue (  ) ;Object value = getNode (  ) ;^72^^^^^71^75^Object value = getNode (  ) ;^[CLASS] VariablePointer 1  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P14_Delete_Statement]^^72^^^^^71^75^Object value = getNode (  ) ;^[CLASS] VariablePointer 1  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P2_Replace_Operator]^return value == null && JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^73^74^^^^71^75^return value == null || JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^[CLASS] VariablePointer 1  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P2_Replace_Operator]^return value != null || JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^73^74^^^^71^75^return value == null || JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^[CLASS] VariablePointer 1  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P7_Replace_Invocation]^return value == null || JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .setIndex (  ) ;^73^74^^^^71^75^return value == null || JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^[CLASS] VariablePointer 1  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^return value == null || JXPathIntrospector.getBeanInfo ( value .clone (  )   ) .isAtomic (  ) ;^73^74^^^^71^75^return value == null || JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^[CLASS] VariablePointer 1  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P7_Replace_Invocation]^|| JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .setIndex (  ) ;^74^^^^^71^75^|| JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^[CLASS] VariablePointer 1  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P14_Delete_Statement]^^74^^^^^71^75^|| JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^[CLASS] VariablePointer 1  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P7_Replace_Invocation]^|| JXPathIntrospector.getBeanInfo ( value .clone (  )   ) .isAtomic (  ) ;^74^^^^^71^75^|| JXPathIntrospector.getBeanInfo ( value.getClass (  )  ) .isAtomic (  ) ;^[CLASS] VariablePointer 1  [METHOD] isLeaf [RETURN_TYPE] boolean   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P7_Replace_Invocation]^Object value = getName (  ) ;^78^^^^^77^80^Object value = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] isCollection [RETURN_TYPE] boolean   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^Object collection = getBaseValue (  ) ;Object value = getBaseValue (  ) ;^78^^^^^77^80^Object value = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] isCollection [RETURN_TYPE] boolean   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^Object value = getNode (  ) ;Object value = getBaseValue (  ) ;^78^^^^^77^80^Object value = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] isCollection [RETURN_TYPE] boolean   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P14_Delete_Statement]^^78^^^^^77^80^Object value = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] isCollection [RETURN_TYPE] boolean   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^setValue ( value ) ;Object value = getBaseValue (  ) ;^78^^^^^77^80^Object value = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] isCollection [RETURN_TYPE] boolean   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P2_Replace_Operator]^return value != null || ValueUtils.isCollection ( value ) ;^79^^^^^77^80^return value != null && ValueUtils.isCollection ( value ) ;^[CLASS] VariablePointer 1  [METHOD] isCollection [RETURN_TYPE] boolean   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P2_Replace_Operator]^return value == null && ValueUtils.isCollection ( value ) ;^79^^^^^77^80^return value != null && ValueUtils.isCollection ( value ) ;^[CLASS] VariablePointer 1  [METHOD] isCollection [RETURN_TYPE] boolean   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P7_Replace_Invocation]^return value != null && ValueUtils.getLength ( value ) ;^79^^^^^77^80^return value != null && ValueUtils.isCollection ( value ) ;^[CLASS] VariablePointer 1  [METHOD] isCollection [RETURN_TYPE] boolean   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^return value != null ;;^79^^^^^77^80^return value != null && ValueUtils.isCollection ( value ) ;^[CLASS] VariablePointer 1  [METHOD] isCollection [RETURN_TYPE] boolean   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P14_Delete_Statement]^^79^^^^^77^80^return value != null && ValueUtils.isCollection ( value ) ;^[CLASS] VariablePointer 1  [METHOD] isCollection [RETURN_TYPE] boolean   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P7_Replace_Invocation]^Object value = getName (  ) ;^83^^^^^82^90^Object value = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^Object collection = getBaseValue (  ) ;Object value = getBaseValue (  ) ;^83^^^^^82^90^Object value = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^Object value = getNode (  ) ;Object value = getBaseValue (  ) ;^83^^^^^82^90^Object value = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P14_Delete_Statement]^^83^^^^^82^90^Object value = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^setValue ( value ) ;Object value = getBaseValue (  ) ;^83^^^^^82^90^Object value = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P2_Replace_Operator]^if  ( index <= WHOLE_COLLECTION )  {^84^^^^^82^90^if  ( index != WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P5_Replace_Variable]^if  ( WHOLE_COLLECTION != index )  {^84^^^^^82^90^if  ( index != WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^if  ( index = WHOLE_COLLECTION )  {^84^^^^^82^90^if  ( index != WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P15_Unwrap_Block]^return org.apache.commons.jxpath.util.ValueUtils.getValue(value, index);^84^85^86^^^82^90^if  ( index != WHOLE_COLLECTION )  { return ValueUtils.getValue ( value, index ) ; }^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P16_Remove_Block]^^84^85^86^^^82^90^if  ( index != WHOLE_COLLECTION )  { return ValueUtils.getValue ( value, index ) ; }^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P13_Insert_Block]^if  (  ( index )  !=  ( WHOLE_COLLECTION )  )  {     Object collection = getBaseValue (  ) ;     setValue ( collection, index, value ) ; }else {     variables.declareVariable ( name.toString (  ) , value ) ; }^84^^^^^82^90^[Delete]^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P7_Replace_Invocation]^return ValueUtils.getLength ( value ) ;^88^^^^^82^90^return ValueUtils.getValue ( value ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^return ValueUtils .setValue ( value , value )  ;^88^^^^^82^90^return ValueUtils.getValue ( value ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P14_Delete_Statement]^^88^^^^^82^90^return ValueUtils.getValue ( value ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P5_Replace_Variable]^return ValueUtils.getValue (  index ) ;^85^^^^^82^90^return ValueUtils.getValue ( value, index ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P5_Replace_Variable]^return ValueUtils.getValue ( value ) ;^85^^^^^82^90^return ValueUtils.getValue ( value, index ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P5_Replace_Variable]^return ValueUtils.getValue ( index, value ) ;^85^^^^^82^90^return ValueUtils.getValue ( value, index ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P7_Replace_Invocation]^return ValueUtils.getLength ( value, index ) ;^85^^^^^82^90^return ValueUtils.getValue ( value, index ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^return ValueUtils .setValue ( value , value )  ;^85^^^^^82^90^return ValueUtils.getValue ( value, index ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^return ValueUtils.getValue ( value, 4 ) ;^85^^^^^82^90^return ValueUtils.getValue ( value, index ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P14_Delete_Statement]^^85^^^^^82^90^return ValueUtils.getValue ( value, index ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P9_Replace_Statement]^if  ( actual )  {^93^^^^^92^104^if  ( !actual )  {^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P9_Replace_Statement]^if  ( !success )  {^93^^^^^92^104^if  ( !actual )  {^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P15_Unwrap_Block]^throw new org.apache.commons.jxpath.JXPathException(("Cannot set undefined variable: " + (name)));^93^94^95^^^92^104^if  ( !actual )  { throw new JXPathException  (" ")  ; }^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P16_Remove_Block]^^93^94^95^^^92^104^if  ( !actual )  { throw new JXPathException  (" ")  ; }^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P13_Insert_Block]^if  ( !success )  {     throw new JXPathAbstractFactoryException (  ( "Factory could not create object path: " +  ( asPath (  )  )  )  ) ; }^93^^^^^92^104^[Delete]^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P13_Insert_Block]^if  (  ( index )  < 0 )  {     throw new JXPathInvalidAccessException (  ( "Index is less than 1: " +  ( asPath (  )  )  )  ) ; }^93^^^^^92^104^[Delete]^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P13_Insert_Block]^if  ( factory == null )  {     throw new JXPathException (  ( "Factory is not set on the JXPathContext - cannot create path: " +  ( asPath (  )  )  )  ) ; }^93^^^^^92^104^[Delete]^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P13_Insert_Block]^if  ( ! ( actual )  )  {     throw new JXPathException (  ( "Undefined variable: " +  ( name )  )  ) ; }^93^^^^^92^104^[Delete]^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P13_Insert_Block]^if  ( collection == null )  {     throw new JXPathAbstractFactoryException (  (  (  ( "Factory did not assign a collection to variable '" +  ( name )  )  + "' for path: " )  +  ( asPath (  )  )  )  ) ; }^93^^^^^92^104^[Delete]^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P13_Insert_Block]^if  ( index < 0 )  {     throw new JXPathInvalidAccessException (  ( "Index is less than 1: " +  ( asPath (  )  )  )  ) ; }^93^^^^^92^104^[Delete]^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P13_Insert_Block]^if  ( ! ( actual )  )  {     throw new JXPathException (  ( "Cannot set undefined variable: " +  ( name )  )  ) ; }^94^^^^^92^104^[Delete]^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P13_Insert_Block]^if  ( ! ( actual )  )  {     throw new JXPathException (  ( "Undefined variable: " +  ( name )  )  ) ; }^94^^^^^92^104^[Delete]^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^throw new JXPathException ( "Undefined variable: " + name ) ;throw new JXPathException  (" ")  ;^94^^^^^92^104^throw new JXPathException  (" ")  ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P13_Insert_Block]^if  ( factory == null )  {     throw new JXPathException (  ( "Factory is not set on the JXPathContext - cannot create path: " +  ( asPath (  )  )  )  ) ; }^94^^^^^92^104^[Delete]^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^valuePointer = this;^96^^^^^92^104^valuePointer = null;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^variables = null;valuePointer = null;^96^^^^^92^104^valuePointer = null;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P12_Insert_Condition]^if  ( valuePointer == null )  { valuePointer = null; }^96^^^^^92^104^valuePointer = null;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P2_Replace_Operator]^if  ( index < WHOLE_COLLECTION )  {^97^^^^^92^104^if  ( index != WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P5_Replace_Variable]^if  ( WHOLE_COLLECTION != index )  {^97^^^^^92^104^if  ( index != WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P15_Unwrap_Block]^java.lang.Object collection = getBaseValue(); org.apache.commons.jxpath.util.ValueUtils.setValue(collection, index, value);^97^98^99^100^^92^104^if  ( index != WHOLE_COLLECTION )  { Object collection = getBaseValue (  ) ; ValueUtils.setValue ( collection, index, value ) ; }^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P16_Remove_Block]^^97^98^99^100^^92^104^if  ( index != WHOLE_COLLECTION )  { Object collection = getBaseValue (  ) ; ValueUtils.setValue ( collection, index, value ) ; }^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P13_Insert_Block]^if  (  ( index )  !=  ( WHOLE_COLLECTION )  )  {     return getValue ( value, index ) ; }else {     return getValue ( value ) ; }^97^^^^^92^104^[Delete]^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P13_Insert_Block]^if  (  ( collection != null )  &&  (  ( index )  <  ( getLength (  )  )  )  )  {     collection = remove ( collection, index ) ;     variables.declareVariable ( name.toString (  ) , collection ) ; }^97^^^^^92^104^[Delete]^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P13_Insert_Block]^if  ( index >=  ( getLength (  )  )  )  {     collection = expandCollection ( collection,  ( index + 1 )  ) ;     variables.declareVariable ( name.toString (  ) , collection ) ; }^97^^^^^92^104^[Delete]^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P5_Replace_Variable]^variables.declareVariable ( name.toString (  ) , collection ) ;^102^^^^^92^104^variables.declareVariable ( name.toString (  ) , value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P5_Replace_Variable]^variables.declareVariable ( name.toString (  )  ) ;^102^^^^^92^104^variables.declareVariable ( name.toString (  ) , value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P5_Replace_Variable]^variables.declareVariable ( value.toString (  ) , name ) ;^102^^^^^92^104^variables.declareVariable ( name.toString (  ) , value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P7_Replace_Invocation]^variables.declareVariable ( name.hashCode (  ) , value ) ;^102^^^^^92^104^variables.declareVariable ( name.toString (  ) , value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P14_Delete_Statement]^^102^^^^^92^104^variables.declareVariable ( name.toString (  ) , value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P12_Insert_Condition]^if  ( variables.isDeclaredVariable ( name.toString (  )  )  )  { variables.declareVariable ( name.toString (  ) , value ) ; }^102^^^^^92^104^variables.declareVariable ( name.toString (  ) , value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P12_Insert_Condition]^if  ( !factory.declareVariable ( context, name.toString (  )  )  )  { variables.declareVariable ( name.toString (  ) , value ) ; }^102^^^^^92^104^variables.declareVariable ( name.toString (  ) , value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P13_Insert_Block]^if  ( variables.isDeclaredVariable ( name.toString (  )  )  )  {     actual = true;     break; }^102^^^^^92^104^[Delete]^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P7_Replace_Invocation]^Object collection = getName (  ) ;^98^^^^^92^104^Object collection = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^Object collection = createCollection ( context, index ) ;Object collection = getBaseValue (  ) ;^98^^^^^92^104^Object collection = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^Object value = getBaseValue (  ) ;Object collection = getBaseValue (  ) ;^98^^^^^92^104^Object collection = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^Object value = getNode (  ) ;Object collection = getBaseValue (  ) ;^98^^^^^92^104^Object collection = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P14_Delete_Statement]^^98^99^^^^92^104^Object collection = getBaseValue (  ) ; ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P5_Replace_Variable]^ValueUtils.setValue ( collection, index, collection ) ;^99^^^^^92^104^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P5_Replace_Variable]^ValueUtils.setValue (  index, value ) ;^99^^^^^92^104^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P5_Replace_Variable]^ValueUtils.setValue ( collection, index ) ;^99^^^^^92^104^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P5_Replace_Variable]^ValueUtils.setValue ( collection,  value ) ;^99^^^^^92^104^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P5_Replace_Variable]^ValueUtils.setValue ( value, index, collection ) ;^99^^^^^92^104^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P5_Replace_Variable]^ValueUtils.setValue ( index, collection, value ) ;^99^^^^^92^104^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P7_Replace_Invocation]^ValueUtils.expandCollection ( collection, index, value ) ;^99^^^^^92^104^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P7_Replace_Invocation]^ValueUtils .setValue ( value )  ;^99^^^^^92^104^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^ValueUtils.expandCollection ( value, index, value ) ;^99^^^^^92^104^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P14_Delete_Statement]^^99^^^^^92^104^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^collection = ValueUtils.remove ( collection, index ) ;ValueUtils.setValue ( collection, index, value ) ;^99^^^^^92^104^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^return ValueUtils.getValue ( value, index ) ;ValueUtils.setValue ( collection, index, value ) ;^99^^^^^92^104^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^collection = ValueUtils.expandCollection ( collection, index + 1 ) ;ValueUtils.setValue ( collection, index, value ) ;^99^^^^^92^104^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P5_Replace_Variable]^ValueUtils.setValue ( collection, value, index ) ;^99^^^^^92^104^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] setValue [RETURN_TYPE] void   Object value [VARIABLES] Variables  variables  Object  collection  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^super .getNode (  )  ;^111^^^^^110^113^super.setIndex ( index ) ;^[CLASS] VariablePointer 1  [METHOD] setIndex [RETURN_TYPE] void   int index [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  int  index  
[P14_Delete_Statement]^^111^^^^^110^113^super.setIndex ( index ) ;^[CLASS] VariablePointer 1  [METHOD] setIndex [RETURN_TYPE] void   int index [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  int  index  
[P11_Insert_Donor_Statement]^cln.setIndex ( index ) ;super.setIndex ( index ) ;^111^^^^^110^113^super.setIndex ( index ) ;^[CLASS] VariablePointer 1  [METHOD] setIndex [RETURN_TYPE] void   int index [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  int  index  
[P11_Insert_Donor_Statement]^cl.setIndex ( index ) ;super.setIndex ( index ) ;^111^^^^^110^113^super.setIndex ( index ) ;^[CLASS] VariablePointer 1  [METHOD] setIndex [RETURN_TYPE] void   int index [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  int  index  
[P8_Replace_Mix]^valuePointer = this;^112^^^^^110^113^valuePointer = null;^[CLASS] VariablePointer 1  [METHOD] setIndex [RETURN_TYPE] void   int index [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  int  index  
[P11_Insert_Donor_Statement]^variables = null;valuePointer = null;^112^^^^^110^113^valuePointer = null;^[CLASS] VariablePointer 1  [METHOD] setIndex [RETURN_TYPE] void   int index [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  int  index  
[P12_Insert_Condition]^if  ( valuePointer == null )  { valuePointer = null; }^112^^^^^110^113^valuePointer = null;^[CLASS] VariablePointer 1  [METHOD] setIndex [RETURN_TYPE] void   int index [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  int  index  
[P2_Replace_Operator]^if  ( valuePointer != null )  {^116^^^^^115^133^if  ( valuePointer == null )  {^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P6_Replace_Expression]^if  ( "Undefined variable: " + name )  {^116^^^^^115^133^if  ( valuePointer == null )  {^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^if  ( valuePointer == this )  {^116^^^^^115^133^if  ( valuePointer == null )  {^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P9_Replace_Statement]^if  ( factory == null )  {^116^^^^^115^133^if  ( valuePointer == null )  {^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P9_Replace_Statement]^if  ( value == null )  {^116^^^^^115^133^if  ( valuePointer == null )  {^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P9_Replace_Statement]^if  ( collection == null )  {^116^^^^^115^133^if  ( valuePointer == null )  {^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P13_Insert_Block]^if  ( actual )  {     value = getImmediateNode (  ) ;     valuePointer = newChildNodePointer ( this, null, value ) ; }else {     return new NullPointer ( this, getName (  )  )  {         public Object getImmediateNode (  )  {             throw new JXPathException (  ( "Undefined variable: " +  ( name )  )  ) ;         }     }; }^116^^^^^115^133^[Delete]^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P9_Replace_Statement]^if  ( !actual )  {^118^^^^^115^133^if  ( actual )  {^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P15_Unwrap_Block]^value = getImmediateNode(); valuePointer = org.apache.commons.jxpath.ri.model.NodePointer.newChildNodePointer(this, null, value);^118^119^120^121^122^115^133^if  ( actual )  { value = getImmediateNode (  ) ; valuePointer = NodePointer.newChildNodePointer ( this, null, value ) ; }^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P16_Remove_Block]^^118^119^120^121^122^115^133^if  ( actual )  { value = getImmediateNode (  ) ; valuePointer = NodePointer.newChildNodePointer ( this, null, value ) ; }^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P7_Replace_Invocation]^return new NullPointer ( this, getLength (  )  )  {^124^^^^^115^133^return new NullPointer ( this, getName (  )  )  {^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P2_Replace_Operator]^throw new JXPathException ( "Undefined variable: "  <  name ) ;^126^127^^^^115^133^throw new JXPathException ( "Undefined variable: " + name ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P3_Replace_Literal]^throw new JXPathException ( "Undefined variable: nde" + name ) ;^126^127^^^^115^133^throw new JXPathException ( "Undefined variable: " + name ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P2_Replace_Operator]^throw new JXPathException ( "Undefined variable: "  ==  name ) ;^126^127^^^^115^133^throw new JXPathException ( "Undefined variable: " + name ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P3_Replace_Literal]^throw new JXPathException ( "dndefined variable: " + name ) ;^126^127^^^^115^133^throw new JXPathException ( "Undefined variable: " + name ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P7_Replace_Invocation]^value = getBaseValue (  ) ;^119^^^^^115^133^value = getImmediateNode (  ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^value ;^119^^^^^115^133^value = getImmediateNode (  ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^valuePointer = NodePointer.newChildNodePointer ( this, true, value ) ;^120^121^^^^115^133^valuePointer = NodePointer.newChildNodePointer ( this, null, value ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P14_Delete_Statement]^^119^^^^^115^133^value = getImmediateNode (  ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P14_Delete_Statement]^^121^^^^^115^133^NodePointer.newChildNodePointer ( this, null, value ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^NodePointer cl =  ( NodePointer )  clone (  ) ;NodePointer.newChildNodePointer ( this, null, value ) ;^121^^^^^115^133^NodePointer.newChildNodePointer ( this, null, value ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^NodePointer cln =  ( NodePointer )  clone (  ) ;NodePointer.newChildNodePointer ( this, null, value ) ;^121^^^^^115^133^NodePointer.newChildNodePointer ( this, null, value ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^valuePointer = NodePointer.newChildNodePointer ( this, false, value ) ;^120^121^^^^115^133^valuePointer = NodePointer.newChildNodePointer ( this, null, value ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P2_Replace_Operator]^throw new JXPathException ( "Undefined variable: "  ^  name ) ;^126^127^^^^115^133^throw new JXPathException ( "Undefined variable: " + name ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P3_Replace_Literal]^throw new JXPathException ( "ndefined variable: " + name ) ;^126^127^^^^115^133^throw new JXPathException ( "Undefined variable: " + name ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^Object value = getNode (  ) ;Object value = null;^117^^^^^115^133^Object value = null;^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P3_Replace_Literal]^throw new JXPathException ( "U" + name ) ;^126^127^^^^115^133^throw new JXPathException ( "Undefined variable: " + name ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P3_Replace_Literal]^throw new JXPathException ( "Undefined vndefined variable: " + name ) ;^126^127^^^^115^133^throw new JXPathException ( "Undefined variable: " + name ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P3_Replace_Literal]^throw new JXPathException ( "d var" + name ) ;^126^127^^^^115^133^throw new JXPathException ( "Undefined variable: " + name ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^throw new JXPathException  (" ")  ; ;^126^127^^^^115^133^throw new JXPathException ( "Undefined variable: " + name ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^valuePointer = NodePointer.newChildNodePointer ( this, this, value ) ;^120^121^^^^115^133^valuePointer = NodePointer.newChildNodePointer ( this, null, value ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P2_Replace_Operator]^throw new JXPathException ( "Undefined variable: "  >=  name ) ;^126^127^^^^115^133^throw new JXPathException ( "Undefined variable: " + name ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P3_Replace_Literal]^throw new JXPathException ( "in" + name ) ;^126^127^^^^115^133^throw new JXPathException ( "Undefined variable: " + name ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P3_Replace_Literal]^throw new JXPathException ( "Undefined variable: riable" + name ) ;^126^127^^^^115^133^throw new JXPathException ( "Undefined variable: " + name ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateValuePointer [RETURN_TYPE] NodePointer   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P2_Replace_Operator]^throw new JXPathException ( "Undefined variable: "  !=  name ) ;^126^127^^^^125^128^throw new JXPathException ( "Undefined variable: " + name ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P3_Replace_Literal]^throw new JXPathException ( "Undefined variable: ned " + name ) ;^126^127^^^^125^128^throw new JXPathException ( "Undefined variable: " + name ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P2_Replace_Operator]^throw new JXPathException ( "Undefined variable: "  |  name ) ;^126^127^^^^125^128^throw new JXPathException ( "Undefined variable: " + name ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P3_Replace_Literal]^throw new JXPathException ( "definedndefined variable: " + name ) ;^126^127^^^^125^128^throw new JXPathException ( "Undefined variable: " + name ) ;^[CLASS] VariablePointer 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] Variables  variables  boolean  actual  NodePointer  valuePointer  QName  name  
[P9_Replace_Statement]^if  ( !actual )  {^136^^^^^135^144^if  ( actual )  {^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P15_Unwrap_Block]^java.lang.Object value = getBaseValue(); if (value == null) {    return 1;}; return org.apache.commons.jxpath.util.ValueUtils.getLength(value);^136^137^138^139^140^135^144^if  ( actual )  { Object value = getBaseValue (  ) ; if  ( value == null )  { return 1; }^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P16_Remove_Block]^^136^137^138^139^140^135^144^if  ( actual )  { Object value = getBaseValue (  ) ; if  ( value == null )  { return 1; }^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P2_Replace_Operator]^if  ( value != null )  {^138^^^^^135^144^if  ( value == null )  {^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^if  ( value == true )  {^138^^^^^135^144^if  ( value == null )  {^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P9_Replace_Statement]^if  ( factory == null )  {^138^^^^^135^144^if  ( value == null )  {^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P9_Replace_Statement]^if  ( valuePointer == null )  {^138^^^^^135^144^if  ( value == null )  {^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P9_Replace_Statement]^if  ( collection == null )  {^138^^^^^135^144^if  ( value == null )  {^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P15_Unwrap_Block]^return 1;^138^139^140^^^135^144^if  ( value == null )  { return 1; }^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P16_Remove_Block]^^138^139^140^^^135^144^if  ( value == null )  { return 1; }^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P13_Insert_Block]^if  ( object ==  ( this )  )  {     return true; }^138^^^^^135^144^[Delete]^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P3_Replace_Literal]^return 5;^139^^^^^135^144^return 1;^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^return 1 * 0;^139^^^^^135^144^return 1;^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P3_Replace_Literal]^return -1;^139^^^^^135^144^return 1;^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^return 1L;^139^^^^^135^144^return 1;^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P7_Replace_Invocation]^return ValueUtils.getValue ( value ) ;^141^^^^^135^144^return ValueUtils.getLength ( value ) ;^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P7_Replace_Invocation]^Object value = getName (  ) ;^137^^^^^135^144^Object value = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^Object collection = getBaseValue (  ) ;Object value = getBaseValue (  ) ;^137^^^^^135^144^Object value = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^Object value = getNode (  ) ;Object value = getBaseValue (  ) ;^137^^^^^135^144^Object value = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P14_Delete_Statement]^^137^^^^^135^144^Object value = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^setValue ( value ) ;Object value = getBaseValue (  ) ;^137^^^^^135^144^Object value = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P14_Delete_Statement]^^141^^^^^135^144^return ValueUtils.getLength ( value ) ;^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^if  ( value == this )  {^138^^^^^135^144^if  ( value == null )  {^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^return 0;^139^^^^^135^144^return 1;^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P3_Replace_Literal]^return 2;^139^^^^^135^144^return 1;^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^return 1 >> 3;^139^^^^^135^144^return 1;^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P3_Replace_Literal]^return -5;^143^^^^^135^144^return 0;^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P8_Replace_Mix]^return 2;^143^^^^^135^144^return 0;^[CLASS] VariablePointer 1  [METHOD] getLength [RETURN_TYPE] int   [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  valuePointer  QName  name  
[P9_Replace_Statement]^if  ( !actual )  {^147^^^^^146^154^if  ( actual )  {^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  
[P15_Unwrap_Block]^setValue(value); return this;^147^148^149^150^^146^154^if  ( actual )  { setValue ( value ) ; return this; }^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  
[P16_Remove_Block]^^147^148^149^150^^146^154^if  ( actual )  { setValue ( value ) ; return this; }^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  
[P8_Replace_Mix]^return null;^149^^^^^146^154^return this;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  
[P7_Replace_Invocation]^equals ( value ) ;^148^^^^^146^154^setValue ( value ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  
[P14_Delete_Statement]^^148^^^^^146^154^setValue ( value ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  
[P11_Insert_Donor_Statement]^ptr.setValue ( value ) ;setValue ( value ) ;^148^^^^^146^154^setValue ( value ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  
[P11_Insert_Donor_Statement]^return ValueUtils.getValue ( value ) ;setValue ( value ) ;^148^^^^^146^154^setValue ( value ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  
[P11_Insert_Donor_Statement]^Object value = getBaseValue (  ) ;setValue ( value ) ;^148^^^^^146^154^setValue ( value ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  
[P7_Replace_Invocation]^NodePointer ptr = findVariables ( context ) ;^151^^^^^146^154^NodePointer ptr = createPath ( context ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  
[P11_Insert_Donor_Statement]^NodePointer cl =  ( NodePointer )  clone (  ) ;NodePointer ptr = createPath ( context ) ;^151^^^^^146^154^NodePointer ptr = createPath ( context ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  
[P11_Insert_Donor_Statement]^NodePointer cln =  ( NodePointer )  clone (  ) ;NodePointer ptr = createPath ( context ) ;^151^^^^^146^154^NodePointer ptr = createPath ( context ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  
[P14_Delete_Statement]^^151^152^^^^146^154^NodePointer ptr = createPath ( context ) ; ptr.setValue ( value ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  
[P11_Insert_Donor_Statement]^createPath ( context ) ;NodePointer ptr = createPath ( context ) ;^151^^^^^146^154^NodePointer ptr = createPath ( context ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  
[P14_Delete_Statement]^^152^153^^^^146^154^ptr.setValue ( value ) ; return ptr;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  
[P11_Insert_Donor_Statement]^setValue ( value ) ;ptr.setValue ( value ) ;^152^^^^^146^154^ptr.setValue ( value ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  
[P11_Insert_Donor_Statement]^return ValueUtils.getValue ( value ) ;ptr.setValue ( value ) ;^152^^^^^146^154^ptr.setValue ( value ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  
[P5_Replace_Variable]^return valuePointer;^153^^^^^146^154^return ptr;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context Object value [VARIABLES] Variables  variables  Object  value  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  
[P6_Replace_Expression]^if  ( "Factory cannot define variable '" +  ( name )  + "' for path: " )  {^157^^^^^156^168^if  ( !actual )  {^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P6_Replace_Expression]^if  ( "Factory cannot define variable '" + name )  {^157^^^^^156^168^if  ( !actual )  {^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P8_Replace_Mix]^if  ( actual )  {^157^^^^^156^168^if  ( !actual )  {^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P9_Replace_Statement]^if  ( !success )  {^157^^^^^156^168^if  ( !actual )  {^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P13_Insert_Block]^if  ( ! ( factory.declareVariable ( context, name.toString (  )  )  )  )  {     throw new JXPathAbstractFactoryException (  (  (  ( "Factory cannot define variable '" +  ( name )  )  + "' for path: " )  +  ( asPath (  )  )  )  ) ; }^157^^^^^156^168^[Delete]^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P4_Replace_Constructor]^if  ( !factory.declareVariable (  name.toString (  )  )  )  {^159^^^^^156^168^if  ( !factory.declareVariable ( context, name.toString (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P5_Replace_Variable]^if  ( !factory.declareVariable ( context.toString (  )  )  )  {^159^^^^^156^168^if  ( !factory.declareVariable ( context, name.toString (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P5_Replace_Variable]^if  ( !factory.declareVariable ( name, context.toString (  )  )  )  {^159^^^^^156^168^if  ( !factory.declareVariable ( context, name.toString (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P6_Replace_Expression]^if  ( "Factory cannot define variable '" +  ( name )  + "' for path: " )  {^159^^^^^156^168^if  ( !factory.declareVariable ( context, name.toString (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P6_Replace_Expression]^if  ( "Factory cannot define variable '" + name )  {^159^^^^^156^168^if  ( !factory.declareVariable ( context, name.toString (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P7_Replace_Invocation]^if  ( !factory.declareVariable ( context, name.hashCode (  )  )  )  {^159^^^^^156^168^if  ( !factory.declareVariable ( context, name.toString (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P9_Replace_Statement]^if  ( variables.isDeclaredVariable ( name.toString (  )  )  )  {^159^^^^^156^168^if  ( !factory.declareVariable ( context, name.toString (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P15_Unwrap_Block]^throw new org.apache.commons.jxpath.JXPathAbstractFactoryException(((("Factory cannot define variable '" + (name)) + "' for path: ") + (asPath())));^159^160^161^162^163^156^168^if  ( !factory.declareVariable ( context, name.toString (  )  )  )  { throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ; }^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P16_Remove_Block]^^159^160^161^162^163^156^168^if  ( !factory.declareVariable ( context, name.toString (  )  )  )  { throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ; }^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P13_Insert_Block]^if  ( !success )  {     throw new JXPathAbstractFactoryException (  ( "Factory could not create object path: " +  ( asPath (  )  )  )  ) ; }^159^^^^^156^168^[Delete]^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P13_Insert_Block]^if  ( ! ( actual )  )  {     AbstractFactory factory = getAbstractFactory ( context ) ;     if  ( ! ( factory.declareVariable ( context, name.toString (  )  )  )  )  {         throw new JXPathAbstractFactoryException (  (  (  ( "Factory cannot define variable '" +  ( name )  )  + "' for path: " )  +  ( asPath (  )  )  )  ) ;     }     findVariables ( context ) ; }^159^^^^^156^168^[Delete]^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P13_Insert_Block]^if  ( factory == null )  {     throw new JXPathException (  ( "Factory is not set on the JXPathContext - cannot create path: " +  ( asPath (  )  )  )  ) ; }^159^^^^^156^168^[Delete]^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P13_Insert_Block]^if  ( collection == null )  {     throw new JXPathAbstractFactoryException (  (  (  ( "Factory did not assign a collection to variable '" +  ( name )  )  + "' for path: " )  +  ( asPath (  )  )  )  ) ; }^159^^^^^156^168^[Delete]^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  |  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  >  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '"  ==  name + "' for path: " + asPath (  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "Factory cannot define variable 'F" + name + "' for path: " + asPath (  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "for p" + asPath (  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P7_Replace_Invocation]^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + isActual (  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P13_Insert_Block]^if  ( !success )  {     throw new JXPathAbstractFactoryException (  ( "Factory could not create object path: " +  ( asPath (  )  )  )  ) ; }^160^^^^^156^168^[Delete]^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P13_Insert_Block]^if  ( ! ( factory.declareVariable ( context, name.toString (  )  )  )  )  {     throw new JXPathAbstractFactoryException (  (  (  ( "Factory cannot define variable '" +  ( name )  )  + "' for path: " )  +  ( asPath (  )  )  )  ) ; }^160^^^^^156^168^[Delete]^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P13_Insert_Block]^if  ( collection == null )  {     throw new JXPathAbstractFactoryException (  (  (  ( "Factory did not assign a collection to variable '" +  ( name )  )  + "' for path: " )  +  ( asPath (  )  )  )  ) ; }^160^^^^^156^168^[Delete]^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  <=  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  !=  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '"  >>  name + "' for path: " + asPath (  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "actoractory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: ' for" + asPath (  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P7_Replace_Invocation]^+ "' for path: " + isActual (  )  ) ;^162^^^^^156^168^+ "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P14_Delete_Statement]^^162^163^^^^156^168^+ "' for path: " + asPath (  )  ) ; }^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P11_Insert_Donor_Statement]^"Index is less than 1: " + asPath (  )  ) ;+ "' for path: " + asPath (  )  ) ;^162^^^^^156^168^+ "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P11_Insert_Donor_Statement]^+ asPath (  )  ) ;+ "' for path: " + asPath (  )  ) ;^162^^^^^156^168^+ "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P11_Insert_Donor_Statement]^"Factory could not create object path: " + asPath (  )  ) ;+ "' for path: " + asPath (  )  ) ;^162^^^^^156^168^+ "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (   instanceof   )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '"  <  name + "' for path: " + asPath (  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "Factory cannot define variable 'Factory" + name + "' for path: " + asPath (  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for " + asPath (  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P7_Replace_Invocation]^AbstractFactory factory = createPath ( context ) ;^158^^^^^156^168^AbstractFactory factory = getAbstractFactory ( context ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P11_Insert_Donor_Statement]^AbstractFactory factory = context.getFactory (  ) ;AbstractFactory factory = getAbstractFactory ( context ) ;^158^^^^^156^168^AbstractFactory factory = getAbstractFactory ( context ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  ==  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '"  &  name + "' for path: " + asPath (  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "ry cannot dactory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P14_Delete_Statement]^^158^^^^^156^168^AbstractFactory factory = getAbstractFactory ( context ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P7_Replace_Invocation]^createPath ( context ) ;^164^^^^^156^168^findVariables ( context ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P14_Delete_Statement]^^164^^^^^156^168^findVariables ( context ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P11_Insert_Donor_Statement]^createPath ( context ) ;findVariables ( context ) ;^164^^^^^156^168^findVariables ( context ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '"   instanceof   name + "' for path: " + asPath (  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "acactory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "'  for path: " + asPath (  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  ^  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '"  <<  name + "' for path: " + asPath (  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' f" + asPath (  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  >>  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '"  ||  name + "' for path: " + asPath (  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "" + name + "' for path: " + asPath (  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + " for path: " + asPath (  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  ||  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "t defactory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P8_Replace_Mix]^return false;^160^161^162^^^156^168^throw new JXPathAbstractFactoryException ( "Factory cannot define variable '" + name + "' for path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P8_Replace_Mix]^return null;^167^^^^^156^168^return this;^[CLASS] VariablePointer 1  [METHOD] createPath [RETURN_TYPE] NodePointer   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  NodePointer  ptr  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P5_Replace_Variable]^Object collection = createCollection (  index ) ;^175^^^^^170^194^Object collection = createCollection ( context, index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P5_Replace_Variable]^Object collection = createCollection ( context ) ;^175^^^^^170^194^Object collection = createCollection ( context, index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P5_Replace_Variable]^Object collection = createCollection ( index, context ) ;^175^^^^^170^194^Object collection = createCollection ( context, index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P7_Replace_Invocation]^Object collection = createPath ( context, index ) ;^175^^^^^170^194^Object collection = createCollection ( context, index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P11_Insert_Donor_Statement]^Object collection = getBaseValue (  ) ;Object collection = createCollection ( context, index ) ;^175^^^^^170^194^Object collection = createCollection ( context, index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P14_Delete_Statement]^^175^^^^^170^194^Object collection = createCollection ( context, index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P11_Insert_Donor_Statement]^collection = ValueUtils.remove ( collection, index ) ;Object collection = createCollection ( context, index ) ;^175^^^^^170^194^Object collection = createCollection ( context, index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P11_Insert_Donor_Statement]^collection = ValueUtils.expandCollection ( collection, index + 1 ) ;Object collection = createCollection ( context, index ) ;^175^^^^^170^194^Object collection = createCollection ( context, index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P2_Replace_Operator]^if  ( !isActual (  )  &&  ( index != 0 && index != WHOLE_COLLECTION )  )  {^176^^^^^170^194^if  ( !isActual (  )  ||  ( index != 0 && index != WHOLE_COLLECTION )  )  {^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P2_Replace_Operator]^if  ( !isActual (  )  ||  ( index != 0 || index != WHOLE_COLLECTION )  )  {^176^^^^^170^194^if  ( !isActual (  )  ||  ( index != 0 && index != WHOLE_COLLECTION )  )  {^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P2_Replace_Operator]^if  ( !isActual (  )  ||  ( index == 0 && index != WHOLE_COLLECTION )  )  {^176^^^^^170^194^if  ( !isActual (  )  ||  ( index != 0 && index != WHOLE_COLLECTION )  )  {^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P2_Replace_Operator]^if  ( !isActual (  )  ||  ( index != 0 && index == WHOLE_COLLECTION )  )  {^176^^^^^170^194^if  ( !isActual (  )  ||  ( index != 0 && index != WHOLE_COLLECTION )  )  {^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P3_Replace_Literal]^if  ( !isActual (  )  ||  ( index != index && index != WHOLE_COLLECTION )  )  {^176^^^^^170^194^if  ( !isActual (  )  ||  ( index != 0 && index != WHOLE_COLLECTION )  )  {^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P6_Replace_Expression]^if  ( !isActual (  )  ) {^176^^^^^170^194^if  ( !isActual (  )  ||  ( index != 0 && index != WHOLE_COLLECTION )  )  {^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P6_Replace_Expression]^if  (   ( index != 0 && index != WHOLE_COLLECTION )  )  {^176^^^^^170^194^if  ( !isActual (  )  ||  ( index != 0 && index != WHOLE_COLLECTION )  )  {^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P6_Replace_Expression]^if  ( index != 0 )  {^176^^^^^170^194^if  ( !isActual (  )  ||  ( index != 0 && index != WHOLE_COLLECTION )  )  {^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P6_Replace_Expression]^if  ( index != WHOLE_COLLECTION )  {^176^^^^^170^194^if  ( !isActual (  )  ||  ( index != 0 && index != WHOLE_COLLECTION )  )  {^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P6_Replace_Expression]^if  ( "Factory could not create object path: " + asPath (  ) )  {^176^^^^^170^194^if  ( !isActual (  )  ||  ( index != 0 && index != WHOLE_COLLECTION )  )  {^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P7_Replace_Invocation]^if  ( !asPath (  )  ||  ( index != 0 && index != WHOLE_COLLECTION )  )  {^176^^^^^170^194^if  ( !isActual (  )  ||  ( index != 0 && index != WHOLE_COLLECTION )  )  {^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P8_Replace_Mix]^if  ( !asPath (  )  ) {^176^^^^^170^194^if  ( !isActual (  )  ||  ( index != 0 && index != WHOLE_COLLECTION )  )  {^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P5_Replace_Variable]^if  ( !actual )  {^185^^^^^170^194^if  ( !success )  {^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P15_Unwrap_Block]^throw new org.apache.commons.jxpath.JXPathAbstractFactoryException(("Factory could not create object path: " + (asPath())));^185^186^187^188^^170^194^if  ( !success )  { throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ; }^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P16_Remove_Block]^^185^186^187^188^^170^194^if  ( !success )  { throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ; }^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory could not create object path: "  >  asPath (  )  ) ;^186^187^^^^170^194^throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "Factory could not create object path: ry " + asPath (  )  ) ;^186^187^^^^170^194^throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P4_Replace_Constructor]^throw throw  new JXPathAbstractFactoryException (  (  (  ( "Factory cannot define variable '" +  ( name )  )  + "' for path: " )  +  ( asPath (  )  )  )  )   ) ;^186^187^^^^170^194^throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P7_Replace_Invocation]^throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + isActual (  )  ) ;^186^187^^^^170^194^throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P13_Insert_Block]^if  ( !success )  {     throw new JXPathAbstractFactoryException (  ( "Factory could not create object path: " +  ( asPath (  )  )  )  ) ; }^186^^^^^170^194^[Delete]^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P13_Insert_Block]^if  ( collection == null )  {     throw new JXPathAbstractFactoryException (  (  (  ( "Factory did not assign a collection to variable '" +  ( name )  )  + "' for path: " )  +  ( asPath (  )  )  )  ) ; }^186^^^^^170^194^[Delete]^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory could not create object path: "  &&  asPath (  )  ) ;^186^187^^^^170^194^throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "Factor" + asPath (  )  ) ;^186^187^^^^170^194^throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P13_Insert_Block]^if  ( ! ( factory.declareVariable ( context, name.toString (  )  )  )  )  {     throw new JXPathAbstractFactoryException (  (  (  ( "Factory cannot define variable '" +  ( name )  )  + "' for path: " )  +  ( asPath (  )  )  )  ) ; }^186^^^^^170^194^[Delete]^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P13_Insert_Block]^if  ( factory == null )  {     throw new JXPathException (  ( "Factory is not set on the JXPathContext - cannot create path: " +  ( asPath (  )  )  )  ) ; }^186^^^^^170^194^[Delete]^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P7_Replace_Invocation]^"Factory could not create object path: " + isActual (  )  ) ;^187^^^^^170^194^"Factory could not create object path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P14_Delete_Statement]^^187^^^^^170^194^"Factory could not create object path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P11_Insert_Donor_Statement]^+ "' for path: " + asPath (  )  ) ;"Factory could not create object path: " + asPath (  )  ) ;^187^^^^^170^194^"Factory could not create object path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P5_Replace_Variable]^return valuePointer;^191^^^^^170^194^return cln;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "Factory could not create object path:  " + asPath (  )  ) ;^186^187^^^^170^194^throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P7_Replace_Invocation]^AbstractFactory factory = createPath ( context ) ;^177^^^^^170^194^AbstractFactory factory = getAbstractFactory ( context ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P11_Insert_Donor_Statement]^AbstractFactory factory = context.getFactory (  ) ;AbstractFactory factory = getAbstractFactory ( context ) ;^177^^^^^170^194^AbstractFactory factory = getAbstractFactory ( context ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P5_Replace_Variable]^boolean success = factory.createObject (  this,^178^179^180^181^^170^194^boolean success = factory.createObject ( context, this,^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P5_Replace_Variable]^boolean success = context.createObject ( factory, this,^178^179^180^181^^170^194^boolean success = factory.createObject ( context, this,^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P7_Replace_Invocation]^boolean success = factory .declareVariable ( collection )  ( context, this,^178^179^180^181^^170^194^boolean success = factory.createObject ( context, this,^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P7_Replace_Invocation]^NodePointer cln =  ( NodePointer )  getClass (  ) ;^189^^^^^170^194^NodePointer cln =  ( NodePointer )  clone (  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P11_Insert_Donor_Statement]^NodePointer ptr = createPath ( context ) ;NodePointer cln =  ( NodePointer )  clone (  ) ;^189^^^^^170^194^NodePointer cln =  ( NodePointer )  clone (  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P11_Insert_Donor_Statement]^NodePointer cl =  ( NodePointer )  clone (  ) ;NodePointer cln =  ( NodePointer )  clone (  ) ;^189^^^^^170^194^NodePointer cln =  ( NodePointer )  clone (  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "Facto" + asPath (  )  ) ;^186^187^^^^170^194^throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P14_Delete_Statement]^^177^^^^^170^194^AbstractFactory factory = getAbstractFactory ( context ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P5_Replace_Variable]^factory.createObject (  this, collection,^179^180^181^182^^170^194^factory.createObject ( context, this, collection,^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P5_Replace_Variable]^factory.createObject ( context, this,^179^180^181^182^^170^194^factory.createObject ( context, this, collection,^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P5_Replace_Variable]^factory.createObject ( collection, this, context,^179^180^181^182^^170^194^factory.createObject ( context, this, collection,^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P8_Replace_Mix]^factory .declareVariable ( collection )  ( context, this, collection,^179^180^181^182^^170^194^factory.createObject ( context, this, collection,^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P7_Replace_Invocation]^getName (  ) .hashCode (  ) , index ) ;^183^184^^^^170^194^getName (  ) .toString (  ) , index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P7_Replace_Invocation]^getLength (  ) .toString (  ) , index ) ;^183^184^^^^170^194^getName (  ) .toString (  ) , index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P14_Delete_Statement]^^183^184^^^^170^194^getName (  ) .toString (  ) , index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P14_Delete_Statement]^^189^^^^^170^194^NodePointer cln =  ( NodePointer )  clone (  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P11_Insert_Donor_Statement]^NodePointer.newChildNodePointer ( this, null, value ) ;NodePointer cln =  ( NodePointer )  clone (  ) ;^189^^^^^170^194^NodePointer cln =  ( NodePointer )  clone (  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P8_Replace_Mix]^cln .getNode (  )  ;^190^^^^^170^194^cln.setIndex ( index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P14_Delete_Statement]^^190^^^^^170^194^cln.setIndex ( index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P11_Insert_Donor_Statement]^super.setIndex ( index ) ;cln.setIndex ( index ) ;^190^^^^^170^194^cln.setIndex ( index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P11_Insert_Donor_Statement]^cl.setIndex ( index ) ;cln.setIndex ( index ) ;^190^^^^^170^194^cln.setIndex ( index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory could not create object path: "  <  asPath (  )  ) ;^186^187^^^^170^194^throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "Factory could not create object path: tory could n" + asPath (  )  ) ;^186^187^^^^170^194^throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory could not create object path: "  &  asPath (  )  ) ;^186^187^^^^170^194^throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "Factory could not create object path: ld " + asPath (  )  ) ;^186^187^^^^170^194^throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory could not create object path: "   instanceof   asPath (  )  ) ;^186^187^^^^170^194^throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "Factory could not create object path: F" + asPath (  )  ) ;^186^187^^^^170^194^throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory could not create object path: "  ^  asPath (  )  ) ;^186^187^^^^170^194^throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "Factory could not create object path: Factor" + asPath (  )  ) ;^186^187^^^^170^194^throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P14_Delete_Statement]^^189^190^^^^170^194^NodePointer cln =  ( NodePointer )  clone (  ) ; cln.setIndex ( index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P14_Delete_Statement]^^190^191^^^^170^194^cln.setIndex ( index ) ; return cln;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P8_Replace_Mix]^return null;^193^^^^^170^194^return this;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cln  ptr  valuePointer  int  index  AbstractFactory  factory  
[P5_Replace_Variable]^Object collection = createCollection (  index ) ;^202^^^^^196^207^Object collection = createCollection ( context, index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P5_Replace_Variable]^Object collection = createCollection ( context ) ;^202^^^^^196^207^Object collection = createCollection ( context, index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P5_Replace_Variable]^Object collection = createCollection ( index, context ) ;^202^^^^^196^207^Object collection = createCollection ( context, index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P7_Replace_Invocation]^Object collection = createPath ( context, index ) ;^202^^^^^196^207^Object collection = createCollection ( context, index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P11_Insert_Donor_Statement]^Object collection = getBaseValue (  ) ;Object collection = createCollection ( context, index ) ;^202^^^^^196^207^Object collection = createCollection ( context, index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P14_Delete_Statement]^^202^203^^^^196^207^Object collection = createCollection ( context, index ) ; ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P11_Insert_Donor_Statement]^collection = ValueUtils.remove ( collection, index ) ;Object collection = createCollection ( context, index ) ;^202^^^^^196^207^Object collection = createCollection ( context, index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P11_Insert_Donor_Statement]^collection = ValueUtils.expandCollection ( collection, index + 1 ) ;Object collection = createCollection ( context, index ) ;^202^^^^^196^207^Object collection = createCollection ( context, index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P5_Replace_Variable]^ValueUtils.setValue ( value, index, value ) ;^203^^^^^196^207^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P5_Replace_Variable]^ValueUtils.setValue (  index, value ) ;^203^^^^^196^207^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P5_Replace_Variable]^ValueUtils.setValue ( collection,  value ) ;^203^^^^^196^207^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P5_Replace_Variable]^ValueUtils.setValue ( collection, index ) ;^203^^^^^196^207^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P5_Replace_Variable]^ValueUtils.setValue ( index, collection, value ) ;^203^^^^^196^207^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P5_Replace_Variable]^ValueUtils.setValue ( value, index, collection ) ;^203^^^^^196^207^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P14_Delete_Statement]^^203^^^^^196^207^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P11_Insert_Donor_Statement]^collection = ValueUtils.remove ( collection, index ) ;ValueUtils.setValue ( collection, index, value ) ;^203^^^^^196^207^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P11_Insert_Donor_Statement]^return ValueUtils.getValue ( value, index ) ;ValueUtils.setValue ( collection, index, value ) ;^203^^^^^196^207^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P11_Insert_Donor_Statement]^collection = ValueUtils.expandCollection ( collection, index + 1 ) ;ValueUtils.setValue ( collection, index, value ) ;^203^^^^^196^207^ValueUtils.setValue ( collection, index, value ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P7_Replace_Invocation]^NodePointer cl =  ( NodePointer )  getClass (  ) ;^204^^^^^196^207^NodePointer cl =  ( NodePointer )  clone (  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P11_Insert_Donor_Statement]^NodePointer ptr = createPath ( context ) ;NodePointer cl =  ( NodePointer )  clone (  ) ;^204^^^^^196^207^NodePointer cl =  ( NodePointer )  clone (  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P11_Insert_Donor_Statement]^NodePointer cln =  ( NodePointer )  clone (  ) ;NodePointer cl =  ( NodePointer )  clone (  ) ;^204^^^^^196^207^NodePointer cl =  ( NodePointer )  clone (  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P14_Delete_Statement]^^204^^^^^196^207^NodePointer cl =  ( NodePointer )  clone (  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P11_Insert_Donor_Statement]^NodePointer.newChildNodePointer ( this, null, value ) ;NodePointer cl =  ( NodePointer )  clone (  ) ;^204^^^^^196^207^NodePointer cl =  ( NodePointer )  clone (  ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P14_Delete_Statement]^^205^206^^^^196^207^cl.setIndex ( index ) ; return cl;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P11_Insert_Donor_Statement]^cln.setIndex ( index ) ;cl.setIndex ( index ) ;^205^^^^^196^207^cl.setIndex ( index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P11_Insert_Donor_Statement]^super.setIndex ( index ) ;cl.setIndex ( index ) ;^205^^^^^196^207^cl.setIndex ( index ) ;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P5_Replace_Variable]^return valuePointer;^206^^^^^196^207^return cl;^[CLASS] VariablePointer 1  [METHOD] createChild [RETURN_TYPE] NodePointer   JXPathContext context QName name int index Object value [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  value  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P7_Replace_Invocation]^findVariables ( context ) ;^210^^^^^209^235^createPath ( context ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P14_Delete_Statement]^^210^^^^^209^235^createPath ( context ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P11_Insert_Donor_Statement]^NodePointer ptr = createPath ( context ) ;createPath ( context ) ;^210^^^^^209^235^createPath ( context ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P11_Insert_Donor_Statement]^findVariables ( context ) ;createPath ( context ) ;^210^^^^^209^235^createPath ( context ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P7_Replace_Invocation]^Object collection = getName (  ) ;^212^^^^^209^235^Object collection = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P11_Insert_Donor_Statement]^Object collection = createCollection ( context, index ) ;Object collection = getBaseValue (  ) ;^212^^^^^209^235^Object collection = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P11_Insert_Donor_Statement]^Object value = getBaseValue (  ) ;Object collection = getBaseValue (  ) ;^212^^^^^209^235^Object collection = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P11_Insert_Donor_Statement]^Object value = getNode (  ) ;Object collection = getBaseValue (  ) ;^212^^^^^209^235^Object collection = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P14_Delete_Statement]^^212^^^^^209^235^Object collection = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P2_Replace_Operator]^if  ( collection != null )  {^213^^^^^209^235^if  ( collection == null )  {^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P6_Replace_Expression]^if  (  ( "Factory did not assign a collection to variable '" +  ( name )  )  + "' for path: " + asPath (  ) )  {^213^^^^^209^235^if  ( collection == null )  {^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P6_Replace_Expression]^if  ( "Factory did not assign a collection to variable '" +  ( name )  + "' for path: " )  {^213^^^^^209^235^if  ( collection == null )  {^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P6_Replace_Expression]^if  ( "Factory did not assign a collection to variable '" + name )  {^213^^^^^209^235^if  ( collection == null )  {^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P8_Replace_Mix]^if  ( collection == true )  {^213^^^^^209^235^if  ( collection == null )  {^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P9_Replace_Statement]^if  ( factory == null )  {^213^^^^^209^235^if  ( collection == null )  {^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P9_Replace_Statement]^if  ( valuePointer == null )  {^213^^^^^209^235^if  ( collection == null )  {^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P9_Replace_Statement]^if  ( value == null )  {^213^^^^^209^235^if  ( collection == null )  {^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P9_Replace_Statement]^if  ( object == this )  {^213^^^^^209^235^if  ( collection == null )  {^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P13_Insert_Block]^if  ( !success )  {     throw new JXPathAbstractFactoryException (  ( "Factory could not create object path: " +  ( asPath (  )  )  )  ) ; }^213^^^^^209^235^[Delete]^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P13_Insert_Block]^if  ( ! ( actual )  )  {     throw new JXPathException (  ( "Cannot set undefined variable: " +  ( name )  )  ) ; }^213^^^^^209^235^[Delete]^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P13_Insert_Block]^if  ( ! ( factory.declareVariable ( context, name.toString (  )  )  )  )  {     throw new JXPathAbstractFactoryException (  (  (  ( "Factory cannot define variable '" +  ( name )  )  + "' for path: " )  +  ( asPath (  )  )  )  ) ; }^213^^^^^209^235^[Delete]^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P13_Insert_Block]^if  (  ( index )  < 0 )  {     throw new JXPathInvalidAccessException (  ( "Index is less than 1: " +  ( asPath (  )  )  )  ) ; }^213^^^^^209^235^[Delete]^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P13_Insert_Block]^if  ( factory == null )  {     throw new JXPathException (  ( "Factory is not set on the JXPathContext - cannot create path: " +  ( asPath (  )  )  )  ) ; }^213^^^^^209^235^[Delete]^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P13_Insert_Block]^if  ( index < 0 )  {     throw new JXPathInvalidAccessException (  ( "Index is less than 1: " +  ( asPath (  )  )  )  ) ; }^213^^^^^209^235^[Delete]^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory did not assign a collection to variable '"  ==  name + "' for path: "^214^215^216^217^^209^235^throw new JXPathAbstractFactoryException ( "Factory did not assign a collection to variable '" + name + "' for path: "^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "tory did not assign a collection to variablactory did not assign a collection to variable '" + name + "' for path: "^214^215^216^217^^209^235^throw new JXPathAbstractFactoryException ( "Factory did not assign a collection to variable '" + name + "' for path: "^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "Factory did not assign a collection to variable '" + name + " for path: "^214^215^216^217^^209^235^throw new JXPathAbstractFactoryException ( "Factory did not assign a collection to variable '" + name + "' for path: "^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P13_Insert_Block]^if  ( ! ( factory.declareVariable ( context, name.toString (  )  )  )  )  {     throw new JXPathAbstractFactoryException (  (  (  ( "Factory cannot define variable '" +  ( name )  )  + "' for path: " )  +  ( asPath (  )  )  )  ) ; }^214^^^^^209^235^[Delete]^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P13_Insert_Block]^if  ( collection == null )  {     throw new JXPathAbstractFactoryException (  (  (  ( "Factory did not assign a collection to variable '" +  ( name )  )  + "' for path: " )  +  ( asPath (  )  )  )  ) ; }^214^^^^^209^235^[Delete]^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory did not assign a collection to variable '"  ||  name + "' for path: "^214^215^216^217^^209^235^throw new JXPathAbstractFactoryException ( "Factory did not assign a collection to variable '" + name + "' for path: "^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "id not assign a co" + name + "' for path: "^214^215^216^217^^209^235^throw new JXPathAbstractFactoryException ( "Factory did not assign a collection to variable '" + name + "' for path: "^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "Factory did not assign a collection to variable '" + name + "fo for path: "^214^215^216^217^^209^235^throw new JXPathAbstractFactoryException ( "Factory did not assign a collection to variable '" + name + "' for path: "^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P13_Insert_Block]^if  ( !success )  {     throw new JXPathAbstractFactoryException (  ( "Factory could not create object path: " +  ( asPath (  )  )  )  ) ; }^214^^^^^209^235^[Delete]^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P7_Replace_Invocation]^+ isActual (  )  ) ;^218^^^^^209^235^+ asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P14_Delete_Statement]^^218^^^^^209^235^+ asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P11_Insert_Donor_Statement]^+ "' for path: " + asPath (  )  ) ;+ asPath (  )  ) ;^218^^^^^209^235^+ asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory did not assign a collection to variable '"  <<  name + "' for path: "^214^215^216^217^^209^235^throw new JXPathAbstractFactoryException ( "Factory did not assign a collection to variable '" + name + "' for path: "^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "Factory did not assign a collection to variable 'actory did not assign a collec" + name + "' for path: "^214^215^216^217^^209^235^throw new JXPathAbstractFactoryException ( "Factory did not assign a collection to variable '" + name + "' for path: "^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P2_Replace_Operator]^throw new JXPathAbstractFactoryException ( "Factory did not assign a collection to variable '"  <=  name + "' for path: "^214^215^216^217^^209^235^throw new JXPathAbstractFactoryException ( "Factory did not assign a collection to variable '" + name + "' for path: "^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "Factory did not assign a collection to variable 't" + name + "' for path: "^214^215^216^217^^209^235^throw new JXPathAbstractFactoryException ( "Factory did not assign a collection to variable '" + name + "' for path: "^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P3_Replace_Literal]^throw new JXPathAbstractFactoryException ( "Factory did not assign a collection to variable '" + name + "' for path: ' for p"^214^215^216^217^^209^235^throw new JXPathAbstractFactoryException ( "Factory did not assign a collection to variable '" + name + "' for path: "^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P2_Replace_Operator]^if  ( index != WHOLE_COLLECTION )  {^221^^^^^209^235^if  ( index == WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P5_Replace_Variable]^if  ( WHOLE_COLLECTION == index )  {^221^^^^^209^235^if  ( index == WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P6_Replace_Expression]^if  ( index < 0 )  {^221^^^^^209^235^if  ( index == WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P6_Replace_Expression]^if  ( "Index is less than 1: " + asPath (  ) )  {^221^^^^^209^235^if  ( index == WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P15_Unwrap_Block]^index = 0;^221^222^223^^^209^235^if  ( index == WHOLE_COLLECTION )  { index = 0; }^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P16_Remove_Block]^^221^222^223^^^209^235^if  ( index == WHOLE_COLLECTION )  { index = 0; }^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P13_Insert_Block]^if  (  ( index )  < 0 )  {     throw new JXPathInvalidAccessException (  ( "Index is less than 1: " +  ( asPath (  )  )  )  ) ; }^221^^^^^209^235^[Delete]^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P13_Insert_Block]^if  ( index < 0 )  {     throw new JXPathInvalidAccessException (  ( "Index is less than 1: " +  ( asPath (  )  )  )  ) ; }^221^^^^^209^235^[Delete]^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P2_Replace_Operator]^else if  ( index == 0 )  {^224^^^^^209^235^else if  ( index < 0 )  {^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P3_Replace_Literal]^else if  ( index < index )  {^224^^^^^209^235^else if  ( index < 0 )  {^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P6_Replace_Expression]^else if  ( "Index is less than 1: " + asPath (  ) )  {^224^^^^^209^235^else if  ( index < 0 )  {^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P8_Replace_Mix]^else {^224^^^^^209^235^else if  ( index < 0 )  {^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P15_Unwrap_Block]^throw new org.apache.commons.jxpath.JXPathInvalidAccessException(("Index is less than 1: " + (asPath())));^224^225^226^227^^209^235^else if  ( index < 0 )  { throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ; }^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P16_Remove_Block]^^224^225^226^227^^209^235^else if  ( index < 0 )  { throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ; }^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P2_Replace_Operator]^throw new JXPathInvalidAccessException ( "Index is less than 1: "  <=  asPath (  )  ) ;^225^226^^^^209^235^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P3_Replace_Literal]^throw new JXPathInvalidAccessException ( "is less than 1:ndex is less than 1: " + asPath (  )  ) ;^225^226^^^^209^235^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P7_Replace_Invocation]^throw new JXPathInvalidAccessException ( "Index is less than 1: " + isActual (  )  ) ;^225^226^^^^209^235^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P13_Insert_Block]^if  ( !success )  {     throw new JXPathAbstractFactoryException (  ( "Factory could not create object path: " +  ( asPath (  )  )  )  ) ; }^225^^^^^209^235^[Delete]^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P13_Insert_Block]^if  (  ( index )  < 0 )  {     throw new JXPathInvalidAccessException (  ( "Index is less than 1: " +  ( asPath (  )  )  )  ) ; }^225^^^^^209^235^[Delete]^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P13_Insert_Block]^if  ( index < 0 )  {     throw new JXPathInvalidAccessException (  ( "Index is less than 1: " +  ( asPath (  )  )  )  ) ; }^225^^^^^209^235^[Delete]^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P2_Replace_Operator]^throw new JXPathInvalidAccessException ( "Index is less than 1: "  ==  asPath (  )  ) ;^225^226^^^^209^235^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P3_Replace_Literal]^throw new JXPathInvalidAccessException ( "Index is less than 1: th" + asPath (  )  ) ;^225^226^^^^209^235^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P13_Insert_Block]^if  ( index ==  ( WHOLE_COLLECTION )  )  {     index = 0; }else     if  ( index < 0 )  {         throw new JXPathInvalidAccessException (  ( "Index is less than 1: " +  ( asPath (  )  )  )  ) ;     }^225^^^^^209^235^[Delete]^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P7_Replace_Invocation]^+ isActual (  )  ) ;^226^^^^^209^235^+ asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P14_Delete_Statement]^^226^^^^^209^235^+ asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P11_Insert_Donor_Statement]^+ "' for path: " + asPath (  )  ) ;+ asPath (  )  ) ;^226^^^^^209^235^+ asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P2_Replace_Operator]^throw new JXPathInvalidAccessException ( "Index is less than 1: "  ^  asPath (  )  ) ;^225^226^^^^209^235^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P3_Replace_Literal]^throw new JXPathInvalidAccessException ( "Index is less than 1: x is " + asPath (  )  ) ;^225^226^^^^209^235^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P2_Replace_Operator]^throw new JXPathInvalidAccessException ( "Index is less than 1: "  >>  asPath (  )  ) ;^225^226^^^^209^235^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P3_Replace_Literal]^throw new JXPathInvalidAccessException ( "th" + asPath (  )  ) ;^225^226^^^^209^235^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P3_Replace_Literal]^index = index;^222^^^^^209^235^index = 0;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P8_Replace_Mix]^index = 3;^222^^^^^209^235^index = 0;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P2_Replace_Operator]^else if  ( index > 0 )  {^224^^^^^209^235^else if  ( index < 0 )  {^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P3_Replace_Literal]^else if  ( index < 8 )  {^224^^^^^209^235^else if  ( index < 0 )  {^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P8_Replace_Mix]^else if  ( index < 4 )  {^224^^^^^209^235^else if  ( index < 0 )  {^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P3_Replace_Literal]^throw new JXPathInvalidAccessException ( "x is less ndex is less than 1: " + asPath (  )  ) ;^225^226^^^^209^235^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P2_Replace_Operator]^throw new JXPathInvalidAccessException ( "Index is less than 1: "  &&  asPath (  )  ) ;^225^226^^^^209^235^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P3_Replace_Literal]^throw new JXPathInvalidAccessException ( "Index is less than 1: I" + asPath (  )  ) ;^225^226^^^^209^235^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P8_Replace_Mix]^throw new JXPathAbstractFactoryException ( "Factory could not create object path: " + asPath (  )  ) ; ;^225^226^^^^209^235^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P3_Replace_Literal]^index = -4;^222^^^^^209^235^index = 0;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P8_Replace_Mix]^index = 4;^222^^^^^209^235^index = 0;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P2_Replace_Operator]^throw new JXPathInvalidAccessException ( "Index is less than 1: "  >  asPath (  )  ) ;^225^226^^^^209^235^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P3_Replace_Literal]^throw new JXPathInvalidAccessException ( "nndex is less than 1: " + asPath (  )  ) ;^225^226^^^^209^235^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P3_Replace_Literal]^throw new JXPathInvalidAccessException ( "lessndex is less than 1: " + asPath (  )  ) ;^225^226^^^^209^235^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P2_Replace_Operator]^if  ( index > getLength (  )  )  {^229^^^^^209^235^if  ( index >= getLength (  )  )  {^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P6_Replace_Expression]^if  ( index + 1 )  {^229^^^^^209^235^if  ( index >= getLength (  )  )  {^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P7_Replace_Invocation]^if  ( index >= getName (  )  )  {^229^^^^^209^235^if  ( index >= getLength (  )  )  {^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P15_Unwrap_Block]^collection = org.apache.commons.jxpath.util.ValueUtils.expandCollection(collection, (index + 1)); variables.declareVariable(name.toString(), collection);^229^230^231^232^^209^235^if  ( index >= getLength (  )  )  { collection = ValueUtils.expandCollection ( collection, index + 1 ) ; variables.declareVariable ( name.toString (  ) , collection ) ; }^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P16_Remove_Block]^^229^230^231^232^^209^235^if  ( index >= getLength (  )  )  { collection = ValueUtils.expandCollection ( collection, index + 1 ) ; variables.declareVariable ( name.toString (  ) , collection ) ; }^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P2_Replace_Operator]^collection = ValueUtils.expandCollection ( collection, index   instanceof   1 ) ;^230^^^^^209^235^collection = ValueUtils.expandCollection ( collection, index + 1 ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P3_Replace_Literal]^collection = ValueUtils.expandCollection ( collection, index + index ) ;^230^^^^^209^235^collection = ValueUtils.expandCollection ( collection, index + 1 ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P5_Replace_Variable]^collection = ValueUtils.expandCollection (  index + 1 ) ;^230^^^^^209^235^collection = ValueUtils.expandCollection ( collection, index + 1 ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P5_Replace_Variable]^collection = ValueUtils.expandCollection ( collection + 1 ) ;^230^^^^^209^235^collection = ValueUtils.expandCollection ( collection, index + 1 ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P5_Replace_Variable]^collection = ValueUtils.expandCollection ( index, collection + 1 ) ;^230^^^^^209^235^collection = ValueUtils.expandCollection ( collection, index + 1 ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P7_Replace_Invocation]^collection = ValueUtils.setValue ( collection, index + 1 ) ;^230^^^^^209^235^collection = ValueUtils.expandCollection ( collection, index + 1 ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P7_Replace_Invocation]^collection = ValueUtils .isCollection ( collection )  ;^230^^^^^209^235^collection = ValueUtils.expandCollection ( collection, index + 1 ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P8_Replace_Mix]^collection = ValueUtils.expandCollection ( collection, index + 1 >>> 0 ) ;^230^^^^^209^235^collection = ValueUtils.expandCollection ( collection, index + 1 ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P11_Insert_Donor_Statement]^collection = ValueUtils.remove ( collection, index ) ;collection = ValueUtils.expandCollection ( collection, index + 1 ) ;^230^^^^^209^235^collection = ValueUtils.expandCollection ( collection, index + 1 ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P2_Replace_Operator]^collection = ValueUtils.expandCollection ( collection, index  |  1 ) ;^230^^^^^209^235^collection = ValueUtils.expandCollection ( collection, index + 1 ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P3_Replace_Literal]^collection = ValueUtils.expandCollection ( collection, index  ) ;^230^^^^^209^235^collection = ValueUtils.expandCollection ( collection, index + 1 ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P14_Delete_Statement]^^230^^^^^209^235^collection = ValueUtils.expandCollection ( collection, index + 1 ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P5_Replace_Variable]^variables.declareVariable ( name.toString (  )  ) ;^231^^^^^209^235^variables.declareVariable ( name.toString (  ) , collection ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P5_Replace_Variable]^variables.declareVariable ( collection.toString (  ) , name ) ;^231^^^^^209^235^variables.declareVariable ( name.toString (  ) , collection ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P7_Replace_Invocation]^variables.declareVariable ( name.hashCode (  ) , collection ) ;^231^^^^^209^235^variables.declareVariable ( name.toString (  ) , collection ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P8_Replace_Mix]^variables .undeclareVariable (  )  ;^231^^^^^209^235^variables.declareVariable ( name.toString (  ) , collection ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P14_Delete_Statement]^^231^^^^^209^235^variables.declareVariable ( name.toString (  ) , collection ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P12_Insert_Condition]^if  ( variables.isDeclaredVariable ( name.toString (  )  )  )  { variables.declareVariable ( name.toString (  ) , collection ) ; }^231^^^^^209^235^variables.declareVariable ( name.toString (  ) , collection ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P2_Replace_Operator]^collection = ValueUtils.expandCollection ( collection, index  <=  1 ) ;^230^^^^^209^235^collection = ValueUtils.expandCollection ( collection, index + 1 ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P8_Replace_Mix]^collection = ValueUtils.expandCollection ( collection, index + 2 ) ;^230^^^^^209^235^collection = ValueUtils.expandCollection ( collection, index + 1 ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P2_Replace_Operator]^collection = ValueUtils.expandCollection ( collection, index  >=  1 ) ;^230^^^^^209^235^collection = ValueUtils.expandCollection ( collection, index + 1 ) ;^[CLASS] VariablePointer 1  [METHOD] createCollection [RETURN_TYPE] Object   JXPathContext context int index [VARIABLES] Variables  variables  boolean  actual  success  JXPathContext  context  QName  name  Object  collection  NodePointer  cl  cln  ptr  valuePointer  int  index  
[P5_Replace_Variable]^if  ( success )  {^238^^^^^237^255^if  ( actual )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P6_Replace_Expression]^if  ( index < 0 )  {^238^^^^^237^255^if  ( actual )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P6_Replace_Expression]^if  ( "Index is less than 1: " + asPath (  ) )  {^238^^^^^237^255^if  ( actual )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P6_Replace_Expression]^if  ( collection != null && index < getLength() )  {^238^^^^^237^255^if  ( actual )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P6_Replace_Expression]^if  ( collection != null )  {^238^^^^^237^255^if  ( actual )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P6_Replace_Expression]^if  ( index < getLength (  ) )  {^238^^^^^237^255^if  ( actual )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P9_Replace_Statement]^if  ( !actual )  {^238^^^^^237^255^if  ( actual )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P15_Unwrap_Block]^if ((index) == (WHOLE_COLLECTION)) {    variables.undeclareVariable(name.toString());}else {    if ((index) < 0) {        throw new org.apache.commons.jxpath.JXPathInvalidAccessException(("Index is less than 1: " + (asPath())));    }    java.lang.Object collection = getBaseValue();    if ((collection != null) && ((index) < (getLength()))) {        collection = org.apache.commons.jxpath.util.ValueUtils.remove(collection, index);        variables.declareVariable(name.toString(), collection);    }};^238^239^240^241^^237^255^if  ( actual )  { if  ( index == WHOLE_COLLECTION )  { variables.undeclareVariable ( name.toString (  )  ) ; }^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P16_Remove_Block]^^238^239^240^241^^237^255^if  ( actual )  { if  ( index == WHOLE_COLLECTION )  { variables.undeclareVariable ( name.toString (  )  ) ; }^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^if  ( index < WHOLE_COLLECTION )  {^239^^^^^237^255^if  ( index == WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P5_Replace_Variable]^if  ( WHOLE_COLLECTION == index )  {^239^^^^^237^255^if  ( index == WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P6_Replace_Expression]^if  ( index < 0 )  {^239^^^^^237^255^if  ( index == WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P6_Replace_Expression]^if  ( "Index is less than 1: " + asPath (  ) )  {^239^^^^^237^255^if  ( index == WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P6_Replace_Expression]^if  ( collection != null && index < getLength() )  {^239^^^^^237^255^if  ( index == WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P6_Replace_Expression]^if  ( collection != null )  {^239^^^^^237^255^if  ( index == WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P6_Replace_Expression]^if  ( index < getLength (  ) )  {^239^^^^^237^255^if  ( index == WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P15_Unwrap_Block]^variables.undeclareVariable(name.toString());^239^240^241^^^237^255^if  ( index == WHOLE_COLLECTION )  { variables.undeclareVariable ( name.toString (  )  ) ; }^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P16_Remove_Block]^^239^240^241^^^237^255^if  ( index == WHOLE_COLLECTION )  { variables.undeclareVariable ( name.toString (  )  ) ; }^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^if  ( index <= 0 )  {^243^^^^^237^255^if  ( index < 0 )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P3_Replace_Literal]^if  ( index < 9 )  {^243^^^^^237^255^if  ( index < 0 )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P6_Replace_Expression]^if  ( "Index is less than 1: " + asPath (  ) )  {^243^^^^^237^255^if  ( index < 0 )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P8_Replace_Mix]^if  ( index < 0 % 4 )  {^243^^^^^237^255^if  ( index < 0 )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P15_Unwrap_Block]^throw new org.apache.commons.jxpath.JXPathInvalidAccessException(("Index is less than 1: " + (asPath())));^243^244^245^246^^237^255^if  ( index < 0 )  { throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ; }^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P16_Remove_Block]^^243^244^245^246^^237^255^if  ( index < 0 )  { throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ; }^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^throw new JXPathInvalidAccessException ( "Index is less than 1: "  <<  asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P3_Replace_Literal]^throw new JXPathInvalidAccessException ( " less thandex is less than 1: " + asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P7_Replace_Invocation]^throw new JXPathInvalidAccessException ( "Index is less than 1: " + isActual (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P13_Insert_Block]^if  ( !success )  {     throw new JXPathAbstractFactoryException (  ( "Factory could not create object path: " +  ( asPath (  )  )  )  ) ; }^244^^^^^237^255^[Delete]^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P13_Insert_Block]^if  (  ( index )  < 0 )  {     throw new JXPathInvalidAccessException (  ( "Index is less than 1: " +  ( asPath (  )  )  )  ) ; }^244^^^^^237^255^[Delete]^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P13_Insert_Block]^if  ( index < 0 )  {     throw new JXPathInvalidAccessException (  ( "Index is less than 1: " +  ( asPath (  )  )  )  ) ; }^244^^^^^237^255^[Delete]^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^throw new JXPathInvalidAccessException ( "Index is less than 1: "  ==  asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P3_Replace_Literal]^throw new JXPathInvalidAccessException ( "ss than 1:ndex is less than 1: " + asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P13_Insert_Block]^if  ( index ==  ( WHOLE_COLLECTION )  )  {     index = 0; }else     if  ( index < 0 )  {         throw new JXPathInvalidAccessException (  ( "Index is less than 1: " +  ( asPath (  )  )  )  ) ;     }^244^^^^^237^255^[Delete]^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P7_Replace_Invocation]^"Index is less than 1: " + isActual (  )  ) ;^245^^^^^237^255^"Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P14_Delete_Statement]^^245^^^^^237^255^"Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^+ "' for path: " + asPath (  )  ) ;"Index is less than 1: " + asPath (  )  ) ;^245^^^^^237^255^"Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^if  ( collection != null || index < getLength (  )  )  {^249^^^^^237^255^if  ( collection != null && index < getLength (  )  )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^if  ( collection == null && index < getLength (  )  )  {^249^^^^^237^255^if  ( collection != null && index < getLength (  )  )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^if  ( collection != null && index <= getLength (  )  )  {^249^^^^^237^255^if  ( collection != null && index < getLength (  )  )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P6_Replace_Expression]^if  ( collection != null ) {^249^^^^^237^255^if  ( collection != null && index < getLength (  )  )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P6_Replace_Expression]^if  (  index < getLength (  )  )  {^249^^^^^237^255^if  ( collection != null && index < getLength (  )  )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P7_Replace_Invocation]^if  ( collection != null && index < getName (  )  )  {^249^^^^^237^255^if  ( collection != null && index < getLength (  )  )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P8_Replace_Mix]^if  ( collection != true && index < getLength (  )  )  {^249^^^^^237^255^if  ( collection != null && index < getLength (  )  )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P15_Unwrap_Block]^collection = org.apache.commons.jxpath.util.ValueUtils.remove(collection, index); variables.declareVariable(name.toString(), collection);^249^250^251^252^^237^255^if  ( collection != null && index < getLength (  )  )  { collection = ValueUtils.remove ( collection, index ) ; variables.declareVariable ( name.toString (  ) , collection ) ; }^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P16_Remove_Block]^^249^250^251^252^^237^255^if  ( collection != null && index < getLength (  )  )  { collection = ValueUtils.remove ( collection, index ) ; variables.declareVariable ( name.toString (  ) , collection ) ; }^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P13_Insert_Block]^if  (  ( index )  !=  ( WHOLE_COLLECTION )  )  {     Object collection = getBaseValue (  ) ;     setValue ( collection, index, value ) ; }else {     variables.declareVariable ( name.toString (  ) , value ) ; }^249^^^^^237^255^[Delete]^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P13_Insert_Block]^if  ( index >=  ( getLength (  )  )  )  {     collection = expandCollection ( collection,  ( index + 1 )  ) ;     variables.declareVariable ( name.toString (  ) , collection ) ; }^249^^^^^237^255^[Delete]^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P5_Replace_Variable]^collection = ValueUtils.remove (  index ) ;^250^^^^^237^255^collection = ValueUtils.remove ( collection, index ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P5_Replace_Variable]^collection = ValueUtils.remove ( collection ) ;^250^^^^^237^255^collection = ValueUtils.remove ( collection, index ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P5_Replace_Variable]^collection = ValueUtils.remove ( index, collection ) ;^250^^^^^237^255^collection = ValueUtils.remove ( collection, index ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P7_Replace_Invocation]^collection = ValueUtils.getValue ( collection, index ) ;^250^^^^^237^255^collection = ValueUtils.remove ( collection, index ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P8_Replace_Mix]^collection =  ValueUtils.remove ( null, index ) ;^250^^^^^237^255^collection = ValueUtils.remove ( collection, index ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^collection = ValueUtils.expandCollection ( collection, index + 1 ) ;collection = ValueUtils.remove ( collection, index ) ;^250^^^^^237^255^collection = ValueUtils.remove ( collection, index ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P14_Delete_Statement]^^250^^^^^237^255^collection = ValueUtils.remove ( collection, index ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^ValueUtils.setValue ( collection, index, value ) ;collection = ValueUtils.remove ( collection, index ) ;^250^^^^^237^255^collection = ValueUtils.remove ( collection, index ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^Object collection = createCollection ( context, index ) ;collection = ValueUtils.remove ( collection, index ) ;^250^^^^^237^255^collection = ValueUtils.remove ( collection, index ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^return ValueUtils.getValue ( value, index ) ;collection = ValueUtils.remove ( collection, index ) ;^250^^^^^237^255^collection = ValueUtils.remove ( collection, index ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P5_Replace_Variable]^variables.declareVariable ( name.toString (  )  ) ;^251^^^^^237^255^variables.declareVariable ( name.toString (  ) , collection ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P5_Replace_Variable]^variables.declareVariable ( collection.toString (  ) , name ) ;^251^^^^^237^255^variables.declareVariable ( name.toString (  ) , collection ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P7_Replace_Invocation]^variables.declareVariable ( name.hashCode (  ) , collection ) ;^251^^^^^237^255^variables.declareVariable ( name.toString (  ) , collection ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P14_Delete_Statement]^^251^^^^^237^255^variables.declareVariable ( name.toString (  ) , collection ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P12_Insert_Condition]^if  ( variables.isDeclaredVariable ( name.toString (  )  )  )  { variables.declareVariable ( name.toString (  ) , collection ) ; }^251^^^^^237^255^variables.declareVariable ( name.toString (  ) , collection ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^throw new JXPathInvalidAccessException ( "Index is less than 1: "  &&  asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P3_Replace_Literal]^throw new JXPathInvalidAccessException ( "ndex is less than 1: " + asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P7_Replace_Invocation]^Object collection = getName (  ) ;^248^^^^^237^255^Object collection = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^Object collection = createCollection ( context, index ) ;Object collection = getBaseValue (  ) ;^248^^^^^237^255^Object collection = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^Object value = getBaseValue (  ) ;Object collection = getBaseValue (  ) ;^248^^^^^237^255^Object collection = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^Object value = getNode (  ) ;Object collection = getBaseValue (  ) ;^248^^^^^237^255^Object collection = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^throw new JXPathInvalidAccessException ( "Index is less than 1: "  >>  asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P3_Replace_Literal]^throw new JXPathInvalidAccessException ( "Index is less than 1: In" + asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P14_Delete_Statement]^^248^^^^^237^255^Object collection = getBaseValue (  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P14_Delete_Statement]^^250^251^^^^237^255^collection = ValueUtils.remove ( collection, index ) ; variables.declareVariable ( name.toString (  ) , collection ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P7_Replace_Invocation]^variables.isDeclaredVariable ( name.toString (  )  ) ;^240^^^^^237^255^variables.undeclareVariable ( name.toString (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P7_Replace_Invocation]^variables.undeclareVariable ( name.hashCode (  )  ) ;^240^^^^^237^255^variables.undeclareVariable ( name.toString (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P14_Delete_Statement]^^240^^^^^237^255^variables.undeclareVariable ( name.toString (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P12_Insert_Condition]^if  ( variables.isDeclaredVariable ( name.toString (  )  )  )  { variables.undeclareVariable ( name.toString (  )  ) ; }^240^^^^^237^255^variables.undeclareVariable ( name.toString (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P12_Insert_Condition]^if  ( !factory.declareVariable ( context, name.toString (  )  )  )  { variables.undeclareVariable ( name.toString (  )  ) ; }^240^^^^^237^255^variables.undeclareVariable ( name.toString (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P3_Replace_Literal]^if  ( index < -2 )  {^243^^^^^237^255^if  ( index < 0 )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P8_Replace_Mix]^if  ( index < 3 )  {^243^^^^^237^255^if  ( index < 0 )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^throw new JXPathInvalidAccessException ( "Index is less than 1: "  ^  asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^throw new JXPathInvalidAccessException ( "Index is less than 1: "  <  asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P3_Replace_Literal]^throw new JXPathInvalidAccessException ( "ndex is less tha" + asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P8_Replace_Mix]^if  (  index < getName (  )  )  {^249^^^^^237^255^if  ( collection != null && index < getLength (  )  )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P7_Replace_Invocation]^collection = ValueUtils .getValue ( collection )  ;^250^^^^^237^255^collection = ValueUtils.remove ( collection, index ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P7_Replace_Invocation]^variables .undeclareVariable (  )  ;^251^^^^^237^255^variables.declareVariable ( name.toString (  ) , collection ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P3_Replace_Literal]^throw new JXPathInvalidAccessException ( " is less " + asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^throw new JXPathInvalidAccessException ( "Index is less than 1: "  <=  asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P3_Replace_Literal]^throw new JXPathInvalidAccessException ( "ndendex is less than 1: " + asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^if  ( index != WHOLE_COLLECTION )  {^239^^^^^237^255^if  ( index == WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P3_Replace_Literal]^if  ( index < -7 )  {^243^^^^^237^255^if  ( index < 0 )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P8_Replace_Mix]^if  ( index < 4 )  {^243^^^^^237^255^if  ( index < 0 )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^throw new JXPathInvalidAccessException ( "Index is less than 1: "  >  asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P3_Replace_Literal]^throw new JXPathInvalidAccessException ( " is less than ndex is less than 1: " + asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P3_Replace_Literal]^throw new JXPathInvalidAccessException ( "less than 1" + asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P8_Replace_Mix]^if  ( collection != false ) {^249^^^^^237^255^if  ( collection != null && index < getLength (  )  )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P8_Replace_Mix]^collection = ValueUtils.remove ( collection, 0 ) ;^250^^^^^237^255^collection = ValueUtils.remove ( collection, index ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P3_Replace_Literal]^throw new JXPathInvalidAccessException ( "n" + asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^throw new JXPathInvalidAccessException ( "Index is less than 1: "  |  asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P3_Replace_Literal]^throw new JXPathInvalidAccessException ( "Index is less than 1: x is le" + asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^if  ( index == 0 )  {^243^^^^^237^255^if  ( index < 0 )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P8_Replace_Mix]^if  ( index < 2 )  {^243^^^^^237^255^if  ( index < 0 )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^throw new JXPathInvalidAccessException ( "Index is less than 1: "  &  asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P3_Replace_Literal]^throw new JXPathInvalidAccessException ( "Index" + asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P3_Replace_Literal]^throw new JXPathInvalidAccessException ( "Index is less than 1: nde" + asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P8_Replace_Mix]^if  ( collection != this ) {^249^^^^^237^255^if  ( collection != null && index < getLength (  )  )  {^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P5_Replace_Variable]^collection = ValueUtils.remove ( collection, 4 ) ;^250^^^^^237^255^collection = ValueUtils.remove ( collection, index ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P3_Replace_Literal]^throw new JXPathInvalidAccessException ( "ndex i" + asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^throw new JXPathInvalidAccessException ( "Index is less than 1: "  ||  asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P3_Replace_Literal]^throw new JXPathInvalidAccessException ( " than ndex is less than 1: " + asPath (  )  ) ;^244^245^^^^237^255^throw new JXPathInvalidAccessException ( "Index is less than 1: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P7_Replace_Invocation]^variables .declareVariable ( collection )  ;^240^^^^^237^255^variables.undeclareVariable ( name.toString (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P5_Replace_Variable]^collection = ValueUtils.remove ( collection, null ) ;^250^^^^^237^255^collection = ValueUtils.remove ( collection, index ) ;^[CLASS] VariablePointer 1  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] Variables  variables  Object  collection  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P8_Replace_Mix]^valuePointer = true;^258^^^^^257^269^valuePointer = null;^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P11_Insert_Donor_Statement]^variables = null;valuePointer = null;^258^^^^^257^269^valuePointer = null;^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P2_Replace_Operator]^while  ( varCtx == null )  {^260^^^^^257^269^while  ( varCtx != null )  {^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P5_Replace_Variable]^while  ( context != null )  {^260^^^^^257^269^while  ( varCtx != null )  {^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P5_Replace_Variable]^if  ( name.isDeclaredVariable ( variables.toString (  )  )  )  {^262^^^^^257^269^if  ( variables.isDeclaredVariable ( name.toString (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P7_Replace_Invocation]^if  ( variables.undeclareVariable ( name.toString (  )  )  )  {^262^^^^^257^269^if  ( variables.isDeclaredVariable ( name.toString (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P7_Replace_Invocation]^if  ( variables.isDeclaredVariable ( name.hashCode (  )  )  )  {^262^^^^^257^269^if  ( variables.isDeclaredVariable ( name.toString (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P9_Replace_Statement]^if  ( !factory.declareVariable ( context, name.toString (  )  )  )  {^262^^^^^257^269^if  ( variables.isDeclaredVariable ( name.toString (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P15_Unwrap_Block]^actual = true; break;^262^263^264^265^^257^269^if  ( variables.isDeclaredVariable ( name.toString (  )  )  )  { actual = true; break; }^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P16_Remove_Block]^^262^263^264^265^^257^269^if  ( variables.isDeclaredVariable ( name.toString (  )  )  )  { actual = true; break; }^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P3_Replace_Literal]^actual = false;^263^^^^^257^269^actual = true;^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P11_Insert_Donor_Statement]^actual = false;actual = true;^263^^^^^257^269^actual = true;^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P5_Replace_Variable]^variables = context.getVariables (  ) ;^261^^^^^257^269^variables = varCtx.getVariables (  ) ;^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P7_Replace_Invocation]^variables = varCtx .getParentContext (  )  ;^261^^^^^257^269^variables = varCtx.getVariables (  ) ;^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P11_Insert_Donor_Statement]^varCtx = varCtx.getParentContext (  ) ;variables = varCtx.getVariables (  ) ;^261^^^^^257^269^variables = varCtx.getVariables (  ) ;^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P5_Replace_Variable]^varCtx = context.getParentContext (  ) ;^266^^^^^257^269^varCtx = varCtx.getParentContext (  ) ;^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P7_Replace_Invocation]^varCtx = varCtx .getVariables (  )  ;^266^^^^^257^269^varCtx = varCtx.getParentContext (  ) ;^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P8_Replace_Mix]^varCtx =  null.getParentContext (  ) ;^266^^^^^257^269^varCtx = varCtx.getParentContext (  ) ;^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P11_Insert_Donor_Statement]^variables = varCtx.getVariables (  ) ;varCtx = varCtx.getParentContext (  ) ;^266^^^^^257^269^varCtx = varCtx.getParentContext (  ) ;^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P8_Replace_Mix]^variables = true;^267^^^^^257^269^variables = null;^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P11_Insert_Donor_Statement]^valuePointer = null;variables = null;^267^^^^^257^269^variables = null;^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P11_Insert_Donor_Statement]^this.variables = variables;variables = null;^267^^^^^257^269^variables = null;^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P14_Delete_Statement]^^261^^^^^257^269^variables = varCtx.getVariables (  ) ;^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P13_Insert_Block]^if  ( variables.isDeclaredVariable ( name.toString (  )  )  )  {     actual = true;     break; }^262^^^^^257^269^[Delete]^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P14_Delete_Statement]^^266^^^^^257^269^varCtx = varCtx.getParentContext (  ) ;^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P8_Replace_Mix]^variables = this;^267^^^^^257^269^variables = null;^[CLASS] VariablePointer 1  [METHOD] findVariables [RETURN_TYPE] void   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  JXPathContext  context  varCtx  QName  name  
[P2_Replace_Operator]^return  <  ( actual ? System.identityHashCode ( variables )  : 0 ) + name.hashCode (  ) + index;^272^273^274^^^271^275^return  ( actual ? System.identityHashCode ( variables )  : 0 ) + name.hashCode (  ) + index;^[CLASS] VariablePointer 1  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^return  <<  ( actual ? System.identityHashCode ( variables )  : 0 ) + name.hashCode (  ) + index;^272^273^274^^^271^275^return  ( actual ? System.identityHashCode ( variables )  : 0 ) + name.hashCode (  ) + index;^[CLASS] VariablePointer 1  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P3_Replace_Literal]^return  ( actual ? System.identityHashCode ( variables )  : -9 ) + name.hashCode (  ) + index;^272^273^274^^^271^275^return  ( actual ? System.identityHashCode ( variables )  : 0 ) + name.hashCode (  ) + index;^[CLASS] VariablePointer 1  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P5_Replace_Variable]^return  ( variables ? System.identityHashCode ( actual )  : 0 ) + name.hashCode (  ) + index;^272^273^274^^^271^275^return  ( actual ? System.identityHashCode ( variables )  : 0 ) + name.hashCode (  ) + index;^[CLASS] VariablePointer 1  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P5_Replace_Variable]^return  ( name ? System.identityHashCode ( variables )  : 0 ) + actual.hashCode (  ) + index;^272^273^274^^^271^275^return  ( actual ? System.identityHashCode ( variables )  : 0 ) + name.hashCode (  ) + index;^[CLASS] VariablePointer 1  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P5_Replace_Variable]^return  ( actual ? System.identityHashCode ( index )  : 0 ) + name.hashCode (  ) + variables;^272^273^274^^^271^275^return  ( actual ? System.identityHashCode ( variables )  : 0 ) + name.hashCode (  ) + index;^[CLASS] VariablePointer 1  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P7_Replace_Invocation]^return  ( actual ? System.identityHashCode ( variables )  : 0 ) + name.toString (  ) + index;^272^273^274^^^271^275^return  ( actual ? System.identityHashCode ( variables )  : 0 ) + name.hashCode (  ) + index;^[CLASS] VariablePointer 1  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P8_Replace_Mix]^return  ( actual ? System.identityHashCode ( variables )  : 1 ) + name.toString (  ) + index;^272^273^274^^^271^275^return  ( actual ? System.identityHashCode ( variables )  : 0 ) + name.hashCode (  ) + index;^[CLASS] VariablePointer 1  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P14_Delete_Statement]^^272^273^274^^^271^275^return  ( actual ? System.identityHashCode ( variables )  : 0 ) + name.hashCode (  ) + index;^[CLASS] VariablePointer 1  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P7_Replace_Invocation]^+ name.toString (  ) + index;^273^274^^^^271^275^+ name.hashCode (  ) + index;^[CLASS] VariablePointer 1  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P14_Delete_Statement]^^273^274^^^^271^275^+ name.hashCode (  ) + index;^[CLASS] VariablePointer 1  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Variables  variables  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^if  ( object >= this )  {^278^^^^^277^290^if  ( object == this )  {^[CLASS] VariablePointer 1  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Variables  variables  Object  object  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  VariablePointer  other  
[P9_Replace_Statement]^if  ( collection == null )  {^278^^^^^277^290^if  ( object == this )  {^[CLASS] VariablePointer 1  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Variables  variables  Object  object  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  VariablePointer  other  
[P15_Unwrap_Block]^return true;^278^279^280^^^277^290^if  ( object == this )  { return true; }^[CLASS] VariablePointer 1  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Variables  variables  Object  object  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  VariablePointer  other  
[P16_Remove_Block]^^278^279^280^^^277^290^if  ( object == this )  { return true; }^[CLASS] VariablePointer 1  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Variables  variables  Object  object  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  VariablePointer  other  
[P13_Insert_Block]^if  ( value == null )  {     return 1; }^278^^^^^277^290^[Delete]^[CLASS] VariablePointer 1  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Variables  variables  Object  object  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  VariablePointer  other  
[P3_Replace_Literal]^return false;^279^^^^^277^290^return true;^[CLASS] VariablePointer 1  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Variables  variables  Object  object  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  VariablePointer  other  
[P2_Replace_Operator]^if  ( ! ( object  >>  VariablePointer )  )  {^282^^^^^277^290^if  ( ! ( object instanceof VariablePointer )  )  {^[CLASS] VariablePointer 1  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Variables  variables  Object  object  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  VariablePointer  other  
[P15_Unwrap_Block]^return false;^282^283^284^^^277^290^if  ( ! ( object instanceof VariablePointer )  )  { return false; }^[CLASS] VariablePointer 1  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Variables  variables  Object  object  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  VariablePointer  other  
[P16_Remove_Block]^^282^283^284^^^277^290^if  ( ! ( object instanceof VariablePointer )  )  { return false; }^[CLASS] VariablePointer 1  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Variables  variables  Object  object  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  VariablePointer  other  
[P3_Replace_Literal]^return true;^283^^^^^277^290^return false;^[CLASS] VariablePointer 1  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Variables  variables  Object  object  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  VariablePointer  other  
[P2_Replace_Operator]^return variables == other.variables || name.equals ( other.name ) && index == other.index;^287^288^289^^^277^290^return variables == other.variables && name.equals ( other.name ) && index == other.index;^[CLASS] VariablePointer 1  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Variables  variables  Object  object  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  VariablePointer  other  
[P2_Replace_Operator]^return variables != other.variables && name.equals ( other.name ) && index == other.index;^287^288^289^^^277^290^return variables == other.variables && name.equals ( other.name ) && index == other.index;^[CLASS] VariablePointer 1  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Variables  variables  Object  object  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  VariablePointer  other  
[P5_Replace_Variable]^&& name.equals ( other.name.name ) && index == other.index;^288^289^^^^277^290^&& name.equals ( other.name ) && index == other.index;^[CLASS] VariablePointer 1  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Variables  variables  Object  object  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  VariablePointer  other  
[P5_Replace_Variable]^&& other.name.equals ( name ) && index == other.index;^288^289^^^^277^290^&& name.equals ( other.name ) && index == other.index;^[CLASS] VariablePointer 1  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Variables  variables  Object  object  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  VariablePointer  other  
[P5_Replace_Variable]^&& name.equals ( other ) && index == other.name.index;^288^289^^^^277^290^&& name.equals ( other.name ) && index == other.index;^[CLASS] VariablePointer 1  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Variables  variables  Object  object  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  VariablePointer  other  
[P7_Replace_Invocation]^&& name .setValue ( object , object )  && index == other.index;^288^289^^^^277^290^&& name.equals ( other.name ) && index == other.index;^[CLASS] VariablePointer 1  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Variables  variables  Object  object  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  VariablePointer  other  
[P8_Replace_Mix]^&& name.equals ( name ) && index == other.index;^288^289^^^^277^290^&& name.equals ( other.name ) && index == other.index;^[CLASS] VariablePointer 1  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Variables  variables  Object  object  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  VariablePointer  other  
[P14_Delete_Statement]^^288^289^^^^277^290^&& name.equals ( other.name ) && index == other.index;^[CLASS] VariablePointer 1  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] Variables  variables  Object  object  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  VariablePointer  other  
[P14_Delete_Statement]^^294^^^^^292^307^buffer.append ( '$' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^buffer.append ( name ) ;buffer.append ( '$' ) ;^294^^^^^292^307^buffer.append ( '$' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P14_Delete_Statement]^^295^^^^^292^307^buffer.append ( name ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^buffer.append ( '$' ) ;buffer.append ( name ) ;^295^^^^^292^307^buffer.append ( name ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P5_Replace_Variable]^if  ( !success )  {^296^^^^^292^307^if  ( !actual )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P6_Replace_Expression]^if  ( index + 1 )  {^296^^^^^292^307^if  ( !actual )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P6_Replace_Expression]^if  ( index != WHOLE_COLLECTION && (getNode() == null) || isCollection() )  {^296^^^^^292^307^if  ( !actual )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P6_Replace_Expression]^if  ( index != WHOLE_COLLECTION )  {^296^^^^^292^307^if  ( !actual )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P6_Replace_Expression]^if  ( (getNode() == null || isCollection()) )  {^296^^^^^292^307^if  ( !actual )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P6_Replace_Expression]^if  ( getNode (  )  == null )  {^296^^^^^292^307^if  ( !actual )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P9_Replace_Statement]^if  ( actual )  {^296^^^^^292^307^if  ( !actual )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P15_Unwrap_Block]^if ((index) != (WHOLE_COLLECTION)) {    buffer.append('[').append(((index) + 1)).append(']');};^296^297^298^299^^292^307^if  ( !actual )  { if  ( index != WHOLE_COLLECTION )  { buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ; }^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P16_Remove_Block]^^296^297^298^299^^292^307^if  ( !actual )  { if  ( index != WHOLE_COLLECTION )  { buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ; }^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^else if  ( index != WHOLE_COLLECTION ||  ( getNode (  )  == null || isCollection (  )  )  )  {^301^302^303^^^292^307^else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  == null || isCollection (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^else if  ( index == WHOLE_COLLECTION &&  ( getNode (  )  == null || isCollection (  )  )  )  {^301^302^303^^^292^307^else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  == null || isCollection (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  == null && isCollection (  )  )  )  {^301^302^303^^^292^307^else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  == null || isCollection (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  != null || isCollection (  )  )  )  {^301^302^303^^^292^307^else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  == null || isCollection (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P5_Replace_Variable]^else if  ( index != this &&  ( getNode (  )  == null || isCollection (  )  )  )  {^301^302^303^^^292^307^else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  == null || isCollection (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P5_Replace_Variable]^else if  ( WHOLE_COLLECTION != index &&  ( getNode (  )  == null || isCollection (  )  )  )  {^301^302^303^^^292^307^else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  == null || isCollection (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P6_Replace_Expression]^else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  == null ) {^301^302^303^^^292^307^else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  == null || isCollection (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P6_Replace_Expression]^else if  (  isCollection (  )  )  )  {^301^302^303^^^292^307^else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  == null || isCollection (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P6_Replace_Expression]^else if  ( index != WHOLE_COLLECTION )  {^301^302^303^^^292^307^else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  == null || isCollection (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P6_Replace_Expression]^else if  ( (getNode() == null || isCollection()) )  {^301^302^303^^^292^307^else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  == null || isCollection (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P6_Replace_Expression]^else if  ( getNode (  )  == null )  {^301^302^303^^^292^307^else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  == null || isCollection (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P6_Replace_Expression]^else if  ( index + 1 )  {^301^302^303^^^292^307^else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  == null || isCollection (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P7_Replace_Invocation]^else if  ( index != WHOLE_COLLECTION &&  ( getValuePointer (  )  == null || isCollection (  )  )  )  {^301^302^303^^^292^307^else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  == null || isCollection (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P7_Replace_Invocation]^else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  == null || isActual (  )  )  )  {^301^302^303^^^292^307^else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  == null || isCollection (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P8_Replace_Mix]^else {^301^302^303^^^292^307^else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  == null || isCollection (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P15_Unwrap_Block]^buffer.append('[').append(((index) + 1)).append(']');^301^302^303^304^305^292^307^else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  == null || isCollection (  )  )  )  { buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ; }^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P16_Remove_Block]^^301^302^303^304^305^292^307^else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  == null || isCollection (  )  )  )  { buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ; }^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^buffer.append ( '[' ) .append ( index  &  1 ) .append ( ']' ) ;^304^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P3_Replace_Literal]^buffer.append ( '[' ) .append ( index + 2 ) .append ( ']' ) ;^304^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P14_Delete_Statement]^^304^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^&&  ( getNode (  )  == null || isCollection (  )  )  )  { buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^304^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P3_Replace_Literal]^buffer.append ( '[' ) .append ( index  ) .append ( ']' ) ;^304^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P7_Replace_Invocation]^buffer .append ( 3 )^304^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P7_Replace_Invocation]^&&  ( getValuePointer (  )  == null || isCollection (  )  )  )  {^303^^^^^292^307^&&  ( getNode (  )  == null || isCollection (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P14_Delete_Statement]^^303^304^^^^292^307^&&  ( getNode (  )  == null || isCollection (  )  )  )  { buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P7_Replace_Invocation]^&&  ( getNode (  )  == null || isActual (  )  )  )  {^303^^^^^292^307^&&  ( getNode (  )  == null || isCollection (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^buffer.append ( '[' ) .append ( index   instanceof   1 ) .append ( ']' ) ;^304^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^buffer.append ( '[' ) .append ( index  ^  1 ) .append ( ']' ) ;^304^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P5_Replace_Variable]^buffer.append ( '[' ) .append ( 1 + 1 ) .append ( ']' ) ;^304^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^if  ( index <= WHOLE_COLLECTION )  {^297^^^^^292^307^if  ( index != WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P5_Replace_Variable]^if  ( 4 != WHOLE_COLLECTION )  {^297^^^^^292^307^if  ( index != WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P6_Replace_Expression]^if  ( index + 1 )  {^297^^^^^292^307^if  ( index != WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P8_Replace_Mix]^if  ( index = WHOLE_COLLECTION )  {^297^^^^^292^307^if  ( index != WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P15_Unwrap_Block]^buffer.append('[').append(((index) + 1)).append(']');^297^298^299^^^292^307^if  ( index != WHOLE_COLLECTION )  { buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ; }^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P16_Remove_Block]^^297^298^299^^^292^307^if  ( index != WHOLE_COLLECTION )  { buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ; }^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P13_Insert_Block]^if  (  (  ( index )  !=  ( WHOLE_COLLECTION )  )  &&  (  (  ( getNode (  )  )  == null )  ||  ( isCollection (  )  )  )  )  {     buffer.append ( '[' ) .append (  (  ( index )  + 1 )  ) .append ( ']' ) ; }^297^^^^^292^307^[Delete]^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^buffer.append ( '[' ) .append ( index  ^  1 ) .append ( ']' ) ;^298^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P3_Replace_Literal]^buffer.append ( '[' ) .append ( index  ) .append ( ']' ) ;^298^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P7_Replace_Invocation]^buffer .append ( 4 )^298^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P8_Replace_Mix]^buffer .append ( this )^298^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P14_Delete_Statement]^^298^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P11_Insert_Donor_Statement]^&&  ( getNode (  )  == null || isCollection (  )  )  )  { buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^298^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P13_Insert_Block]^if  (  ( index )  !=  ( WHOLE_COLLECTION )  )  {     buffer.append ( '[' ) .append (  (  ( index )  + 1 )  ) .append ( ']' ) ; }^298^^^^^292^307^[Delete]^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^buffer.append ( '[' ) .append ( index  >>  1 ) .append ( ']' ) ;^298^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P7_Replace_Invocation]^buffer .append ( 3 )^298^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^buffer.append ( '[' ) .append ( index  <  1 ) .append ( ']' ) ;^298^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P7_Replace_Invocation]^buffer .append ( null )^298^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^buffer.append ( '[' ) .append ( index  ||  1 ) .append ( ']' ) ;^298^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P3_Replace_Literal]^buffer.append ( '[' ) .append ( index +  ) .append ( ']' ) ;^298^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^if  ( index == WHOLE_COLLECTION )  {^297^^^^^292^307^if  ( index != WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P5_Replace_Variable]^if  ( WHOLE_COLLECTION != index )  {^297^^^^^292^307^if  ( index != WHOLE_COLLECTION )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^buffer.append ( '[' ) .append ( index  |  1 ) .append ( ']' ) ;^298^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P7_Replace_Invocation]^buffer .append ( 0 )^298^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^buffer.append ( '[' ) .append ( index  >=  1 ) .append ( ']' ) ;^298^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P8_Replace_Mix]^else if  (  isActual (  )  )  )  {^301^302^303^^^292^307^else if  ( index != WHOLE_COLLECTION &&  ( getNode (  )  == null || isCollection (  )  )  )  {^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^buffer.append ( '[' ) .append ( index  >  1 ) .append ( ']' ) ;^304^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^buffer.append ( '[' ) .append ( index  &&  1 ) .append ( ']' ) ;^304^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P3_Replace_Literal]^buffer.append ( '[' ) .append ( index +  ) .append ( ']' ) ;^304^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^buffer.append ( '[' ) .append ( index  >  1 ) .append ( ']' ) ;^298^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^buffer.append ( '[' ) .append ( index  <=  1 ) .append ( ']' ) ;^304^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P2_Replace_Operator]^buffer.append ( '[' ) .append ( index  >>  1 ) .append ( ']' ) ;^304^^^^^292^307^buffer.append ( '[' ) .append ( index + 1 ) .append ( ']' ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P7_Replace_Invocation]^return buffer.append (  ) ;^306^^^^^292^307^return buffer.toString (  ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P8_Replace_Mix]^return buffer .hashCode (  )  ;^306^^^^^292^307^return buffer.toString (  ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P14_Delete_Statement]^^306^^^^^292^307^return buffer.toString (  ) ;^[CLASS] VariablePointer 1  [METHOD] asPath [RETURN_TYPE] String   [VARIABLES] Variables  variables  StringBuffer  buffer  boolean  actual  success  NodePointer  cl  cln  ptr  valuePointer  QName  name  
[P5_Replace_Variable]^return getValuePointer (  ) .childIterator ( test, success, startWith ) ;^314^^^^^309^315^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] VariablePointer 1  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  NodeTest  test  
[P5_Replace_Variable]^return getValuePointer (  ) .childIterator ( test, reverse, valuePointer ) ;^314^^^^^309^315^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] VariablePointer 1  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  NodeTest  test  
[P5_Replace_Variable]^return getValuePointer (  ) .childIterator (  reverse, startWith ) ;^314^^^^^309^315^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] VariablePointer 1  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  NodeTest  test  
[P5_Replace_Variable]^return getValuePointer (  ) .childIterator ( test,  startWith ) ;^314^^^^^309^315^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] VariablePointer 1  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  NodeTest  test  
[P5_Replace_Variable]^return getValuePointer (  ) .childIterator ( test, reverse ) ;^314^^^^^309^315^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] VariablePointer 1  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  NodeTest  test  
[P5_Replace_Variable]^return getValuePointer (  ) .childIterator ( startWith, reverse, test ) ;^314^^^^^309^315^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] VariablePointer 1  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  NodeTest  test  
[P5_Replace_Variable]^return getValuePointer (  ) .childIterator ( test, startWith, reverse ) ;^314^^^^^309^315^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] VariablePointer 1  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  NodeTest  test  
[P7_Replace_Invocation]^return getValuePointer (  )  .attributeIterator ( name )  ;^314^^^^^309^315^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] VariablePointer 1  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  NodeTest  test  
[P7_Replace_Invocation]^return getNode (  ) .childIterator ( test, reverse, startWith ) ;^314^^^^^309^315^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] VariablePointer 1  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  NodeTest  test  
[P5_Replace_Variable]^return getValuePointer (  ) .childIterator ( reverse, test, startWith ) ;^314^^^^^309^315^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] VariablePointer 1  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  NodeTest  test  
[P8_Replace_Mix]^return getNode (  ) .childIterator ( test, reverse, valuePointer ) ;^314^^^^^309^315^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] VariablePointer 1  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  NodeTest  test  
[P14_Delete_Statement]^^314^^^^^309^315^return getValuePointer (  ) .childIterator ( test, reverse, startWith ) ;^[CLASS] VariablePointer 1  [METHOD] childIterator [RETURN_TYPE] NodeIterator   NodeTest test boolean reverse NodePointer startWith [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  NodeTest  test  
[P7_Replace_Invocation]^return getValuePointer (  ) .testNode ( name ) ;^318^^^^^317^319^return getValuePointer (  ) .attributeIterator ( name ) ;^[CLASS] VariablePointer 1  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName name [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  
[P7_Replace_Invocation]^return getNode (  ) .attributeIterator ( name ) ;^318^^^^^317^319^return getValuePointer (  ) .attributeIterator ( name ) ;^[CLASS] VariablePointer 1  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName name [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  
[P14_Delete_Statement]^^318^^^^^317^319^return getValuePointer (  ) .attributeIterator ( name ) ;^[CLASS] VariablePointer 1  [METHOD] attributeIterator [RETURN_TYPE] NodeIterator   QName name [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  
[P7_Replace_Invocation]^return getValuePointer (  ) .getValuePointer (  ) ;^322^^^^^321^323^return getValuePointer (  ) .namespaceIterator (  ) ;^[CLASS] VariablePointer 1  [METHOD] namespaceIterator [RETURN_TYPE] NodeIterator   [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  
[P7_Replace_Invocation]^return getNode (  ) .namespaceIterator (  ) ;^322^^^^^321^323^return getValuePointer (  ) .namespaceIterator (  ) ;^[CLASS] VariablePointer 1  [METHOD] namespaceIterator [RETURN_TYPE] NodeIterator   [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  
[P14_Delete_Statement]^^322^^^^^321^323^return getValuePointer (  ) .namespaceIterator (  ) ;^[CLASS] VariablePointer 1  [METHOD] namespaceIterator [RETURN_TYPE] NodeIterator   [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  
[P7_Replace_Invocation]^return getValuePointer (  ) .setIndex ( name ) ;^326^^^^^325^327^return getValuePointer (  ) .namespacePointer ( name ) ;^[CLASS] VariablePointer 1  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String name [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  String  name  QName  name  
[P7_Replace_Invocation]^return getNode (  ) .namespacePointer ( name ) ;^326^^^^^325^327^return getValuePointer (  ) .namespacePointer ( name ) ;^[CLASS] VariablePointer 1  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String name [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  String  name  QName  name  
[P14_Delete_Statement]^^326^^^^^325^327^return getValuePointer (  ) .namespacePointer ( name ) ;^[CLASS] VariablePointer 1  [METHOD] namespacePointer [RETURN_TYPE] NodePointer   String name [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  String  name  QName  name  
[P7_Replace_Invocation]^return getValuePointer (  ) .attributeIterator ( nodeTest ) ;^330^^^^^329^331^return getValuePointer (  ) .testNode ( nodeTest ) ;^[CLASS] VariablePointer 1  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest nodeTest [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  NodeTest  nodeTest  
[P7_Replace_Invocation]^return getNode (  ) .testNode ( nodeTest ) ;^330^^^^^329^331^return getValuePointer (  ) .testNode ( nodeTest ) ;^[CLASS] VariablePointer 1  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest nodeTest [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  NodeTest  nodeTest  
[P14_Delete_Statement]^^330^^^^^329^331^return getValuePointer (  ) .testNode ( nodeTest ) ;^[CLASS] VariablePointer 1  [METHOD] testNode [RETURN_TYPE] boolean   NodeTest nodeTest [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  QName  name  NodeTest  nodeTest  
[P11_Insert_Donor_Statement]^AbstractFactory factory = getAbstractFactory ( context ) ;AbstractFactory factory = context.getFactory (  ) ;^334^^^^^333^341^AbstractFactory factory = context.getFactory (  ) ;^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P8_Replace_Mix]^AbstractFactory factory = context .getParentContext (  )  ;^334^^^^^333^341^AbstractFactory factory = context.getFactory (  ) ;^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P14_Delete_Statement]^^334^^^^^333^341^AbstractFactory factory = context.getFactory (  ) ;^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P2_Replace_Operator]^if  ( factory != null )  {^335^^^^^333^341^if  ( factory == null )  {^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P6_Replace_Expression]^if  ( "Factory is not set on the JXPathContext - cannot create path: " + asPath (  ) )  {^335^^^^^333^341^if  ( factory == null )  {^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P8_Replace_Mix]^if  ( factory == true )  {^335^^^^^333^341^if  ( factory == null )  {^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P9_Replace_Statement]^if  ( valuePointer == null )  {^335^^^^^333^341^if  ( factory == null )  {^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P9_Replace_Statement]^if  ( value == null )  {^335^^^^^333^341^if  ( factory == null )  {^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P9_Replace_Statement]^if  ( collection == null )  {^335^^^^^333^341^if  ( factory == null )  {^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P15_Unwrap_Block]^throw new org.apache.commons.jxpath.JXPathException(("Factory is not set on the JXPathContext - cannot create path: " + (asPath())));^335^336^337^338^339^333^341^if  ( factory == null )  { throw new JXPathException ( "Factory is not set on the JXPathContext - cannot create path: " + asPath (  )  ) ; }^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P16_Remove_Block]^^335^336^337^338^339^333^341^if  ( factory == null )  { throw new JXPathException ( "Factory is not set on the JXPathContext - cannot create path: " + asPath (  )  ) ; }^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P13_Insert_Block]^if  ( !success )  {     throw new JXPathAbstractFactoryException (  ( "Factory could not create object path: " +  ( asPath (  )  )  )  ) ; }^335^^^^^333^341^[Delete]^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P13_Insert_Block]^if  ( ! ( actual )  )  {     throw new JXPathException (  ( "Cannot set undefined variable: " +  ( name )  )  ) ; }^335^^^^^333^341^[Delete]^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P13_Insert_Block]^if  ( ! ( factory.declareVariable ( context, name.toString (  )  )  )  )  {     throw new JXPathAbstractFactoryException (  (  (  ( "Factory cannot define variable '" +  ( name )  )  + "' for path: " )  +  ( asPath (  )  )  )  ) ; }^335^^^^^333^341^[Delete]^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P13_Insert_Block]^if  (  ( index )  < 0 )  {     throw new JXPathInvalidAccessException (  ( "Index is less than 1: " +  ( asPath (  )  )  )  ) ; }^335^^^^^333^341^[Delete]^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P13_Insert_Block]^if  ( ! ( actual )  )  {     throw new JXPathException (  ( "Undefined variable: " +  ( name )  )  ) ; }^335^^^^^333^341^[Delete]^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P13_Insert_Block]^if  ( collection == null )  {     throw new JXPathAbstractFactoryException (  (  (  ( "Factory did not assign a collection to variable '" +  ( name )  )  + "' for path: " )  +  ( asPath (  )  )  )  ) ; }^335^^^^^333^341^[Delete]^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P13_Insert_Block]^if  ( index < 0 )  {     throw new JXPathInvalidAccessException (  ( "Index is less than 1: " +  ( asPath (  )  )  )  ) ; }^335^^^^^333^341^[Delete]^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathException ( "Factory is not set on the JXPathContext - cannot create path: "  >  asPath (  )  ) ;^336^337^338^^^333^341^throw new JXPathException ( "Factory is not set on the JXPathContext - cannot create path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathException ( " no" + asPath (  )  ) ;^336^337^338^^^333^341^throw new JXPathException ( "Factory is not set on the JXPathContext - cannot create path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P7_Replace_Invocation]^throw new JXPathException ( "Factory is not set on the JXPathContext - cannot create path: " + isActual (  )  ) ;^336^337^338^^^333^341^throw new JXPathException ( "Factory is not set on the JXPathContext - cannot create path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P13_Insert_Block]^if  ( factory == null )  {     throw new JXPathException (  ( "Factory is not set on the JXPathContext - cannot create path: " +  ( asPath (  )  )  )  ) ; }^336^^^^^333^341^[Delete]^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathException ( "Factory is not set on the JXPathContext - cannot create path: "  !=  asPath (  )  ) ;^336^337^338^^^333^341^throw new JXPathException ( "Factory is not set on the JXPathContext - cannot create path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathException ( "actory isactory is not set on the JXPathContext - cannot create path: " + asPath (  )  ) ;^336^337^338^^^333^341^throw new JXPathException ( "Factory is not set on the JXPathContext - cannot create path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P13_Insert_Block]^if  ( collection == null )  {     throw new JXPathAbstractFactoryException (  (  (  ( "Factory did not assign a collection to variable '" +  ( name )  )  + "' for path: " )  +  ( asPath (  )  )  )  ) ; }^336^^^^^333^341^[Delete]^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P7_Replace_Invocation]^+ isActual (  )  ) ;^338^^^^^333^341^+ asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P14_Delete_Statement]^^338^^^^^333^341^+ asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P11_Insert_Donor_Statement]^+ "' for path: " + asPath (  )  ) ;+ asPath (  )  ) ;^338^^^^^333^341^+ asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathException ( "Factory is not set on the JXPathContext - cannot create path: "  <<  asPath (  )  ) ;^336^337^338^^^333^341^throw new JXPathException ( "Factory is not set on the JXPathContext - cannot create path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathException ( "he JXPathCon" + asPath (  )  ) ;^336^337^338^^^333^341^throw new JXPathException ( "Factory is not set on the JXPathContext - cannot create path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P2_Replace_Operator]^throw new JXPathException ( "Factory is not set on the JXPathContext - cannot create path: "  ||  asPath (  )  ) ;^336^337^338^^^333^341^throw new JXPathException ( "Factory is not set on the JXPathContext - cannot create path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P3_Replace_Literal]^throw new JXPathException ( "ry actory is not set on the JXPathContext - cannot create path: " + asPath (  )  ) ;^336^337^338^^^333^341^throw new JXPathException ( "Factory is not set on the JXPathContext - cannot create path: " + asPath (  )  ) ;^[CLASS] VariablePointer 1  [METHOD] getAbstractFactory [RETURN_TYPE] AbstractFactory   JXPathContext context [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  ptr  startWith  valuePointer  JXPathContext  context  QName  name  AbstractFactory  factory  
[P2_Replace_Operator]^return pointer1.getIndex (  )   >=  pointer2.getIndex (  ) ;^347^^^^^343^348^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] VariablePointer 1  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  pointer1  pointer2  ptr  startWith  valuePointer  QName  name  
[P5_Replace_Variable]^return valuePointer.getIndex (  )  - pointer2.getIndex (  ) ;^347^^^^^343^348^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] VariablePointer 1  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  pointer1  pointer2  ptr  startWith  valuePointer  QName  name  
[P5_Replace_Variable]^return pointer1.getIndex (  )  - valuePointer.getIndex (  ) ;^347^^^^^343^348^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] VariablePointer 1  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  pointer1  pointer2  ptr  startWith  valuePointer  QName  name  
[P5_Replace_Variable]^return pointer2.getIndex (  )  - pointer1.getIndex (  ) ;^347^^^^^343^348^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] VariablePointer 1  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  pointer1  pointer2  ptr  startWith  valuePointer  QName  name  
[P7_Replace_Invocation]^return pointer1.setIndex (  )  - pointer2.getIndex (  ) ;^347^^^^^343^348^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] VariablePointer 1  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  pointer1  pointer2  ptr  startWith  valuePointer  QName  name  
[P8_Replace_Mix]^return pointer1.setIndex (  )   !=  pointer2.getIndex (  ) ;;^347^^^^^343^348^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] VariablePointer 1  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  pointer1  pointer2  ptr  startWith  valuePointer  QName  name  
[P8_Replace_Mix]^return ptr.getIndex (  )  - pointer2.getIndex (  ) ;^347^^^^^343^348^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] VariablePointer 1  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  pointer1  pointer2  ptr  startWith  valuePointer  QName  name  
[P14_Delete_Statement]^^347^^^^^343^348^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] VariablePointer 1  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  pointer1  pointer2  ptr  startWith  valuePointer  QName  name  
[P5_Replace_Variable]^return pointer1.getIndex (  )  - ptr.getIndex (  ) ;^347^^^^^343^348^return pointer1.getIndex (  )  - pointer2.getIndex (  ) ;^[CLASS] VariablePointer 1  [METHOD] compareChildNodePointers [RETURN_TYPE] int   NodePointer pointer1 NodePointer pointer2 [VARIABLES] Variables  variables  boolean  actual  reverse  success  NodePointer  cl  cln  pointer1  pointer2  ptr  startWith  valuePointer  QName  name  
[P2_Replace_Operator]^throw new JXPathException ( "Undefined variable: "  !=  name ) ;^126^127^^^^125^128^throw new JXPathException ( "Undefined variable: " + name ) ;^[CLASS] 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new JXPathException ( "ed va" + name ) ;^126^127^^^^125^128^throw new JXPathException ( "Undefined variable: " + name ) ;^[CLASS] 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  
[P2_Replace_Operator]^throw new JXPathException ( "Undefined variable: "  >  name ) ;^126^127^^^^125^128^throw new JXPathException ( "Undefined variable: " + name ) ;^[CLASS] 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  
[P3_Replace_Literal]^throw new JXPathException ( "defined vandefined variable: " + name ) ;^126^127^^^^125^128^throw new JXPathException ( "Undefined variable: " + name ) ;^[CLASS] 1  [METHOD] getImmediateNode [RETURN_TYPE] Object   [VARIABLES] boolean  
