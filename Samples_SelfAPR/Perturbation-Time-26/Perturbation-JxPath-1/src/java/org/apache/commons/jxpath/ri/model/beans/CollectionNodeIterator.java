[P1_Replace_Type]^private  long  position;^37^^^^^32^42^private int position;^[CLASS] CollectionNodeIterator   [VARIABLES] 
[P8_Replace_Mix]^private  short  position;^37^^^^^32^42^private int position;^[CLASS] CollectionNodeIterator   [VARIABLES] 
[P1_Replace_Type]^private  Set  collection;^38^^^^^33^43^private List collection;^[CLASS] CollectionNodeIterator   [VARIABLES] 
[P8_Replace_Mix]^this.pointer =  null;^45^^^^^40^48^this.pointer = pointer;^[CLASS] CollectionNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   CollectionPointer pointer boolean reverse NodePointer startWith [VARIABLES] List  collection  boolean  reverse  NodePointer  startWith  int  position  CollectionPointer  pointer  
[P11_Insert_Donor_Statement]^this.position = position;this.pointer = pointer;^45^^^^^40^48^this.pointer = pointer;^[CLASS] CollectionNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   CollectionPointer pointer boolean reverse NodePointer startWith [VARIABLES] List  collection  boolean  reverse  NodePointer  startWith  int  position  CollectionPointer  pointer  
[P8_Replace_Mix]^this.reverse =  null;^46^^^^^40^48^this.reverse = reverse;^[CLASS] CollectionNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   CollectionPointer pointer boolean reverse NodePointer startWith [VARIABLES] List  collection  boolean  reverse  NodePointer  startWith  int  position  CollectionPointer  pointer  
[P8_Replace_Mix]^this.startWith =  null;^47^^^^^40^48^this.startWith = startWith;^[CLASS] CollectionNodeIterator  [METHOD] <init> [RETURN_TYPE] NodePointer)   CollectionPointer pointer boolean reverse NodePointer startWith [VARIABLES] List  collection  boolean  reverse  NodePointer  startWith  int  position  CollectionPointer  pointer  
[P2_Replace_Operator]^if  ( collection != null )  {^61^^^^^60^70^if  ( collection == null )  {^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P8_Replace_Mix]^if  ( collection == false )  {^61^^^^^60^70^if  ( collection == null )  {^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P9_Replace_Statement]^if  ( position == 0 )  {^61^^^^^60^70^if  ( collection == null )  {^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P9_Replace_Statement]^if  ( startWith != null )  {^61^^^^^60^70^if  ( collection == null )  {^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P15_Unwrap_Block]^prepare();^61^62^63^^^60^70^if  ( collection == null )  { prepare (  ) ; }^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P16_Remove_Block]^^61^62^63^^^60^70^if  ( collection == null )  { prepare (  ) ; }^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P13_Insert_Block]^if  (  ( position )  == 0 )  {     return null; }^61^^^^^60^70^[Delete]^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P14_Delete_Statement]^^62^^^^^60^70^prepare (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P11_Insert_Donor_Statement]^ptr.setIndex ( i ) ;prepare (  ) ;^62^^^^^60^70^prepare (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P2_Replace_Operator]^if  ( position < 1 && position > collection.size (  )  )  {^65^^^^^60^70^if  ( position < 1 || position > collection.size (  )  )  {^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P2_Replace_Operator]^if  ( position > 1 || position > collection.size (  )  )  {^65^^^^^60^70^if  ( position < 1 || position > collection.size (  )  )  {^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P2_Replace_Operator]^if  ( position < 1 || position >= collection.size (  )  )  {^65^^^^^60^70^if  ( position < 1 || position > collection.size (  )  )  {^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P3_Replace_Literal]^if  ( position < position || position > collection.size (  )  )  {^65^^^^^60^70^if  ( position < 1 || position > collection.size (  )  )  {^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P3_Replace_Literal]^if  ( position < 1 || position > collection.size() + 3  )  {^65^^^^^60^70^if  ( position < 1 || position > collection.size (  )  )  {^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P5_Replace_Variable]^if  ( collection < 1 || position > position.size (  )  )  {^65^^^^^60^70^if  ( position < 1 || position > collection.size (  )  )  {^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P6_Replace_Expression]^if  ( position < 1 ) {^65^^^^^60^70^if  ( position < 1 || position > collection.size (  )  )  {^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P6_Replace_Expression]^if  (  position > collection.size (  )  )  {^65^^^^^60^70^if  ( position < 1 || position > collection.size (  )  )  {^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^if  ( position < 1 || position > collection .remove ( position )   )  {^65^^^^^60^70^if  ( position < 1 || position > collection.size (  )  )  {^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P8_Replace_Mix]^if  ( position < 0  ) {^65^^^^^60^70^if  ( position < 1 || position > collection.size (  )  )  {^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P15_Unwrap_Block]^return false;^65^66^67^^^60^70^if  ( position < 1 || position > collection.size (  )  )  { return false; }^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P16_Remove_Block]^^65^66^67^^^60^70^if  ( position < 1 || position > collection.size (  )  )  { return false; }^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P3_Replace_Literal]^return true;^66^^^^^60^70^return false;^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P3_Replace_Literal]^if  ( position < 1 || position > collection.size() + 6  )  {^65^^^^^60^70^if  ( position < 1 || position > collection.size (  )  )  {^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P8_Replace_Mix]^this.position =  null;^68^^^^^60^70^this.position = position;^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P11_Insert_Donor_Statement]^this.pointer = pointer;this.position = position;^68^^^^^60^70^this.position = position;^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P3_Replace_Literal]^return false;^69^^^^^60^70^return true;^[CLASS] CollectionNodeIterator  [METHOD] setPosition [RETURN_TYPE] boolean   int position [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P2_Replace_Operator]^if  ( position != 0 )  {^73^^^^^72^77^if  ( position == 0 )  {^[CLASS] CollectionNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P3_Replace_Literal]^if  ( position == -5 )  {^73^^^^^72^77^if  ( position == 0 )  {^[CLASS] CollectionNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P8_Replace_Mix]^if  ( position == 3 )  {^73^^^^^72^77^if  ( position == 0 )  {^[CLASS] CollectionNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P9_Replace_Statement]^if  ( collection == null )  {^73^^^^^72^77^if  ( position == 0 )  {^[CLASS] CollectionNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P15_Unwrap_Block]^return null;^73^74^75^^^72^77^if  ( position == 0 )  { return null; }^[CLASS] CollectionNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P16_Remove_Block]^^73^74^75^^^72^77^if  ( position == 0 )  { return null; }^[CLASS] CollectionNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P13_Insert_Block]^if  (  ( collection )  == null )  {     prepare (  ) ; }^73^^^^^72^77^[Delete]^[CLASS] CollectionNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P8_Replace_Mix]^return true;^74^^^^^72^77^return null;^[CLASS] CollectionNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P8_Replace_Mix]^return this;^74^^^^^72^77^return null;^[CLASS] CollectionNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P2_Replace_Operator]^return  ( NodePointer )  collection.get ( position  &  1 ) ;^76^^^^^72^77^return  ( NodePointer )  collection.get ( position - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P3_Replace_Literal]^return  ( NodePointer )  collection.get ( position  ) ;^76^^^^^72^77^return  ( NodePointer )  collection.get ( position - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P5_Replace_Variable]^return  ( NodePointer )  position.get ( collection - 1 ) ;^76^^^^^72^77^return  ( NodePointer )  collection.get ( position - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^return  ( NodePointer )  collection.remove ( position - 1 ) ;^76^^^^^72^77^return  ( NodePointer )  collection.get ( position - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P2_Replace_Operator]^return  ( NodePointer )  collection.get ( position  <=  1 ) ;^76^^^^^72^77^return  ( NodePointer )  collection.get ( position - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P3_Replace_Literal]^return  ( NodePointer )  collection.get ( position - position ) ;^76^^^^^72^77^return  ( NodePointer )  collection.get ( position - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^return  ( NodePointer )  collection .remove ( position )  ;^76^^^^^72^77^return  ( NodePointer )  collection.get ( position - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P14_Delete_Statement]^^76^^^^^72^77^return  ( NodePointer )  collection.get ( position - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] getNodePointer [RETURN_TYPE] NodePointer   [VARIABLES] List  collection  boolean  reverse  NodePointer  elementPointer  startWith  int  position  CollectionPointer  pointer  
[P1_Replace_Type]^collection = new Array Set  (  ) ;^80^^^^^65^95^collection = new ArrayList (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P1_Replace_Type]^collection = new  Set  (  ) ;^80^^^^^65^95^collection = new ArrayList (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P11_Insert_Donor_Statement]^NodePointer elementPointer = ptr.getValuePointer (  ) ;NodePointer ptr =  ( NodePointer )  pointer.clone (  ) ;^81^^^^^66^96^NodePointer ptr =  ( NodePointer )  pointer.clone (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P14_Delete_Statement]^^81^^^^^66^96^NodePointer ptr =  ( NodePointer )  pointer.clone (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P1_Replace_Type]^short  length = ptr.getLength (  ) ;^82^^^^^67^97^int length = ptr.getLength (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P5_Replace_Variable]^int length = startWith.getLength (  ) ;^82^^^^^67^97^int length = ptr.getLength (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^int length = ptr.setIndex (  ) ;^82^^^^^67^97^int length = ptr.getLength (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^int length = ptr .getValuePointer (  )  ;^82^^^^^67^97^int length = ptr.getLength (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P11_Insert_Donor_Statement]^NodePointer elementPointer = ptr.getValuePointer (  ) ;int length = ptr.getLength (  ) ;^82^^^^^67^97^int length = ptr.getLength (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P8_Replace_Mix]^int length = startWith.setIndex (  ) ;^82^^^^^67^97^int length = ptr.getLength (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P14_Delete_Statement]^^82^^^^^67^97^int length = ptr.getLength (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P9_Replace_Statement]^if  ( !reverse )  {^90^^^^^75^105^if  ( reverse )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P15_Unwrap_Block]^collection.add(0, childPointer);^90^91^92^^^75^105^if  ( reverse )  { collection.add ( 0, childPointer ) ; }^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P16_Remove_Block]^^90^91^92^^^75^105^if  ( reverse )  { collection.add ( 0, childPointer ) ; }^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P13_Insert_Block]^if  ( ! ( reverse )  )  {     collection.remove (  (  ( collection.size (  )  )  - 1 )  ) ; }else {     collection.remove ( 0 ) ; }^90^^^^^75^105^[Delete]^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P5_Replace_Variable]^collection.add ( startWith ) ;^94^^^^^90^95^collection.add ( childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^collection.get ( childPointer ) ;^94^^^^^90^95^collection.add ( childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P14_Delete_Statement]^^94^^^^^90^95^collection.add ( childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P11_Insert_Donor_Statement]^collection.add ( 0, childPointer ) ;collection.add ( childPointer ) ;^94^^^^^90^95^collection.add ( childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.add ( index, childPointer ) ;^91^^^^^76^106^collection.add ( 0, childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P5_Replace_Variable]^collection.add ( 0, startWith ) ;^91^^^^^76^106^collection.add ( 0, childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P5_Replace_Variable]^collection.add ( 0 ) ;^91^^^^^76^106^collection.add ( 0, childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P14_Delete_Statement]^^91^^^^^76^106^collection.add ( 0, childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P11_Insert_Donor_Statement]^collection.add ( childPointer ) ;collection.add ( 0, childPointer ) ;^91^^^^^76^106^collection.add ( 0, childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P1_Replace_Type]^for  (  long  i = 0; i < length; i++ )  {^83^^^^^68^98^for  ( int i = 0; i < length; i++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P2_Replace_Operator]^for  ( int i = 0; i <= length; i++ )  {^83^^^^^68^98^for  ( int i = 0; i < length; i++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^for  ( int i = -1; i < length; i++ )  {^83^^^^^68^98^for  ( int i = 0; i < length; i++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^for  ( int i = length; i < length; i++ )  {^83^^^^^68^98^for  ( int i = 0; i < length; i++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P5_Replace_Variable]^for  ( lengthnt i = 0; i < length; i++ )  {^83^^^^^68^98^for  ( int i = 0; i < length; i++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P5_Replace_Variable]^for  ( int i = 0; i < position; i++ )  {^83^^^^^68^98^for  ( int i = 0; i < length; i++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P5_Replace_Variable]^for  ( lengthnt i = 0; i < i; i++ )  {^83^^^^^68^98^for  ( int i = 0; i < length; i++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.add ( j, childPointer ) ;^91^^^^^76^106^collection.add ( 0, childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P1_Replace_Type]^for  (  long  j = 1; iter.setPosition ( j ) ; j++ )  {^88^^^^^73^103^for  ( int j = 1; iter.setPosition ( j ) ; j++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P5_Replace_Variable]^for  ( int position = 1; iter.setPosition ( j ) ; j++ )  {^88^^^^^73^103^for  ( int j = 1; iter.setPosition ( j ) ; j++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P5_Replace_Variable]^for  ( int iter = 1; j.setPosition ( j ) ; j++ )  {^88^^^^^73^103^for  ( int j = 1; iter.setPosition ( j ) ; j++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P8_Replace_Mix]^for  ( int length = 1; iter.setPosition ( j ) ; j++ )  {^88^^^^^73^103^for  ( int j = 1; iter.setPosition ( j ) ; j++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P8_Replace_Mix]^collection.get ( startWith ) ;^94^^^^^90^95^collection.add ( childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.add ( 5, childPointer ) ;^91^^^^^76^106^collection.add ( 0, childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^NodePointer childPointer = iter.setPosition (  ) ;^89^^^^^74^104^NodePointer childPointer = iter.getNodePointer (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^NodePointer childPointer = iter .setPosition ( length )  ;^89^^^^^74^104^NodePointer childPointer = iter.getNodePointer (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P14_Delete_Statement]^^89^^^^^74^104^NodePointer childPointer = iter.getNodePointer (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.add ( 8, childPointer ) ;^91^^^^^76^106^collection.add ( 0, childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P5_Replace_Variable]^collection.add ( startWith ) ;^94^^^^^79^109^collection.add ( childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^collection.get ( childPointer ) ;^94^^^^^79^109^collection.add ( childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P14_Delete_Statement]^^94^^^^^79^109^collection.add ( childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P11_Insert_Donor_Statement]^collection.add ( 0, childPointer ) ;collection.add ( childPointer ) ;^94^^^^^79^109^collection.add ( childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P5_Replace_Variable]^NodePointer elementPointer = startWith.getValuePointer (  ) ;^85^^^^^70^100^NodePointer elementPointer = ptr.getValuePointer (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^NodePointer elementPointer = ptr.setIndex (  ) ;^85^^^^^70^100^NodePointer elementPointer = ptr.getValuePointer (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P11_Insert_Donor_Statement]^NodePointer ptr =  ( NodePointer )  pointer.clone (  ) ;NodePointer elementPointer = ptr.getValuePointer (  ) ;^85^^^^^70^100^NodePointer elementPointer = ptr.getValuePointer (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P11_Insert_Donor_Statement]^NodePointer childPointer = iter.getNodePointer (  ) ;NodePointer elementPointer = ptr.getValuePointer (  ) ;^85^^^^^70^100^NodePointer elementPointer = ptr.getValuePointer (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P11_Insert_Donor_Statement]^int length = ptr.getLength (  ) ;NodePointer elementPointer = ptr.getValuePointer (  ) ;^85^^^^^70^100^NodePointer elementPointer = ptr.getValuePointer (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P5_Replace_Variable]^NodeIterator iter = getElementNodeIterator ( startWith ) ;^86^^^^^71^101^NodeIterator iter = getElementNodeIterator ( elementPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^NodeIterator iter = setPosition ( elementPointer ) ;^86^^^^^71^101^NodeIterator iter = getElementNodeIterator ( elementPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P8_Replace_Mix]^NodeIterator iter = setPosition ( startWith ) ;^86^^^^^71^101^NodeIterator iter = getElementNodeIterator ( elementPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^for  ( int j = i; iter.setPosition ( j ) ; j++ )  {^88^^^^^73^103^for  ( int j = 1; iter.setPosition ( j ) ; j++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P5_Replace_Variable]^ptr.setIndex ( position ) ;^84^^^^^69^99^ptr.setIndex ( i ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P14_Delete_Statement]^^84^^^^^69^99^ptr.setIndex ( i ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P11_Insert_Donor_Statement]^prepare (  ) ;ptr.setIndex ( i ) ;^84^^^^^69^99^ptr.setIndex ( i ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^NodePointer elementPointer = ptr .getLength (  )  ;^85^^^^^70^100^NodePointer elementPointer = ptr.getValuePointer (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P14_Delete_Statement]^^85^^^^^70^100^NodePointer elementPointer = ptr.getValuePointer (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P14_Delete_Statement]^^86^^^^^71^101^NodeIterator iter = getElementNodeIterator ( elementPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^for  ( int j = 1; iter .CollectionNodeIterator ( pointer , reverse , ptr )  ; j++ )  {^88^^^^^73^103^for  ( int j = 1; iter.setPosition ( j ) ; j++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P14_Delete_Statement]^^88^89^90^91^92^73^103^for  ( int j = 1; iter.setPosition ( j ) ; j++ )  { NodePointer childPointer = iter.getNodePointer (  ) ; if  ( reverse )  { collection.add ( 0, childPointer ) ; }^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.add ( position, childPointer ) ;^91^^^^^76^106^collection.add ( 0, childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P1_Replace_Type]^for  (  short  j = 1; iter.setPosition ( j ) ; j++ )  {^88^^^^^73^103^for  ( int j = 1; iter.setPosition ( j ) ; j++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^for  ( int j = 1; iter .CollectionNodeIterator ( pointer , reverse , startWith )  ; j++ )  {^88^^^^^73^103^for  ( int j = 1; iter.setPosition ( j ) ; j++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^NodePointer childPointer = iter .setPosition ( position )  ;^89^^^^^74^104^NodePointer childPointer = iter.getNodePointer (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.add ( 6, childPointer ) ;^91^^^^^76^106^collection.add ( 0, childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^for  ( int i = position; i < length; i++ )  {^83^^^^^68^98^for  ( int i = 0; i < length; i++ )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P8_Replace_Mix]^NodePointer elementPointer = startWith.setIndex (  ) ;^85^^^^^70^100^NodePointer elementPointer = ptr.getValuePointer (  ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P5_Replace_Variable]^ptr.setIndex ( length ) ;^84^^^^^69^99^ptr.setIndex ( i ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^ptr .getLength (  )  ;^84^^^^^69^99^ptr.setIndex ( i ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P14_Delete_Statement]^^85^86^^^^70^100^NodePointer elementPointer = ptr.getValuePointer (  ) ; NodeIterator iter = getElementNodeIterator ( elementPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.add ( 4, childPointer ) ;^91^^^^^76^106^collection.add ( 0, childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^collection .add ( index , null )  ;^94^^^^^79^109^collection.add ( childPointer ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P2_Replace_Operator]^while  ( collection.size (  )  >= index )  {^104^^^^^89^119^while  ( collection.size (  )  > index )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^while  ( collection.size() - 8  > index )  {^104^^^^^89^119^while  ( collection.size (  )  > index )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P5_Replace_Variable]^while  ( collection.size (  )  > length )  {^104^^^^^89^119^while  ( collection.size (  )  > index )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P5_Replace_Variable]^while  ( index.size (  )  > collection )  {^104^^^^^89^119^while  ( collection.size (  )  > index )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^while  ( collection .remove ( index )   > index )  {^104^^^^^89^119^while  ( collection.size (  )  > index )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P8_Replace_Mix]^while  ( collection.size (  )  > position )  {^104^^^^^89^119^while  ( collection.size (  )  > index )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P8_Replace_Mix]^if  ( reverse )  {^105^^^^^90^120^if  ( !reverse )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P15_Unwrap_Block]^collection.remove(((collection.size()) - 1));^105^106^107^^^90^120^if  ( !reverse )  { collection.remove ( collection.size (  )  - 1 ) ; }^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P16_Remove_Block]^^105^106^107^^^90^120^if  ( !reverse )  { collection.remove ( collection.size (  )  - 1 ) ; }^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P13_Insert_Block]^if  ( reverse )  {     collection.add ( 0, childPointer ) ; }else {     collection.add ( childPointer ) ; }^105^^^^^90^120^[Delete]^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.remove ( i ) ;^109^^^^^105^110^collection.remove ( 0 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^collection.get ( 0 ) ;^109^^^^^105^110^collection.remove ( 0 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^collection .size (  )  ;^109^^^^^105^110^collection.remove ( 0 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P14_Delete_Statement]^^109^^^^^105^110^collection.remove ( 0 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P2_Replace_Operator]^collection.remove ( collection.size (  )   >>  1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.remove ( collection.size (  )   ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.remove ( collection.size() + 0  - 1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^collection.get ( collection.size (  )  - 1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^collection .size (  )  ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P8_Replace_Mix]^collection.remove ( collection .remove ( position )   - 1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P14_Delete_Statement]^^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.remove ( collection.size() - 9  - 1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^collection.remove ( collection .remove ( j )   - 1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.remove ( collection.size (  )  - i ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.remove ( collection.size() - 7  - 1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.remove ( collection.size() - 1  - 1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^collection.remove ( collection .remove ( i )   - 1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P8_Replace_Mix]^collection.remove ( collection .remove ( length )   - 1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.remove ( length ) ;^109^^^^^94^124^collection.remove ( 0 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^collection.get ( 0 ) ;^109^^^^^94^124^collection.remove ( 0 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P14_Delete_Statement]^^109^^^^^94^124^collection.remove ( 0 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P2_Replace_Operator]^if  ( startWith == null )  {^98^^^^^83^113^if  ( startWith != null )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P5_Replace_Variable]^if  ( ptr != null )  {^98^^^^^83^113^if  ( startWith != null )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P6_Replace_Expression]^if  ( index == -1 )  {^98^^^^^83^113^if  ( startWith != null )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P6_Replace_Expression]^if  ( "Invalid starting pointer for iterator: " + startWith )  {^98^^^^^83^113^if  ( startWith != null )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P6_Replace_Expression]^if  ( collection.size() > index )  {^98^^^^^83^113^if  ( startWith != null )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P6_Replace_Expression]^if  ( collection.size (  )  - 1 )  {^98^^^^^83^113^if  ( startWith != null )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P8_Replace_Mix]^if  ( startWith != this )  {^98^^^^^83^113^if  ( startWith != null )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P9_Replace_Statement]^if  ( collection == null )  {^98^^^^^83^113^if  ( startWith != null )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P15_Unwrap_Block]^int index = collection.indexOf(startWith); if (index == (-1)) {    throw new org.apache.commons.jxpath.JXPathException(("Invalid starting pointer for iterator: " + (startWith)));}; while ((collection.size()) > index) {    if (!(reverse)) {        collection.remove(((collection.size()) - 1));    }else {        collection.remove(0);    }} ;^98^99^100^101^102^83^113^if  ( startWith != null )  { int index = collection.indexOf ( startWith ) ; if  ( index == -1 )  { throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ; }^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P16_Remove_Block]^^98^99^100^101^102^83^113^if  ( startWith != null )  { int index = collection.indexOf ( startWith ) ; if  ( index == -1 )  { throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ; }^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^while  ( collection.size() + 3  > index )  {^104^^^^^89^119^while  ( collection.size (  )  > index )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.remove ( 6 ) ;^109^^^^^105^110^collection.remove ( 0 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P2_Replace_Operator]^collection.remove ( collection.size (  )   >=  1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.remove ( collection.size() + 8  - 1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^collection.remove ( collection .remove ( index )   - 1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P2_Replace_Operator]^collection.remove ( collection.size (  )   !=  1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.remove ( collection.size (  )  - length ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.remove ( collection.size() - 5  - 1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.remove ( collection.size() - 4  - 1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.remove (  ) ;^109^^^^^94^124^collection.remove ( 0 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P2_Replace_Operator]^if  ( index != -1 )  {^100^^^^^85^115^if  ( index == -1 )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^if  ( index == --1 )  {^100^^^^^85^115^if  ( index == -1 )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P5_Replace_Variable]^if  ( position == -1 )  {^100^^^^^85^115^if  ( index == -1 )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P6_Replace_Expression]^if  ( "Invalid starting pointer for iterator: " + startWith )  {^100^^^^^85^115^if  ( index == -1 )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P8_Replace_Mix]^if  ( index == -0 )  {^100^^^^^85^115^if  ( index == -1 )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P15_Unwrap_Block]^throw new org.apache.commons.jxpath.JXPathException(("Invalid starting pointer for iterator: " + (startWith)));^100^101^102^103^^85^115^if  ( index == -1 )  { throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ; }^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P16_Remove_Block]^^100^101^102^103^^85^115^if  ( index == -1 )  { throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ; }^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P2_Replace_Operator]^throw new JXPathException ( "Invalid starting pointer for iterator: "  <=  startWith ) ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^throw new JXPathException ( "Invalid starting nvalid starting pointer for iterator: " + startWith ) ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P8_Replace_Mix]^throw new JXPathException ( "Invalid starting pointer for iterator: " + ptr ) ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P13_Insert_Block]^if  ( index ==  ( -1 )  )  {     throw new JXPathException (  ( "Invalid starting pointer for iterator: " +  ( startWith )  )  ) ; }^101^^^^^86^116^[Delete]^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P2_Replace_Operator]^throw new JXPathException ( "Invalid starting pointer for iterator: "  ^  startWith ) ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^throw new JXPathException ( "Invalid starting pointer for iterator: nvalid" + startWith ) ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P8_Replace_Mix]^return ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.remove ( -7 ) ;^109^^^^^105^110^collection.remove ( 0 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.remove ( collection.size() - 0  - 1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.remove ( collection.size() + 2  - 1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P2_Replace_Operator]^throw new JXPathException ( "Invalid starting pointer for iterator: "  >>  startWith ) ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^throw new JXPathException ( "Invalid starting pointer for iterator: lid starting pointer for ite" + startWith ) ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P1_Replace_Type]^short  index = collection.indexOf ( startWith ) ;^99^^^^^84^114^int index = collection.indexOf ( startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P5_Replace_Variable]^int index = collection.indexOf ( ptr ) ;^99^^^^^84^114^int index = collection.indexOf ( startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P5_Replace_Variable]^int index = startWith.indexOf ( collection ) ;^99^^^^^84^114^int index = collection.indexOf ( startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^int index = collection.size ( startWith ) ;^99^^^^^84^114^int index = collection.indexOf ( startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^int index = collection .size (  )  ;^99^^^^^84^114^int index = collection.indexOf ( startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P8_Replace_Mix]^int index = collection.size ( ptr ) ;^99^^^^^84^114^int index = collection.indexOf ( startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P2_Replace_Operator]^throw new JXPathException ( "Invalid starting pointer for iterator: "  &&  startWith ) ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^throw new JXPathException ( "rting pointer for iteratornvalid starting pointer for iterator: " + startWith ) ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P14_Delete_Statement]^^99^^^^^84^114^int index = collection.indexOf ( startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^while  ( collection.size() + 6  > index )  {^104^^^^^89^119^while  ( collection.size (  )  > index )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^while  ( collection .remove ( length )   > index )  {^104^^^^^89^119^while  ( collection.size (  )  > index )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P14_Delete_Statement]^^104^105^106^^^89^119^while  ( collection.size (  )  > index )  { if  ( !reverse )  { collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P2_Replace_Operator]^collection.remove ( collection.size (  )   <=  1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.remove ( -9 ) ;^109^^^^^94^124^collection.remove ( 0 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^collection .size (  )  ;^109^^^^^94^124^collection.remove ( 0 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P2_Replace_Operator]^if  ( index < -1 )  {^100^^^^^85^115^if  ( index == -1 )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^if  ( index == -index )  {^100^^^^^85^115^if  ( index == -1 )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P2_Replace_Operator]^throw new JXPathException ( "Invalid starting pointer for iterator: "  &  startWith ) ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^throw new JXPathException ( "nvalid starting pointer fonvalid starting pointer for iterator: " + startWith ) ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P2_Replace_Operator]^throw new JXPathException ( "Invalid starting pointer for iterator: "  >  startWith ) ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^throw new JXPathException ( "sta" + startWith ) ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.remove ( position ) ;^109^^^^^105^110^collection.remove ( 0 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P2_Replace_Operator]^collection.remove ( collection.size (  )   &  1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.remove ( collection.size() - 8  - 1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^throw new JXPathException ( "arting pointer for iterato" + startWith ) ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P1_Replace_Type]^long  index = collection.indexOf ( startWith ) ;^99^^^^^84^114^int index = collection.indexOf ( startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P2_Replace_Operator]^throw new JXPathException ( "Invalid starting pointer for iterator: "  !=  startWith ) ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^throw new JXPathException ( "nter for itnvalid starting pointer for iterator: " + startWith ) ;^101^102^^^^86^116^throw new JXPathException ( "Invalid starting pointer for iterator: " + startWith ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^while  ( collection.size() + 4  > index )  {^104^^^^^89^119^while  ( collection.size (  )  > index )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P7_Replace_Invocation]^while  ( collection .remove ( i )   > index )  {^104^^^^^89^119^while  ( collection.size (  )  > index )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P8_Replace_Mix]^while  ( collection .remove ( position )   > index )  {^104^^^^^89^119^while  ( collection.size (  )  > index )  {^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P2_Replace_Operator]^collection.remove ( collection.size (  )   &&  1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.remove ( collection.size() + 9  - 1 ) ;^106^^^^^91^121^collection.remove ( collection.size (  )  - 1 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
[P3_Replace_Literal]^collection.remove ( -1 ) ;^109^^^^^94^124^collection.remove ( 0 ) ;^[CLASS] CollectionNodeIterator  [METHOD] prepare [RETURN_TYPE] void   [VARIABLES] NodeIterator  iter  List  collection  boolean  reverse  NodePointer  childPointer  elementPointer  ptr  startWith  int  i  index  j  length  position  CollectionPointer  pointer  
