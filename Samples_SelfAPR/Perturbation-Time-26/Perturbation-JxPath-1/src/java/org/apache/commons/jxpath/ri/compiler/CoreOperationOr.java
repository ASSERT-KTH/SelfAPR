[P14_Delete_Statement]^^31^^^^^30^32^super ( args ) ;^[CLASS] CoreOperationOr  [METHOD] <init> [RETURN_TYPE] Expression[])   Expression[] args [VARIABLES] boolean  Expression[]  args  
[P5_Replace_Variable]^if  ( InfoSetUtil.booleanValue ( 3[i].computeValue ( context )  )  )  {^36^^^^^34^41^if  ( InfoSetUtil.booleanValue ( args[i].computeValue ( context )  )  )  {^[CLASS] CoreOperationOr  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  int  i  
[P8_Replace_Mix]^if  ( InfoSetUtil.booleanValue ( args[i] .computeValue ( context )   )  )  {^36^^^^^34^41^if  ( InfoSetUtil.booleanValue ( args[i].computeValue ( context )  )  )  {^[CLASS] CoreOperationOr  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  int  i  
[P15_Unwrap_Block]^return java.lang.Boolean.TRUE;^36^37^38^^^34^41^if  ( InfoSetUtil.booleanValue ( args[i].computeValue ( context )  )  )  { return Boolean.TRUE; }^[CLASS] CoreOperationOr  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  int  i  
[P16_Remove_Block]^^36^37^38^^^34^41^if  ( InfoSetUtil.booleanValue ( args[i].computeValue ( context )  )  )  { return Boolean.TRUE; }^[CLASS] CoreOperationOr  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  int  i  
[P1_Replace_Type]^for  (  short  i = 0; i < args.length; i++ )  {^35^^^^^34^41^for  ( int i = 0; i < args.length; i++ )  {^[CLASS] CoreOperationOr  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  int  i  
[P2_Replace_Operator]^for  ( int i = 0; i <= args.length; i++ )  {^35^^^^^34^41^for  ( int i = 0; i < args.length; i++ )  {^[CLASS] CoreOperationOr  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  int  i  
[P3_Replace_Literal]^for  ( int i = i; i < args.length; i++ )  {^35^^^^^34^41^for  ( int i = 0; i < args.length; i++ )  {^[CLASS] CoreOperationOr  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < args; i++ )  {^35^^^^^34^41^for  ( int i = 0; i < args.length; i++ )  {^[CLASS] CoreOperationOr  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  int  i  
[P5_Replace_Variable]^for  ( int i = 0; i < args.length.length; i++ )  {^35^^^^^34^41^for  ( int i = 0; i < args.length; i++ )  {^[CLASS] CoreOperationOr  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  int  i  
[P5_Replace_Variable]^if  ( InfoSetUtil.booleanValue ( null[i].computeValue ( context )  )  )  {^36^^^^^34^41^if  ( InfoSetUtil.booleanValue ( args[i].computeValue ( context )  )  )  {^[CLASS] CoreOperationOr  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  int  i  
[P13_Insert_Block]^if  ( booleanValue ( args[i].computeValue ( context )  )  )  {     return TRUE; }^36^^^^^34^41^[Delete]^[CLASS] CoreOperationOr  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  int  i  
[P3_Replace_Literal]^for  ( int i = -7; i < args.length; i++ )  {^35^^^^^34^41^for  ( int i = 0; i < args.length; i++ )  {^[CLASS] CoreOperationOr  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  int  i  
[P5_Replace_Variable]^if  ( InfoSetUtil.booleanValue ( context[i].computeValue ( args )  )  )  {^36^^^^^34^41^if  ( InfoSetUtil.booleanValue ( args[i].computeValue ( context )  )  )  {^[CLASS] CoreOperationOr  [METHOD] computeValue [RETURN_TYPE] Object   EvalContext context [VARIABLES] boolean  EvalContext  context  int  i  
[P8_Replace_Mix]^return 1;^44^^^^^43^45^return 0;^[CLASS] CoreOperationOr  [METHOD] getPrecedence [RETURN_TYPE] int   [VARIABLES] boolean  
[P3_Replace_Literal]^return false;^48^^^^^47^49^return true;^[CLASS] CoreOperationOr  [METHOD] isSymmetric [RETURN_TYPE] boolean   [VARIABLES] boolean  
